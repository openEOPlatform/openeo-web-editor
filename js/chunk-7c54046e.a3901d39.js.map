{"version":3,"sources":["webpack:///./node_modules/core-js/internals/to-offset.js","webpack:///./node_modules/core-js/modules/es.typed-array.set.js","webpack:///./node_modules/core-js/modules/es.typed-array.at.js","webpack:///./node_modules/core-js/internals/array-buffer-native.js","webpack:///./node_modules/core-js/internals/object-get-prototype-of.js","webpack:///./node_modules/core-js/internals/correct-prototype-getter.js","webpack:///./node_modules/commonmark/lib/node.js","webpack:///./node_modules/commonmark/lib/from-code-point.js","webpack:///./node_modules/commonmark/lib/common.js","webpack:///./node_modules/commonmark/lib/inlines.js","webpack:///./node_modules/commonmark/lib/blocks.js","webpack:///./node_modules/commonmark/lib/render/renderer.js","webpack:///./node_modules/commonmark/lib/render/html.js","webpack:///./node_modules/commonmark/lib/render/xml.js","webpack:///./node_modules/core-js/internals/array-buffer-view-core.js","webpack:///./node_modules/core-js/internals/to-positive-integer.js"],"names":["global","toPositiveInteger","RangeError","module","exports","it","BYTES","offset","call","ArrayBufferViewCore","lengthOfArrayLike","toOffset","toIndexedObject","fails","Int8Array","Int8ArrayPrototype","prototype","$set","set","aTypedArray","exportTypedArrayMethod","WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS","array","Uint8ClampedArray","length","0","TO_OBJECT_BUG","NATIVE_ARRAY_BUFFER_VIEWS","arrayLike","this","arguments","undefined","src","len","index","toIntegerOrInfinity","O","relativeIndex","k","ArrayBuffer","DataView","hasOwn","isCallable","toObject","sharedKey","CORRECT_PROTOTYPE_GETTER","IE_PROTO","Object","ObjectPrototype","getPrototypeOf","object","constructor","F","isContainer","node","_type","resumeAt","entering","current","cur","container","_firstChild","root","_next","_parent","NodeWalker","next","Node","nodeType","sourcepos","_lastChild","_prev","_sourcepos","_lastLineBlank","_lastLineChecked","_open","_string_content","_literal","_listData","_info","_destination","_title","_isFenced","_fenceChar","_fenceLength","_fenceOffset","_level","_onEnter","_onExit","proto","defineProperty","get","s","type","t","tight","start","n","delimiter","delim","appendChild","child","unlink","prependChild","insertAfter","sibling","insertBefore","walker","_fromCodePoint","C_BACKSLASH","ENTITY","TAGNAME","ATTRIBUTENAME","UNQUOTEDVALUE","SINGLEQUOTEDVALUE","DOUBLEQUOTEDVALUE","ATTRIBUTEVALUE","ATTRIBUTEVALUESPEC","ATTRIBUTE","OPENTAG","CLOSETAG","HTMLCOMMENT","PROCESSINGINSTRUCTION","DECLARATION","CDATA","HTMLTAG","reHtmlTag","RegExp","reBackslashOrAmp","ESCAPABLE","reEntityOrEscapedChar","XMLSPECIAL","reXmlSpecial","unescapeChar","charCodeAt","charAt","unescapeString","test","replace","normalizeURI","uri","err","replaceUnsafeChar","escapeXml","fromCodePoint","_","String","e","fromCharCode","stringFromCharCode","floor","Math","highSurrogate","lowSurrogate","MAX_SIZE","codeUnits","result","codePoint","Number","isFinite","push","apply","C_NEWLINE","C_ASTERISK","C_UNDERSCORE","C_BACKTICK","C_OPEN_BRACKET","C_CLOSE_BRACKET","C_LESSTHAN","C_BANG","C_AMPERSAND","C_OPEN_PAREN","C_CLOSE_PAREN","C_COLON","C_SINGLEQUOTE","C_DOUBLEQUOTE","ESCAPED_CHAR","rePunctuation","reLinkTitle","reLinkDestinationBraces","reEscapable","reEntityHere","reTicks","reTicksHere","reEllipses","reDash","reEmailAutolink","reAutolink","reSpnl","reWhitespaceChar","reUnicodeWhitespaceChar","reFinalSpace","reInitialSpace","reSpaceAtEndOfLine","reLinkLabel","reMain","normalizeReference","string","slice","trim","toLowerCase","toUpperCase","re","m","exec","subject","pos","peek","spnl","match","parseBackticks","block","ticks","matched","contents","afterOpenTicks","parseBackslash","subj","parseAutolink","dest","parseHtmlTag","scanDelims","cc","char_before","char_after","cc_after","left_flanking","right_flanking","can_open","can_close","after_is_whitespace","after_is_punctuation","before_is_whitespace","before_is_punctuation","numdelims","startpos","handleDelim","res","options","smart","delimiters","origdelims","previous","removeDelimiter","removeDelimitersBetween","bottom","top","processEmphasis","stack_bottom","opener","closer","old_closer","opener_inl","closer_inl","tempstack","use_delims","tmp","opener_found","openers_bottom","odd_match","i","closercc","emph","literal","parseLinkTitle","title","substr","parseLinkDestination","c","savepos","openparens","parseLinkLabel","parseOpenBracket","addBracket","parseBang","parseCloseBracket","is_image","reflabel","brackets","active","removeBracket","image","beforelabel","bracketAfter","link","refmap","destination","previousDelimiter","parseEntity","parseString","chars","enCount","emCount","repeat","parseNewline","lastc","hardbreak","parseReference","rawlabel","matchChars","beforetitle","atLineEnd","normlabel","parseInline","parseInlines","InlineParser","parse","CODE_INDENT","C_TAB","C_GREATERTHAN","C_SPACE","reHtmlBlockOpen","reHtmlBlockClose","reThematicBreak","reMaybeSpecial","reNonSpace","reBulletListMarker","reOrderedListMarker","reATXHeadingMarker","reCodeFence","reClosingCodeFence","reSetextHeadingLine","reLineEnding","isBlank","isSpaceOrTab","ln","endsWithBlankLine","addLine","partiallyConsumedTab","charsToTab","column","tip","currentLine","addChild","tag","blocks","canContain","finalize","lineNumber","column_number","newBlock","parseListMarker","parser","nextc","spacesStartCol","spacesStartOffset","rest","nextNonspace","data","bulletChar","padding","markerOffset","indent","parseInt","advanceNextNonspace","advanceOffset","blank_item","spaces_after_marker","listsMatch","list_data","item_data","closeUnmatchedBlocks","allClosed","oldtip","lastMatchedContainer","parent","document","continue","acceptsLines","list","item","subitem","block_quote","indented","blank","heading","thematic_break","code_block","lastLineLength","content","newlinePos","indexOf","firstLine","info","html_block","_htmlBlockType","paragraph","hasReferenceDefs","inlineParser","blockStarts","level","fenceLength","blockType","b","count","columns","charsToAdvance","nextNonspaceColumn","findNextNonspace","cols","incorporateLine","lastChild","all_matched","doc","matchedLeaf","starts","startsLen","lastLineBlank","cont","above","processInlines","event","Document","input","time","console","lines","split","timeEnd","Parser","Renderer","render","ast","buffer","lastOut","lit","str","cr","out","esc","reUnsafeProtocol","reSafeDataProtocol","potentiallyUnsafe","url","name","attrs","selfclosing","disableTags","attrib","HtmlRenderer","softbreak","linebreak","safe","strong","grandparent","listTight","tagname","code","info_words","listType","listStart","toString","html_inline","custom_inline","onEnter","onExit","custom_block","att","create","text","reXMLTag","toTagName","XmlRenderer","indentLevel","selfClosing","nodetype","listDelimiter","delimword","NAME","Constructor","Prototype","NATIVE_ARRAY_BUFFER","DESCRIPTORS","isObject","classof","tryToString","createNonEnumerableProperty","defineBuiltIn","f","isPrototypeOf","setPrototypeOf","wellKnownSymbol","uid","Uint8ClampedArrayPrototype","TypedArray","TypedArrayPrototype","TypeError","TO_STRING_TAG","TYPED_ARRAY_TAG","TYPED_ARRAY_CONSTRUCTOR","opera","TYPED_ARRAY_TAG_REQUIRED","TypedArrayConstructorsList","Uint8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigIntArrayConstructorsList","BigInt64Array","BigUint64Array","isView","klass","isTypedArray","aTypedArrayConstructor","C","KEY","property","forced","ARRAY","TypedArrayConstructor","error","error2","exportTypedArrayStaticMethod","Function"],"mappings":"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","file":"js/chunk-7c54046e.a3901d39.js","sourcesContent":["var global = require('../internals/global');\nvar toPositiveInteger = require('../internals/to-positive-integer');\n\nvar RangeError = global.RangeError;\n\nmodule.exports = function (it, BYTES) {\n  var offset = toPositiveInteger(it);\n  if (offset % BYTES) throw RangeError('Wrong offset');\n  return offset;\n};\n","'use strict';\nvar global = require('../internals/global');\nvar call = require('../internals/function-call');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toOffset = require('../internals/to-offset');\nvar toIndexedObject = require('../internals/to-object');\nvar fails = require('../internals/fails');\n\nvar RangeError = global.RangeError;\nvar Int8Array = global.Int8Array;\nvar Int8ArrayPrototype = Int8Array && Int8Array.prototype;\nvar $set = Int8ArrayPrototype && Int8ArrayPrototype.set;\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\nvar WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS = !fails(function () {\n  // eslint-disable-next-line es-x/no-typed-arrays -- required for testing\n  var array = new Uint8ClampedArray(2);\n  call($set, array, { length: 1, 0: 3 }, 1);\n  return array[1] !== 3;\n});\n\n// https://bugs.chromium.org/p/v8/issues/detail?id=11294 and other\nvar TO_OBJECT_BUG = WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS && ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS && fails(function () {\n  var array = new Int8Array(2);\n  array.set(1);\n  array.set('2', 1);\n  return array[0] !== 0 || array[1] !== 2;\n});\n\n// `%TypedArray%.prototype.set` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.set\nexportTypedArrayMethod('set', function set(arrayLike /* , offset */) {\n  aTypedArray(this);\n  var offset = toOffset(arguments.length > 1 ? arguments[1] : undefined, 1);\n  var src = toIndexedObject(arrayLike);\n  if (WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS) return call($set, this, src, offset);\n  var length = this.length;\n  var len = lengthOfArrayLike(src);\n  var index = 0;\n  if (len + offset > length) throw RangeError('Wrong length');\n  while (index < len) this[offset + index] = src[index++];\n}, !WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS || TO_OBJECT_BUG);\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.at` method\n// https://github.com/tc39/proposal-relative-indexing-method\nexportTypedArrayMethod('at', function at(index) {\n  var O = aTypedArray(this);\n  var len = lengthOfArrayLike(O);\n  var relativeIndex = toIntegerOrInfinity(index);\n  var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;\n  return (k < 0 || k >= len) ? undefined : O[k];\n});\n","// eslint-disable-next-line es-x/no-typed-arrays -- safe\nmodule.exports = typeof ArrayBuffer != 'undefined' && typeof DataView != 'undefined';\n","var global = require('../internals/global');\nvar hasOwn = require('../internals/has-own-property');\nvar isCallable = require('../internals/is-callable');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar Object = global.Object;\nvar ObjectPrototype = Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n  var object = toObject(O);\n  if (hasOwn(object, IE_PROTO)) return object[IE_PROTO];\n  var constructor = object.constructor;\n  if (isCallable(constructor) && object instanceof constructor) {\n    return constructor.prototype;\n  } return object instanceof Object ? ObjectPrototype : null;\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  // eslint-disable-next-line es-x/no-object-getprototypeof -- required for testing\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","\"use strict\";\n\nfunction isContainer(node) {\n    switch (node._type) {\n        case \"document\":\n        case \"block_quote\":\n        case \"list\":\n        case \"item\":\n        case \"paragraph\":\n        case \"heading\":\n        case \"emph\":\n        case \"strong\":\n        case \"link\":\n        case \"image\":\n        case \"custom_inline\":\n        case \"custom_block\":\n            return true;\n        default:\n            return false;\n    }\n}\n\nvar resumeAt = function(node, entering) {\n    this.current = node;\n    this.entering = entering === true;\n};\n\nvar next = function() {\n    var cur = this.current;\n    var entering = this.entering;\n\n    if (cur === null) {\n        return null;\n    }\n\n    var container = isContainer(cur);\n\n    if (entering && container) {\n        if (cur._firstChild) {\n            this.current = cur._firstChild;\n            this.entering = true;\n        } else {\n            // stay on node but exit\n            this.entering = false;\n        }\n    } else if (cur === this.root) {\n        this.current = null;\n    } else if (cur._next === null) {\n        this.current = cur._parent;\n        this.entering = false;\n    } else {\n        this.current = cur._next;\n        this.entering = true;\n    }\n\n    return { entering: entering, node: cur };\n};\n\nvar NodeWalker = function(root) {\n    return {\n        current: root,\n        root: root,\n        entering: true,\n        next: next,\n        resumeAt: resumeAt\n    };\n};\n\nvar Node = function(nodeType, sourcepos) {\n    this._type = nodeType;\n    this._parent = null;\n    this._firstChild = null;\n    this._lastChild = null;\n    this._prev = null;\n    this._next = null;\n    this._sourcepos = sourcepos;\n    this._lastLineBlank = false;\n    this._lastLineChecked = false;\n    this._open = true;\n    this._string_content = null;\n    this._literal = null;\n    this._listData = {};\n    this._info = null;\n    this._destination = null;\n    this._title = null;\n    this._isFenced = false;\n    this._fenceChar = null;\n    this._fenceLength = 0;\n    this._fenceOffset = null;\n    this._level = null;\n    this._onEnter = null;\n    this._onExit = null;\n};\n\nvar proto = Node.prototype;\n\nObject.defineProperty(proto, \"isContainer\", {\n    get: function() {\n        return isContainer(this);\n    }\n});\n\nObject.defineProperty(proto, \"type\", {\n    get: function() {\n        return this._type;\n    }\n});\n\nObject.defineProperty(proto, \"firstChild\", {\n    get: function() {\n        return this._firstChild;\n    }\n});\n\nObject.defineProperty(proto, \"lastChild\", {\n    get: function() {\n        return this._lastChild;\n    }\n});\n\nObject.defineProperty(proto, \"next\", {\n    get: function() {\n        return this._next;\n    }\n});\n\nObject.defineProperty(proto, \"prev\", {\n    get: function() {\n        return this._prev;\n    }\n});\n\nObject.defineProperty(proto, \"parent\", {\n    get: function() {\n        return this._parent;\n    }\n});\n\nObject.defineProperty(proto, \"sourcepos\", {\n    get: function() {\n        return this._sourcepos;\n    }\n});\n\nObject.defineProperty(proto, \"literal\", {\n    get: function() {\n        return this._literal;\n    },\n    set: function(s) {\n        this._literal = s;\n    }\n});\n\nObject.defineProperty(proto, \"destination\", {\n    get: function() {\n        return this._destination;\n    },\n    set: function(s) {\n        this._destination = s;\n    }\n});\n\nObject.defineProperty(proto, \"title\", {\n    get: function() {\n        return this._title;\n    },\n    set: function(s) {\n        this._title = s;\n    }\n});\n\nObject.defineProperty(proto, \"info\", {\n    get: function() {\n        return this._info;\n    },\n    set: function(s) {\n        this._info = s;\n    }\n});\n\nObject.defineProperty(proto, \"level\", {\n    get: function() {\n        return this._level;\n    },\n    set: function(s) {\n        this._level = s;\n    }\n});\n\nObject.defineProperty(proto, \"listType\", {\n    get: function() {\n        return this._listData.type;\n    },\n    set: function(t) {\n        this._listData.type = t;\n    }\n});\n\nObject.defineProperty(proto, \"listTight\", {\n    get: function() {\n        return this._listData.tight;\n    },\n    set: function(t) {\n        this._listData.tight = t;\n    }\n});\n\nObject.defineProperty(proto, \"listStart\", {\n    get: function() {\n        return this._listData.start;\n    },\n    set: function(n) {\n        this._listData.start = n;\n    }\n});\n\nObject.defineProperty(proto, \"listDelimiter\", {\n    get: function() {\n        return this._listData.delimiter;\n    },\n    set: function(delim) {\n        this._listData.delimiter = delim;\n    }\n});\n\nObject.defineProperty(proto, \"onEnter\", {\n    get: function() {\n        return this._onEnter;\n    },\n    set: function(s) {\n        this._onEnter = s;\n    }\n});\n\nObject.defineProperty(proto, \"onExit\", {\n    get: function() {\n        return this._onExit;\n    },\n    set: function(s) {\n        this._onExit = s;\n    }\n});\n\nNode.prototype.appendChild = function(child) {\n    child.unlink();\n    child._parent = this;\n    if (this._lastChild) {\n        this._lastChild._next = child;\n        child._prev = this._lastChild;\n        this._lastChild = child;\n    } else {\n        this._firstChild = child;\n        this._lastChild = child;\n    }\n};\n\nNode.prototype.prependChild = function(child) {\n    child.unlink();\n    child._parent = this;\n    if (this._firstChild) {\n        this._firstChild._prev = child;\n        child._next = this._firstChild;\n        this._firstChild = child;\n    } else {\n        this._firstChild = child;\n        this._lastChild = child;\n    }\n};\n\nNode.prototype.unlink = function() {\n    if (this._prev) {\n        this._prev._next = this._next;\n    } else if (this._parent) {\n        this._parent._firstChild = this._next;\n    }\n    if (this._next) {\n        this._next._prev = this._prev;\n    } else if (this._parent) {\n        this._parent._lastChild = this._prev;\n    }\n    this._parent = null;\n    this._next = null;\n    this._prev = null;\n};\n\nNode.prototype.insertAfter = function(sibling) {\n    sibling.unlink();\n    sibling._next = this._next;\n    if (sibling._next) {\n        sibling._next._prev = sibling;\n    }\n    sibling._prev = this;\n    this._next = sibling;\n    sibling._parent = this._parent;\n    if (!sibling._next) {\n        sibling._parent._lastChild = sibling;\n    }\n};\n\nNode.prototype.insertBefore = function(sibling) {\n    sibling.unlink();\n    sibling._prev = this._prev;\n    if (sibling._prev) {\n        sibling._prev._next = sibling;\n    }\n    sibling._next = this;\n    this._prev = sibling;\n    sibling._parent = this._parent;\n    if (!sibling._prev) {\n        sibling._parent._firstChild = sibling;\n    }\n};\n\nNode.prototype.walker = function() {\n    var walker = new NodeWalker(this);\n    return walker;\n};\n\nexport default Node;\n\n/* Example of use of walker:\n\n var walker = w.walker();\n var event;\n\n while (event = walker.next()) {\n console.log(event.entering, event.node.type);\n }\n\n */\n","\"use strict\";\n\n// derived from https://github.com/mathiasbynens/String.fromCodePoint\n/*! http://mths.be/fromcodepoint v0.2.1 by @mathias */\n\nvar _fromCodePoint;\n\nexport default function fromCodePoint(_) {\n    return _fromCodePoint(_);\n}\n\nif (String.fromCodePoint) {\n    _fromCodePoint = function(_) {\n        try {\n            return String.fromCodePoint(_);\n        } catch (e) {\n            if (e instanceof RangeError) {\n                return String.fromCharCode(0xfffd);\n            }\n            throw e;\n        }\n    };\n} else {\n    var stringFromCharCode = String.fromCharCode;\n    var floor = Math.floor;\n    _fromCodePoint = function() {\n        var MAX_SIZE = 0x4000;\n        var codeUnits = [];\n        var highSurrogate;\n        var lowSurrogate;\n        var index = -1;\n        var length = arguments.length;\n        if (!length) {\n            return \"\";\n        }\n        var result = \"\";\n        while (++index < length) {\n            var codePoint = Number(arguments[index]);\n            if (\n                !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n                codePoint < 0 || // not a valid Unicode code point\n                codePoint > 0x10ffff || // not a valid Unicode code point\n                floor(codePoint) !== codePoint // not an integer\n            ) {\n                return String.fromCharCode(0xfffd);\n            }\n            if (codePoint <= 0xffff) {\n                // BMP code point\n                codeUnits.push(codePoint);\n            } else {\n                // Astral code point; split in surrogate halves\n                // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n                codePoint -= 0x10000;\n                highSurrogate = (codePoint >> 10) + 0xd800;\n                lowSurrogate = (codePoint % 0x400) + 0xdc00;\n                codeUnits.push(highSurrogate, lowSurrogate);\n            }\n            if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n                result += stringFromCharCode.apply(null, codeUnits);\n                codeUnits.length = 0;\n            }\n        }\n        return result;\n    };\n}\n","\"use strict\";\n\nimport encode from \"mdurl/encode.js\";\nimport { decodeHTML } from \"entities\";\n\nvar C_BACKSLASH = 92;\n\nvar ENTITY = \"&(?:#x[a-f0-9]{1,6}|#[0-9]{1,7}|[a-z][a-z0-9]{1,31});\";\n\nvar TAGNAME = \"[A-Za-z][A-Za-z0-9-]*\";\nvar ATTRIBUTENAME = \"[a-zA-Z_:][a-zA-Z0-9:._-]*\";\nvar UNQUOTEDVALUE = \"[^\\\"'=<>`\\\\x00-\\\\x20]+\";\nvar SINGLEQUOTEDVALUE = \"'[^']*'\";\nvar DOUBLEQUOTEDVALUE = '\"[^\"]*\"';\nvar ATTRIBUTEVALUE =\n    \"(?:\" +\n    UNQUOTEDVALUE +\n    \"|\" +\n    SINGLEQUOTEDVALUE +\n    \"|\" +\n    DOUBLEQUOTEDVALUE +\n    \")\";\nvar ATTRIBUTEVALUESPEC = \"(?:\" + \"\\\\s*=\" + \"\\\\s*\" + ATTRIBUTEVALUE + \")\";\nvar ATTRIBUTE = \"(?:\" + \"\\\\s+\" + ATTRIBUTENAME + ATTRIBUTEVALUESPEC + \"?)\";\nvar OPENTAG = \"<\" + TAGNAME + ATTRIBUTE + \"*\" + \"\\\\s*/?>\";\nvar CLOSETAG = \"</\" + TAGNAME + \"\\\\s*[>]\";\nvar HTMLCOMMENT = \"<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->\";\nvar PROCESSINGINSTRUCTION = \"[<][?][\\\\s\\\\S]*?[?][>]\";\nvar DECLARATION = \"<![A-Z]+\" + \"\\\\s+[^>]*>\";\nvar CDATA = \"<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\";\nvar HTMLTAG =\n    \"(?:\" +\n    OPENTAG +\n    \"|\" +\n    CLOSETAG +\n    \"|\" +\n    HTMLCOMMENT +\n    \"|\" +\n    PROCESSINGINSTRUCTION +\n    \"|\" +\n    DECLARATION +\n    \"|\" +\n    CDATA +\n    \")\";\nvar reHtmlTag = new RegExp(\"^\" + HTMLTAG);\n\nvar reBackslashOrAmp = /[\\\\&]/;\n\nvar ESCAPABLE = \"[!\\\"#$%&'()*+,./:;<=>?@[\\\\\\\\\\\\]^_`{|}~-]\";\n\nvar reEntityOrEscapedChar = new RegExp(\"\\\\\\\\\" + ESCAPABLE + \"|\" + ENTITY, \"gi\");\n\nvar XMLSPECIAL = '[&<>\"]';\n\nvar reXmlSpecial = new RegExp(XMLSPECIAL, \"g\");\n\nvar unescapeChar = function(s) {\n    if (s.charCodeAt(0) === C_BACKSLASH) {\n        return s.charAt(1);\n    } else {\n        return decodeHTML(s);\n    }\n};\n\n// Replace entities and backslash escapes with literal characters.\nvar unescapeString = function(s) {\n    if (reBackslashOrAmp.test(s)) {\n        return s.replace(reEntityOrEscapedChar, unescapeChar);\n    } else {\n        return s;\n    }\n};\n\nvar normalizeURI = function(uri) {\n    try {\n        return encode(uri);\n    } catch (err) {\n        return uri;\n    }\n};\n\nvar replaceUnsafeChar = function(s) {\n    switch (s) {\n        case \"&\":\n            return \"&amp;\";\n        case \"<\":\n            return \"&lt;\";\n        case \">\":\n            return \"&gt;\";\n        case '\"':\n            return \"&quot;\";\n        default:\n            return s;\n    }\n};\n\nvar escapeXml = function(s) {\n    if (reXmlSpecial.test(s)) {\n        return s.replace(reXmlSpecial, replaceUnsafeChar);\n    } else {\n        return s;\n    }\n};\n\nexport {\n    unescapeString,\n    normalizeURI,\n    escapeXml,\n    reHtmlTag,\n    OPENTAG,\n    CLOSETAG,\n    ENTITY,\n    ESCAPABLE\n};\n","\"use strict\";\n\nimport Node from \"./node.js\";\nimport * as common from \"./common.js\";\nimport fromCodePoint from \"./from-code-point.js\";\nimport { decodeHTML } from \"entities\";\nimport \"string.prototype.repeat\"; // Polyfill for String.prototype.repeat\n\nvar normalizeURI = common.normalizeURI;\nvar unescapeString = common.unescapeString;\n\n// Constants for character codes:\n\nvar C_NEWLINE = 10;\nvar C_ASTERISK = 42;\nvar C_UNDERSCORE = 95;\nvar C_BACKTICK = 96;\nvar C_OPEN_BRACKET = 91;\nvar C_CLOSE_BRACKET = 93;\nvar C_LESSTHAN = 60;\nvar C_BANG = 33;\nvar C_BACKSLASH = 92;\nvar C_AMPERSAND = 38;\nvar C_OPEN_PAREN = 40;\nvar C_CLOSE_PAREN = 41;\nvar C_COLON = 58;\nvar C_SINGLEQUOTE = 39;\nvar C_DOUBLEQUOTE = 34;\n\n// Some regexps used in inline parser:\n\nvar ESCAPABLE = common.ESCAPABLE;\nvar ESCAPED_CHAR = \"\\\\\\\\\" + ESCAPABLE;\n\nvar ENTITY = common.ENTITY;\nvar reHtmlTag = common.reHtmlTag;\n\nvar rePunctuation = new RegExp(\n    /[!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E42\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC9\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDF3C-\\uDF3E]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]/\n);\n\nvar reLinkTitle = new RegExp(\n    '^(?:\"(' +\n        ESCAPED_CHAR +\n        '|[^\"\\\\x00])*\"' +\n        \"|\" +\n        \"'(\" +\n        ESCAPED_CHAR +\n        \"|[^'\\\\x00])*'\" +\n        \"|\" +\n        \"\\\\((\" +\n        ESCAPED_CHAR +\n        \"|[^()\\\\x00])*\\\\))\"\n);\n\nvar reLinkDestinationBraces = /^(?:<(?:[^<>\\n\\\\\\x00]|\\\\.)*>)/;\n\nvar reEscapable = new RegExp(\"^\" + ESCAPABLE);\n\nvar reEntityHere = new RegExp(\"^\" + ENTITY, \"i\");\n\nvar reTicks = /`+/;\n\nvar reTicksHere = /^`+/;\n\nvar reEllipses = /\\.\\.\\./g;\n\nvar reDash = /--+/g;\n\nvar reEmailAutolink = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\n\nvar reAutolink = /^<[A-Za-z][A-Za-z0-9.+-]{1,31}:[^<>\\x00-\\x20]*>/i;\n\nvar reSpnl = /^ *(?:\\n *)?/;\n\nvar reWhitespaceChar = /^[ \\t\\n\\x0b\\x0c\\x0d]/;\n\nvar reUnicodeWhitespaceChar = /^\\s/;\n\nvar reFinalSpace = / *$/;\n\nvar reInitialSpace = /^ */;\n\nvar reSpaceAtEndOfLine = /^ *(?:\\n|$)/;\n\nvar reLinkLabel = /^\\[(?:[^\\\\\\[\\]]|\\\\.){0,1000}\\]/;\n\n// Matches a string of non-special characters.\nvar reMain = /^[^\\n`\\[\\]\\\\!<&*_'\"]+/m;\n\nvar text = function(s) {\n    var node = new Node(\"text\");\n    node._literal = s;\n    return node;\n};\n\n// normalize a reference in reference link (remove []s, trim,\n// collapse internal space, unicode case fold.\n// See commonmark/commonmark.js#168.\nvar normalizeReference = function(string) {\n    return string\n        .slice(1, string.length - 1)\n        .trim()\n        .replace(/[ \\t\\r\\n]+/, \" \")\n        .toLowerCase()\n        .toUpperCase();\n};\n\n// INLINE PARSER\n\n// These are methods of an InlineParser object, defined below.\n// An InlineParser keeps track of a subject (a string to be\n// parsed) and a position in that subject.\n\n// If re matches at current position in the subject, advance\n// position in subject and return the match; otherwise return null.\nvar match = function(re) {\n    var m = re.exec(this.subject.slice(this.pos));\n    if (m === null) {\n        return null;\n    } else {\n        this.pos += m.index + m[0].length;\n        return m[0];\n    }\n};\n\n// Returns the code for the character at the current subject position, or -1\n// there are no more characters.\nvar peek = function() {\n    if (this.pos < this.subject.length) {\n        return this.subject.charCodeAt(this.pos);\n    } else {\n        return -1;\n    }\n};\n\n// Parse zero or more space characters, including at most one newline\nvar spnl = function() {\n    this.match(reSpnl);\n    return true;\n};\n\n// All of the parsers below try to match something at the current position\n// in the subject.  If they succeed in matching anything, they\n// return the inline matched, advancing the subject.\n\n// Attempt to parse backticks, adding either a backtick code span or a\n// literal sequence of backticks.\nvar parseBackticks = function(block) {\n    var ticks = this.match(reTicksHere);\n    if (ticks === null) {\n        return false;\n    }\n    var afterOpenTicks = this.pos;\n    var matched;\n    var node;\n    var contents;\n    while ((matched = this.match(reTicks)) !== null) {\n        if (matched === ticks) {\n            node = new Node(\"code\");\n            contents = this.subject\n                .slice(afterOpenTicks, this.pos - ticks.length)\n                .replace(/\\n/gm, \" \");\n            if (\n                contents.length > 0 &&\n                contents.match(/[^ ]/) !== null &&\n                contents[0] == \" \" &&\n                contents[contents.length - 1] == \" \"\n            ) {\n                node._literal = contents.slice(1, contents.length - 1);\n            } else {\n                node._literal = contents;\n            }\n            block.appendChild(node);\n            return true;\n        }\n    }\n    // If we got here, we didn't match a closing backtick sequence.\n    this.pos = afterOpenTicks;\n    block.appendChild(text(ticks));\n    return true;\n};\n\n// Parse a backslash-escaped special character, adding either the escaped\n// character, a hard line break (if the backslash is followed by a newline),\n// or a literal backslash to the block's children.  Assumes current character\n// is a backslash.\nvar parseBackslash = function(block) {\n    var subj = this.subject;\n    var node;\n    this.pos += 1;\n    if (this.peek() === C_NEWLINE) {\n        this.pos += 1;\n        node = new Node(\"linebreak\");\n        block.appendChild(node);\n    } else if (reEscapable.test(subj.charAt(this.pos))) {\n        block.appendChild(text(subj.charAt(this.pos)));\n        this.pos += 1;\n    } else {\n        block.appendChild(text(\"\\\\\"));\n    }\n    return true;\n};\n\n// Attempt to parse an autolink (URL or email in pointy brackets).\nvar parseAutolink = function(block) {\n    var m;\n    var dest;\n    var node;\n    if ((m = this.match(reEmailAutolink))) {\n        dest = m.slice(1, m.length - 1);\n        node = new Node(\"link\");\n        node._destination = normalizeURI(\"mailto:\" + dest);\n        node._title = \"\";\n        node.appendChild(text(dest));\n        block.appendChild(node);\n        return true;\n    } else if ((m = this.match(reAutolink))) {\n        dest = m.slice(1, m.length - 1);\n        node = new Node(\"link\");\n        node._destination = normalizeURI(dest);\n        node._title = \"\";\n        node.appendChild(text(dest));\n        block.appendChild(node);\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// Attempt to parse a raw HTML tag.\nvar parseHtmlTag = function(block) {\n    var m = this.match(reHtmlTag);\n    if (m === null) {\n        return false;\n    } else {\n        var node = new Node(\"html_inline\");\n        node._literal = m;\n        block.appendChild(node);\n        return true;\n    }\n};\n\n// Scan a sequence of characters with code cc, and return information about\n// the number of delimiters and whether they are positioned such that\n// they can open and/or close emphasis or strong emphasis.  A utility\n// function for strong/emph parsing.\nvar scanDelims = function(cc) {\n    var numdelims = 0;\n    var char_before, char_after, cc_after;\n    var startpos = this.pos;\n    var left_flanking, right_flanking, can_open, can_close;\n    var after_is_whitespace,\n        after_is_punctuation,\n        before_is_whitespace,\n        before_is_punctuation;\n\n    if (cc === C_SINGLEQUOTE || cc === C_DOUBLEQUOTE) {\n        numdelims++;\n        this.pos++;\n    } else {\n        while (this.peek() === cc) {\n            numdelims++;\n            this.pos++;\n        }\n    }\n\n    if (numdelims === 0) {\n        return null;\n    }\n\n    char_before = startpos === 0 ? \"\\n\" : this.subject.charAt(startpos - 1);\n\n    cc_after = this.peek();\n    if (cc_after === -1) {\n        char_after = \"\\n\";\n    } else {\n        char_after = fromCodePoint(cc_after);\n    }\n\n    after_is_whitespace = reUnicodeWhitespaceChar.test(char_after);\n    after_is_punctuation = rePunctuation.test(char_after);\n    before_is_whitespace = reUnicodeWhitespaceChar.test(char_before);\n    before_is_punctuation = rePunctuation.test(char_before);\n\n    left_flanking =\n        !after_is_whitespace &&\n        (!after_is_punctuation ||\n            before_is_whitespace ||\n            before_is_punctuation);\n    right_flanking =\n        !before_is_whitespace &&\n        (!before_is_punctuation || after_is_whitespace || after_is_punctuation);\n    if (cc === C_UNDERSCORE) {\n        can_open = left_flanking && (!right_flanking || before_is_punctuation);\n        can_close = right_flanking && (!left_flanking || after_is_punctuation);\n    } else if (cc === C_SINGLEQUOTE || cc === C_DOUBLEQUOTE) {\n        can_open = left_flanking && !right_flanking;\n        can_close = right_flanking;\n    } else {\n        can_open = left_flanking;\n        can_close = right_flanking;\n    }\n    this.pos = startpos;\n    return { numdelims: numdelims, can_open: can_open, can_close: can_close };\n};\n\n// Handle a delimiter marker for emphasis or a quote.\nvar handleDelim = function(cc, block) {\n    var res = this.scanDelims(cc);\n    if (!res) {\n        return false;\n    }\n    var numdelims = res.numdelims;\n    var startpos = this.pos;\n    var contents;\n\n    this.pos += numdelims;\n    if (cc === C_SINGLEQUOTE) {\n        contents = \"\\u2019\";\n    } else if (cc === C_DOUBLEQUOTE) {\n        contents = \"\\u201C\";\n    } else {\n        contents = this.subject.slice(startpos, this.pos);\n    }\n    var node = text(contents);\n    block.appendChild(node);\n\n    // Add entry to stack for this opener\n    if (\n        (res.can_open || res.can_close) &&\n        (this.options.smart || (cc !== C_SINGLEQUOTE && cc !== C_DOUBLEQUOTE))\n    ) {\n        this.delimiters = {\n            cc: cc,\n            numdelims: numdelims,\n            origdelims: numdelims,\n            node: node,\n            previous: this.delimiters,\n            next: null,\n            can_open: res.can_open,\n            can_close: res.can_close\n        };\n        if (this.delimiters.previous !== null) {\n            this.delimiters.previous.next = this.delimiters;\n        }\n    }\n\n    return true;\n};\n\nvar removeDelimiter = function(delim) {\n    if (delim.previous !== null) {\n        delim.previous.next = delim.next;\n    }\n    if (delim.next === null) {\n        // top of stack\n        this.delimiters = delim.previous;\n    } else {\n        delim.next.previous = delim.previous;\n    }\n};\n\nvar removeDelimitersBetween = function(bottom, top) {\n    if (bottom.next !== top) {\n        bottom.next = top;\n        top.previous = bottom;\n    }\n};\n\nvar processEmphasis = function(stack_bottom) {\n    var opener, closer, old_closer;\n    var opener_inl, closer_inl;\n    var tempstack;\n    var use_delims;\n    var tmp, next;\n    var opener_found;\n    var openers_bottom = [[], [], []];\n    var odd_match = false;\n\n    for (var i = 0; i < 3; i++) {\n        openers_bottom[i][C_UNDERSCORE] = stack_bottom;\n        openers_bottom[i][C_ASTERISK] = stack_bottom;\n        openers_bottom[i][C_SINGLEQUOTE] = stack_bottom;\n        openers_bottom[i][C_DOUBLEQUOTE] = stack_bottom;\n    }\n    // find first closer above stack_bottom:\n    closer = this.delimiters;\n    while (closer !== null && closer.previous !== stack_bottom) {\n        closer = closer.previous;\n    }\n    // move forward, looking for closers, and handling each\n    while (closer !== null) {\n        var closercc = closer.cc;\n        if (!closer.can_close) {\n            closer = closer.next;\n        } else {\n            // found emphasis closer. now look back for first matching opener:\n            opener = closer.previous;\n            opener_found = false;\n            while (\n                opener !== null &&\n                opener !== stack_bottom &&\n                opener !== openers_bottom[closer.origdelims % 3][closercc]\n            ) {\n                odd_match =\n                    (closer.can_open || opener.can_close) &&\n                    closer.origdelims % 3 !== 0 &&\n                    (opener.origdelims + closer.origdelims) % 3 === 0;\n                if (opener.cc === closer.cc && opener.can_open && !odd_match) {\n                    opener_found = true;\n                    break;\n                }\n                opener = opener.previous;\n            }\n            old_closer = closer;\n\n            if (closercc === C_ASTERISK || closercc === C_UNDERSCORE) {\n                if (!opener_found) {\n                    closer = closer.next;\n                } else {\n                    // calculate actual number of delimiters used from closer\n                    use_delims =\n                        closer.numdelims >= 2 && opener.numdelims >= 2 ? 2 : 1;\n\n                    opener_inl = opener.node;\n                    closer_inl = closer.node;\n\n                    // remove used delimiters from stack elts and inlines\n                    opener.numdelims -= use_delims;\n                    closer.numdelims -= use_delims;\n                    opener_inl._literal = opener_inl._literal.slice(\n                        0,\n                        opener_inl._literal.length - use_delims\n                    );\n                    closer_inl._literal = closer_inl._literal.slice(\n                        0,\n                        closer_inl._literal.length - use_delims\n                    );\n\n                    // build contents for new emph element\n                    var emph = new Node(use_delims === 1 ? \"emph\" : \"strong\");\n\n                    tmp = opener_inl._next;\n                    while (tmp && tmp !== closer_inl) {\n                        next = tmp._next;\n                        tmp.unlink();\n                        emph.appendChild(tmp);\n                        tmp = next;\n                    }\n\n                    opener_inl.insertAfter(emph);\n\n                    // remove elts between opener and closer in delimiters stack\n                    removeDelimitersBetween(opener, closer);\n\n                    // if opener has 0 delims, remove it and the inline\n                    if (opener.numdelims === 0) {\n                        opener_inl.unlink();\n                        this.removeDelimiter(opener);\n                    }\n\n                    if (closer.numdelims === 0) {\n                        closer_inl.unlink();\n                        tempstack = closer.next;\n                        this.removeDelimiter(closer);\n                        closer = tempstack;\n                    }\n                }\n            } else if (closercc === C_SINGLEQUOTE) {\n                closer.node._literal = \"\\u2019\";\n                if (opener_found) {\n                    opener.node._literal = \"\\u2018\";\n                }\n                closer = closer.next;\n            } else if (closercc === C_DOUBLEQUOTE) {\n                closer.node._literal = \"\\u201D\";\n                if (opener_found) {\n                    opener.node.literal = \"\\u201C\";\n                }\n                closer = closer.next;\n            }\n            if (!opener_found) {\n                // Set lower bound for future searches for openers:\n                openers_bottom[old_closer.origdelims % 3][closercc] =\n                    old_closer.previous;\n                if (!old_closer.can_open) {\n                    // We can remove a closer that can't be an opener,\n                    // once we've seen there's no matching opener:\n                    this.removeDelimiter(old_closer);\n                }\n            }\n        }\n    }\n\n    // remove all delimiters\n    while (this.delimiters !== null && this.delimiters !== stack_bottom) {\n        this.removeDelimiter(this.delimiters);\n    }\n};\n\n// Attempt to parse link title (sans quotes), returning the string\n// or null if no match.\nvar parseLinkTitle = function() {\n    var title = this.match(reLinkTitle);\n    if (title === null) {\n        return null;\n    } else {\n        // chop off quotes from title and unescape:\n        return unescapeString(title.substr(1, title.length - 2));\n    }\n};\n\n// Attempt to parse link destination, returning the string or\n// null if no match.\nvar parseLinkDestination = function() {\n    var res = this.match(reLinkDestinationBraces);\n    if (res === null) {\n        if (this.peek() === C_LESSTHAN) {\n            return null;\n        }\n        // TODO handrolled parser; res should be null or the string\n        var savepos = this.pos;\n        var openparens = 0;\n        var c;\n        while ((c = this.peek()) !== -1) {\n            if (\n                c === C_BACKSLASH &&\n                reEscapable.test(this.subject.charAt(this.pos + 1))\n            ) {\n                this.pos += 1;\n                if (this.peek() !== -1) {\n                    this.pos += 1;\n                }\n            } else if (c === C_OPEN_PAREN) {\n                this.pos += 1;\n                openparens += 1;\n            } else if (c === C_CLOSE_PAREN) {\n                if (openparens < 1) {\n                    break;\n                } else {\n                    this.pos += 1;\n                    openparens -= 1;\n                }\n            } else if (reWhitespaceChar.exec(fromCodePoint(c)) !== null) {\n                break;\n            } else {\n                this.pos += 1;\n            }\n        }\n        if (this.pos === savepos && c !== C_CLOSE_PAREN) {\n            return null;\n        }\n        if (openparens !== 0) {\n            return null;\n        }\n        res = this.subject.substr(savepos, this.pos - savepos);\n        return normalizeURI(unescapeString(res));\n    } else {\n        // chop off surrounding <..>:\n        return normalizeURI(unescapeString(res.substr(1, res.length - 2)));\n    }\n};\n\n// Attempt to parse a link label, returning number of characters parsed.\nvar parseLinkLabel = function() {\n    var m = this.match(reLinkLabel);\n    if (m === null || m.length > 1001) {\n        return 0;\n    } else {\n        return m.length;\n    }\n};\n\n// Add open bracket to delimiter stack and add a text node to block's children.\nvar parseOpenBracket = function(block) {\n    var startpos = this.pos;\n    this.pos += 1;\n\n    var node = text(\"[\");\n    block.appendChild(node);\n\n    // Add entry to stack for this opener\n    this.addBracket(node, startpos, false);\n    return true;\n};\n\n// IF next character is [, and ! delimiter to delimiter stack and\n// add a text node to block's children.  Otherwise just add a text node.\nvar parseBang = function(block) {\n    var startpos = this.pos;\n    this.pos += 1;\n    if (this.peek() === C_OPEN_BRACKET) {\n        this.pos += 1;\n\n        var node = text(\"![\");\n        block.appendChild(node);\n\n        // Add entry to stack for this opener\n        this.addBracket(node, startpos + 1, true);\n    } else {\n        block.appendChild(text(\"!\"));\n    }\n    return true;\n};\n\n// Try to match close bracket against an opening in the delimiter\n// stack.  Add either a link or image, or a plain [ character,\n// to block's children.  If there is a matching delimiter,\n// remove it from the delimiter stack.\nvar parseCloseBracket = function(block) {\n    var startpos;\n    var is_image;\n    var dest;\n    var title;\n    var matched = false;\n    var reflabel;\n    var opener;\n\n    this.pos += 1;\n    startpos = this.pos;\n\n    // get last [ or ![\n    opener = this.brackets;\n\n    if (opener === null) {\n        // no matched opener, just return a literal\n        block.appendChild(text(\"]\"));\n        return true;\n    }\n\n    if (!opener.active) {\n        // no matched opener, just return a literal\n        block.appendChild(text(\"]\"));\n        // take opener off brackets stack\n        this.removeBracket();\n        return true;\n    }\n\n    // If we got here, open is a potential opener\n    is_image = opener.image;\n\n    // Check to see if we have a link/image\n\n    var savepos = this.pos;\n\n    // Inline link?\n    if (this.peek() === C_OPEN_PAREN) {\n        this.pos++;\n        if (\n            this.spnl() &&\n            (dest = this.parseLinkDestination()) !== null &&\n            this.spnl() &&\n            // make sure there's a space before the title:\n            ((reWhitespaceChar.test(this.subject.charAt(this.pos - 1)) &&\n                (title = this.parseLinkTitle())) ||\n                true) &&\n            this.spnl() &&\n            this.peek() === C_CLOSE_PAREN\n        ) {\n            this.pos += 1;\n            matched = true;\n        } else {\n            this.pos = savepos;\n        }\n    }\n\n    if (!matched) {\n        // Next, see if there's a link label\n        var beforelabel = this.pos;\n        var n = this.parseLinkLabel();\n        if (n > 2) {\n            reflabel = this.subject.slice(beforelabel, beforelabel + n);\n        } else if (!opener.bracketAfter) {\n            // Empty or missing second label means to use the first label as the reference.\n            // The reference must not contain a bracket. If we know there's a bracket, we don't even bother checking it.\n            reflabel = this.subject.slice(opener.index, startpos);\n        }\n        if (n === 0) {\n            // If shortcut reference link, rewind before spaces we skipped.\n            this.pos = savepos;\n        }\n\n        if (reflabel) {\n            // lookup rawlabel in refmap\n            var link = this.refmap[normalizeReference(reflabel)];\n            if (link) {\n                dest = link.destination;\n                title = link.title;\n                matched = true;\n            }\n        }\n    }\n\n    if (matched) {\n        var node = new Node(is_image ? \"image\" : \"link\");\n        node._destination = dest;\n        node._title = title || \"\";\n\n        var tmp, next;\n        tmp = opener.node._next;\n        while (tmp) {\n            next = tmp._next;\n            tmp.unlink();\n            node.appendChild(tmp);\n            tmp = next;\n        }\n        block.appendChild(node);\n        this.processEmphasis(opener.previousDelimiter);\n        this.removeBracket();\n        opener.node.unlink();\n\n        // We remove this bracket and processEmphasis will remove later delimiters.\n        // Now, for a link, we also deactivate earlier link openers.\n        // (no links in links)\n        if (!is_image) {\n            opener = this.brackets;\n            while (opener !== null) {\n                if (!opener.image) {\n                    opener.active = false; // deactivate this opener\n                }\n                opener = opener.previous;\n            }\n        }\n\n        return true;\n    } else {\n        // no match\n\n        this.removeBracket(); // remove this opener from stack\n        this.pos = startpos;\n        block.appendChild(text(\"]\"));\n        return true;\n    }\n};\n\nvar addBracket = function(node, index, image) {\n    if (this.brackets !== null) {\n        this.brackets.bracketAfter = true;\n    }\n    this.brackets = {\n        node: node,\n        previous: this.brackets,\n        previousDelimiter: this.delimiters,\n        index: index,\n        image: image,\n        active: true\n    };\n};\n\nvar removeBracket = function() {\n    this.brackets = this.brackets.previous;\n};\n\n// Attempt to parse an entity.\nvar parseEntity = function(block) {\n    var m;\n    if ((m = this.match(reEntityHere))) {\n        block.appendChild(text(decodeHTML(m)));\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// Parse a run of ordinary characters, or a single character with\n// a special meaning in markdown, as a plain string.\nvar parseString = function(block) {\n    var m;\n    if ((m = this.match(reMain))) {\n        if (this.options.smart) {\n            block.appendChild(\n                text(\n                    m\n                        .replace(reEllipses, \"\\u2026\")\n                        .replace(reDash, function(chars) {\n                            var enCount = 0;\n                            var emCount = 0;\n                            if (chars.length % 3 === 0) {\n                                // If divisible by 3, use all em dashes\n                                emCount = chars.length / 3;\n                            } else if (chars.length % 2 === 0) {\n                                // If divisible by 2, use all en dashes\n                                enCount = chars.length / 2;\n                            } else if (chars.length % 3 === 2) {\n                                // If 2 extra dashes, use en dash for last 2; em dashes for rest\n                                enCount = 1;\n                                emCount = (chars.length - 2) / 3;\n                            } else {\n                                // Use en dashes for last 4 hyphens; em dashes for rest\n                                enCount = 2;\n                                emCount = (chars.length - 4) / 3;\n                            }\n                            return (\n                                \"\\u2014\".repeat(emCount) +\n                                \"\\u2013\".repeat(enCount)\n                            );\n                        })\n                )\n            );\n        } else {\n            block.appendChild(text(m));\n        }\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// Parse a newline.  If it was preceded by two spaces, return a hard\n// line break; otherwise a soft line break.\nvar parseNewline = function(block) {\n    this.pos += 1; // assume we're at a \\n\n    // check previous node for trailing spaces\n    var lastc = block._lastChild;\n    if (\n        lastc &&\n        lastc.type === \"text\" &&\n        lastc._literal[lastc._literal.length - 1] === \" \"\n    ) {\n        var hardbreak = lastc._literal[lastc._literal.length - 2] === \" \";\n        lastc._literal = lastc._literal.replace(reFinalSpace, \"\");\n        block.appendChild(new Node(hardbreak ? \"linebreak\" : \"softbreak\"));\n    } else {\n        block.appendChild(new Node(\"softbreak\"));\n    }\n    this.match(reInitialSpace); // gobble leading spaces in next line\n    return true;\n};\n\n// Attempt to parse a link reference, modifying refmap.\nvar parseReference = function(s, refmap) {\n    this.subject = s;\n    this.pos = 0;\n    var rawlabel;\n    var dest;\n    var title;\n    var matchChars;\n    var startpos = this.pos;\n\n    // label:\n    matchChars = this.parseLinkLabel();\n    if (matchChars === 0) {\n        return 0;\n    } else {\n        rawlabel = this.subject.substr(0, matchChars);\n    }\n\n    // colon:\n    if (this.peek() === C_COLON) {\n        this.pos++;\n    } else {\n        this.pos = startpos;\n        return 0;\n    }\n\n    //  link url\n    this.spnl();\n\n    dest = this.parseLinkDestination();\n    if (dest === null) {\n        this.pos = startpos;\n        return 0;\n    }\n\n    var beforetitle = this.pos;\n    this.spnl();\n    if (this.pos !== beforetitle) {\n        title = this.parseLinkTitle();\n    }\n    if (title === null) {\n        title = \"\";\n        // rewind before spaces\n        this.pos = beforetitle;\n    }\n\n    // make sure we're at line end:\n    var atLineEnd = true;\n    if (this.match(reSpaceAtEndOfLine) === null) {\n        if (title === \"\") {\n            atLineEnd = false;\n        } else {\n            // the potential title we found is not at the line end,\n            // but it could still be a legal link reference if we\n            // discard the title\n            title = \"\";\n            // rewind before spaces\n            this.pos = beforetitle;\n            // and instead check if the link URL is at the line end\n            atLineEnd = this.match(reSpaceAtEndOfLine) !== null;\n        }\n    }\n\n    if (!atLineEnd) {\n        this.pos = startpos;\n        return 0;\n    }\n\n    var normlabel = normalizeReference(rawlabel);\n    if (normlabel === \"\") {\n        // label must contain non-whitespace characters\n        this.pos = startpos;\n        return 0;\n    }\n\n    if (!refmap[normlabel]) {\n        refmap[normlabel] = { destination: dest, title: title };\n    }\n    return this.pos - startpos;\n};\n\n// Parse the next inline element in subject, advancing subject position.\n// On success, add the result to block's children and return true.\n// On failure, return false.\nvar parseInline = function(block) {\n    var res = false;\n    var c = this.peek();\n    if (c === -1) {\n        return false;\n    }\n    switch (c) {\n        case C_NEWLINE:\n            res = this.parseNewline(block);\n            break;\n        case C_BACKSLASH:\n            res = this.parseBackslash(block);\n            break;\n        case C_BACKTICK:\n            res = this.parseBackticks(block);\n            break;\n        case C_ASTERISK:\n        case C_UNDERSCORE:\n            res = this.handleDelim(c, block);\n            break;\n        case C_SINGLEQUOTE:\n        case C_DOUBLEQUOTE:\n            res = this.options.smart && this.handleDelim(c, block);\n            break;\n        case C_OPEN_BRACKET:\n            res = this.parseOpenBracket(block);\n            break;\n        case C_BANG:\n            res = this.parseBang(block);\n            break;\n        case C_CLOSE_BRACKET:\n            res = this.parseCloseBracket(block);\n            break;\n        case C_LESSTHAN:\n            res = this.parseAutolink(block) || this.parseHtmlTag(block);\n            break;\n        case C_AMPERSAND:\n            res = this.parseEntity(block);\n            break;\n        default:\n            res = this.parseString(block);\n            break;\n    }\n    if (!res) {\n        this.pos += 1;\n        block.appendChild(text(fromCodePoint(c)));\n    }\n\n    return true;\n};\n\n// Parse string content in block into inline children,\n// using refmap to resolve references.\nvar parseInlines = function(block) {\n    this.subject = block._string_content.trim();\n    this.pos = 0;\n    this.delimiters = null;\n    this.brackets = null;\n    while (this.parseInline(block)) {}\n    block._string_content = null; // allow raw string to be garbage collected\n    this.processEmphasis(null);\n};\n\n// The InlineParser object.\nfunction InlineParser(options) {\n    return {\n        subject: \"\",\n        delimiters: null, // used by handleDelim method\n        brackets: null,\n        pos: 0,\n        refmap: {},\n        match: match,\n        peek: peek,\n        spnl: spnl,\n        parseBackticks: parseBackticks,\n        parseBackslash: parseBackslash,\n        parseAutolink: parseAutolink,\n        parseHtmlTag: parseHtmlTag,\n        scanDelims: scanDelims,\n        handleDelim: handleDelim,\n        parseLinkTitle: parseLinkTitle,\n        parseLinkDestination: parseLinkDestination,\n        parseLinkLabel: parseLinkLabel,\n        parseOpenBracket: parseOpenBracket,\n        parseBang: parseBang,\n        parseCloseBracket: parseCloseBracket,\n        addBracket: addBracket,\n        removeBracket: removeBracket,\n        parseEntity: parseEntity,\n        parseString: parseString,\n        parseNewline: parseNewline,\n        parseReference: parseReference,\n        parseInline: parseInline,\n        processEmphasis: processEmphasis,\n        removeDelimiter: removeDelimiter,\n        options: options || {},\n        parse: parseInlines\n    };\n}\n\nexport default InlineParser;\n","\"use strict\";\n\nimport Node from \"./node.js\";\nimport { unescapeString, OPENTAG, CLOSETAG } from \"./common.js\";\nimport InlineParser from \"./inlines.js\";\n\nvar CODE_INDENT = 4;\n\nvar C_TAB = 9;\nvar C_NEWLINE = 10;\nvar C_GREATERTHAN = 62;\nvar C_LESSTHAN = 60;\nvar C_SPACE = 32;\nvar C_OPEN_BRACKET = 91;\n\nvar reHtmlBlockOpen = [\n    /./, // dummy for 0\n    /^<(?:script|pre|textarea|style)(?:\\s|>|$)/i,\n    /^<!--/,\n    /^<[?]/,\n    /^<![A-Z]/,\n    /^<!\\[CDATA\\[/,\n    /^<[/]?(?:address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[123456]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul)(?:\\s|[/]?[>]|$)/i,\n    new RegExp(\"^(?:\" + OPENTAG + \"|\" + CLOSETAG + \")\\\\s*$\", \"i\")\n];\n\nvar reHtmlBlockClose = [\n    /./, // dummy for 0\n    /<\\/(?:script|pre|textarea|style)>/i,\n    /-->/,\n    /\\?>/,\n    />/,\n    /\\]\\]>/\n];\n\nvar reThematicBreak = /^(?:(?:\\*[ \\t]*){3,}|(?:_[ \\t]*){3,}|(?:-[ \\t]*){3,})[ \\t]*$/;\n\nvar reMaybeSpecial = /^[#`~*+_=<>0-9-]/;\n\nvar reNonSpace = /[^ \\t\\f\\v\\r\\n]/;\n\nvar reBulletListMarker = /^[*+-]/;\n\nvar reOrderedListMarker = /^(\\d{1,9})([.)])/;\n\nvar reATXHeadingMarker = /^#{1,6}(?:[ \\t]+|$)/;\n\nvar reCodeFence = /^`{3,}(?!.*`)|^~{3,}/;\n\nvar reClosingCodeFence = /^(?:`{3,}|~{3,})(?= *$)/;\n\nvar reSetextHeadingLine = /^(?:=+|-+)[ \\t]*$/;\n\nvar reLineEnding = /\\r\\n|\\n|\\r/;\n\n// Returns true if string contains only space characters.\nvar isBlank = function(s) {\n    return !reNonSpace.test(s);\n};\n\nvar isSpaceOrTab = function(c) {\n    return c === C_SPACE || c === C_TAB;\n};\n\nvar peek = function(ln, pos) {\n    if (pos < ln.length) {\n        return ln.charCodeAt(pos);\n    } else {\n        return -1;\n    }\n};\n\n// DOC PARSER\n\n// These are methods of a Parser object, defined below.\n\n// Returns true if block ends with a blank line, descending if needed\n// into lists and sublists.\nvar endsWithBlankLine = function(block) {\n    while (block) {\n        if (block._lastLineBlank) {\n            return true;\n        }\n        var t = block.type;\n        if (!block._lastLineChecked && (t === \"list\" || t === \"item\")) {\n            block._lastLineChecked = true;\n            block = block._lastChild;\n        } else {\n            block._lastLineChecked = true;\n            break;\n        }\n    }\n    return false;\n};\n\n// Add a line to the block at the tip.  We assume the tip\n// can accept lines -- that check should be done before calling this.\nvar addLine = function() {\n    if (this.partiallyConsumedTab) {\n        this.offset += 1; // skip over tab\n        // add space characters:\n        var charsToTab = 4 - (this.column % 4);\n        this.tip._string_content += \" \".repeat(charsToTab);\n    }\n    this.tip._string_content += this.currentLine.slice(this.offset) + \"\\n\";\n};\n\n// Add block of type tag as a child of the tip.  If the tip can't\n// accept children, close and finalize it and try its parent,\n// and so on til we find a block that can accept children.\nvar addChild = function(tag, offset) {\n    while (!this.blocks[this.tip.type].canContain(tag)) {\n        this.finalize(this.tip, this.lineNumber - 1);\n    }\n\n    var column_number = offset + 1; // offset 0 = column 1\n    var newBlock = new Node(tag, [\n        [this.lineNumber, column_number],\n        [0, 0]\n    ]);\n    newBlock._string_content = \"\";\n    this.tip.appendChild(newBlock);\n    this.tip = newBlock;\n    return newBlock;\n};\n\n// Parse a list marker and return data on the marker (type,\n// start, delimiter, bullet character, padding) or null.\nvar parseListMarker = function(parser, container) {\n    var rest = parser.currentLine.slice(parser.nextNonspace);\n    var match;\n    var nextc;\n    var spacesStartCol;\n    var spacesStartOffset;\n    var data = {\n        type: null,\n        tight: true, // lists are tight by default\n        bulletChar: null,\n        start: null,\n        delimiter: null,\n        padding: null,\n        markerOffset: parser.indent\n    };\n    if (parser.indent >= 4) {\n        return null;\n    }\n    if ((match = rest.match(reBulletListMarker))) {\n        data.type = \"bullet\";\n        data.bulletChar = match[0][0];\n    } else if (\n        (match = rest.match(reOrderedListMarker)) &&\n        (container.type !== \"paragraph\" || match[1] === \"1\")\n    ) {\n        data.type = \"ordered\";\n        data.start = parseInt(match[1]);\n        data.delimiter = match[2];\n    } else {\n        return null;\n    }\n    // make sure we have spaces after\n    nextc = peek(parser.currentLine, parser.nextNonspace + match[0].length);\n    if (!(nextc === -1 || nextc === C_TAB || nextc === C_SPACE)) {\n        return null;\n    }\n\n    // if it interrupts paragraph, make sure first line isn't blank\n    if (\n        container.type === \"paragraph\" &&\n        !parser.currentLine\n            .slice(parser.nextNonspace + match[0].length)\n            .match(reNonSpace)\n    ) {\n        return null;\n    }\n\n    // we've got a match! advance offset and calculate padding\n    parser.advanceNextNonspace(); // to start of marker\n    parser.advanceOffset(match[0].length, true); // to end of marker\n    spacesStartCol = parser.column;\n    spacesStartOffset = parser.offset;\n    do {\n        parser.advanceOffset(1, true);\n        nextc = peek(parser.currentLine, parser.offset);\n    } while (parser.column - spacesStartCol < 5 && isSpaceOrTab(nextc));\n    var blank_item = peek(parser.currentLine, parser.offset) === -1;\n    var spaces_after_marker = parser.column - spacesStartCol;\n    if (spaces_after_marker >= 5 || spaces_after_marker < 1 || blank_item) {\n        data.padding = match[0].length + 1;\n        parser.column = spacesStartCol;\n        parser.offset = spacesStartOffset;\n        if (isSpaceOrTab(peek(parser.currentLine, parser.offset))) {\n            parser.advanceOffset(1, true);\n        }\n    } else {\n        data.padding = match[0].length + spaces_after_marker;\n    }\n    return data;\n};\n\n// Returns true if the two list items are of the same type,\n// with the same delimiter and bullet character.  This is used\n// in agglomerating list items into lists.\nvar listsMatch = function(list_data, item_data) {\n    return (\n        list_data.type === item_data.type &&\n        list_data.delimiter === item_data.delimiter &&\n        list_data.bulletChar === item_data.bulletChar\n    );\n};\n\n// Finalize and close any unmatched blocks.\nvar closeUnmatchedBlocks = function() {\n    if (!this.allClosed) {\n        // finalize any blocks not matched\n        while (this.oldtip !== this.lastMatchedContainer) {\n            var parent = this.oldtip._parent;\n            this.finalize(this.oldtip, this.lineNumber - 1);\n            this.oldtip = parent;\n        }\n        this.allClosed = true;\n    }\n};\n\n// 'finalize' is run when the block is closed.\n// 'continue' is run to check whether the block is continuing\n// at a certain line and offset (e.g. whether a block quote\n// contains a `>`.  It returns 0 for matched, 1 for not matched,\n// and 2 for \"we've dealt with this line completely, go to next.\"\nvar blocks = {\n    document: {\n        continue: function() {\n            return 0;\n        },\n        finalize: function() {\n            return;\n        },\n        canContain: function(t) {\n            return t !== \"item\";\n        },\n        acceptsLines: false\n    },\n    list: {\n        continue: function() {\n            return 0;\n        },\n        finalize: function(parser, block) {\n            var item = block._firstChild;\n            while (item) {\n                // check for non-final list item ending with blank line:\n                if (endsWithBlankLine(item) && item._next) {\n                    block._listData.tight = false;\n                    break;\n                }\n                // recurse into children of list item, to see if there are\n                // spaces between any of them:\n                var subitem = item._firstChild;\n                while (subitem) {\n                    if (\n                        endsWithBlankLine(subitem) &&\n                        (item._next || subitem._next)\n                    ) {\n                        block._listData.tight = false;\n                        break;\n                    }\n                    subitem = subitem._next;\n                }\n                item = item._next;\n            }\n        },\n        canContain: function(t) {\n            return t === \"item\";\n        },\n        acceptsLines: false\n    },\n    block_quote: {\n        continue: function(parser) {\n            var ln = parser.currentLine;\n            if (\n                !parser.indented &&\n                peek(ln, parser.nextNonspace) === C_GREATERTHAN\n            ) {\n                parser.advanceNextNonspace();\n                parser.advanceOffset(1, false);\n                if (isSpaceOrTab(peek(ln, parser.offset))) {\n                    parser.advanceOffset(1, true);\n                }\n            } else {\n                return 1;\n            }\n            return 0;\n        },\n        finalize: function() {\n            return;\n        },\n        canContain: function(t) {\n            return t !== \"item\";\n        },\n        acceptsLines: false\n    },\n    item: {\n        continue: function(parser, container) {\n            if (parser.blank) {\n                if (container._firstChild == null) {\n                    // Blank line after empty list item\n                    return 1;\n                } else {\n                    parser.advanceNextNonspace();\n                }\n            } else if (\n                parser.indent >=\n                container._listData.markerOffset + container._listData.padding\n            ) {\n                parser.advanceOffset(\n                    container._listData.markerOffset +\n                        container._listData.padding,\n                    true\n                );\n            } else {\n                return 1;\n            }\n            return 0;\n        },\n        finalize: function() {\n            return;\n        },\n        canContain: function(t) {\n            return t !== \"item\";\n        },\n        acceptsLines: false\n    },\n    heading: {\n        continue: function() {\n            // a heading can never container > 1 line, so fail to match:\n            return 1;\n        },\n        finalize: function() {\n            return;\n        },\n        canContain: function() {\n            return false;\n        },\n        acceptsLines: false\n    },\n    thematic_break: {\n        continue: function() {\n            // a thematic break can never container > 1 line, so fail to match:\n            return 1;\n        },\n        finalize: function() {\n            return;\n        },\n        canContain: function() {\n            return false;\n        },\n        acceptsLines: false\n    },\n    code_block: {\n        continue: function(parser, container) {\n            var ln = parser.currentLine;\n            var indent = parser.indent;\n            if (container._isFenced) {\n                // fenced\n                var match =\n                    indent <= 3 &&\n                    ln.charAt(parser.nextNonspace) === container._fenceChar &&\n                    ln.slice(parser.nextNonspace).match(reClosingCodeFence);\n                if (match && match[0].length >= container._fenceLength) {\n                    // closing fence - we're at end of line, so we can return\n                    parser.lastLineLength =\n                        parser.offset + indent + match[0].length;\n                    parser.finalize(container, parser.lineNumber);\n                    return 2;\n                } else {\n                    // skip optional spaces of fence offset\n                    var i = container._fenceOffset;\n                    while (i > 0 && isSpaceOrTab(peek(ln, parser.offset))) {\n                        parser.advanceOffset(1, true);\n                        i--;\n                    }\n                }\n            } else {\n                // indented\n                if (indent >= CODE_INDENT) {\n                    parser.advanceOffset(CODE_INDENT, true);\n                } else if (parser.blank) {\n                    parser.advanceNextNonspace();\n                } else {\n                    return 1;\n                }\n            }\n            return 0;\n        },\n        finalize: function(parser, block) {\n            if (block._isFenced) {\n                // fenced\n                // first line becomes info string\n                var content = block._string_content;\n                var newlinePos = content.indexOf(\"\\n\");\n                var firstLine = content.slice(0, newlinePos);\n                var rest = content.slice(newlinePos + 1);\n                block.info = unescapeString(firstLine.trim());\n                block._literal = rest;\n            } else {\n                // indented\n                block._literal = block._string_content.replace(\n                    /(\\n *)+$/,\n                    \"\\n\"\n                );\n            }\n            block._string_content = null; // allow GC\n        },\n        canContain: function() {\n            return false;\n        },\n        acceptsLines: true\n    },\n    html_block: {\n        continue: function(parser, container) {\n            return parser.blank &&\n                (container._htmlBlockType === 6 ||\n                    container._htmlBlockType === 7)\n                ? 1\n                : 0;\n        },\n        finalize: function(parser, block) {\n            block._literal = block._string_content.replace(/(\\n *)+$/, \"\");\n            block._string_content = null; // allow GC\n        },\n        canContain: function() {\n            return false;\n        },\n        acceptsLines: true\n    },\n    paragraph: {\n        continue: function(parser) {\n            return parser.blank ? 1 : 0;\n        },\n        finalize: function(parser, block) {\n            var pos;\n            var hasReferenceDefs = false;\n\n            // try parsing the beginning as link reference definitions:\n            while (\n                peek(block._string_content, 0) === C_OPEN_BRACKET &&\n                (pos = parser.inlineParser.parseReference(\n                    block._string_content,\n                    parser.refmap\n                ))\n            ) {\n                block._string_content = block._string_content.slice(pos);\n                hasReferenceDefs = true;\n            }\n            if (hasReferenceDefs && isBlank(block._string_content)) {\n                block.unlink();\n            }\n        },\n        canContain: function() {\n            return false;\n        },\n        acceptsLines: true\n    }\n};\n\n// block start functions.  Return values:\n// 0 = no match\n// 1 = matched container, keep going\n// 2 = matched leaf, no more block starts\nvar blockStarts = [\n    // block quote\n    function(parser) {\n        if (\n            !parser.indented &&\n            peek(parser.currentLine, parser.nextNonspace) === C_GREATERTHAN\n        ) {\n            parser.advanceNextNonspace();\n            parser.advanceOffset(1, false);\n            // optional following space\n            if (isSpaceOrTab(peek(parser.currentLine, parser.offset))) {\n                parser.advanceOffset(1, true);\n            }\n            parser.closeUnmatchedBlocks();\n            parser.addChild(\"block_quote\", parser.nextNonspace);\n            return 1;\n        } else {\n            return 0;\n        }\n    },\n\n    // ATX heading\n    function(parser) {\n        var match;\n        if (\n            !parser.indented &&\n            (match = parser.currentLine\n                .slice(parser.nextNonspace)\n                .match(reATXHeadingMarker))\n        ) {\n            parser.advanceNextNonspace();\n            parser.advanceOffset(match[0].length, false);\n            parser.closeUnmatchedBlocks();\n            var container = parser.addChild(\"heading\", parser.nextNonspace);\n            container.level = match[0].trim().length; // number of #s\n            // remove trailing ###s:\n            container._string_content = parser.currentLine\n                .slice(parser.offset)\n                .replace(/^[ \\t]*#+[ \\t]*$/, \"\")\n                .replace(/[ \\t]+#+[ \\t]*$/, \"\");\n            parser.advanceOffset(parser.currentLine.length - parser.offset);\n            return 2;\n        } else {\n            return 0;\n        }\n    },\n\n    // Fenced code block\n    function(parser) {\n        var match;\n        if (\n            !parser.indented &&\n            (match = parser.currentLine\n                .slice(parser.nextNonspace)\n                .match(reCodeFence))\n        ) {\n            var fenceLength = match[0].length;\n            parser.closeUnmatchedBlocks();\n            var container = parser.addChild(\"code_block\", parser.nextNonspace);\n            container._isFenced = true;\n            container._fenceLength = fenceLength;\n            container._fenceChar = match[0][0];\n            container._fenceOffset = parser.indent;\n            parser.advanceNextNonspace();\n            parser.advanceOffset(fenceLength, false);\n            return 2;\n        } else {\n            return 0;\n        }\n    },\n\n    // HTML block\n    function(parser, container) {\n        if (\n            !parser.indented &&\n            peek(parser.currentLine, parser.nextNonspace) === C_LESSTHAN\n        ) {\n            var s = parser.currentLine.slice(parser.nextNonspace);\n            var blockType;\n\n            for (blockType = 1; blockType <= 7; blockType++) {\n                if (\n                    reHtmlBlockOpen[blockType].test(s) &&\n                    (blockType < 7 || container.type !== \"paragraph\")\n                ) {\n                    parser.closeUnmatchedBlocks();\n                    // We don't adjust parser.offset;\n                    // spaces are part of the HTML block:\n                    var b = parser.addChild(\"html_block\", parser.offset);\n                    b._htmlBlockType = blockType;\n                    return 2;\n                }\n            }\n        }\n\n        return 0;\n    },\n\n    // Setext heading\n    function(parser, container) {\n        var match;\n        if (\n            !parser.indented &&\n            container.type === \"paragraph\" &&\n            (match = parser.currentLine\n                .slice(parser.nextNonspace)\n                .match(reSetextHeadingLine))\n        ) {\n            parser.closeUnmatchedBlocks();\n            // resolve reference link definitiosn\n            var pos;\n            while (\n                peek(container._string_content, 0) === C_OPEN_BRACKET &&\n                (pos = parser.inlineParser.parseReference(\n                    container._string_content,\n                    parser.refmap\n                ))\n            ) {\n                container._string_content = container._string_content.slice(\n                    pos\n                );\n            }\n            if (container._string_content.length > 0) {\n                var heading = new Node(\"heading\", container.sourcepos);\n                heading.level = match[0][0] === \"=\" ? 1 : 2;\n                heading._string_content = container._string_content;\n                container.insertAfter(heading);\n                container.unlink();\n                parser.tip = heading;\n                parser.advanceOffset(\n                    parser.currentLine.length - parser.offset,\n                    false\n                );\n                return 2;\n            } else {\n                return 0;\n            }\n        } else {\n            return 0;\n        }\n    },\n\n    // thematic break\n    function(parser) {\n        if (\n            !parser.indented &&\n            reThematicBreak.test(parser.currentLine.slice(parser.nextNonspace))\n        ) {\n            parser.closeUnmatchedBlocks();\n            parser.addChild(\"thematic_break\", parser.nextNonspace);\n            parser.advanceOffset(\n                parser.currentLine.length - parser.offset,\n                false\n            );\n            return 2;\n        } else {\n            return 0;\n        }\n    },\n\n    // list item\n    function(parser, container) {\n        var data;\n\n        if (\n            (!parser.indented || container.type === \"list\") &&\n            (data = parseListMarker(parser, container))\n        ) {\n            parser.closeUnmatchedBlocks();\n\n            // add the list if needed\n            if (\n                parser.tip.type !== \"list\" ||\n                !listsMatch(container._listData, data)\n            ) {\n                container = parser.addChild(\"list\", parser.nextNonspace);\n                container._listData = data;\n            }\n\n            // add the list item\n            container = parser.addChild(\"item\", parser.nextNonspace);\n            container._listData = data;\n            return 1;\n        } else {\n            return 0;\n        }\n    },\n\n    // indented code block\n    function(parser) {\n        if (\n            parser.indented &&\n            parser.tip.type !== \"paragraph\" &&\n            !parser.blank\n        ) {\n            // indented code\n            parser.advanceOffset(CODE_INDENT, true);\n            parser.closeUnmatchedBlocks();\n            parser.addChild(\"code_block\", parser.offset);\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n];\n\nvar advanceOffset = function(count, columns) {\n    var currentLine = this.currentLine;\n    var charsToTab, charsToAdvance;\n    var c;\n    while (count > 0 && (c = currentLine[this.offset])) {\n        if (c === \"\\t\") {\n            charsToTab = 4 - (this.column % 4);\n            if (columns) {\n                this.partiallyConsumedTab = charsToTab > count;\n                charsToAdvance = charsToTab > count ? count : charsToTab;\n                this.column += charsToAdvance;\n                this.offset += this.partiallyConsumedTab ? 0 : 1;\n                count -= charsToAdvance;\n            } else {\n                this.partiallyConsumedTab = false;\n                this.column += charsToTab;\n                this.offset += 1;\n                count -= 1;\n            }\n        } else {\n            this.partiallyConsumedTab = false;\n            this.offset += 1;\n            this.column += 1; // assume ascii; block starts are ascii\n            count -= 1;\n        }\n    }\n};\n\nvar advanceNextNonspace = function() {\n    this.offset = this.nextNonspace;\n    this.column = this.nextNonspaceColumn;\n    this.partiallyConsumedTab = false;\n};\n\nvar findNextNonspace = function() {\n    var currentLine = this.currentLine;\n    var i = this.offset;\n    var cols = this.column;\n    var c;\n\n    while ((c = currentLine.charAt(i)) !== \"\") {\n        if (c === \" \") {\n            i++;\n            cols++;\n        } else if (c === \"\\t\") {\n            i++;\n            cols += 4 - (cols % 4);\n        } else {\n            break;\n        }\n    }\n    this.blank = c === \"\\n\" || c === \"\\r\" || c === \"\";\n    this.nextNonspace = i;\n    this.nextNonspaceColumn = cols;\n    this.indent = this.nextNonspaceColumn - this.column;\n    this.indented = this.indent >= CODE_INDENT;\n};\n\n// Analyze a line of text and update the document appropriately.\n// We parse markdown text by calling this on each line of input,\n// then finalizing the document.\nvar incorporateLine = function(ln) {\n    var all_matched = true;\n    var t;\n\n    var container = this.doc;\n    this.oldtip = this.tip;\n    this.offset = 0;\n    this.column = 0;\n    this.blank = false;\n    this.partiallyConsumedTab = false;\n    this.lineNumber += 1;\n\n    // replace NUL characters for security\n    if (ln.indexOf(\"\\u0000\") !== -1) {\n        ln = ln.replace(/\\0/g, \"\\uFFFD\");\n    }\n\n    this.currentLine = ln;\n\n    // For each containing block, try to parse the associated line start.\n    // Bail out on failure: container will point to the last matching block.\n    // Set all_matched to false if not all containers match.\n    var lastChild;\n    while ((lastChild = container._lastChild) && lastChild._open) {\n        container = lastChild;\n\n        this.findNextNonspace();\n\n        switch (this.blocks[container.type].continue(this, container)) {\n            case 0: // we've matched, keep going\n                break;\n            case 1: // we've failed to match a block\n                all_matched = false;\n                break;\n            case 2: // we've hit end of line for fenced code close and can return\n                return;\n            default:\n                throw \"continue returned illegal value, must be 0, 1, or 2\";\n        }\n        if (!all_matched) {\n            container = container._parent; // back up to last matching block\n            break;\n        }\n    }\n\n    this.allClosed = container === this.oldtip;\n    this.lastMatchedContainer = container;\n\n    var matchedLeaf =\n        container.type !== \"paragraph\" && blocks[container.type].acceptsLines;\n    var starts = this.blockStarts;\n    var startsLen = starts.length;\n    // Unless last matched container is a code block, try new container starts,\n    // adding children to the last matched container:\n    while (!matchedLeaf) {\n        this.findNextNonspace();\n\n        // this is a little performance optimization:\n        if (\n            !this.indented &&\n            !reMaybeSpecial.test(ln.slice(this.nextNonspace))\n        ) {\n            this.advanceNextNonspace();\n            break;\n        }\n\n        var i = 0;\n        while (i < startsLen) {\n            var res = starts[i](this, container);\n            if (res === 1) {\n                container = this.tip;\n                break;\n            } else if (res === 2) {\n                container = this.tip;\n                matchedLeaf = true;\n                break;\n            } else {\n                i++;\n            }\n        }\n\n        if (i === startsLen) {\n            // nothing matched\n            this.advanceNextNonspace();\n            break;\n        }\n    }\n\n    // What remains at the offset is a text line.  Add the text to the\n    // appropriate container.\n\n    // First check for a lazy paragraph continuation:\n    if (!this.allClosed && !this.blank && this.tip.type === \"paragraph\") {\n        // lazy paragraph continuation\n        this.addLine();\n    } else {\n        // not a lazy continuation\n\n        // finalize any blocks not matched\n        this.closeUnmatchedBlocks();\n        if (this.blank && container.lastChild) {\n            container.lastChild._lastLineBlank = true;\n        }\n\n        t = container.type;\n\n        // Block quote lines are never blank as they start with >\n        // and we don't count blanks in fenced code for purposes of tight/loose\n        // lists or breaking out of lists.  We also don't set _lastLineBlank\n        // on an empty list item, or if we just closed a fenced block.\n        var lastLineBlank =\n            this.blank &&\n            !(\n                t === \"block_quote\" ||\n                (t === \"code_block\" && container._isFenced) ||\n                (t === \"item\" &&\n                    !container._firstChild &&\n                    container.sourcepos[0][0] === this.lineNumber)\n            );\n\n        // propagate lastLineBlank up through parents:\n        var cont = container;\n        while (cont) {\n            cont._lastLineBlank = lastLineBlank;\n            cont = cont._parent;\n        }\n\n        if (this.blocks[t].acceptsLines) {\n            this.addLine();\n            // if HtmlBlock, check for end condition\n            if (\n                t === \"html_block\" &&\n                container._htmlBlockType >= 1 &&\n                container._htmlBlockType <= 5 &&\n                reHtmlBlockClose[container._htmlBlockType].test(\n                    this.currentLine.slice(this.offset)\n                )\n            ) {\n                this.lastLineLength = ln.length;\n                this.finalize(container, this.lineNumber);\n            }\n        } else if (this.offset < ln.length && !this.blank) {\n            // create paragraph container for line\n            container = this.addChild(\"paragraph\", this.offset);\n            this.advanceNextNonspace();\n            this.addLine();\n        }\n    }\n    this.lastLineLength = ln.length;\n};\n\n// Finalize a block.  Close it and do any necessary postprocessing,\n// e.g. creating string_content from strings, setting the 'tight'\n// or 'loose' status of a list, and parsing the beginnings\n// of paragraphs for reference definitions.  Reset the tip to the\n// parent of the closed block.\nvar finalize = function(block, lineNumber) {\n    var above = block._parent;\n    block._open = false;\n    block.sourcepos[1] = [lineNumber, this.lastLineLength];\n\n    this.blocks[block.type].finalize(this, block);\n\n    this.tip = above;\n};\n\n// Walk through a block & children recursively, parsing string content\n// into inline content where appropriate.\nvar processInlines = function(block) {\n    var node, event, t;\n    var walker = block.walker();\n    this.inlineParser.refmap = this.refmap;\n    this.inlineParser.options = this.options;\n    while ((event = walker.next())) {\n        node = event.node;\n        t = node.type;\n        if (!event.entering && (t === \"paragraph\" || t === \"heading\")) {\n            this.inlineParser.parse(node);\n        }\n    }\n};\n\nvar Document = function() {\n    var doc = new Node(\"document\", [\n        [1, 1],\n        [0, 0]\n    ]);\n    return doc;\n};\n\n// The main parsing function.  Returns a parsed document AST.\nvar parse = function(input) {\n    this.doc = new Document();\n    this.tip = this.doc;\n    this.refmap = {};\n    this.lineNumber = 0;\n    this.lastLineLength = 0;\n    this.offset = 0;\n    this.column = 0;\n    this.lastMatchedContainer = this.doc;\n    this.currentLine = \"\";\n    if (this.options.time) {\n        console.time(\"preparing input\");\n    }\n    var lines = input.split(reLineEnding);\n    var len = lines.length;\n    if (input.charCodeAt(input.length - 1) === C_NEWLINE) {\n        // ignore last blank line created by final newline\n        len -= 1;\n    }\n    if (this.options.time) {\n        console.timeEnd(\"preparing input\");\n    }\n    if (this.options.time) {\n        console.time(\"block parsing\");\n    }\n    for (var i = 0; i < len; i++) {\n        this.incorporateLine(lines[i]);\n    }\n    while (this.tip) {\n        this.finalize(this.tip, len);\n    }\n    if (this.options.time) {\n        console.timeEnd(\"block parsing\");\n    }\n    if (this.options.time) {\n        console.time(\"inline parsing\");\n    }\n    this.processInlines(this.doc);\n    if (this.options.time) {\n        console.timeEnd(\"inline parsing\");\n    }\n    return this.doc;\n};\n\n// The Parser object.\nfunction Parser(options) {\n    return {\n        doc: new Document(),\n        blocks: blocks,\n        blockStarts: blockStarts,\n        tip: this.doc,\n        oldtip: this.doc,\n        currentLine: \"\",\n        lineNumber: 0,\n        offset: 0,\n        column: 0,\n        nextNonspace: 0,\n        nextNonspaceColumn: 0,\n        indent: 0,\n        indented: false,\n        blank: false,\n        partiallyConsumedTab: false,\n        allClosed: true,\n        lastMatchedContainer: this.doc,\n        refmap: {},\n        lastLineLength: 0,\n        inlineParser: new InlineParser(options),\n        findNextNonspace: findNextNonspace,\n        advanceOffset: advanceOffset,\n        advanceNextNonspace: advanceNextNonspace,\n        addLine: addLine,\n        addChild: addChild,\n        incorporateLine: incorporateLine,\n        finalize: finalize,\n        processInlines: processInlines,\n        closeUnmatchedBlocks: closeUnmatchedBlocks,\n        parse: parse,\n        options: options || {}\n    };\n}\n\nexport default Parser;\n","\"use strict\";\n\nfunction Renderer() {}\n\n/**\n *  Walks the AST and calls member methods for each Node type.\n *\n *  @param ast {Node} The root of the abstract syntax tree.\n */\nfunction render(ast) {\n    var walker = ast.walker(),\n        event,\n        type;\n\n    this.buffer = \"\";\n    this.lastOut = \"\\n\";\n\n    while ((event = walker.next())) {\n        type = event.node.type;\n        if (this[type]) {\n            this[type](event.node, event.entering);\n        }\n    }\n    return this.buffer;\n}\n\n/**\n *  Concatenate a literal string to the buffer.\n *\n *  @param str {String} The string to concatenate.\n */\nfunction lit(str) {\n    this.buffer += str;\n    this.lastOut = str;\n}\n\n/**\n *  Output a newline to the buffer.\n */\nfunction cr() {\n    if (this.lastOut !== \"\\n\") {\n        this.lit(\"\\n\");\n    }\n}\n\n/**\n *  Concatenate a string to the buffer possibly escaping the content.\n *\n *  Concrete renderer implementations should override this method.\n *\n *  @param str {String} The string to concatenate.\n */\nfunction out(str) {\n    this.lit(str);\n}\n\n/**\n *  Escape a string for the target renderer.\n *\n *  Abstract function that should be implemented by concrete\n *  renderer implementations.\n *\n *  @param str {String} The string to escape.\n */\nfunction esc(str) {\n    return str;\n}\n\nRenderer.prototype.render = render;\nRenderer.prototype.out = out;\nRenderer.prototype.lit = lit;\nRenderer.prototype.cr = cr;\nRenderer.prototype.esc = esc;\n\nexport default Renderer;\n","\"use strict\";\n\nimport { escapeXml } from \"../common.js\";\nimport Renderer from \"./renderer.js\";\n\nvar reUnsafeProtocol = /^javascript:|vbscript:|file:|data:/i;\nvar reSafeDataProtocol = /^data:image\\/(?:png|gif|jpeg|webp)/i;\n\nvar potentiallyUnsafe = function(url) {\n    return reUnsafeProtocol.test(url) && !reSafeDataProtocol.test(url);\n};\n\n// Helper function to produce an HTML tag.\nfunction tag(name, attrs, selfclosing) {\n    if (this.disableTags > 0) {\n        return;\n    }\n    this.buffer += \"<\" + name;\n    if (attrs && attrs.length > 0) {\n        var i = 0;\n        var attrib;\n        while ((attrib = attrs[i]) !== undefined) {\n            this.buffer += \" \" + attrib[0] + '=\"' + attrib[1] + '\"';\n            i++;\n        }\n    }\n    if (selfclosing) {\n        this.buffer += \" /\";\n    }\n    this.buffer += \">\";\n    this.lastOut = \">\";\n}\n\nfunction HtmlRenderer(options) {\n    options = options || {};\n    // by default, soft breaks are rendered as newlines in HTML\n    options.softbreak = options.softbreak || \"\\n\";\n    // set to \"<br />\" to make them hard breaks\n    // set to \" \" if you want to ignore line wrapping in source\n\n    this.disableTags = 0;\n    this.lastOut = \"\\n\";\n    this.options = options;\n}\n\n/* Node methods */\n\nfunction text(node) {\n    this.out(node.literal);\n}\n\nfunction softbreak() {\n    this.lit(this.options.softbreak);\n}\n\nfunction linebreak() {\n    this.tag(\"br\", [], true);\n    this.cr();\n}\n\nfunction link(node, entering) {\n    var attrs = this.attrs(node);\n    if (entering) {\n        if (!(this.options.safe && potentiallyUnsafe(node.destination))) {\n            attrs.push([\"href\", this.esc(node.destination)]);\n        }\n        if (node.title) {\n            attrs.push([\"title\", this.esc(node.title)]);\n        }\n        this.tag(\"a\", attrs);\n    } else {\n        this.tag(\"/a\");\n    }\n}\n\nfunction image(node, entering) {\n    if (entering) {\n        if (this.disableTags === 0) {\n            if (this.options.safe && potentiallyUnsafe(node.destination)) {\n                this.lit('<img src=\"\" alt=\"');\n            } else {\n                this.lit('<img src=\"' + this.esc(node.destination) + '\" alt=\"');\n            }\n        }\n        this.disableTags += 1;\n    } else {\n        this.disableTags -= 1;\n        if (this.disableTags === 0) {\n            if (node.title) {\n                this.lit('\" title=\"' + this.esc(node.title));\n            }\n            this.lit('\" />');\n        }\n    }\n}\n\nfunction emph(node, entering) {\n    this.tag(entering ? \"em\" : \"/em\");\n}\n\nfunction strong(node, entering) {\n    this.tag(entering ? \"strong\" : \"/strong\");\n}\n\nfunction paragraph(node, entering) {\n    var grandparent = node.parent.parent,\n        attrs = this.attrs(node);\n    if (grandparent !== null && grandparent.type === \"list\") {\n        if (grandparent.listTight) {\n            return;\n        }\n    }\n    if (entering) {\n        this.cr();\n        this.tag(\"p\", attrs);\n    } else {\n        this.tag(\"/p\");\n        this.cr();\n    }\n}\n\nfunction heading(node, entering) {\n    var tagname = \"h\" + node.level,\n        attrs = this.attrs(node);\n    if (entering) {\n        this.cr();\n        this.tag(tagname, attrs);\n    } else {\n        this.tag(\"/\" + tagname);\n        this.cr();\n    }\n}\n\nfunction code(node) {\n    this.tag(\"code\");\n    this.out(node.literal);\n    this.tag(\"/code\");\n}\n\nfunction code_block(node) {\n    var info_words = node.info ? node.info.split(/\\s+/) : [],\n        attrs = this.attrs(node);\n    if (info_words.length > 0 && info_words[0].length > 0) {\n        attrs.push([\"class\", \"language-\" + this.esc(info_words[0])]);\n    }\n    this.cr();\n    this.tag(\"pre\");\n    this.tag(\"code\", attrs);\n    this.out(node.literal);\n    this.tag(\"/code\");\n    this.tag(\"/pre\");\n    this.cr();\n}\n\nfunction thematic_break(node) {\n    var attrs = this.attrs(node);\n    this.cr();\n    this.tag(\"hr\", attrs, true);\n    this.cr();\n}\n\nfunction block_quote(node, entering) {\n    var attrs = this.attrs(node);\n    if (entering) {\n        this.cr();\n        this.tag(\"blockquote\", attrs);\n        this.cr();\n    } else {\n        this.cr();\n        this.tag(\"/blockquote\");\n        this.cr();\n    }\n}\n\nfunction list(node, entering) {\n    var tagname = node.listType === \"bullet\" ? \"ul\" : \"ol\",\n        attrs = this.attrs(node);\n\n    if (entering) {\n        var start = node.listStart;\n        if (start !== null && start !== 1) {\n            attrs.push([\"start\", start.toString()]);\n        }\n        this.cr();\n        this.tag(tagname, attrs);\n        this.cr();\n    } else {\n        this.cr();\n        this.tag(\"/\" + tagname);\n        this.cr();\n    }\n}\n\nfunction item(node, entering) {\n    var attrs = this.attrs(node);\n    if (entering) {\n        this.tag(\"li\", attrs);\n    } else {\n        this.tag(\"/li\");\n        this.cr();\n    }\n}\n\nfunction html_inline(node) {\n    if (this.options.safe) {\n        this.lit(\"<!-- raw HTML omitted -->\");\n    } else {\n        this.lit(node.literal);\n    }\n}\n\nfunction html_block(node) {\n    this.cr();\n    if (this.options.safe) {\n        this.lit(\"<!-- raw HTML omitted -->\");\n    } else {\n        this.lit(node.literal);\n    }\n    this.cr();\n}\n\nfunction custom_inline(node, entering) {\n    if (entering && node.onEnter) {\n        this.lit(node.onEnter);\n    } else if (!entering && node.onExit) {\n        this.lit(node.onExit);\n    }\n}\n\nfunction custom_block(node, entering) {\n    this.cr();\n    if (entering && node.onEnter) {\n        this.lit(node.onEnter);\n    } else if (!entering && node.onExit) {\n        this.lit(node.onExit);\n    }\n    this.cr();\n}\n\n/* Helper methods */\n\nfunction out(s) {\n    this.lit(this.esc(s));\n}\n\nfunction attrs(node) {\n    var att = [];\n    if (this.options.sourcepos) {\n        var pos = node.sourcepos;\n        if (pos) {\n            att.push([\n                \"data-sourcepos\",\n                String(pos[0][0]) +\n                    \":\" +\n                    String(pos[0][1]) +\n                    \"-\" +\n                    String(pos[1][0]) +\n                    \":\" +\n                    String(pos[1][1])\n            ]);\n        }\n    }\n    return att;\n}\n\n// quick browser-compatible inheritance\nHtmlRenderer.prototype = Object.create(Renderer.prototype);\n\nHtmlRenderer.prototype.text = text;\nHtmlRenderer.prototype.html_inline = html_inline;\nHtmlRenderer.prototype.html_block = html_block;\nHtmlRenderer.prototype.softbreak = softbreak;\nHtmlRenderer.prototype.linebreak = linebreak;\nHtmlRenderer.prototype.link = link;\nHtmlRenderer.prototype.image = image;\nHtmlRenderer.prototype.emph = emph;\nHtmlRenderer.prototype.strong = strong;\nHtmlRenderer.prototype.paragraph = paragraph;\nHtmlRenderer.prototype.heading = heading;\nHtmlRenderer.prototype.code = code;\nHtmlRenderer.prototype.code_block = code_block;\nHtmlRenderer.prototype.thematic_break = thematic_break;\nHtmlRenderer.prototype.block_quote = block_quote;\nHtmlRenderer.prototype.list = list;\nHtmlRenderer.prototype.item = item;\nHtmlRenderer.prototype.custom_inline = custom_inline;\nHtmlRenderer.prototype.custom_block = custom_block;\n\nHtmlRenderer.prototype.esc = escapeXml;\n\nHtmlRenderer.prototype.out = out;\nHtmlRenderer.prototype.tag = tag;\nHtmlRenderer.prototype.attrs = attrs;\n\nexport default HtmlRenderer;\n","\"use strict\";\n\nimport Renderer from \"./renderer.js\";\nimport { escapeXml } from \"../common.js\";\n\nvar reXMLTag = /\\<[^>]*\\>/;\n\nfunction toTagName(s) {\n    return s.replace(/([a-z])([A-Z])/g, \"$1_$2\").toLowerCase();\n}\n\nfunction XmlRenderer(options) {\n    options = options || {};\n\n    this.disableTags = 0;\n    this.lastOut = \"\\n\";\n\n    this.indentLevel = 0;\n    this.indent = \"  \";\n\n    this.options = options;\n}\n\nfunction render(ast) {\n    this.buffer = \"\";\n\n    var attrs;\n    var tagname;\n    var walker = ast.walker();\n    var event, node, entering;\n    var container;\n    var selfClosing;\n    var nodetype;\n\n    var options = this.options;\n\n    if (options.time) {\n        console.time(\"rendering\");\n    }\n\n    this.buffer += '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n';\n    this.buffer += '<!DOCTYPE document SYSTEM \"CommonMark.dtd\">\\n';\n\n    while ((event = walker.next())) {\n        entering = event.entering;\n        node = event.node;\n        nodetype = node.type;\n\n        container = node.isContainer;\n\n        selfClosing =\n            nodetype === \"thematic_break\" ||\n            nodetype === \"linebreak\" ||\n            nodetype === \"softbreak\";\n\n        tagname = toTagName(nodetype);\n\n        if (entering) {\n            attrs = [];\n\n            switch (nodetype) {\n                case \"document\":\n                    attrs.push([\"xmlns\", \"http://commonmark.org/xml/1.0\"]);\n                    break;\n                case \"list\":\n                    if (node.listType !== null) {\n                        attrs.push([\"type\", node.listType.toLowerCase()]);\n                    }\n                    if (node.listStart !== null) {\n                        attrs.push([\"start\", String(node.listStart)]);\n                    }\n                    if (node.listTight !== null) {\n                        attrs.push([\n                            \"tight\",\n                            node.listTight ? \"true\" : \"false\"\n                        ]);\n                    }\n                    var delim = node.listDelimiter;\n                    if (delim !== null) {\n                        var delimword = \"\";\n                        if (delim === \".\") {\n                            delimword = \"period\";\n                        } else {\n                            delimword = \"paren\";\n                        }\n                        attrs.push([\"delimiter\", delimword]);\n                    }\n                    break;\n                case \"code_block\":\n                    if (node.info) {\n                        attrs.push([\"info\", node.info]);\n                    }\n                    break;\n                case \"heading\":\n                    attrs.push([\"level\", String(node.level)]);\n                    break;\n                case \"link\":\n                case \"image\":\n                    attrs.push([\"destination\", node.destination]);\n                    attrs.push([\"title\", node.title]);\n                    break;\n                case \"custom_inline\":\n                case \"custom_block\":\n                    attrs.push([\"on_enter\", node.onEnter]);\n                    attrs.push([\"on_exit\", node.onExit]);\n                    break;\n                default:\n                    break;\n            }\n            if (options.sourcepos) {\n                var pos = node.sourcepos;\n                if (pos) {\n                    attrs.push([\n                        \"sourcepos\",\n                        String(pos[0][0]) +\n                            \":\" +\n                            String(pos[0][1]) +\n                            \"-\" +\n                            String(pos[1][0]) +\n                            \":\" +\n                            String(pos[1][1])\n                    ]);\n                }\n            }\n\n            this.cr();\n            this.out(this.tag(tagname, attrs, selfClosing));\n            if (container) {\n                this.indentLevel += 1;\n            } else if (!container && !selfClosing) {\n                var lit = node.literal;\n                if (lit) {\n                    this.out(this.esc(lit));\n                }\n                this.out(this.tag(\"/\" + tagname));\n            }\n        } else {\n            this.indentLevel -= 1;\n            this.cr();\n            this.out(this.tag(\"/\" + tagname));\n        }\n    }\n    if (options.time) {\n        console.timeEnd(\"rendering\");\n    }\n    this.buffer += \"\\n\";\n    return this.buffer;\n}\n\nfunction out(s) {\n    if (this.disableTags > 0) {\n        this.buffer += s.replace(reXMLTag, \"\");\n    } else {\n        this.buffer += s;\n    }\n    this.lastOut = s;\n}\n\nfunction cr() {\n    if (this.lastOut !== \"\\n\") {\n        this.buffer += \"\\n\";\n        this.lastOut = \"\\n\";\n        for (var i = this.indentLevel; i > 0; i--) {\n            this.buffer += this.indent;\n        }\n    }\n}\n\n// Helper function to produce an XML tag.\nfunction tag(name, attrs, selfclosing) {\n    var result = \"<\" + name;\n    if (attrs && attrs.length > 0) {\n        var i = 0;\n        var attrib;\n        while ((attrib = attrs[i]) !== undefined) {\n            result += \" \" + attrib[0] + '=\"' + this.esc(attrib[1]) + '\"';\n            i++;\n        }\n    }\n    if (selfclosing) {\n        result += \" /\";\n    }\n    result += \">\";\n    return result;\n}\n\n// quick browser-compatible inheritance\nXmlRenderer.prototype = Object.create(Renderer.prototype);\n\nXmlRenderer.prototype.render = render;\nXmlRenderer.prototype.out = out;\nXmlRenderer.prototype.cr = cr;\nXmlRenderer.prototype.tag = tag;\nXmlRenderer.prototype.esc = escapeXml;\n\nexport default XmlRenderer;\n","'use strict';\nvar NATIVE_ARRAY_BUFFER = require('../internals/array-buffer-native');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar hasOwn = require('../internals/has-own-property');\nvar classof = require('../internals/classof');\nvar tryToString = require('../internals/try-to-string');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar defineProperty = require('../internals/object-define-property').f;\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar uid = require('../internals/uid');\n\nvar Int8Array = global.Int8Array;\nvar Int8ArrayPrototype = Int8Array && Int8Array.prototype;\nvar Uint8ClampedArray = global.Uint8ClampedArray;\nvar Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;\nvar TypedArray = Int8Array && getPrototypeOf(Int8Array);\nvar TypedArrayPrototype = Int8ArrayPrototype && getPrototypeOf(Int8ArrayPrototype);\nvar ObjectPrototype = Object.prototype;\nvar TypeError = global.TypeError;\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar TYPED_ARRAY_TAG = uid('TYPED_ARRAY_TAG');\nvar TYPED_ARRAY_CONSTRUCTOR = uid('TYPED_ARRAY_CONSTRUCTOR');\n// Fixing native typed arrays in Opera Presto crashes the browser, see #595\nvar NATIVE_ARRAY_BUFFER_VIEWS = NATIVE_ARRAY_BUFFER && !!setPrototypeOf && classof(global.opera) !== 'Opera';\nvar TYPED_ARRAY_TAG_REQUIRED = false;\nvar NAME, Constructor, Prototype;\n\nvar TypedArrayConstructorsList = {\n  Int8Array: 1,\n  Uint8Array: 1,\n  Uint8ClampedArray: 1,\n  Int16Array: 2,\n  Uint16Array: 2,\n  Int32Array: 4,\n  Uint32Array: 4,\n  Float32Array: 4,\n  Float64Array: 8\n};\n\nvar BigIntArrayConstructorsList = {\n  BigInt64Array: 8,\n  BigUint64Array: 8\n};\n\nvar isView = function isView(it) {\n  if (!isObject(it)) return false;\n  var klass = classof(it);\n  return klass === 'DataView'\n    || hasOwn(TypedArrayConstructorsList, klass)\n    || hasOwn(BigIntArrayConstructorsList, klass);\n};\n\nvar isTypedArray = function (it) {\n  if (!isObject(it)) return false;\n  var klass = classof(it);\n  return hasOwn(TypedArrayConstructorsList, klass)\n    || hasOwn(BigIntArrayConstructorsList, klass);\n};\n\nvar aTypedArray = function (it) {\n  if (isTypedArray(it)) return it;\n  throw TypeError('Target is not a typed array');\n};\n\nvar aTypedArrayConstructor = function (C) {\n  if (isCallable(C) && (!setPrototypeOf || isPrototypeOf(TypedArray, C))) return C;\n  throw TypeError(tryToString(C) + ' is not a typed array constructor');\n};\n\nvar exportTypedArrayMethod = function (KEY, property, forced, options) {\n  if (!DESCRIPTORS) return;\n  if (forced) for (var ARRAY in TypedArrayConstructorsList) {\n    var TypedArrayConstructor = global[ARRAY];\n    if (TypedArrayConstructor && hasOwn(TypedArrayConstructor.prototype, KEY)) try {\n      delete TypedArrayConstructor.prototype[KEY];\n    } catch (error) {\n      // old WebKit bug - some methods are non-configurable\n      try {\n        TypedArrayConstructor.prototype[KEY] = property;\n      } catch (error2) { /* empty */ }\n    }\n  }\n  if (!TypedArrayPrototype[KEY] || forced) {\n    defineBuiltIn(TypedArrayPrototype, KEY, forced ? property\n      : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property, options);\n  }\n};\n\nvar exportTypedArrayStaticMethod = function (KEY, property, forced) {\n  var ARRAY, TypedArrayConstructor;\n  if (!DESCRIPTORS) return;\n  if (setPrototypeOf) {\n    if (forced) for (ARRAY in TypedArrayConstructorsList) {\n      TypedArrayConstructor = global[ARRAY];\n      if (TypedArrayConstructor && hasOwn(TypedArrayConstructor, KEY)) try {\n        delete TypedArrayConstructor[KEY];\n      } catch (error) { /* empty */ }\n    }\n    if (!TypedArray[KEY] || forced) {\n      // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable\n      try {\n        return defineBuiltIn(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && TypedArray[KEY] || property);\n      } catch (error) { /* empty */ }\n    } else return;\n  }\n  for (ARRAY in TypedArrayConstructorsList) {\n    TypedArrayConstructor = global[ARRAY];\n    if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {\n      defineBuiltIn(TypedArrayConstructor, KEY, property);\n    }\n  }\n};\n\nfor (NAME in TypedArrayConstructorsList) {\n  Constructor = global[NAME];\n  Prototype = Constructor && Constructor.prototype;\n  if (Prototype) createNonEnumerableProperty(Prototype, TYPED_ARRAY_CONSTRUCTOR, Constructor);\n  else NATIVE_ARRAY_BUFFER_VIEWS = false;\n}\n\nfor (NAME in BigIntArrayConstructorsList) {\n  Constructor = global[NAME];\n  Prototype = Constructor && Constructor.prototype;\n  if (Prototype) createNonEnumerableProperty(Prototype, TYPED_ARRAY_CONSTRUCTOR, Constructor);\n}\n\n// WebKit bug - typed arrays constructors prototype is Object.prototype\nif (!NATIVE_ARRAY_BUFFER_VIEWS || !isCallable(TypedArray) || TypedArray === Function.prototype) {\n  // eslint-disable-next-line no-shadow -- safe\n  TypedArray = function TypedArray() {\n    throw TypeError('Incorrect invocation');\n  };\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (global[NAME]) setPrototypeOf(global[NAME], TypedArray);\n  }\n}\n\nif (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype) {\n  TypedArrayPrototype = TypedArray.prototype;\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (global[NAME]) setPrototypeOf(global[NAME].prototype, TypedArrayPrototype);\n  }\n}\n\n// WebKit bug - one more object in Uint8ClampedArray prototype chain\nif (NATIVE_ARRAY_BUFFER_VIEWS && getPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {\n  setPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);\n}\n\nif (DESCRIPTORS && !hasOwn(TypedArrayPrototype, TO_STRING_TAG)) {\n  TYPED_ARRAY_TAG_REQUIRED = true;\n  defineProperty(TypedArrayPrototype, TO_STRING_TAG, { get: function () {\n    return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;\n  } });\n  for (NAME in TypedArrayConstructorsList) if (global[NAME]) {\n    createNonEnumerableProperty(global[NAME], TYPED_ARRAY_TAG, NAME);\n  }\n}\n\nmodule.exports = {\n  NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,\n  TYPED_ARRAY_CONSTRUCTOR: TYPED_ARRAY_CONSTRUCTOR,\n  TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQUIRED && TYPED_ARRAY_TAG,\n  aTypedArray: aTypedArray,\n  aTypedArrayConstructor: aTypedArrayConstructor,\n  exportTypedArrayMethod: exportTypedArrayMethod,\n  exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,\n  isView: isView,\n  isTypedArray: isTypedArray,\n  TypedArray: TypedArray,\n  TypedArrayPrototype: TypedArrayPrototype\n};\n","var global = require('../internals/global');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar RangeError = global.RangeError;\n\nmodule.exports = function (it) {\n  var result = toIntegerOrInfinity(it);\n  if (result < 0) throw RangeError(\"The argument can't be less than 0\");\n  return result;\n};\n"],"sourceRoot":""}