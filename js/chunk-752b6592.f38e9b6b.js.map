{"version":3,"sources":["webpack:///./node_modules/ol/source/common.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/style/IconOrigin.js","webpack:///./node_modules/ol/style/IconImage.js","webpack:///./node_modules/ol/style/Icon.js","webpack:///./node_modules/ol/source/TileJSON.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/style/IconAnchorUnits.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/string.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/source/OSM.js","webpack:///./node_modules/ol/source/WMTSRequestEncoding.js","webpack:///./node_modules/ol/source/WMTS.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/source/Source.js"],"names":["IMAGE_SMOOTHING_DISABLED","imageSmoothingEnabled","msImageSmoothingEnabled","POINT","LINE","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","XYZ","_super","opt_options","_this","options","projection","undefined","tileGrid","extent","maxResolution","maxZoom","minZoom","tileSize","attributions","cacheSize","crossOrigin","imageSmoothing","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","url","urls","wrapX","transition","attributionsCollapsible","zDirection","RegularShape","rotateWithView","opacity","rotation","scale","displacement","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius_","radius","radius1","radius2_","radius2","angle_","angle","stroke_","stroke","anchor_","size_","renderOptions_","render","clone","getScale","style","getFill","getPoints","getRadius","getRadius2","getAngle","getStroke","getRotation","getRotateWithView","isArray","slice","getDisplacement","setOpacity","getOpacity","getAnchor","getHitDetectionImage","createHitDetectionCanvas_","getImage","pixelRatio","image","renderOptions","context","size","draw_","canvas","getPixelRatio","getImageSize","getImageState","LOADED","getOrigin","getSize","listenImageChange","listener","load","unlistenImageChange","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","Infinity","r1","r2","tmp","alpha","Math","PI","a","sin","sqrt","e","miterRatio","k","l","maxr","bevelAdd","aa","bb","dd","ee","innerMiterRatio","innerLength","max","createRenderOptions","strokeStyle","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","add","maxRadius","ceil","translate","createPath_","color","fillStyle","lineWidth","setLineDash","length","drawHitDetectionCanvas_","arc","startAngle","step","i","angle0","radiusC","lineTo","cos","closePath","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","key","iconImage","hasListener","get","src","getKey","set","setSize","maxCacheSize","colorString","shared","RBush","opt_maxEntries","rbush_","items_","insert","value","item","minX","minY","maxX","maxY","extents","values","items","remove","uid","update","bbox","getAll","all","map","getInExtent","search","forEach","callback","forEach_","forEachInExtent","result","isEmpty","getExtent","opt_extent","data","toJSON","concat","rbush","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","getCount","containsKey","f","entry","value_","key_","newer","older","getKeys","keys","getValues","peekLast","peekLastKey","peekFirstKey","pop","replace","VectorSourceEvent","type","opt_feature","opt_features","feature","features","VectorSource","state","READY","on","once","un","loader_","format_","format","overlaps_","overlaps","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","getArray","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","changed","featureKey","addToIndex_","setupChangeEvents_","geometry","getGeometry","dispatchEvent","ADDFEATURE","CHANGE","handleFeatureChange_","PROPERTYCHANGE","valid","id","getId","toString","addFeatures","newFeatures","geometryFeatures","length_1","push","length_2","length_3","modifyingCollection","addEventListener","evt","REMOVEFEATURE","ADD","bind","REMOVE","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","CLEAR","forEachFeature","forEachFeatureAtCoordinateDirect","coordinate","forEachFeatureInExtent","intersectsCoordinate","forEachFeatureIntersectingExtent","intersectsExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","x","y","closestFeature","closestPoint","NaN","minSquaredDistance","filter","previousMinSquaredDistance","closestPointXY","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","event","sid","removeFromIdIndex_","CHANGEFEATURE","hasFeature","loadFeatures","resolution","loadedExtentsRtree","extentsToLoad","_loop_1","ii","extentToLoad","alreadyLoaded","object","this_1","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","loading","refresh","removeLoadedExtent","obj","removed","setLoader","setUrl","Style","geometry_","geometryFunction_","defaultGeometryFunction","setGeometry","image_","renderer_","renderer","text_","text","zIndex_","zIndex","getRenderer","getText","getZIndex","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","setZIndex","toFunction","styleFunction","styles_1","defaultStyles","createDefaultStyle","width","createEditingStyle","styles","white","blue","POLYGON","MULTI_POLYGON","LINE_STRING","MULTI_LINE_STRING","CIRCLE","MULTI_POINT","GEOMETRY_COLLECTION","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","taintedTestContext","IconImage","imageState","hitDetectionImage_","Image","color_","unlisten_","imageState_","src_","tainted_","isTainted_","ImageState","drawImage","getImageData","dispatchChangeEvent_","EventType","handleImageError_","ERROR","unlistenImage_","handleImageLoad_","height","replaceColor_","fillRect","getSrc","IDLE","LOADING","document","createElement","ctx","getContext","globalCompositeOperation","imgData","r","g","putImageData","Icon","anchor","normalizedAnchor_","anchorOrigin_","anchorOrigin","IconOrigin","anchorXUnits_","anchorXUnits","IconAnchorUnits","FRACTION","anchorYUnits_","anchorYUnits","crossOrigin_","img","imgSize","iconImage_","offset_","offset","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","removeEventListener","TileJSON","tileJSON_","tileSize_","jsonp","handleTileJSONResponse","handleTileJSONError","client","XMLHttpRequest","onXHRLoad_","onXHRError_","open","send","tileJSON","status","response","JSON","parse","responseText","err","getTileJSON","epsg4326Projection","sourceProjection","getProjection","transform","gridExtent","getAttributions","attributionExtent_1","setAttributions","frameState","setState","UNDEFINED","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","distance","bearing","lon1","dByR","lat","asin","lon","PIXELS","Fill","setColor","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","TILELOADSTART","TILELOADEND","TILELOADERROR","TileSource","opaque_","tilePixelRatio_","getTileSize","getMinZoom","tileCache","TileCache","tmpSize","tileOptions","expireCache","usedTiles","getTileCacheForProjection","forEachLoadedTile","z","tileRange","tile","tileCoordKey","loaded","covered","getState","TileState","getGutterForProjection","setKey","getOpaque","getResolutions","getTile","getTileGrid","getTileGridForProjection","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","tileCoord","opt_projection","getWrapX","isGlobal","updateCacheSize","tileCount","useTile","Source","TileSourceEvent","Event","UrlTile","generateTileUrlFunction_","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","handleTileChange","tileState","TileEventType","setTileLoadFunction","setTileUrlFunction","pruneExceptNewestZ","join","TileImage","defaultTileLoadFunction","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","contextOptions_","renderReprojectionEdges_","usedTileCache","getContextOptions","getGutter","stringify","thisProj","projKey","createTile_","urlTileCoord","tileUrl","EMPTY","cache","sourceTileGrid","targetTileGrid","wrappedTileCoord","newTile","getTileInternal","interimTile","refreshInterimChain","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","ImageStyle","opacity_","rotateWithView_","rotation_","scale_","scaleArray_","displacement_","getScaleArray","setRotateWithView","setRotation","setScale","padNumber","number","opt_precision","numberString","toFixed","decimal","indexOf","CircleStyle","setRadius","ATTRIBUTION","OSM","KVP","REST","WMTS","requestEncoding","WMTSRequestEncoding","version_","version","dimensions_","dimensions","layer_","layer","matrixSet_","matrixSet","style_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getLayer","getMatrixSet","getRequestEncoding","getStyle","getVersion","res","updateDimensions","template","m","toLowerCase","localContext_1","getMatrixId","optionsFromCapabilities","wmtsCap","config","layers","elt","index","array","idx","tileMatrixSets","tileMatrixSet","el","supportedCRS","proj1","proj2","matrixLimits","matrixSets","matrixSetObj","code","projConfig","switchOriginXY","getAxisOrientation","substr","matrix","TileMatrix","selectedMatrixLimit","MinTileCol","MinTileRow","MaxTileCol","MatrixWidth","MaxTileRow","MatrixHeight","tileMatrixValue","Identifier","ScaleDenominator","getMetersPerUnit","origin","TopLeftCorner","tileSpanX","TileWidth","tileSpanY","TileHeight","matrixSetExtent","wgs84BoundingBox","wgs84ProjectionExtent","wgs84MatrixSetExtent","gets","constraint","element","encodings","DROP","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","n","attributions_","adaptAttributions","attributionsCollapsible_","state_","wrapX_","getAttributionsCollapsible","attributionLike"],"mappings":"kJAAA,kCAOO,IAKIA,EAA2B,CAClCC,uBAAuB,EACvBC,yBAAyB,I,oCCJd,QACXC,MAAO,QACPC,KAAM,S,oCCZV,4BAGIC,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GA6ExCI,EAAqB,SAAUC,GAK/B,SAASD,EAAIE,GACT,IAAIC,EAAQN,KACRO,EAAUF,GAAe,GACzBG,OAAoCC,IAAvBF,EAAQC,WAA2BD,EAAQC,WAAa,YACrEE,OAAgCD,IAArBF,EAAQG,SACjBH,EAAQG,SACR,eAAU,CACRC,OAAQ,eAAqBH,GAC7BI,cAAeL,EAAQK,cACvBC,QAASN,EAAQM,QACjBC,QAASP,EAAQO,QACjBC,SAAUR,EAAQQ,WAqB1B,OAnBAT,EAAQF,EAAOR,KAAKI,KAAM,CACtBgB,aAAcT,EAAQS,aACtBC,UAAWV,EAAQU,UACnBC,YAAaX,EAAQW,YACrBC,eAAgBZ,EAAQY,eACxBC,OAAQb,EAAQa,OAChBZ,WAAYA,EACZa,2BAA4Bd,EAAQc,2BACpCX,SAAUA,EACVY,iBAAkBf,EAAQe,iBAC1BC,eAAgBhB,EAAQgB,eACxBC,gBAAiBjB,EAAQiB,gBACzBC,IAAKlB,EAAQkB,IACbC,KAAMnB,EAAQmB,KACdC,WAAyBlB,IAAlBF,EAAQoB,OAAsBpB,EAAQoB,MAC7CC,WAAYrB,EAAQqB,WACpBC,wBAAyBtB,EAAQsB,wBACjCC,WAAYvB,EAAQuB,cAClB9B,KACCM,EAEX,OAtCArB,EAAUkB,EAAKC,GAsCRD,EAvCa,CAwCtB,QACa,U,oCCzHf,4EAGIlB,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GAuDxCgC,EAA8B,SAAU3B,GAKxC,SAAS2B,EAAaxB,GAClB,IAAID,EAAQN,KAIRgC,OAA4CvB,IAA3BF,EAAQyB,gBAA+BzB,EAAQyB,eAsEpE,OArEA1B,EAAQF,EAAOR,KAAKI,KAAM,CACtBiC,QAAS,EACTD,eAAgBA,EAChBE,cAA+BzB,IAArBF,EAAQ2B,SAAyB3B,EAAQ2B,SAAW,EAC9DC,WAAyB1B,IAAlBF,EAAQ4B,MAAsB5B,EAAQ4B,MAAQ,EACrDC,kBAAuC3B,IAAzBF,EAAQ6B,aAA6B7B,EAAQ6B,aAAe,CAAC,EAAG,MAC5EpC,KAKNM,EAAM+B,aAAU5B,EAKhBH,EAAMgC,oBAAsB,KAK5BhC,EAAMiC,WAAyB9B,IAAjBF,EAAQiC,KAAqBjC,EAAQiC,KAAO,KAK1DlC,EAAMmC,QAAU,CAAC,EAAG,GAKpBnC,EAAMoC,QAAUnC,EAAQoC,OAKxBrC,EAAMsC,aACiBnC,IAAnBF,EAAQsC,OAAuBtC,EAAQsC,OAAStC,EAAQuC,QAK5DxC,EAAMyC,SAAWxC,EAAQyC,QAKzB1C,EAAM2C,YAA2BxC,IAAlBF,EAAQ2C,MAAsB3C,EAAQ2C,MAAQ,EAK7D5C,EAAM6C,aAA6B1C,IAAnBF,EAAQ6C,OAAuB7C,EAAQ6C,OAAS,KAKhE9C,EAAM+C,QAAU,KAKhB/C,EAAMgD,MAAQ,KAKdhD,EAAMiD,eAAiB,KACvBjD,EAAMkD,SACClD,EAsZX,OAreArB,EAAU8C,EAAc3B,GAsFxB2B,EAAarC,UAAU+D,MAAQ,WAC3B,IAAItB,EAAQnC,KAAK0D,WACbC,EAAQ,IAAI5B,EAAa,CACzBS,KAAMxC,KAAK4D,UAAY5D,KAAK4D,UAAUH,aAAUhD,EAChDkC,OAAQ3C,KAAK6D,YACbhB,OAAQ7C,KAAK8D,YACbd,QAAShD,KAAK+D,aACdb,MAAOlD,KAAKgE,WACZZ,OAAQpD,KAAKiE,YAAcjE,KAAKiE,YAAYR,aAAUhD,EACtDyB,SAAUlC,KAAKkE,cACflC,eAAgBhC,KAAKmE,oBACrBhC,MAAO3C,MAAM4E,QAAQjC,GAASA,EAAMkC,QAAUlC,EAC9CC,aAAcpC,KAAKsE,kBAAkBD,UAGzC,OADAV,EAAMY,WAAWvE,KAAKwE,cACfb,GAQX5B,EAAarC,UAAU+E,UAAY,WAC/B,OAAOzE,KAAKqD,SAOhBtB,EAAarC,UAAUsE,SAAW,WAC9B,OAAOhE,KAAKiD,QAOhBlB,EAAarC,UAAUkE,QAAU,WAC7B,OAAO5D,KAAKuC,OAKhBR,EAAarC,UAAUgF,qBAAuB,WAI1C,OAHK1E,KAAKsC,qBACNtC,KAAK2E,0BAA0B3E,KAAKuD,gBAEjCvD,KAAKsC,qBAQhBP,EAAarC,UAAUkF,SAAW,SAAUC,GACxC,IAAIC,EAAQ9E,KAAKqC,QAAQwC,GACzB,IAAKC,EAAO,CACR,IAAIC,EAAgB/E,KAAKuD,eACrByB,EAAU,eAAsBD,EAAcE,KAAOJ,EAAYE,EAAcE,KAAOJ,GAC1F7E,KAAKkF,MAAMH,EAAeC,EAASH,GACnCC,EAAQE,EAAQG,OAChBnF,KAAKqC,QAAQwC,GAAcC,EAE/B,OAAOA,GAOX/C,EAAarC,UAAU0F,cAAgB,SAAUP,GAC7C,OAAOA,GAKX9C,EAAarC,UAAU2F,aAAe,WAClC,OAAOrF,KAAKsD,OAKhBvB,EAAarC,UAAU4F,cAAgB,WACnC,OAAO,OAAWC,QAOtBxD,EAAarC,UAAU8F,UAAY,WAC/B,OAAOxF,KAAKyC,SAOhBV,EAAarC,UAAUmE,UAAY,WAC/B,OAAO7D,KAAK0C,SAOhBX,EAAarC,UAAUoE,UAAY,WAC/B,OAAO9D,KAAK4C,SAOhBb,EAAarC,UAAUqE,WAAa,WAChC,OAAO/D,KAAK+C,UAOhBhB,EAAarC,UAAU+F,QAAU,WAC7B,OAAOzF,KAAKsD,OAOhBvB,EAAarC,UAAUuE,UAAY,WAC/B,OAAOjE,KAAKmD,SAKhBpB,EAAarC,UAAUgG,kBAAoB,SAAUC,KAIrD5D,EAAarC,UAAUkG,KAAO,aAI9B7D,EAAarC,UAAUmG,oBAAsB,SAAUF,KASvD5D,EAAarC,UAAUoG,uBAAyB,SAAUC,EAAUC,EAAaC,GAC7E,GAAoB,IAAhBD,GACAhG,KAAK0C,UAAYwD,KACH,UAAbH,GAAqC,UAAbA,EACzB,OAAOC,EAwBX,IAAIG,EAAKnG,KAAK4C,QACVwD,OAAuB3F,IAAlBT,KAAK+C,SAAyBoD,EAAKnG,KAAK+C,SACjD,GAAIoD,EAAKC,EAAI,CACT,IAAIC,EAAMF,EACVA,EAAKC,EACLA,EAAKC,EAET,IAAI1D,OAA2BlC,IAAlBT,KAAK+C,SAAyB/C,KAAK0C,QAAyB,EAAf1C,KAAK0C,QAC3D4D,EAAS,EAAIC,KAAKC,GAAM7D,EACxB8D,EAAIL,EAAKG,KAAKG,IAAIJ,GAClBlH,EAAImH,KAAKI,KAAKP,EAAKA,EAAKK,EAAIA,GAC5BtH,EAAIgH,EAAK/G,EACTwH,EAAIL,KAAKI,KAAKF,EAAIA,EAAItH,EAAIA,GAC1B0H,EAAaD,EAAIH,EACrB,GAAiB,UAAbV,GAAwBc,GAAcZ,EACtC,OAAOY,EAAab,EAexB,IAAIc,EAAId,EAAc,EAAIa,EACtBE,EAAKf,EAAc,GAAM7G,EAAIyH,GAC7BI,EAAOT,KAAKI,MAAMR,EAAKW,IAAMX,EAAKW,GAAKC,EAAIA,GAC3CE,EAAWD,EAAOb,EACtB,QAAsB1F,IAAlBT,KAAK+C,UAAuC,UAAbgD,EAC/B,OAAkB,EAAXkB,EAIX,IAAIC,EAAKf,EAAKI,KAAKG,IAAIJ,GACnBa,EAAKZ,KAAKI,KAAKR,EAAKA,EAAKe,EAAKA,GAC9BE,EAAKhB,EAAKe,EACVE,EAAKd,KAAKI,KAAKO,EAAKA,EAAKE,EAAKA,GAC9BE,EAAkBD,EAAKH,EAC3B,GAAII,GAAmBrB,EAAY,CAC/B,IAAIsB,EAAeD,EAAkBtB,EAAe,EAAII,EAAKD,EAC7D,OAAO,EAAII,KAAKiB,IAAIP,EAAUM,GAElC,OAAkB,EAAXN,GAMXlF,EAAarC,UAAU+H,oBAAsB,WACzC,IAIIC,EAJA3B,EAAW,OACXE,EAAa,EACb0B,EAAW,KACXC,EAAiB,EAEjB5B,EAAc,EACdhG,KAAKmD,UACLuE,EAAc1H,KAAKmD,QAAQ0E,WACP,OAAhBH,IACAA,EAAc,QAElBA,EAAc,eAAYA,GAC1B1B,EAAchG,KAAKmD,QAAQ2E,gBACPrH,IAAhBuF,IACAA,EAAc,QAElB2B,EAAW3H,KAAKmD,QAAQ4E,cACxBH,EAAiB5H,KAAKmD,QAAQ6E,oBAC9BjC,EAAW/F,KAAKmD,QAAQ8E,mBACPxH,IAAbsF,IACAA,EAAW,QAEfE,EAAajG,KAAKmD,QAAQ+E,qBACPzH,IAAfwF,IACAA,EAAa,SAGrB,IAAIkC,EAAMnI,KAAK8F,uBAAuBC,EAAUC,EAAaC,GACzDmC,EAAY7B,KAAKiB,IAAIxH,KAAK4C,QAAS5C,KAAK+C,UAAY,GACpDkC,EAAOsB,KAAK8B,KAAK,EAAID,EAAYD,GACrC,MAAO,CACHT,YAAaA,EACb1B,YAAaA,EACbf,KAAMA,EACN0C,SAAUA,EACVC,eAAgBA,EAChB7B,SAAUA,EACVE,WAAYA,IAMpBlE,EAAarC,UAAU8D,OAAS,WAC5BxD,KAAKuD,eAAiBvD,KAAKyH,sBAC3B,IAAIxC,EAAOjF,KAAKuD,eAAe0B,KAC3B7C,EAAepC,KAAKsE,kBACxBtE,KAAKqC,QAAU,GACfrC,KAAKqD,QAAU,CAAC4B,EAAO,EAAI7C,EAAa,GAAI6C,EAAO,EAAI7C,EAAa,IACpEpC,KAAKsD,MAAQ,CAAC2B,EAAMA,IAQxBlD,EAAarC,UAAUwF,MAAQ,SAAUH,EAAeC,EAASH,GAK7D,GAJAG,EAAQ7C,MAAM0C,EAAYA,GAE1BG,EAAQsD,UAAUvD,EAAcE,KAAO,EAAGF,EAAcE,KAAO,GAC/DjF,KAAKuI,YAAYvD,GACbhF,KAAKuC,MAAO,CACZ,IAAIiG,EAAQxI,KAAKuC,MAAMsF,WACT,OAAVW,IACAA,EAAQ,QAEZxD,EAAQyD,UAAY,eAAYD,GAChCxD,EAAQxC,OAERxC,KAAKmD,UACL6B,EAAQ0C,YAAc3C,EAAc2C,YACpC1C,EAAQ0D,UAAY3D,EAAciB,YAC9BhB,EAAQ2D,aAAe5D,EAAc4C,WACrC3C,EAAQ2D,YAAY5D,EAAc4C,UAClC3C,EAAQ4C,eAAiB7C,EAAc6C,gBAE3C5C,EAAQe,SAAWhB,EAAcgB,SACjCf,EAAQiB,WAAalB,EAAckB,WACnCjB,EAAQ5B,WAOhBrB,EAAarC,UAAUiF,0BAA4B,SAAUI,GACzD,GAAI/E,KAAKuC,MAAO,CACZ,IAAIiG,EAAQxI,KAAKuC,MAAMsF,WAEnB5F,EAAU,EAUd,GATqB,kBAAVuG,IACPA,EAAQ,eAAQA,IAEN,OAAVA,EACAvG,EAAU,EAELzC,MAAM4E,QAAQoE,KACnBvG,EAA2B,IAAjBuG,EAAMI,OAAeJ,EAAM,GAAK,GAE9B,IAAZvG,EAAe,CAGf,IAAI+C,EAAU,eAAsBD,EAAcE,KAAMF,EAAcE,MACtEjF,KAAKsC,oBAAsB0C,EAAQG,OACnCnF,KAAK6I,wBAAwB9D,EAAeC,IAG/ChF,KAAKsC,sBACNtC,KAAKsC,oBAAsBtC,KAAK4E,SAAS,KAOjD7C,EAAarC,UAAU6I,YAAc,SAAUvD,GAC3C,IAAIrC,EAAS3C,KAAK0C,QACdG,EAAS7C,KAAK4C,QAClB,GAAID,IAAWuD,IACXlB,EAAQ8D,IAAI,EAAG,EAAGjG,EAAQ,EAAG,EAAI0D,KAAKC,QAErC,CACD,IAAIxD,OAA4BvC,IAAlBT,KAAK+C,SAAyBF,EAAS7C,KAAK+C,cACpCtC,IAAlBT,KAAK+C,WACLJ,GAAU,GAId,IAFA,IAAIoG,EAAa/I,KAAKiD,OAASsD,KAAKC,GAAK,EACrCwC,EAAQ,EAAIzC,KAAKC,GAAM7D,EAClBsG,EAAI,EAAGA,EAAItG,EAAQsG,IAAK,CAC7B,IAAIC,EAASH,EAAaE,EAAID,EAC1BG,EAAUF,EAAI,IAAM,EAAIpG,EAASG,EACrCgC,EAAQoE,OAAOD,EAAU5C,KAAK8C,IAAIH,GAASC,EAAU5C,KAAKG,IAAIwC,IAElElE,EAAQsE,cAQhBvH,EAAarC,UAAUmJ,wBAA0B,SAAU9D,EAAeC,GAEtEA,EAAQsD,UAAUvD,EAAcE,KAAO,EAAGF,EAAcE,KAAO,GAC/DjF,KAAKuI,YAAYvD,GACjBA,EAAQyD,UAAY,OACpBzD,EAAQxC,OACJxC,KAAKmD,UACL6B,EAAQ0C,YAAc3C,EAAc2C,YACpC1C,EAAQ0D,UAAY3D,EAAciB,YAC9BjB,EAAc4C,WACd3C,EAAQ2D,YAAY5D,EAAc4C,UAClC3C,EAAQ4C,eAAiB7C,EAAc6C,gBAE3C5C,EAAQe,SAAWhB,EAAcgB,SACjCf,EAAQiB,WAAalB,EAAckB,WACnCjB,EAAQ5B,WAGTrB,EAtesB,CAue/B,QACa,U,oCCliBf,kDAQIwH,EAAgC,WAChC,SAASA,IAKLvJ,KAAKwJ,OAAS,GAKdxJ,KAAKyJ,WAAa,EAKlBzJ,KAAK0J,cAAgB,GA8DzB,OAzDAH,EAAe7J,UAAUiK,MAAQ,WAC7B3J,KAAKwJ,OAAS,GACdxJ,KAAKyJ,WAAa,GAKtBF,EAAe7J,UAAUkK,eAAiB,WACtC,OAAO5J,KAAKyJ,WAAazJ,KAAK0J,eAKlCH,EAAe7J,UAAUmK,OAAS,WAC9B,GAAI7J,KAAK4J,iBAAkB,CACvB,IAAIX,EAAI,EACR,IAAK,IAAIa,KAAO9J,KAAKwJ,OAAQ,CACzB,IAAIO,EAAY/J,KAAKwJ,OAAOM,GACV,KAAP,EAANb,MAAmBc,EAAUC,uBACvBhK,KAAKwJ,OAAOM,KACjB9J,KAAKyJ,eAWvBF,EAAe7J,UAAUuK,IAAM,SAAUC,EAAKhJ,EAAasH,GACvD,IAAIsB,EAAMK,EAAOD,EAAKhJ,EAAasH,GACnC,OAAOsB,KAAO9J,KAAKwJ,OAASxJ,KAAKwJ,OAAOM,GAAO,MAQnDP,EAAe7J,UAAU0K,IAAM,SAAUF,EAAKhJ,EAAasH,EAAOuB,GAC9D,IAAID,EAAMK,EAAOD,EAAKhJ,EAAasH,GACnCxI,KAAKwJ,OAAOM,GAAOC,IACjB/J,KAAKyJ,YASXF,EAAe7J,UAAU2K,QAAU,SAAUC,GACzCtK,KAAK0J,cAAgBY,EACrBtK,KAAK6J,UAEFN,EA9EwB,GAsFnC,SAASY,EAAOD,EAAKhJ,EAAasH,GAC9B,IAAI+B,EAAc/B,EAAQ,eAASA,GAAS,OAC5C,OAAOtH,EAAc,IAAMgJ,EAAM,IAAMK,EAE5B,IAMJC,EAAS,IAAIjB,G,oCCxGxB,6DAsBIkB,EAAuB,WAIvB,SAASA,EAAMC,GAIX1K,KAAK2K,OAAS,IAAI,IAAOD,GAOzB1K,KAAK4K,OAAS,GAiKlB,OA1JAH,EAAM/K,UAAUmL,OAAS,SAAUlK,EAAQmK,GAEvC,IAAIC,EAAO,CACPC,KAAMrK,EAAO,GACbsK,KAAMtK,EAAO,GACbuK,KAAMvK,EAAO,GACbwK,KAAMxK,EAAO,GACbmK,MAAOA,GAEX9K,KAAK2K,OAAOE,OAAOE,GACnB/K,KAAK4K,OAAO,eAAOE,IAAUC,GAOjCN,EAAM/K,UAAUkG,KAAO,SAAUwF,EAASC,GAEtC,IADA,IAAIC,EAAQ,IAAI9L,MAAM6L,EAAOzC,QACpBK,EAAI,EAAGlC,EAAIsE,EAAOzC,OAAQK,EAAIlC,EAAGkC,IAAK,CAC3C,IAAItI,EAASyK,EAAQnC,GACjB6B,EAAQO,EAAOpC,GAEf8B,EAAO,CACPC,KAAMrK,EAAO,GACbsK,KAAMtK,EAAO,GACbuK,KAAMvK,EAAO,GACbwK,KAAMxK,EAAO,GACbmK,MAAOA,GAEXQ,EAAMrC,GAAK8B,EACX/K,KAAK4K,OAAO,eAAOE,IAAUC,EAEjC/K,KAAK2K,OAAO/E,KAAK0F,IAOrBb,EAAM/K,UAAU6L,OAAS,SAAUT,GAC/B,IAAIU,EAAM,eAAOV,GAGbC,EAAO/K,KAAK4K,OAAOY,GAEvB,cADOxL,KAAK4K,OAAOY,GACiB,OAA7BxL,KAAK2K,OAAOY,OAAOR,IAO9BN,EAAM/K,UAAU+L,OAAS,SAAU9K,EAAQmK,GACvC,IAAIC,EAAO/K,KAAK4K,OAAO,eAAOE,IAC1BY,EAAO,CAACX,EAAKC,KAAMD,EAAKE,KAAMF,EAAKG,KAAMH,EAAKI,MAC7C,eAAOO,EAAM/K,KACdX,KAAKuL,OAAOT,GACZ9K,KAAK6K,OAAOlK,EAAQmK,KAO5BL,EAAM/K,UAAUiM,OAAS,WACrB,IAAIL,EAAQtL,KAAK2K,OAAOiB,MACxB,OAAON,EAAMO,KAAI,SAAUd,GACvB,OAAOA,EAAKD,UAQpBL,EAAM/K,UAAUoM,YAAc,SAAUnL,GAEpC,IAAI+K,EAAO,CACPV,KAAMrK,EAAO,GACbsK,KAAMtK,EAAO,GACbuK,KAAMvK,EAAO,GACbwK,KAAMxK,EAAO,IAEb2K,EAAQtL,KAAK2K,OAAOoB,OAAOL,GAC/B,OAAOJ,EAAMO,KAAI,SAAUd,GACvB,OAAOA,EAAKD,UAUpBL,EAAM/K,UAAUsM,QAAU,SAAUC,GAChC,OAAOjM,KAAKkM,SAASlM,KAAK2L,SAAUM,IAQxCxB,EAAM/K,UAAUyM,gBAAkB,SAAUxL,EAAQsL,GAChD,OAAOjM,KAAKkM,SAASlM,KAAK8L,YAAYnL,GAASsL,IAQnDxB,EAAM/K,UAAUwM,SAAW,SAAUb,EAAQY,GAEzC,IADA,IAAIG,EACKnD,EAAI,EAAGlC,EAAIsE,EAAOzC,OAAQK,EAAIlC,EAAGkC,IAEtC,GADAmD,EAASH,EAASZ,EAAOpC,IACrBmD,EACA,OAAOA,EAGf,OAAOA,GAKX3B,EAAM/K,UAAU2M,QAAU,WACtB,OAAO,eAAQrM,KAAK4K,SAKxBH,EAAM/K,UAAUiK,MAAQ,WACpB3J,KAAK2K,OAAOhB,QACZ3J,KAAK4K,OAAS,IAMlBH,EAAM/K,UAAU4M,UAAY,SAAUC,GAClC,IAAIC,EAAOxM,KAAK2K,OAAO8B,SACvB,OAAO,eAAeD,EAAKxB,KAAMwB,EAAKvB,KAAMuB,EAAKtB,KAAMsB,EAAKrB,KAAMoB,IAKtE9B,EAAM/K,UAAUgN,OAAS,SAAUC,GAE/B,IAAK,IAAI1D,KADTjJ,KAAK2K,OAAO/E,KAAK+G,EAAMhC,OAAOiB,OAChBe,EAAM/B,OAChB5K,KAAK4K,OAAO3B,GAAK0D,EAAM/B,OAAO3B,IAG/BwB,EAhLe,GAkLX,U,kCCxMf,gBAoBImC,EAA0B,WAI1B,SAASA,EAASC,GAMd7M,KAAK8M,mBACqBrM,IAAtBoM,EAAkCA,EAAoB,KAK1D7M,KAAK+M,OAAS,EAKd/M,KAAKgN,SAAW,GAKhBhN,KAAKiN,QAAU,KAKfjN,KAAKkN,QAAU,KAiMnB,OA5LAN,EAASlN,UAAUkK,eAAiB,WAChC,OAAO5J,KAAK8M,cAAgB,GAAK9M,KAAKmN,WAAanN,KAAK8M,eAK5DF,EAASlN,UAAUiK,MAAQ,WACvB3J,KAAK+M,OAAS,EACd/M,KAAKgN,SAAW,GAChBhN,KAAKiN,QAAU,KACfjN,KAAKkN,QAAU,MAMnBN,EAASlN,UAAU0N,YAAc,SAAUtD,GACvC,OAAO9J,KAAKgN,SAASrN,eAAemK,IAQxC8C,EAASlN,UAAUsM,QAAU,SAAUqB,GACnC,IAAIC,EAAQtN,KAAKiN,QACjB,MAAOK,EACHD,EAAEC,EAAMC,OAAQD,EAAME,KAAMxN,MAC5BsN,EAAQA,EAAMG,OAQtBb,EAASlN,UAAUuK,IAAM,SAAUH,EAAKzJ,GACpC,IAAIiN,EAAQtN,KAAKgN,SAASlD,GAE1B,OADA,oBAAiBrJ,IAAV6M,EAAqB,IACxBA,IAAUtN,KAAKkN,UAGVI,IAAUtN,KAAKiN,SACpBjN,KAAKiN,QAAgCjN,KAAKiN,QAAa,MACvDjN,KAAKiN,QAAQS,MAAQ,OAGrBJ,EAAMG,MAAMC,MAAQJ,EAAMI,MAC1BJ,EAAMI,MAAMD,MAAQH,EAAMG,OAE9BH,EAAMG,MAAQ,KACdH,EAAMI,MAAQ1N,KAAKkN,QACnBlN,KAAKkN,QAAQO,MAAQH,EACrBtN,KAAKkN,QAAUI,GAbJA,EAAMC,QAqBrBX,EAASlN,UAAU6L,OAAS,SAAUzB,GAClC,IAAIwD,EAAQtN,KAAKgN,SAASlD,GAoB1B,OAnBA,oBAAiBrJ,IAAV6M,EAAqB,IACxBA,IAAUtN,KAAKkN,SACflN,KAAKkN,QAAgCI,EAAW,MAC5CtN,KAAKkN,UACLlN,KAAKkN,QAAQO,MAAQ,OAGpBH,IAAUtN,KAAKiN,SACpBjN,KAAKiN,QAAgCK,EAAW,MAC5CtN,KAAKiN,UACLjN,KAAKiN,QAAQS,MAAQ,QAIzBJ,EAAMG,MAAMC,MAAQJ,EAAMI,MAC1BJ,EAAMI,MAAMD,MAAQH,EAAMG,cAEvBzN,KAAKgN,SAASlD,KACnB9J,KAAK+M,OACAO,EAAMC,QAKjBX,EAASlN,UAAUyN,SAAW,WAC1B,OAAOnN,KAAK+M,QAKhBH,EAASlN,UAAUiO,QAAU,WACzB,IAEIL,EAFAM,EAAO,IAAIpO,MAAMQ,KAAK+M,QACtB9D,EAAI,EAER,IAAKqE,EAAQtN,KAAKkN,QAASI,EAAOA,EAAQA,EAAMI,MAC5CE,EAAK3E,KAAOqE,EAAME,KAEtB,OAAOI,GAKXhB,EAASlN,UAAUmO,UAAY,WAC3B,IAEIP,EAFAjC,EAAS,IAAI7L,MAAMQ,KAAK+M,QACxB9D,EAAI,EAER,IAAKqE,EAAQtN,KAAKkN,QAASI,EAAOA,EAAQA,EAAMI,MAC5CrC,EAAOpC,KAAOqE,EAAMC,OAExB,OAAOlC,GAKXuB,EAASlN,UAAUoO,SAAW,WAC1B,OAAO9N,KAAKiN,QAAQM,QAKxBX,EAASlN,UAAUqO,YAAc,WAC7B,OAAO/N,KAAKiN,QAAQO,MAMxBZ,EAASlN,UAAUsO,aAAe,WAC9B,OAAOhO,KAAKkN,QAAQM,MAKxBZ,EAASlN,UAAUuO,IAAM,WACrB,IAAIX,EAAQtN,KAAKiN,QAUjB,cATOjN,KAAKgN,SAASM,EAAME,MACvBF,EAAMG,QACNH,EAAMG,MAAMC,MAAQ,MAExB1N,KAAKiN,QAAgCK,EAAW,MAC3CtN,KAAKiN,UACNjN,KAAKkN,QAAU,QAEjBlN,KAAK+M,OACAO,EAAMC,QAMjBX,EAASlN,UAAUwO,QAAU,SAAUpE,EAAKgB,GACxC9K,KAAKiK,IAAIH,GACT9J,KAAKgN,SAASlD,GAAKyD,OAASzC,GAMhC8B,EAASlN,UAAU0K,IAAM,SAAUN,EAAKgB,GACpC,iBAAShB,KAAO9J,KAAKgN,UAAW,IAChC,IAAIM,EAAQ,CACRE,KAAM1D,EACN2D,MAAO,KACPC,MAAO1N,KAAKkN,QACZK,OAAQzC,GAEP9K,KAAKkN,QAINlN,KAAKkN,QAAQO,MAAQH,EAHrBtN,KAAKiN,QAAUK,EAKnBtN,KAAKkN,QAAUI,EACftN,KAAKgN,SAASlD,GAAOwD,IACnBtN,KAAK+M,QAOXH,EAASlN,UAAU2K,QAAU,SAAUpF,GACnCjF,KAAK8M,cAAgB7H,GAElB2H,EAhOkB,GAkOd,U,kCCtPf,4NAGI3N,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GA+CxCoO,EAAmC,SAAU/N,GAO7C,SAAS+N,EAAkBC,EAAMC,EAAaC,GAC1C,IAAIhO,EAAQF,EAAOR,KAAKI,KAAMoO,IAASpO,KAavC,OAPAM,EAAMiO,QAAUF,EAMhB/N,EAAMkO,SAAWF,EACVhO,EAEX,OAtBArB,EAAUkP,EAAmB/N,GAsBtB+N,EAvB2B,CAwBpC,QA+GEM,EAA8B,SAAUrO,GAKxC,SAASqO,EAAapO,GAClB,IAAIC,EAAQN,KACRO,EAAUF,GAAe,GAC7BC,EAAQF,EAAOR,KAAKI,KAAM,CACtBgB,aAAcT,EAAQS,aACtBR,gBAAYC,EACZiO,MAAO,OAAYC,MACnBhN,WAAyBlB,IAAlBF,EAAQoB,OAAsBpB,EAAQoB,SAC3C3B,KAINM,EAAMsO,GAINtO,EAAMuO,KAINvO,EAAMwO,GAKNxO,EAAMyO,QAAU,OAKhBzO,EAAM0O,QAAUzO,EAAQ0O,OAKxB3O,EAAM4O,eAAiCzO,IAArBF,EAAQ4O,UAAgC5O,EAAQ4O,SAKlE7O,EAAM8O,KAAO7O,EAAQkB,SACEhB,IAAnBF,EAAQ8O,OACR/O,EAAMyO,QAAUxO,EAAQ8O,YAEJ5O,IAAfH,EAAM8O,OACX,eAAO9O,EAAM0O,QAAS,GAEtB1O,EAAMyO,QAAU,eAAIzO,EAAM8O,KAC6B9O,EAAa,UAMxEA,EAAMgP,eACmB7O,IAArBF,EAAQgP,SAAyBhP,EAAQgP,SAAW,OACxD,IA2CIC,EAAYhB,EA3CZiB,OAA8ChP,IAA5BF,EAAQkP,iBAAgClP,EAAQkP,gBA4DtE,OAvDAnP,EAAMoP,eAAiBD,EAAkB,IAAI,OAAU,KAKvDnP,EAAMqP,oBAAsB,IAAI,OAKhCrP,EAAMsP,qBAAuB,EAK7BtP,EAAMuP,sBAAwB,GAM9BvP,EAAMwP,SAAW,GAMjBxP,EAAMyP,UAAY,GAKlBzP,EAAM0P,mBAAqB,GAK3B1P,EAAM2P,oBAAsB,KAExBzQ,MAAM4E,QAAQ7D,EAAQiO,UACtBA,EAAWjO,EAAQiO,SAEdjO,EAAQiO,WACbgB,EAAajP,EAAQiO,SACrBA,EAAWgB,EAAWU,YAErBT,QAAkChP,IAAf+O,IACpBA,EAAa,IAAI,OAAWhB,SAEf/N,IAAb+N,GACAlO,EAAM6P,oBAAoB3B,QAEX/N,IAAf+O,GACAlP,EAAM8P,wBAAwBZ,GAE3BlP,EAsrBX,OA9yBArB,EAAUwP,EAAcrO,GAsIxBqO,EAAa/O,UAAU2Q,WAAa,SAAU9B,GAC1CvO,KAAKsQ,mBAAmB/B,GACxBvO,KAAKuQ,WAOT9B,EAAa/O,UAAU4Q,mBAAqB,SAAU/B,GAClD,IAAIiC,EAAa,eAAOjC,GACxB,GAAKvO,KAAKyQ,YAAYD,EAAYjC,GAAlC,CAMAvO,KAAK0Q,mBAAmBF,EAAYjC,GACpC,IAAIoC,EAAWpC,EAAQqC,cACvB,GAAID,EAAU,CACV,IAAIhQ,EAASgQ,EAASrE,YAClBtM,KAAK0P,gBACL1P,KAAK0P,eAAe7E,OAAOlK,EAAQ4N,QAIvCvO,KAAK6P,sBAAsBW,GAAcjC,EAE7CvO,KAAK6Q,cAAc,IAAI1C,EAAkB,OAAgB2C,WAAYvC,SAhB7DvO,KAAKiQ,qBACLjQ,KAAKiQ,oBAAoB1E,OAAOgD,IAsB5CE,EAAa/O,UAAUgR,mBAAqB,SAAUF,EAAYjC,GAC9DvO,KAAKgQ,mBAAmBQ,GAAc,CAClC,eAAOjC,EAAS,OAAUwC,OAAQ/Q,KAAKgR,qBAAsBhR,MAC7D,eAAOuO,EAAS,OAAgB0C,eAAgBjR,KAAKgR,qBAAsBhR,QAUnFyO,EAAa/O,UAAU+Q,YAAc,SAAUD,EAAYjC,GACvD,IAAI2C,GAAQ,EACRC,EAAK5C,EAAQ6C,QAajB,YAZW3Q,IAAP0Q,IACMA,EAAGE,aAAcrR,KAAK8P,SAIxBoB,GAAQ,EAHRlR,KAAK8P,SAASqB,EAAGE,YAAc9C,GAMnC2C,IACA,iBAASV,KAAcxQ,KAAK+P,WAAY,IACxC/P,KAAK+P,UAAUS,GAAcjC,GAE1B2C,GAOXzC,EAAa/O,UAAU4R,YAAc,SAAU9C,GAC3CxO,KAAKmQ,oBAAoB3B,GACzBxO,KAAKuQ,WAOT9B,EAAa/O,UAAUyQ,oBAAsB,SAAU3B,GAInD,IAHA,IAAIpD,EAAU,GACVmG,EAAc,GACdC,EAAmB,GACdvI,EAAI,EAAGwI,EAAWjD,EAAS5F,OAAQK,EAAIwI,EAAUxI,IAAK,CAC3D,IAAIsF,EAAUC,EAASvF,GACnBuH,EAAa,eAAOjC,GACpBvO,KAAKyQ,YAAYD,EAAYjC,IAC7BgD,EAAYG,KAAKnD,GAGhBtF,EAAI,EAAb,IAAK,IAAW0I,EAAWJ,EAAY3I,OAAQK,EAAI0I,EAAU1I,IAAK,CAC1DsF,EAAUgD,EAAYtI,GACtBuH,EAAa,eAAOjC,GACxBvO,KAAK0Q,mBAAmBF,EAAYjC,GACpC,IAAIoC,EAAWpC,EAAQqC,cACvB,GAAID,EAAU,CACV,IAAIhQ,EAASgQ,EAASrE,YACtBlB,EAAQsG,KAAK/Q,GACb6Q,EAAiBE,KAAKnD,QAGtBvO,KAAK6P,sBAAsBW,GAAcjC,EAG7CvO,KAAK0P,gBACL1P,KAAK0P,eAAe9J,KAAKwF,EAASoG,GAE7BvI,EAAI,EAAb,IAAK,IAAW2I,EAAWL,EAAY3I,OAAQK,EAAI2I,EAAU3I,IACzDjJ,KAAK6Q,cAAc,IAAI1C,EAAkB,OAAgB2C,WAAYS,EAAYtI,MAOzFwF,EAAa/O,UAAU0Q,wBAA0B,SAAUZ,GACvD,IAAIqC,GAAsB,EAC1B7R,KAAK8R,iBAAiB,OAAgBhB,YAItC,SAAUiB,GACDF,IACDA,GAAsB,EACtBrC,EAAWkC,KAAKK,EAAIxD,SACpBsD,GAAsB,MAG9B7R,KAAK8R,iBAAiB,OAAgBE,eAItC,SAAUD,GACDF,IACDA,GAAsB,EACtBrC,EAAWjE,OAAOwG,EAAIxD,SACtBsD,GAAsB,MAG9BrC,EAAWsC,iBAAiB,OAAoBG,IAIhD,SAAUF,GACDF,IACDA,GAAsB,EACtB7R,KAAKqQ,WACqD0B,EAAW,SACrEF,GAAsB,IAE5BK,KAAKlS,OACPwP,EAAWsC,iBAAiB,OAAoBK,OAIhD,SAAUJ,GACDF,IACDA,GAAsB,EACtB7R,KAAKoS,cACqDL,EAAW,SACrEF,GAAsB,IAE5BK,KAAKlS,OACPA,KAAKiQ,oBAAsBT,GAO/Bf,EAAa/O,UAAUiK,MAAQ,SAAU0I,GACrC,GAAIA,EAAU,CACV,IAAK,IAAIC,KAAatS,KAAKgQ,mBAAoB,CAC3C,IAAIpC,EAAO5N,KAAKgQ,mBAAmBsC,GACnC1E,EAAK5B,QAAQ,QAEZhM,KAAKiQ,sBACNjQ,KAAKgQ,mBAAqB,GAC1BhQ,KAAK8P,SAAW,GAChB9P,KAAK+P,UAAY,SAIrB,GAAI/P,KAAK0P,eAEL,IAAK,IAAIyB,KADTnR,KAAK0P,eAAe1D,QAAQhM,KAAKuS,sBAAsBL,KAAKlS,OAC7CA,KAAK6P,sBAChB7P,KAAKuS,sBAAsBvS,KAAK6P,sBAAsBsB,IAI9DnR,KAAKiQ,qBACLjQ,KAAKiQ,oBAAoBtG,QAEzB3J,KAAK0P,gBACL1P,KAAK0P,eAAe/F,QAExB3J,KAAK6P,sBAAwB,GAC7B,IAAI2C,EAAa,IAAIrE,EAAkB,OAAgBsE,OACvDzS,KAAK6Q,cAAc2B,GACnBxS,KAAKuQ,WAcT9B,EAAa/O,UAAUgT,eAAiB,SAAUzG,GAC9C,GAAIjM,KAAK0P,eACL,OAAO1P,KAAK0P,eAAe1D,QAAQC,GAE9BjM,KAAKiQ,qBACVjQ,KAAKiQ,oBAAoBjE,QAAQC,IAezCwC,EAAa/O,UAAUiT,iCAAmC,SAAUC,EAAY3G,GAC5E,IAAItL,EAAS,CAACiS,EAAW,GAAIA,EAAW,GAAIA,EAAW,GAAIA,EAAW,IACtE,OAAO5S,KAAK6S,uBAAuBlS,GAAQ,SAAU4N,GACjD,IAAIoC,EAAWpC,EAAQqC,cACvB,OAAID,EAASmC,qBAAqBF,GACvB3G,EAASsC,QAGhB,MAuBZE,EAAa/O,UAAUmT,uBAAyB,SAAUlS,EAAQsL,GAC9D,GAAIjM,KAAK0P,eACL,OAAO1P,KAAK0P,eAAevD,gBAAgBxL,EAAQsL,GAE9CjM,KAAKiQ,qBACVjQ,KAAKiQ,oBAAoBjE,QAAQC,IAkBzCwC,EAAa/O,UAAUqT,iCAAmC,SAAUpS,EAAQsL,GACxE,OAAOjM,KAAK6S,uBAAuBlS,GAKnC,SAAU4N,GACN,IAAIoC,EAAWpC,EAAQqC,cACvB,GAAID,EAASqC,iBAAiBrS,GAAS,CACnC,IAAIyL,EAASH,EAASsC,GACtB,GAAInC,EACA,OAAOA,OAYvBqC,EAAa/O,UAAUuT,sBAAwB,WAC3C,OAAOjT,KAAKiQ,qBAQhBxB,EAAa/O,UAAUwT,YAAc,WACjC,IAAI1E,EAUJ,OATIxO,KAAKiQ,oBACLzB,EAAWxO,KAAKiQ,oBAAoBC,WAAW7L,MAAM,GAEhDrE,KAAK0P,iBACVlB,EAAWxO,KAAK0P,eAAe/D,SAC1B,eAAQ3L,KAAK6P,wBACd,eAAOrB,EAAU,eAAUxO,KAAK6P,yBAG+B,GAQ3EpB,EAAa/O,UAAUyT,wBAA0B,SAAUP,GACvD,IAAIpE,EAAW,GAIf,OAHAxO,KAAK2S,iCAAiCC,GAAY,SAAUrE,GACxDC,EAASkD,KAAKnD,MAEXC,GAcXC,EAAa/O,UAAU0T,oBAAsB,SAAUzS,GACnD,OAAIX,KAAK0P,eACE1P,KAAK0P,eAAe5D,YAAYnL,GAElCX,KAAKiQ,oBACHjQ,KAAKiQ,oBAAoBC,WAAW7L,MAAM,GAG1C,IAefoK,EAAa/O,UAAU2T,8BAAgC,SAAUT,EAAYU,GAQzE,IAAIC,EAAIX,EAAW,GACfY,EAAIZ,EAAW,GACfa,EAAiB,KACjBC,EAAe,CAACC,IAAKA,KACrBC,EAAqB1N,IACrBvF,EAAS,EAAEuF,KAAWA,IAAUA,IAAUA,KAC1C2N,EAASP,GAA0B,OAwBvC,OAvBAtT,KAAK0P,eAAevD,gBAAgBxL,GAIpC,SAAU4N,GACN,GAAIsF,EAAOtF,GAAU,CACjB,IAAIoC,EAAWpC,EAAQqC,cACnBkD,EAA6BF,EAEjC,GADAA,EAAqBjD,EAASoD,eAAeR,EAAGC,EAAGE,EAAcE,GAC7DA,EAAqBE,EAA4B,CACjDL,EAAiBlF,EAKjB,IAAIyF,EAAczN,KAAKI,KAAKiN,GAC5BjT,EAAO,GAAK4S,EAAIS,EAChBrT,EAAO,GAAK6S,EAAIQ,EAChBrT,EAAO,GAAK4S,EAAIS,EAChBrT,EAAO,GAAK6S,EAAIQ,OAIrBP,GAYXhF,EAAa/O,UAAU4M,UAAY,SAAUC,GACzC,OAAOvM,KAAK0P,eAAepD,UAAUC,IAWzCkC,EAAa/O,UAAUuU,eAAiB,SAAU9C,GAC9C,IAAI5C,EAAUvO,KAAK8P,SAASqB,EAAGE,YAC/B,YAAmB5Q,IAAZ8N,EAAwBA,EAAU,MAQ7CE,EAAa/O,UAAUwU,gBAAkB,SAAU1I,GAC/C,IAAI+C,EAAUvO,KAAK+P,UAAUvE,GAC7B,YAAmB/K,IAAZ8N,EAAwBA,EAAU,MAQ7CE,EAAa/O,UAAUyU,UAAY,WAC/B,OAAOnU,KAAKgP,SAKhBP,EAAa/O,UAAU0U,YAAc,WACjC,OAAOpU,KAAKkP,WAQhBT,EAAa/O,UAAU2U,OAAS,WAC5B,OAAOrU,KAAKoP,MAMhBX,EAAa/O,UAAUsR,qBAAuB,SAAUsD,GACpD,IAAI/F,EAAoE+F,EAAY,OAChF9D,EAAa,eAAOjC,GACpBoC,EAAWpC,EAAQqC,cACvB,GAAKD,EAQA,CACD,IAAIhQ,EAASgQ,EAASrE,YAClBkE,KAAcxQ,KAAK6P,8BACZ7P,KAAK6P,sBAAsBW,GAC9BxQ,KAAK0P,gBACL1P,KAAK0P,eAAe7E,OAAOlK,EAAQ4N,IAInCvO,KAAK0P,gBACL1P,KAAK0P,eAAejE,OAAO9K,EAAQ4N,QAjBrCiC,KAAcxQ,KAAK6P,wBACjB7P,KAAK0P,gBACL1P,KAAK0P,eAAenE,OAAOgD,GAE/BvO,KAAK6P,sBAAsBW,GAAcjC,GAiBjD,IAAI4C,EAAK5C,EAAQ6C,QACjB,QAAW3Q,IAAP0Q,EAAkB,CAClB,IAAIoD,EAAMpD,EAAGE,WACTrR,KAAK8P,SAASyE,KAAShG,IACvBvO,KAAKwU,mBAAmBjG,GACxBvO,KAAK8P,SAASyE,GAAOhG,QAIzBvO,KAAKwU,mBAAmBjG,GACxBvO,KAAK+P,UAAUS,GAAcjC,EAEjCvO,KAAKuQ,UACLvQ,KAAK6Q,cAAc,IAAI1C,EAAkB,OAAgBsG,cAAelG,KAQ5EE,EAAa/O,UAAUgV,WAAa,SAAUnG,GAC1C,IAAI4C,EAAK5C,EAAQ6C,QACjB,YAAW3Q,IAAP0Q,EACOA,KAAMnR,KAAK8P,SAGX,eAAOvB,KAAYvO,KAAK+P,WAMvCtB,EAAa/O,UAAU2M,QAAU,WAC7B,OAAOrM,KAAK0P,eAAerD,WAAa,eAAQrM,KAAK6P,wBAOzDpB,EAAa/O,UAAUiV,aAAe,SAAUhU,EAAQiU,EAAYpU,GA2BhE,IA1BA,IAAIqU,EAAqB7U,KAAK2P,oBAC1BmF,EAAgB9U,KAAKsP,UAAU3O,EAAQiU,GACvCG,EAAU,SAAU9L,EAAG+L,GACvB,IAAIC,EAAeH,EAAc7L,GAC7BiM,EAAgBL,EAAmB1I,gBAAgB8I,GAKvD,SAAUE,GACN,OAAO,eAAeA,EAAOxU,OAAQsU,MAEpCC,MACCE,EAAOxF,qBACTwF,EAAOvE,cAAc,IAAI1C,EAAkB,OAAgBkH,oBAC3DD,EAAOrG,QAAQnP,KAAKwV,EAAQH,EAAcL,EAAYpU,EAAY,SAAUgO,KACtExO,KAAK4P,qBACP5P,KAAK6Q,cAAc,IAAI1C,EAAkB,OAAgBmH,qBAAiB7U,EAAW+N,KACvF0D,KAAKkD,GAAS,aACVpV,KAAK4P,qBACP5P,KAAK6Q,cAAc,IAAI1C,EAAkB,OAAgBoH,qBAC3DrD,KAAKkD,IACPP,EAAmBhK,OAAOoK,EAAc,CAAEtU,OAAQsU,EAAa5Q,YAGnE+Q,EAASpV,KACJiJ,EAAI,EAAG+L,EAAKF,EAAclM,OAAQK,EAAI+L,IAAM/L,EACjD8L,EAAQ9L,EAAG+L,GAEfhV,KAAKwV,QACDxV,KAAK+O,UAAY,QAAe/O,KAAK4P,qBAAuB,GAEpEnB,EAAa/O,UAAU+V,QAAU,WAC7BzV,KAAK2J,OAAM,GACX3J,KAAK2P,oBAAoBhG,QACzBvJ,EAAOV,UAAU+V,QAAQ7V,KAAKI,OAOlCyO,EAAa/O,UAAUgW,mBAAqB,SAAU/U,GAClD,IACIgV,EADAd,EAAqB7U,KAAK2P,oBAE9BkF,EAAmB1I,gBAAgBxL,GAAQ,SAAUwU,GACjD,GAAI,eAAOA,EAAOxU,OAAQA,GAEtB,OADAgV,EAAMR,GACC,KAGXQ,GACAd,EAAmBtJ,OAAOoK,IAUlClH,EAAa/O,UAAU0S,cAAgB,SAAU7D,GAC7C,IAAIiC,EAAa,eAAOjC,GACpBiC,KAAcxQ,KAAK6P,6BACZ7P,KAAK6P,sBAAsBW,GAG9BxQ,KAAK0P,gBACL1P,KAAK0P,eAAenE,OAAOgD,GAGnCvO,KAAKuS,sBAAsBhE,GAC3BvO,KAAKuQ,WAOT9B,EAAa/O,UAAU6S,sBAAwB,SAAUhE,GACrD,IAAIiC,EAAa,eAAOjC,GACxBvO,KAAKgQ,mBAAmBQ,GAAYxE,QAAQ,eACrChM,KAAKgQ,mBAAmBQ,GAC/B,IAAIW,EAAK5C,EAAQ6C,aACN3Q,IAAP0Q,UACOnR,KAAK8P,SAASqB,EAAGE,mBAErBrR,KAAK+P,UAAUS,GACtBxQ,KAAK6Q,cAAc,IAAI1C,EAAkB,OAAgB6D,cAAezD,KAS5EE,EAAa/O,UAAU8U,mBAAqB,SAAUjG,GAClD,IAAIqH,GAAU,EACd,IAAK,IAAIzE,KAAMnR,KAAK8P,SAChB,GAAI9P,KAAK8P,SAASqB,KAAQ5C,EAAS,QACxBvO,KAAK8P,SAASqB,GACrByE,GAAU,EACV,MAGR,OAAOA,GAQXnH,EAAa/O,UAAUmW,UAAY,SAAUxG,GACzCrP,KAAK+O,QAAUM,GAOnBZ,EAAa/O,UAAUoW,OAAS,SAAUrU,GACtC,eAAOzB,KAAKgP,QAAS,GACrBhP,KAAKoP,KAAO3N,EACZzB,KAAK6V,UAAU,eAAIpU,EAAKzB,KAAKgP,WAE1BP,EA/yBsB,CAgzB/B,QACa,U,oCC1+Bf,sKA4IIsH,EAAuB,WAIvB,SAASA,EAAM1V,GACX,IAAIE,EAAUF,GAAe,GAK7BL,KAAKgW,UAAY,KAKjBhW,KAAKiW,kBAAoBC,OACAzV,IAArBF,EAAQoQ,UACR3Q,KAAKmW,YAAY5V,EAAQoQ,UAM7B3Q,KAAKuC,WAAyB9B,IAAjBF,EAAQiC,KAAqBjC,EAAQiC,KAAO,KAKzDxC,KAAKoW,YAA2B3V,IAAlBF,EAAQuE,MAAsBvE,EAAQuE,MAAQ,KAK5D9E,KAAKqW,eAAiC5V,IAArBF,EAAQ+V,SAAyB/V,EAAQ+V,SAAW,KAKrEtW,KAAKmD,aAA6B1C,IAAnBF,EAAQ6C,OAAuB7C,EAAQ6C,OAAS,KAK/DpD,KAAKuW,WAAyB9V,IAAjBF,EAAQiW,KAAqBjW,EAAQiW,KAAO,KAKzDxW,KAAKyW,QAAUlW,EAAQmW,OAuK3B,OAhKAX,EAAMrW,UAAU+D,MAAQ,WACpB,IAAIkN,EAAW3Q,KAAK4Q,cAIpB,OAHID,GAAgC,kBAAbA,IACnBA,EAAgE,EAAWlN,SAExE,IAAIsS,EAAM,CACbpF,SAAUA,EACVnO,KAAMxC,KAAK4D,UAAY5D,KAAK4D,UAAUH,aAAUhD,EAChDqE,MAAO9E,KAAK4E,WAAa5E,KAAK4E,WAAWnB,aAAUhD,EACnD6V,SAAUtW,KAAK2W,cACfvT,OAAQpD,KAAKiE,YAAcjE,KAAKiE,YAAYR,aAAUhD,EACtD+V,KAAMxW,KAAK4W,UAAY5W,KAAK4W,UAAUnT,aAAUhD,EAChDiW,OAAQ1W,KAAK6W,eASrBd,EAAMrW,UAAUiX,YAAc,WAC1B,OAAO3W,KAAKqW,WAQhBN,EAAMrW,UAAUoX,YAAc,SAAUR,GACpCtW,KAAKqW,UAAYC,GASrBP,EAAMrW,UAAUkR,YAAc,WAC1B,OAAO5Q,KAAKgW,WAQhBD,EAAMrW,UAAUqX,oBAAsB,WAClC,OAAO/W,KAAKiW,mBAOhBF,EAAMrW,UAAUkE,QAAU,WACtB,OAAO5D,KAAKuC,OAOhBwT,EAAMrW,UAAUsX,QAAU,SAAUxU,GAChCxC,KAAKuC,MAAQC,GAOjBuT,EAAMrW,UAAUkF,SAAW,WACvB,OAAO5E,KAAKoW,QAOhBL,EAAMrW,UAAUuX,SAAW,SAAUnS,GACjC9E,KAAKoW,OAAStR,GAOlBiR,EAAMrW,UAAUuE,UAAY,WACxB,OAAOjE,KAAKmD,SAOhB4S,EAAMrW,UAAUwX,UAAY,SAAU9T,GAClCpD,KAAKmD,QAAUC,GAOnB2S,EAAMrW,UAAUkX,QAAU,WACtB,OAAO5W,KAAKuW,OAOhBR,EAAMrW,UAAUyX,QAAU,SAAUX,GAChCxW,KAAKuW,MAAQC,GAOjBT,EAAMrW,UAAUmX,UAAY,WACxB,OAAO7W,KAAKyW,SAUhBV,EAAMrW,UAAUyW,YAAc,SAAUxF,GACZ,oBAAbA,EACP3Q,KAAKiW,kBAAoBtF,EAEA,kBAAbA,EACZ3Q,KAAKiW,kBAAoB,SAAU1H,GAC/B,OAA6DA,EAAQtE,IAAI0G,IAGvEA,OAGYlQ,IAAbkQ,IACL3Q,KAAKiW,kBAAoB,WACrB,OAA4D,IAJhEjW,KAAKiW,kBAAoBC,EAO7BlW,KAAKgW,UAAYrF,GAQrBoF,EAAMrW,UAAU0X,UAAY,SAAUV,GAClC1W,KAAKyW,QAAUC,GAEZX,EAvNe,GAiOnB,SAASsB,EAAW1B,GACvB,IAAI2B,EACJ,GAAmB,oBAAR3B,EACP2B,EAAgB3B,MAEf,CAID,IAAI4B,EACJ,GAAI/X,MAAM4E,QAAQuR,GACd4B,EAAW5B,MAEV,CACD,eAAqD,oBAArB,EAAe,UAAkB,IACjE,IAAIhS,EAA6B,EACjC4T,EAAW,CAAC5T,GAEhB2T,EAAgB,WACZ,OAAOC,GAGf,OAAOD,EAKX,IAAIE,EAAgB,KAMb,SAASC,EAAmBlJ,EAASqG,GAMxC,IAAK4C,EAAe,CAChB,IAAIhV,EAAO,IAAI,OAAK,CAChBgG,MAAO,0BAEPpF,EAAS,IAAI,OAAO,CACpBoF,MAAO,UACPkP,MAAO,OAEXF,EAAgB,CACZ,IAAIzB,EAAM,CACNjR,MAAO,IAAI,OAAY,CACnBtC,KAAMA,EACNY,OAAQA,EACRP,OAAQ,IAEZL,KAAMA,EACNY,OAAQA,KAIpB,OAAOoU,EAMJ,SAASG,IAEZ,IAAIC,EAAS,GACTC,EAAQ,CAAC,IAAK,IAAK,IAAK,GACxBC,EAAO,CAAC,EAAG,IAAK,IAAK,GACrBJ,EAAQ,EA0CZ,OAzCAE,EAAO,OAAaG,SAAW,CAC3B,IAAIhC,EAAM,CACNvT,KAAM,IAAI,OAAK,CACXgG,MAAO,CAAC,IAAK,IAAK,IAAK,SAInCoP,EAAO,OAAaI,eAAiBJ,EAAO,OAAaG,SACzDH,EAAO,OAAaK,aAAe,CAC/B,IAAIlC,EAAM,CACN3S,OAAQ,IAAI,OAAO,CACfoF,MAAOqP,EACPH,MAAOA,EAAQ,MAGvB,IAAI3B,EAAM,CACN3S,OAAQ,IAAI,OAAO,CACfoF,MAAOsP,EACPJ,MAAOA,OAInBE,EAAO,OAAaM,mBAAqBN,EAAO,OAAaK,aAC7DL,EAAO,OAAaO,QAAUP,EAAO,OAAaG,SAASrL,OAAOkL,EAAO,OAAaK,cACtFL,EAAO,OAAa7Y,OAAS,CACzB,IAAIgX,EAAM,CACNjR,MAAO,IAAI,OAAY,CACnBjC,OAAgB,EAAR6U,EACRlV,KAAM,IAAI,OAAK,CACXgG,MAAOsP,IAEX1U,OAAQ,IAAI,OAAO,CACfoF,MAAOqP,EACPH,MAAOA,EAAQ,MAGvBhB,OAAQxQ,OAGhB0R,EAAO,OAAaQ,aAAeR,EAAO,OAAa7Y,OACvD6Y,EAAO,OAAaS,qBAAuBT,EAAO,OAAaG,SAASrL,OAAOkL,EAAO,OAAaK,aAAcL,EAAO,OAAa7Y,QAC9H6Y,EAOX,SAAS1B,EAAwB3H,GAC7B,OAAOA,EAAQqC,cAEJ,U,gECheA,GAKX0H,YAAa,cAKbC,aAAc,eAKdC,SAAU,WAKVC,UAAW,a,gGCxBXxZ,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GAyBxC2Y,EAAqB,KACrB,EAA2B,SAAUtY,GAUrC,SAASuY,EAAU7T,EAAOoF,EAAKjF,EAAM/D,EAAa0X,EAAYpQ,GAC1D,IAAIlI,EAAQF,EAAOR,KAAKI,OAASA,KAgDjC,OA3CAM,EAAMuY,mBAAqB,KAK3BvY,EAAM8V,OAAUtR,GAAQ,IAAIgU,MACR,OAAhB5X,IACiCZ,EAAY,OAAEY,YAAcA,GAMjEZ,EAAM+B,QAAU,GAKhB/B,EAAMyY,OAASvQ,EAKflI,EAAM0Y,UAAY,KAKlB1Y,EAAM2Y,YAAcL,EAKpBtY,EAAMgD,MAAQ2B,EAKd3E,EAAM4Y,KAAOhP,EAIb5J,EAAM6Y,SACC7Y,EA4KX,OAtOArB,EAAU0Z,EAAWvY,GAgErBuY,EAAUjZ,UAAU0Z,WAAa,WAC7B,QAAsB3Y,IAAlBT,KAAKmZ,UAA0BnZ,KAAKiZ,cAAgBI,EAAA,KAAW9T,OAAQ,CAClEmT,IACDA,EAAqB,eAAsB,EAAG,IAElDA,EAAmBY,UAAUtZ,KAAKoW,OAAQ,EAAG,GAC7C,IACIsC,EAAmBa,aAAa,EAAG,EAAG,EAAG,GACzCvZ,KAAKmZ,UAAW,EAEpB,MAAOvS,GACH8R,EAAqB,KACrB1Y,KAAKmZ,UAAW,GAGxB,OAAyB,IAAlBnZ,KAAKmZ,UAKhBR,EAAUjZ,UAAU8Z,qBAAuB,WACvCxZ,KAAK6Q,cAAc4I,EAAA,KAAU1I,SAKjC4H,EAAUjZ,UAAUga,kBAAoB,WACpC1Z,KAAKiZ,YAAcI,EAAA,KAAWM,MAC9B3Z,KAAK4Z,iBACL5Z,KAAKwZ,wBAKTb,EAAUjZ,UAAUma,iBAAmB,WACnC7Z,KAAKiZ,YAAcI,EAAA,KAAW9T,OAC1BvF,KAAKsD,OACLtD,KAAKoW,OAAOsB,MAAQ1X,KAAKsD,MAAM,GAC/BtD,KAAKoW,OAAO0D,OAAS9Z,KAAKsD,MAAM,IAGhCtD,KAAKsD,MAAQ,CAACtD,KAAKoW,OAAOsB,MAAO1X,KAAKoW,OAAO0D,QAEjD9Z,KAAK4Z,iBACL5Z,KAAKwZ,wBAMTb,EAAUjZ,UAAUkF,SAAW,SAAUC,GAErC,OADA7E,KAAK+Z,cAAclV,GACZ7E,KAAKqC,QAAQwC,GAAc7E,KAAKqC,QAAQwC,GAAc7E,KAAKoW,QAMtEuC,EAAUjZ,UAAU0F,cAAgB,SAAUP,GAE1C,OADA7E,KAAK+Z,cAAclV,GACZ7E,KAAKqC,QAAQwC,GAAcA,EAAa,GAKnD8T,EAAUjZ,UAAU4F,cAAgB,WAChC,OAAOtF,KAAKiZ,aAKhBN,EAAUjZ,UAAUgF,qBAAuB,WACvC,IAAK1E,KAAK6Y,mBACN,GAAI7Y,KAAKoZ,aAAc,CACnB,IAAI1B,EAAQ1X,KAAKsD,MAAM,GACnBwW,EAAS9Z,KAAKsD,MAAM,GACpB0B,EAAU,eAAsB0S,EAAOoC,GAC3C9U,EAAQgV,SAAS,EAAG,EAAGtC,EAAOoC,GAC9B9Z,KAAK6Y,mBAAqB7T,EAAQG,YAGlCnF,KAAK6Y,mBAAqB7Y,KAAKoW,OAGvC,OAAOpW,KAAK6Y,oBAMhBF,EAAUjZ,UAAU+F,QAAU,WAC1B,OAAOzF,KAAKsD,OAKhBqV,EAAUjZ,UAAUua,OAAS,WACzB,OAAOja,KAAKkZ,MAKhBP,EAAUjZ,UAAUkG,KAAO,WACvB,GAAI5F,KAAKiZ,aAAeI,EAAA,KAAWa,KAAM,CACrCla,KAAKiZ,YAAcI,EAAA,KAAWc,QAC9B,IACqCna,KAAW,OAAEkK,IAAMlK,KAAKkZ,KAE7D,MAAOtS,GACH5G,KAAK0Z,oBAET1Z,KAAKgZ,UAAY,eAAYhZ,KAAKoW,OAAQpW,KAAK6Z,iBAAiB3H,KAAKlS,MAAOA,KAAK0Z,kBAAkBxH,KAAKlS,SAOhH2Y,EAAUjZ,UAAUqa,cAAgB,SAAUlV,GAC1C,GAAK7E,KAAK+Y,SAAU/Y,KAAKqC,QAAQwC,GAAjC,CAGA,IAAIM,EAASiV,SAASC,cAAc,UACpCra,KAAKqC,QAAQwC,GAAcM,EAC3BA,EAAOuS,MAAQnR,KAAK8B,KAAKrI,KAAKoW,OAAOsB,MAAQ7S,GAC7CM,EAAO2U,OAASvT,KAAK8B,KAAKrI,KAAKoW,OAAO0D,OAASjV,GAC/C,IAAIyV,EAAMnV,EAAOoV,WAAW,MAO5B,GANAD,EAAInY,MAAM0C,EAAYA,GACtByV,EAAIhB,UAAUtZ,KAAKoW,OAAQ,EAAG,GAC9BkE,EAAIE,yBAA2B,WAIM,aAAjCF,EAAIE,0BAA2Cxa,KAAKoZ,aACpDkB,EAAI7R,UAAY,eAASzI,KAAK+Y,QAC9BuB,EAAIN,SAAS,EAAG,EAAG7U,EAAOuS,MAAQ7S,EAAYM,EAAO2U,OAASjV,GAC9DyV,EAAIE,yBAA2B,iBAC/BF,EAAIhB,UAAUtZ,KAAKoW,OAAQ,EAAG,OAE7B,CAOD,IANA,IAAIqE,EAAUH,EAAIf,aAAa,EAAG,EAAGpU,EAAOuS,MAAOvS,EAAO2U,QACtDtN,EAAOiO,EAAQjO,KACfkO,EAAI1a,KAAK+Y,OAAO,GAAK,IACrB4B,EAAI3a,KAAK+Y,OAAO,GAAK,IACrB3Z,EAAIY,KAAK+Y,OAAO,GAAK,IACrBtS,EAAIzG,KAAK+Y,OAAO,GACX9P,EAAI,EAAG+L,EAAKxI,EAAK5D,OAAQK,EAAI+L,EAAI/L,GAAK,EAC3CuD,EAAKvD,IAAMyR,EACXlO,EAAKvD,EAAI,IAAM0R,EACfnO,EAAKvD,EAAI,IAAM7J,EACfoN,EAAKvD,EAAI,IAAMxC,EAEnB6T,EAAIM,aAAaH,EAAS,EAAG,MAQrC9B,EAAUjZ,UAAUka,eAAiB,WAC7B5Z,KAAKgZ,YACLhZ,KAAKgZ,YACLhZ,KAAKgZ,UAAY,OAGlBL,EAvOmB,CAwO5B,QAUK,SAAS1O,EAAInF,EAAOoF,EAAKjF,EAAM/D,EAAa0X,EAAYpQ,GAC3D,IAAIuB,EAAY,OAAeE,IAAIC,EAAKhJ,EAAasH,GAKrD,OAJKuB,IACDA,EAAY,IAAI,EAAUjF,EAAOoF,EAAKjF,EAAM/D,EAAa0X,EAAYpQ,GACrE,OAAe4B,IAAIF,EAAKhJ,EAAasH,EAAOuB,IAEzCA,EAEI,I,YCvRX,EAAwC,WACxC,IAAI7K,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GAkExC,EAAsB,SAAUK,GAKhC,SAASya,EAAKxa,GACV,IAAIC,EAAQN,KACRO,EAAUF,GAAe,GAIzB4B,OAA8BxB,IAApBF,EAAQ0B,QAAwB1B,EAAQ0B,QAAU,EAI5DC,OAAgCzB,IAArBF,EAAQ2B,SAAyB3B,EAAQ2B,SAAW,EAI/DC,OAA0B1B,IAAlBF,EAAQ4B,MAAsB5B,EAAQ4B,MAAQ,EAItDH,OAA4CvB,IAA3BF,EAAQyB,gBAA+BzB,EAAQyB,eACpE1B,EAAQF,EAAOR,KAAKI,KAAM,CACtBiC,QAASA,EACTC,SAAUA,EACVC,MAAOA,EACPC,kBAAuC3B,IAAzBF,EAAQ6B,aAA6B7B,EAAQ6B,aAAe,CAAC,EAAG,GAC9EJ,eAAgBA,KACdhC,KAKNM,EAAM+C,aAA6B5C,IAAnBF,EAAQua,OAAuBva,EAAQua,OAAS,CAAC,GAAK,IAKtExa,EAAMya,kBAAoB,KAK1Bza,EAAM0a,mBACuBva,IAAzBF,EAAQ0a,aACF1a,EAAQ0a,aACRC,EAAW1C,SAKrBlY,EAAM6a,mBACuB1a,IAAzBF,EAAQ6a,aACF7a,EAAQ6a,aACRC,EAAA,KAAgBC,SAK1Bhb,EAAMib,mBACuB9a,IAAzBF,EAAQib,aACFjb,EAAQib,aACRH,EAAA,KAAgBC,SAK1Bhb,EAAMmb,kBACsBhb,IAAxBF,EAAQW,YAA4BX,EAAQW,YAAc,KAI9D,IAAI4D,OAAwBrE,IAAhBF,EAAQmb,IAAoBnb,EAAQmb,IAAM,KAIlDC,OAA8Blb,IAApBF,EAAQob,QAAwBpb,EAAQob,QAAU,KAI5DzR,EAAM3J,EAAQ2J,IAClB,sBAAiBzJ,IAARyJ,GAAqBpF,GAAQ,GACtC,gBAAQA,GAAUA,GAAS6W,EAAU,QACxBlb,IAARyJ,GAAoC,IAAfA,EAAItB,SAAiB9D,IAC3CoF,EAAsC,EAAQA,KAAO,eAAOpF,IAEhE,oBAAerE,IAARyJ,GAAqBA,EAAItB,OAAS,EAAG,GAI5C,IAAIgQ,OAA6BnY,IAAhBF,EAAQ2J,IAAoBmP,EAAA,KAAWa,KAAOb,EAAA,KAAW9T,OAmC1E,OA9BAjF,EAAMyY,YAA2BtY,IAAlBF,EAAQiI,MAAsB,eAAQjI,EAAQiI,OAAS,KAKtElI,EAAMsb,WAAa3R,EAAanF,EACV,EAAO6W,EAASrb,EAAMmb,aAAc7C,EAAYtY,EAAMyY,QAK5EzY,EAAMub,aAA6Bpb,IAAnBF,EAAQub,OAAuBvb,EAAQub,OAAS,CAAC,EAAG,GAKpExb,EAAMyb,mBACuBtb,IAAzBF,EAAQyb,aACFzb,EAAQyb,aACRd,EAAW1C,SAKrBlY,EAAMmC,QAAU,KAKhBnC,EAAMgD,WAAyB7C,IAAjBF,EAAQ0E,KAAqB1E,EAAQ0E,KAAO,KACnD3E,EAqMX,OAnUA,EAAUua,EAAMza,GAqIhBya,EAAKnb,UAAU+D,MAAQ,WACnB,IAAItB,EAAQnC,KAAK0D,WACjB,OAAO,IAAImX,EAAK,CACZC,OAAQ9a,KAAKqD,QAAQgB,QACrB4W,aAAcjb,KAAKgb,cACnBI,aAAcpb,KAAKmb,cACnBK,aAAcxb,KAAKub,cACnBra,YAAalB,KAAKyb,aAClBjT,MAAOxI,KAAK+Y,QAAU/Y,KAAK+Y,OAAO1U,MAC5BrE,KAAK+Y,OAAO1U,QACZrE,KAAK+Y,aAAUtY,EACrByJ,IAAKlK,KAAKia,SACV6B,OAAQ9b,KAAK6b,QAAQxX,QACrB2X,aAAchc,KAAK+b,cACnB9W,KAAqB,OAAfjF,KAAKsD,MAAiBtD,KAAKsD,MAAMe,aAAU5D,EACjDwB,QAASjC,KAAKwE,aACdrC,MAAO3C,MAAM4E,QAAQjC,GAASA,EAAMkC,QAAUlC,EAC9CD,SAAUlC,KAAKkE,cACflC,eAAgBhC,KAAKmE,uBAS7B0W,EAAKnb,UAAU+E,UAAY,WACvB,GAAIzE,KAAK+a,kBACL,OAAO/a,KAAK+a,kBAEhB,IAAID,EAAS9a,KAAKqD,QACd4B,EAAOjF,KAAKyF,UAChB,GAAIzF,KAAKmb,eAAiBE,EAAA,KAAgBC,UACtCtb,KAAKub,eAAiBF,EAAA,KAAgBC,SAAU,CAChD,IAAKrW,EACD,OAAO,KAEX6V,EAAS9a,KAAKqD,QAAQgB,QAClBrE,KAAKmb,eAAiBE,EAAA,KAAgBC,WACtCR,EAAO,IAAM7V,EAAK,IAElBjF,KAAKub,eAAiBF,EAAA,KAAgBC,WACtCR,EAAO,IAAM7V,EAAK,IAG1B,GAAIjF,KAAKgb,eAAiBE,EAAW1C,SAAU,CAC3C,IAAKvT,EACD,OAAO,KAEP6V,IAAW9a,KAAKqD,UAChByX,EAAS9a,KAAKqD,QAAQgB,SAEtBrE,KAAKgb,eAAiBE,EAAWzC,WACjCzY,KAAKgb,eAAiBE,EAAW3C,eACjCuC,EAAO,IAAMA,EAAO,GAAK7V,EAAK,IAE9BjF,KAAKgb,eAAiBE,EAAW5C,aACjCtY,KAAKgb,eAAiBE,EAAW3C,eACjCuC,EAAO,IAAMA,EAAO,GAAK7V,EAAK,IAGtC,IAAI7C,EAAepC,KAAKsE,kBAIxB,OAHAwW,EAAO,IAAM1Y,EAAa,GAC1B0Y,EAAO,IAAM1Y,EAAa,GAC1BpC,KAAK+a,kBAAoBD,EAClB9a,KAAK+a,mBAShBF,EAAKnb,UAAUuc,UAAY,SAAUnB,GACjC9a,KAAKqD,QAAUyX,EACf9a,KAAK+a,kBAAoB,MAO7BF,EAAKnb,UAAUmI,SAAW,WACtB,OAAO7H,KAAK+Y,QAQhB8B,EAAKnb,UAAUkF,SAAW,SAAUC,GAChC,OAAO7E,KAAK4b,WAAWhX,SAASC,IAQpCgW,EAAKnb,UAAU0F,cAAgB,SAAUP,GACrC,OAAO7E,KAAK4b,WAAWxW,cAAcP,IAKzCgW,EAAKnb,UAAU2F,aAAe,WAC1B,OAAOrF,KAAK4b,WAAWnW,WAK3BoV,EAAKnb,UAAU4F,cAAgB,WAC3B,OAAOtF,KAAK4b,WAAWtW,iBAK3BuV,EAAKnb,UAAUgF,qBAAuB,WAClC,OAAO1E,KAAK4b,WAAWlX,wBAO3BmW,EAAKnb,UAAU8F,UAAY,WACvB,GAAIxF,KAAKyC,QACL,OAAOzC,KAAKyC,QAEhB,IAAIqZ,EAAS9b,KAAK6b,QAClB,GAAI7b,KAAK+b,eAAiBb,EAAW1C,SAAU,CAC3C,IAAIvT,EAAOjF,KAAKyF,UACZyW,EAAgBlc,KAAK4b,WAAWnW,UACpC,IAAKR,IAASiX,EACV,OAAO,KAEXJ,EAASA,EAAOzX,QACZrE,KAAK+b,eAAiBb,EAAWzC,WACjCzY,KAAK+b,eAAiBb,EAAW3C,eACjCuD,EAAO,GAAKI,EAAc,GAAKjX,EAAK,GAAK6W,EAAO,IAEhD9b,KAAK+b,eAAiBb,EAAW5C,aACjCtY,KAAK+b,eAAiBb,EAAW3C,eACjCuD,EAAO,GAAKI,EAAc,GAAKjX,EAAK,GAAK6W,EAAO,IAIxD,OADA9b,KAAKyC,QAAUqZ,EACR9b,KAAKyC,SAOhBoY,EAAKnb,UAAUua,OAAS,WACpB,OAAOja,KAAK4b,WAAW3B,UAO3BY,EAAKnb,UAAU+F,QAAU,WACrB,OAAQzF,KAAKsD,MAAoCtD,KAAKsD,MAAjCtD,KAAK4b,WAAWnW,WAKzCoV,EAAKnb,UAAUgG,kBAAoB,SAAUC,GACzC3F,KAAK4b,WAAW9J,iBAAiB2H,EAAA,KAAU1I,OAAQpL,IASvDkV,EAAKnb,UAAUkG,KAAO,WAClB5F,KAAK4b,WAAWhW,QAKpBiV,EAAKnb,UAAUmG,oBAAsB,SAAUF,GAC3C3F,KAAK4b,WAAWO,oBAAoB1C,EAAA,KAAU1I,OAAQpL,IAEnDkV,EApUc,CAqUvB,QACa,U,oCCxYf,oGAII5b,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GA6ExCqc,EAA0B,SAAUhc,GAKpC,SAASgc,EAAS7b,GACd,IAAID,EAAQF,EAAOR,KAAKI,KAAM,CAC1BgB,aAAcT,EAAQS,aACtBC,UAAWV,EAAQU,UACnBC,YAAaX,EAAQW,YACrBC,eAAgBZ,EAAQY,eACxBX,WAAY,eAAc,aAC1Ba,2BAA4Bd,EAAQc,2BACpCqN,MAAO,OAAYyL,QACnB7Y,iBAAkBf,EAAQe,iBAC1BK,WAAyBlB,IAAlBF,EAAQoB,OAAsBpB,EAAQoB,MAC7CC,WAAYrB,EAAQqB,WACpBE,WAAYvB,EAAQuB,cAClB9B,KAWN,GANAM,EAAM+b,UAAY,KAKlB/b,EAAMgc,UAAY/b,EAAQQ,SACtBR,EAAQkB,IACR,GAAIlB,EAAQgc,MACR,eAAahc,EAAQkB,IAAKnB,EAAMkc,uBAAuBtK,KAAK5R,GAAQA,EAAMmc,oBAAoBvK,KAAK5R,QAElG,CACD,IAAIoc,EAAS,IAAIC,eACjBD,EAAO5K,iBAAiB,OAAQxR,EAAMsc,WAAW1K,KAAK5R,IACtDoc,EAAO5K,iBAAiB,QAASxR,EAAMuc,YAAY3K,KAAK5R,IACxDoc,EAAOI,KAAK,MAAOvc,EAAQkB,KAC3Bib,EAAOK,YAGNxc,EAAQyc,SACb1c,EAAMkc,uBAAuBjc,EAAQyc,UAGrC,gBAAO,EAAO,IAElB,OAAO1c,EA+EX,OA7HArB,EAAUmd,EAAUhc,GAoDpBgc,EAAS1c,UAAUkd,WAAa,SAAUtI,GACtC,IAAIoI,EAAwCpI,EAAY,OAExD,IAAKoI,EAAOO,QAAWP,EAAOO,QAAU,KAAOP,EAAOO,OAAS,IAAM,CACjE,IAAIC,OAAW,EACf,IACIA,EAAoCC,KAAKC,MAAMV,EAAOW,cAE1D,MAAOC,GAEH,YADAtd,KAAKyc,sBAGTzc,KAAKwc,uBAAuBU,QAG5Bld,KAAKyc,uBAObL,EAAS1c,UAAUmd,YAAc,SAAUvI,GACvCtU,KAAKyc,uBAMTL,EAAS1c,UAAU6d,YAAc,WAC7B,OAAOvd,KAAKqc,WAMhBD,EAAS1c,UAAU8c,uBAAyB,SAAUQ,GAClD,IAEIrc,EAFA6c,EAAqB,eAAc,aACnCC,EAAmBzd,KAAK0d,gBAE5B,QAA2Bjd,IAAvBuc,EAAS,UAAyB,CAClC,IAAIW,EAAY,eAA4BH,EAAoBC,GAChE9c,EAAS,eAAeqc,EAAS,UAAWW,GAEhD,IAAIC,EAAa,eAAqBH,GAClC3c,EAAUkc,EAAS,YAAc,EACjCnc,EAAUmc,EAAS,YAAc,GACjCtc,EAAW,eAAU,CACrBC,OAAQid,EACR/c,QAASA,EACTC,QAASA,EACTC,SAAUf,KAAKsc,YAInB,GAFAtc,KAAKU,SAAWA,EAChBV,KAAKwB,gBAAkB,eAAoBwb,EAAS,SAAUtc,QAC9BD,IAA5Buc,EAAS,iBAAiChd,KAAK6d,kBAAmB,CAClE,IAAIC,OAAiCrd,IAAXE,EAAuBA,EAASid,EAC1D5d,KAAK+d,iBAAgB,SAAUC,GAC3B,OAAI,eAAWF,EAAqBE,EAAWrd,QACpC,CAACqc,EAAS,gBAEd,QAGfhd,KAAKqc,UAAYW,EACjBhd,KAAKie,SAAS,OAAYtP,QAK9ByN,EAAS1c,UAAU+c,oBAAsB,WACrCzc,KAAKie,SAAS,OAAYtE,QAEvByC,EA9HkB,CA+H3B,QACa,U,oCC1MA,QACX8B,UAAW,YACX/D,QAAS,UACTxL,MAAO,QACPgL,MAAO,U,oCCXX,8FAqBWwE,EAAiB,UAUrB,SAASC,EAAYC,EAAIC,EAAIC,GAChC,IAAI1b,EAAS0b,GAAcJ,EACvBK,EAAO,eAAUH,EAAG,IACpBI,EAAO,eAAUH,EAAG,IACpBI,GAAeD,EAAOD,GAAQ,EAC9BG,EAAc,eAAUL,EAAG,GAAKD,EAAG,IAAM,EACzC5X,EAAIF,KAAKG,IAAIgY,GAAenY,KAAKG,IAAIgY,GACrCnY,KAAKG,IAAIiY,GACLpY,KAAKG,IAAIiY,GACTpY,KAAK8C,IAAImV,GACTjY,KAAK8C,IAAIoV,GACjB,OAAO,EAAI5b,EAAS0D,KAAKqY,MAAMrY,KAAKI,KAAKF,GAAIF,KAAKI,KAAK,EAAIF,IAsLxD,SAASqV,EAAOuC,EAAIQ,EAAUC,EAASP,GAC1C,IAAI1b,EAAS0b,GAAcJ,EACvBK,EAAO,eAAUH,EAAG,IACpBU,EAAO,eAAUV,EAAG,IACpBW,EAAOH,EAAWhc,EAClBoc,EAAM1Y,KAAK2Y,KAAK3Y,KAAKG,IAAI8X,GAAQjY,KAAK8C,IAAI2V,GAC1CzY,KAAK8C,IAAImV,GAAQjY,KAAKG,IAAIsY,GAAQzY,KAAK8C,IAAIyV,IAC3CK,EAAMJ,EACNxY,KAAKqY,MAAMrY,KAAKG,IAAIoY,GAAWvY,KAAKG,IAAIsY,GAAQzY,KAAK8C,IAAImV,GAAOjY,KAAK8C,IAAI2V,GAAQzY,KAAKG,IAAI8X,GAAQjY,KAAKG,IAAIuY,IAC/G,MAAO,CAAC,eAAUE,GAAM,eAAUF,M,oCClOvB,QAKX3D,SAAU,WAKV8D,OAAQ,W,oCCHZ,IAAIC,EAAsB,WAItB,SAASA,EAAKhf,GACV,IAAIE,EAAUF,GAAe,GAK7BL,KAAK+Y,YAA2BtY,IAAlBF,EAAQiI,MAAsBjI,EAAQiI,MAAQ,KA8BhE,OAvBA6W,EAAK3f,UAAU+D,MAAQ,WACnB,IAAI+E,EAAQxI,KAAK6H,WACjB,OAAO,IAAIwX,EAAK,CACZ7W,MAAOhJ,MAAM4E,QAAQoE,GAASA,EAAMnE,QAAUmE,QAAS/H,KAQ/D4e,EAAK3f,UAAUmI,SAAW,WACtB,OAAO7H,KAAK+Y,QAQhBsG,EAAK3f,UAAU4f,SAAW,SAAU9W,GAChCxI,KAAK+Y,OAASvQ,GAEX6W,EAxCc,GA0CV,U,kCC/Bf,IAAIE,EAAwB,WAIxB,SAASA,EAAOlf,GACZ,IAAIE,EAAUF,GAAe,GAK7BL,KAAK+Y,YAA2BtY,IAAlBF,EAAQiI,MAAsBjI,EAAQiI,MAAQ,KAK5DxI,KAAKwf,SAAWjf,EAAQkf,QAKxBzf,KAAK0f,eAAiCjf,IAArBF,EAAQoH,SAAyBpH,EAAQoH,SAAW,KAKrE3H,KAAK2f,gBAAkBpf,EAAQqH,eAK/B5H,KAAK4f,UAAYrf,EAAQwF,SAKzB/F,KAAK6f,YAActf,EAAQ0F,WAK3BjG,KAAK8f,OAASvf,EAAQmX,MAgJ1B,OAzIA6H,EAAO7f,UAAU+D,MAAQ,WACrB,IAAI+E,EAAQxI,KAAK6H,WACjB,OAAO,IAAI0X,EAAO,CACd/W,MAAOhJ,MAAM4E,QAAQoE,GAASA,EAAMnE,QAAUmE,QAAS/H,EACvDgf,QAASzf,KAAK+f,aACdpY,SAAU3H,KAAK+H,cAAgB/H,KAAK+H,cAAc1D,aAAU5D,EAC5DmH,eAAgB5H,KAAKgI,oBACrBjC,SAAU/F,KAAKiI,cACfhC,WAAYjG,KAAKkI,gBACjBwP,MAAO1X,KAAK8H,cAQpByX,EAAO7f,UAAUmI,SAAW,WACxB,OAAO7H,KAAK+Y,QAOhBwG,EAAO7f,UAAUqgB,WAAa,WAC1B,OAAO/f,KAAKwf,UAOhBD,EAAO7f,UAAUqI,YAAc,WAC3B,OAAO/H,KAAK0f,WAOhBH,EAAO7f,UAAUsI,kBAAoB,WACjC,OAAOhI,KAAK2f,iBAOhBJ,EAAO7f,UAAUuI,YAAc,WAC3B,OAAOjI,KAAK4f,WAOhBL,EAAO7f,UAAUwI,cAAgB,WAC7B,OAAOlI,KAAK6f,aAOhBN,EAAO7f,UAAUoI,SAAW,WACxB,OAAO9H,KAAK8f,QAQhBP,EAAO7f,UAAU4f,SAAW,SAAU9W,GAClCxI,KAAK+Y,OAASvQ,GAQlB+W,EAAO7f,UAAUsgB,WAAa,SAAUP,GACpCzf,KAAKwf,SAAWC,GAcpBF,EAAO7f,UAAUiJ,YAAc,SAAUhB,GACrC3H,KAAK0f,UAAY/X,GAQrB4X,EAAO7f,UAAUugB,kBAAoB,SAAUrY,GAC3C5H,KAAK2f,gBAAkB/X,GAQ3B2X,EAAO7f,UAAUwgB,YAAc,SAAUna,GACrC/F,KAAK4f,UAAY7Z,GAQrBwZ,EAAO7f,UAAUygB,cAAgB,SAAUla,GACvCjG,KAAK6f,YAAc5Z,GAQvBsZ,EAAO7f,UAAU0gB,SAAW,SAAU1I,GAClC1X,KAAK8f,OAASpI,GAEX6H,EAxLgB,GA0LZ,U,oGC7MA,GAMXc,cAAe,gBAOfC,YAAa,cAMbC,cAAe,iB,gGCzBfthB,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GA2DxC,EAA4B,SAAUK,GAKtC,SAASogB,EAAWjgB,GAChB,IAAID,EAAQF,EAAOR,KAAKI,KAAM,CAC1BgB,aAAcT,EAAQS,aACtBa,wBAAyBtB,EAAQsB,wBACjCrB,WAAYD,EAAQC,WACpBkO,MAAOnO,EAAQmO,MACf/M,MAAOpB,EAAQoB,SACb3B,KAINM,EAAMsO,GAINtO,EAAMuO,KAINvO,EAAMwO,GAKNxO,EAAMmgB,aAA6BhgB,IAAnBF,EAAQa,QAAuBb,EAAQa,OAKvDd,EAAMogB,qBACyBjgB,IAA3BF,EAAQgB,eAA+BhB,EAAQgB,eAAiB,EAKpEjB,EAAMI,cAAgCD,IAArBF,EAAQG,SAAyBH,EAAQG,SAAW,KACrE,IAAIK,EAAW,CAAC,IAAK,KACjBL,EAAWH,EAAQG,SAgCvB,OA/BIA,GACA,eAAOA,EAASigB,YAAYjgB,EAASkgB,cAAe7f,GAMxDT,EAAMugB,UAAY,IAAIC,EAAA,KAAUvgB,EAAQU,WAAa,GAKrDX,EAAMygB,QAAU,CAAC,EAAG,GAKpBzgB,EAAMkN,KAAOjN,EAAQuJ,KAAO,GAK5BxJ,EAAM0gB,YAAc,CAAEpf,WAAYrB,EAAQqB,YAQ1CtB,EAAMwB,WAAavB,EAAQuB,WAAavB,EAAQuB,WAAa,EACtDxB,EAgNX,OAzRArB,EAAUuhB,EAAYpgB,GA8EtBogB,EAAW9gB,UAAUkK,eAAiB,WAClC,OAAO5J,KAAK6gB,UAAUjX,kBAM1B4W,EAAW9gB,UAAUuhB,YAAc,SAAUzgB,EAAY0gB,GACrD,IAAIL,EAAY7gB,KAAKmhB,0BAA0B3gB,GAC3CqgB,GACAA,EAAUI,YAAYC,IAY9BV,EAAW9gB,UAAU0hB,kBAAoB,SAAU5gB,EAAY6gB,EAAGC,EAAWrV,GACzE,IAAI4U,EAAY7gB,KAAKmhB,0BAA0B3gB,GAC/C,IAAKqgB,EACD,OAAO,EAIX,IAFA,IACIU,EAAMC,EAAcC,EADpBC,GAAU,EAELnO,EAAI+N,EAAUtW,KAAMuI,GAAK+N,EAAUpW,OAAQqI,EAChD,IAAK,IAAIC,EAAI8N,EAAUrW,KAAMuI,GAAK8N,EAAUnW,OAAQqI,EAChDgO,EAAe,eAAUH,EAAG9N,EAAGC,GAC/BiO,GAAS,EACLZ,EAAUzT,YAAYoU,KACtBD,EAAqDV,EAAU5W,IAAIuX,GACnEC,EAASF,EAAKI,aAAeC,EAAA,KAAUrc,OACnCkc,IACAA,GAA4B,IAAnBxV,EAASsV,KAGrBE,IACDC,GAAU,GAItB,OAAOA,GAMXlB,EAAW9gB,UAAUmiB,uBAAyB,SAAUrhB,GACpD,OAAO,GAOXggB,EAAW9gB,UAAUyK,OAAS,WAC1B,OAAOnK,KAAKwN,MAOhBgT,EAAW9gB,UAAUoiB,OAAS,SAAUhY,GAChC9J,KAAKwN,OAAS1D,IACd9J,KAAKwN,KAAO1D,EACZ9J,KAAKuQ,YAObiQ,EAAW9gB,UAAUqiB,UAAY,SAAUvhB,GACvC,OAAOR,KAAKygB,SAKhBD,EAAW9gB,UAAUsiB,eAAiB,WAClC,OAAOhiB,KAAKU,SAASshB,kBAWzBxB,EAAW9gB,UAAUuiB,QAAU,SAAUZ,EAAG9N,EAAGC,EAAG3O,EAAYrE,GAC1D,OAAO,kBAOXggB,EAAW9gB,UAAUwiB,YAAc,WAC/B,OAAOliB,KAAKU,UAMhB8f,EAAW9gB,UAAUyiB,yBAA2B,SAAU3hB,GACtD,OAAKR,KAAKU,SAICV,KAAKU,SAHL,eAAyBF,IAWxCggB,EAAW9gB,UAAUyhB,0BAA4B,SAAU3gB,GAGvD,OAFA,eAAO,eAAWR,KAAK0d,gBAAiBld,GAAa,IAE9CR,KAAK6gB,WAShBL,EAAW9gB,UAAU0iB,kBAAoB,SAAUvd,GAC/C,OAAO7E,KAAK0gB,iBAQhBF,EAAW9gB,UAAU2iB,iBAAmB,SAAUhB,EAAGxc,EAAYrE,GAC7D,IAAIE,EAAWV,KAAKmiB,yBAAyB3hB,GACzCe,EAAiBvB,KAAKoiB,kBAAkBvd,GACxC9D,EAAW,eAAOL,EAASigB,YAAYU,GAAIrhB,KAAK+gB,SACpD,OAAsB,GAAlBxf,EACOR,EAGA,eAAUA,EAAUQ,EAAgBvB,KAAK+gB,UAYxDP,EAAW9gB,UAAU4iB,+BAAiC,SAAUC,EAAWC,GACvE,IAAIhiB,OAAgCC,IAAnB+hB,EAA+BA,EAAiBxiB,KAAK0d,gBAClEhd,EAAWV,KAAKmiB,yBAAyB3hB,GAI7C,OAHIR,KAAKyiB,YAAcjiB,EAAWkiB,aAC9BH,EAAY,eAAM7hB,EAAU6hB,EAAW/hB,IAEpC,eAAiB+hB,EAAW7hB,GAAY6hB,EAAY,MAM/D/B,EAAW9gB,UAAUiK,MAAQ,WACzB3J,KAAK6gB,UAAUlX,SAEnB6W,EAAW9gB,UAAU+V,QAAU,WAC3BzV,KAAK2J,QACLvJ,EAAOV,UAAU+V,QAAQ7V,KAAKI,OAOlCwgB,EAAW9gB,UAAUijB,gBAAkB,SAAUC,EAAWpiB,GACxD,IAAIqgB,EAAY7gB,KAAKmhB,0BAA0B3gB,GAC3CoiB,EAAY/B,EAAU/T,gBACtB+T,EAAU/T,cAAgB8V,IAWlCpC,EAAW9gB,UAAUmjB,QAAU,SAAUxB,EAAG9N,EAAGC,EAAGhT,KAC3CggB,EA1RoB,CA2R7BsC,EAAA,MAMEC,EAAiC,SAAU3iB,GAM3C,SAAS2iB,EAAgB3U,EAAMmT,GAC3B,IAAIjhB,EAAQF,EAAOR,KAAKI,KAAMoO,IAASpO,KAOvC,OADAM,EAAMihB,KAAOA,EACNjhB,EAEX,OAfArB,EAAU8jB,EAAiB3iB,GAepB2iB,EAhByB,CAiBlCC,EAAA,MAEa,I,YC/WX,EAAwC,WACxC,IAAI9jB,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GAiDxC,EAAyB,SAAUK,GAKnC,SAAS6iB,EAAQ1iB,GACb,IAAID,EAAQF,EAAOR,KAAKI,KAAM,CAC1BgB,aAAcT,EAAQS,aACtBC,UAAWV,EAAQU,UACnBG,OAAQb,EAAQa,OAChBZ,WAAYD,EAAQC,WACpBkO,MAAOnO,EAAQmO,MACfhO,SAAUH,EAAQG,SAClBa,eAAgBhB,EAAQgB,eACxBI,MAAOpB,EAAQoB,MACfC,WAAYrB,EAAQqB,WACpBkI,IAAKvJ,EAAQuJ,IACbjI,wBAAyBtB,EAAQsB,wBACjCC,WAAYvB,EAAQuB,cAClB9B,KA+BN,OA1BAM,EAAM4iB,yBACF5iB,EAAMkB,kBAAoByhB,EAAQvjB,UAAU8B,gBAKhDlB,EAAMgB,iBAAmBf,EAAQe,iBAC7Bf,EAAQiB,kBACRlB,EAAMkB,gBAAkBjB,EAAQiB,iBAMpClB,EAAMoB,KAAO,KACTnB,EAAQmB,KACRpB,EAAM6iB,QAAQ5iB,EAAQmB,MAEjBnB,EAAQkB,KACbnB,EAAMwV,OAAOvV,EAAQkB,KAMzBnB,EAAM8iB,iBAAmB,GAClB9iB,EAiIX,OAlLA,EAAU2iB,EAAS7iB,GAwDnB6iB,EAAQvjB,UAAU2jB,oBAAsB,WACpC,OAAOrjB,KAAKsB,kBAOhB2hB,EAAQvjB,UAAU4jB,mBAAqB,WACnC,OAAOjkB,OAAOkkB,eAAevjB,MAAMwB,kBAAoBxB,KAAKwB,gBACtDxB,KAAKwB,gBAAgB0Q,KAAKlS,MAC1BA,KAAKwB,iBASfyhB,EAAQvjB,UAAU8jB,QAAU,WACxB,OAAOxjB,KAAK0B,MAOhBuhB,EAAQvjB,UAAU+jB,iBAAmB,SAAUnP,GAC3C,IAGIlG,EAHAmT,EAAoDjN,EAAY,OAChE9I,EAAM,eAAO+V,GACbmC,EAAYnC,EAAKI,WAEjB+B,GAAa9B,EAAA,KAAUzH,SACvBna,KAAKojB,iBAAiB5X,IAAO,EAC7B4C,EAAOuV,EAActD,eAEhB7U,KAAOxL,KAAKojB,0BACVpjB,KAAKojB,iBAAiB5X,GAC7B4C,EACIsV,GAAa9B,EAAA,KAAUjI,MACjBgK,EAAcpD,cACdmD,GAAa9B,EAAA,KAAUrc,OACnBoe,EAAcrD,iBACd7f,QAENA,GAAR2N,GACApO,KAAK6Q,cAAc,IAAIkS,EAAgB3U,EAAMmT,KAQrD0B,EAAQvjB,UAAUkkB,oBAAsB,SAAUtiB,GAC9CtB,KAAK6gB,UAAUlX,QACf3J,KAAKsB,iBAAmBA,EACxBtB,KAAKuQ,WAQT0S,EAAQvjB,UAAUmkB,mBAAqB,SAAUriB,EAAiBsI,GAC9D9J,KAAKwB,gBAAkBA,EACvBxB,KAAK6gB,UAAUiD,qBACI,qBAARha,EACP9J,KAAK8hB,OAAOhY,GAGZ9J,KAAKuQ,WAQb0S,EAAQvjB,UAAUoW,OAAS,SAAUrU,GACjC,IAAIC,EAAO,eAAUD,GACrBzB,KAAK0B,KAAOA,EACZ1B,KAAKmjB,QAAQzhB,IAOjBuhB,EAAQvjB,UAAUyjB,QAAU,SAAUzhB,GAClC1B,KAAK0B,KAAOA,EACZ,IAAIoI,EAAMpI,EAAKqiB,KAAK,MAChB/jB,KAAKkjB,yBACLljB,KAAK6jB,mBAAmB,eAAoBniB,EAAM1B,KAAKU,UAAWoJ,GAGlE9J,KAAK8hB,OAAOhY,IASpBmZ,EAAQvjB,UAAU8B,gBAAkB,SAAU+gB,EAAW1d,EAAYrE,KASrEyiB,EAAQvjB,UAAUmjB,QAAU,SAAUxB,EAAG9N,EAAGC,GACxC,IAAIgO,EAAe,eAAUH,EAAG9N,EAAGC,GAC/BxT,KAAK6gB,UAAUzT,YAAYoU,IAC3BxhB,KAAK6gB,UAAU5W,IAAIuX,IAGpByB,EAnLiB,CAoL1B,GACa,I,wBCtOX,EAAwC,WACxC,IAAI/jB,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GAgFxC,EAA2B,SAAUK,GAKrC,SAAS4jB,EAAUzjB,GACf,IAAID,EAAQF,EAAOR,KAAKI,KAAM,CAC1BgB,aAAcT,EAAQS,aACtBC,UAAWV,EAAQU,UACnBG,OAAQb,EAAQa,OAChBZ,WAAYD,EAAQC,WACpBkO,MAAOnO,EAAQmO,MACfhO,SAAUH,EAAQG,SAClBY,iBAAkBf,EAAQe,iBACpBf,EAAQe,iBACR2iB,EACN1iB,eAAgBhB,EAAQgB,eACxBC,gBAAiBjB,EAAQiB,gBACzBC,IAAKlB,EAAQkB,IACbC,KAAMnB,EAAQmB,KACdC,MAAOpB,EAAQoB,MACfC,WAAYrB,EAAQqB,WACpBkI,IAAKvJ,EAAQuJ,IACbjI,wBAAyBtB,EAAQsB,wBACjCC,WAAYvB,EAAQuB,cAClB9B,KAuCN,OAlCAM,EAAMY,iBACsBT,IAAxBF,EAAQW,YAA4BX,EAAQW,YAAc,KAK9DZ,EAAM4jB,eACoBzjB,IAAtBF,EAAQ2jB,UAA0B3jB,EAAQ2jB,UAAYC,EAAA,KAK1D7jB,EAAM8jB,uBAAyB,GAK/B9jB,EAAM+jB,sBAAwB,GAK9B/jB,EAAMgkB,4BAA8B/jB,EAAQc,2BAK5Cf,EAAMikB,iBACyB,IAA3BhkB,EAAQY,eAA2B,YAA2BV,EAKlEH,EAAMkkB,0BAA2B,EAC1BlkB,EAoRX,OAnVA,EAAU0jB,EAAW5jB,GAoErB4jB,EAAUtkB,UAAUkK,eAAiB,WACjC,IAAK,OACD,OAAOxJ,EAAOV,UAAUkK,eAAehK,KAAKI,MAEhD,GAAIA,KAAK6gB,UAAUjX,iBACf,OAAO,EAGP,IAAK,IAAIE,KAAO9J,KAAKokB,uBACjB,GAAIpkB,KAAKokB,uBAAuBta,GAAKF,iBACjC,OAAO,EAInB,OAAO,GAMXoa,EAAUtkB,UAAUuhB,YAAc,SAAUzgB,EAAY0gB,GACpD,GAAK,OAAL,CAIA,IAAIuD,EAAgBzkB,KAAKmhB,0BAA0B3gB,GAEnD,IAAK,IAAI2Q,KADTnR,KAAK6gB,UAAUI,YAAYjhB,KAAK6gB,WAAa4D,EAAgBvD,EAAY,IAC1DlhB,KAAKokB,uBAAwB,CACxC,IAAIvD,EAAY7gB,KAAKokB,uBAAuBjT,GAC5C0P,EAAUI,YAAYJ,GAAa4D,EAAgBvD,EAAY,UAP/D9gB,EAAOV,UAAUuhB,YAAYrhB,KAAKI,KAAMQ,EAAY0gB,IAa5D8C,EAAUtkB,UAAUglB,kBAAoB,WACpC,OAAO1kB,KAAKukB,iBAMhBP,EAAUtkB,UAAUmiB,uBAAyB,SAAUrhB,GACnD,OAAI,QACAR,KAAK0d,iBACLld,IACC,eAAWR,KAAK0d,gBAAiBld,GAC3B,EAGAR,KAAK2kB,aAMpBX,EAAUtkB,UAAUilB,UAAY,WAC5B,OAAO,GAOXX,EAAUtkB,UAAUyK,OAAS,WACzB,OAAQ/J,EAAOV,UAAUyK,OAAOvK,KAAKI,OAChCA,KAAKukB,gBAAkB,KAAOpH,KAAKyH,UAAU5kB,KAAKukB,iBAAmB,KAM9EP,EAAUtkB,UAAUqiB,UAAY,SAAUvhB,GACtC,QAAI,QACAR,KAAK0d,iBACLld,IACC,eAAWR,KAAK0d,gBAAiBld,KAI3BJ,EAAOV,UAAUqiB,UAAUniB,KAAKI,KAAMQ,IAOrDwjB,EAAUtkB,UAAUyiB,yBAA2B,SAAU3hB,GACrD,IAAK,OACD,OAAOJ,EAAOV,UAAUyiB,yBAAyBviB,KAAKI,KAAMQ,GAEhE,IAAIqkB,EAAW7kB,KAAK0d,gBACpB,IAAI1d,KAAKU,UAAcmkB,IAAY,eAAWA,EAAUrkB,GAGnD,CACD,IAAIskB,EAAU,eAAOtkB,GAKrB,OAJMskB,KAAW9kB,KAAKqkB,wBAClBrkB,KAAKqkB,sBAAsBS,GACvB,eAAyBtkB,IAE1BR,KAAKqkB,sBAAsBS,GARlC,OAAO9kB,KAAKU,UAepBsjB,EAAUtkB,UAAUyhB,0BAA4B,SAAU3gB,GACtD,IAAK,OACD,OAAOJ,EAAOV,UAAUyhB,0BAA0BvhB,KAAKI,KAAMQ,GAEjE,IAAIqkB,EAAW7kB,KAAK0d,gBACpB,IAAKmH,GAAY,eAAWA,EAAUrkB,GAClC,OAAOR,KAAK6gB,UAGZ,IAAIiE,EAAU,eAAOtkB,GAIrB,OAHMskB,KAAW9kB,KAAKokB,yBAClBpkB,KAAKokB,uBAAuBU,GAAW,IAAIhE,EAAA,KAAU9gB,KAAK6gB,UAAU/T,gBAEjE9M,KAAKokB,uBAAuBU,IAa3Cd,EAAUtkB,UAAUqlB,YAAc,SAAU1D,EAAG9N,EAAGC,EAAG3O,EAAYrE,EAAYsJ,GACzE,IAAIyY,EAAY,CAAClB,EAAG9N,EAAGC,GACnBwR,EAAehlB,KAAKsiB,+BAA+BC,EAAW/hB,GAC9DykB,EAAUD,EACRhlB,KAAKwB,gBAAgBwjB,EAAcngB,EAAYrE,QAC/CC,EACF8gB,EAAO,IAAIvhB,KAAKkkB,UAAU3B,OAAuB9hB,IAAZwkB,EAAwBrD,EAAA,KAAU1H,KAAO0H,EAAA,KAAUsD,WAAmBzkB,IAAZwkB,EAAwBA,EAAU,GAAIjlB,KAAKkB,YAAalB,KAAKsB,iBAAkBtB,KAAKghB,aAGvL,OAFAO,EAAKzX,IAAMA,EACXyX,EAAKzP,iBAAiB2H,EAAA,KAAU1I,OAAQ/Q,KAAKyjB,iBAAiBvR,KAAKlS,OAC5DuhB,GAUXyC,EAAUtkB,UAAUuiB,QAAU,SAAUZ,EAAG9N,EAAGC,EAAG3O,EAAYrE,GACzD,IAAIid,EAAmBzd,KAAK0d,gBAC5B,GAAK,QACAD,GACAjd,IACD,eAAWid,EAAkBjd,GAG5B,CACD,IAAI2kB,EAAQnlB,KAAKmhB,0BAA0B3gB,GACvC+hB,EAAY,CAAClB,EAAG9N,EAAGC,GACnB+N,OAAO,EACPC,EAAe,eAAOe,GACtB4C,EAAM/X,YAAYoU,KAClBD,EAAO4D,EAAMlb,IAAIuX,IAErB,IAAI1X,EAAM9J,KAAKmK,SACf,GAAIoX,GAAQA,EAAKzX,KAAOA,EACpB,OAAOyX,EAGP,IAAI6D,EAAiBplB,KAAKmiB,yBAAyB1E,GAC/C4H,EAAiBrlB,KAAKmiB,yBAAyB3hB,GAC/C8kB,EAAmBtlB,KAAKsiB,+BAA+BC,EAAW/hB,GAClE+kB,EAAU,IAAI,OAAW9H,EAAkB2H,EAAgB5kB,EAAY6kB,EAAgB9C,EAAW+C,EAAkBtlB,KAAKoiB,kBAAkBvd,GAAa7E,KAAK2kB,YAAa,SAAUtD,EAAG9N,EAAGC,EAAG3O,GAC7L,OAAO7E,KAAKwlB,gBAAgBnE,EAAG9N,EAAGC,EAAG3O,EAAY4Y,IACnDvL,KAAKlS,MAAOA,KAAKskB,4BAA6BtkB,KAAKwkB,yBAA0BxkB,KAAKukB,iBAUpF,OATAgB,EAAQzb,IAAMA,EACVyX,GACAgE,EAAQE,YAAclE,EACtBgE,EAAQG,sBACRP,EAAMjX,QAAQsT,EAAc+D,IAG5BJ,EAAM/a,IAAIoX,EAAc+D,GAErBA,EA9BX,OAAOvlB,KAAKwlB,gBAAgBnE,EAAG9N,EAAGC,EAAG3O,EAAY4Y,GAAoBjd,IA2C7EwjB,EAAUtkB,UAAU8lB,gBAAkB,SAAUnE,EAAG9N,EAAGC,EAAG3O,EAAYrE,GACjE,IAAI+gB,EAAO,KACPC,EAAe,eAAUH,EAAG9N,EAAGC,GAC/B1J,EAAM9J,KAAKmK,SACf,GAAKnK,KAAK6gB,UAAUzT,YAAYoU,IAM5B,GADAD,EAAOvhB,KAAK6gB,UAAU5W,IAAIuX,GACtBD,EAAKzX,KAAOA,EAAK,CAIjB,IAAI2b,EAAclE,EAClBA,EAAOvhB,KAAK+kB,YAAY1D,EAAG9N,EAAGC,EAAG3O,EAAYrE,EAAYsJ,GAErD2b,EAAY9D,YAAcC,EAAA,KAAU1H,KAEpCqH,EAAKkE,YAAcA,EAAYA,YAG/BlE,EAAKkE,YAAcA,EAEvBlE,EAAKmE,sBACL1lB,KAAK6gB,UAAU3S,QAAQsT,EAAcD,SApBzCA,EAAOvhB,KAAK+kB,YAAY1D,EAAG9N,EAAGC,EAAG3O,EAAYrE,EAAYsJ,GACzD9J,KAAK6gB,UAAUzW,IAAIoX,EAAcD,GAsBrC,OAAOA,GAOXyC,EAAUtkB,UAAUimB,2BAA6B,SAAUniB,GACvD,GAAK,QACDxD,KAAKwkB,0BAA4BhhB,EADrC,CAKA,IAAK,IAAI2N,KADTnR,KAAKwkB,yBAA2BhhB,EACjBxD,KAAKokB,uBAChBpkB,KAAKokB,uBAAuBjT,GAAIxH,QAEpC3J,KAAKuQ,YAcTyT,EAAUtkB,UAAUkmB,yBAA2B,SAAUplB,EAAYqlB,GACjE,GAAI,OAA4B,CAC5B,IAAIC,EAAO,eAActlB,GACzB,GAAIslB,EAAM,CACN,IAAIhB,EAAU,eAAOgB,GACfhB,KAAW9kB,KAAKqkB,wBAClBrkB,KAAKqkB,sBAAsBS,GAAWe,MAK/C7B,EApVmB,CAqV5B,GAKF,SAASC,EAAwB8B,EAAW7b,GACU6b,EAAUnhB,WAAYsF,IACpEA,EAEO,U,kCCxaA,QAMX4G,WAAY,aAMZ2D,cAAe,gBAMfhC,MAAO,QAOPT,cAAe,gBAMfqD,kBAAmB,oBAMnBC,gBAAiB,kBAMjBC,kBAAmB,sB,kCCjDvB,4BAqBIyQ,EAA4B,WAI5B,SAASA,EAAWzlB,GAKhBP,KAAKimB,SAAW1lB,EAAQ0B,QAKxBjC,KAAKkmB,gBAAkB3lB,EAAQyB,eAK/BhC,KAAKmmB,UAAY5lB,EAAQ2B,SAKzBlC,KAAKomB,OAAS7lB,EAAQ4B,MAKtBnC,KAAKqmB,YAAc,eAAO9lB,EAAQ4B,OAKlCnC,KAAKsmB,cAAgB/lB,EAAQ6B,aAyLjC,OAlLA4jB,EAAWtmB,UAAU+D,MAAQ,WACzB,IAAItB,EAAQnC,KAAK0D,WACjB,OAAO,IAAIsiB,EAAW,CAClB/jB,QAASjC,KAAKwE,aACdrC,MAAO3C,MAAM4E,QAAQjC,GAASA,EAAMkC,QAAUlC,EAC9CD,SAAUlC,KAAKkE,cACflC,eAAgBhC,KAAKmE,oBACrB/B,aAAcpC,KAAKsE,kBAAkBD,WAQ7C2hB,EAAWtmB,UAAU8E,WAAa,WAC9B,OAAOxE,KAAKimB,UAOhBD,EAAWtmB,UAAUyE,kBAAoB,WACrC,OAAOnE,KAAKkmB,iBAOhBF,EAAWtmB,UAAUwE,YAAc,WAC/B,OAAOlE,KAAKmmB,WAOhBH,EAAWtmB,UAAUgE,SAAW,WAC5B,OAAO1D,KAAKomB,QAMhBJ,EAAWtmB,UAAU6mB,cAAgB,WACjC,OAAOvmB,KAAKqmB,aAOhBL,EAAWtmB,UAAU4E,gBAAkB,WACnC,OAAOtE,KAAKsmB,eAQhBN,EAAWtmB,UAAU+E,UAAY,WAC7B,OAAO,kBAQXuhB,EAAWtmB,UAAUkF,SAAW,SAAUC,GACtC,OAAO,kBAMXmhB,EAAWtmB,UAAUgF,qBAAuB,WACxC,OAAO,kBAOXshB,EAAWtmB,UAAU0F,cAAgB,SAAUP,GAC3C,OAAO,GAMXmhB,EAAWtmB,UAAU4F,cAAgB,WACjC,OAAO,kBAMX0gB,EAAWtmB,UAAU2F,aAAe,WAChC,OAAO,kBAOX2gB,EAAWtmB,UAAU8F,UAAY,WAC7B,OAAO,kBAOXwgB,EAAWtmB,UAAU+F,QAAU,WAC3B,OAAO,kBAQXugB,EAAWtmB,UAAU6E,WAAa,SAAUtC,GACxCjC,KAAKimB,SAAWhkB,GAQpB+jB,EAAWtmB,UAAU8mB,kBAAoB,SAAUxkB,GAC/ChC,KAAKkmB,gBAAkBlkB,GAQ3BgkB,EAAWtmB,UAAU+mB,YAAc,SAAUvkB,GACzClC,KAAKmmB,UAAYjkB,GAQrB8jB,EAAWtmB,UAAUgnB,SAAW,SAAUvkB,GACtCnC,KAAKomB,OAASjkB,EACdnC,KAAKqmB,YAAc,eAAOlkB,IAM9B6jB,EAAWtmB,UAAUgG,kBAAoB,SAAUC,GAC/C,kBAMJqgB,EAAWtmB,UAAUkG,KAAO,WACxB,kBAMJogB,EAAWtmB,UAAUmG,oBAAsB,SAAUF,GACjD,kBAEGqgB,EA3NoB,GA6NhB,U,kCCzOR,SAASW,EAAUC,EAAQlP,EAAOmP,GACrC,IAAIC,OAAiCrmB,IAAlBomB,EAA8BD,EAAOG,QAAQF,GAAiB,GAAKD,EAClFI,EAAUF,EAAaG,QAAQ,KAEnC,OADAD,GAAuB,IAAbA,EAAiBF,EAAale,OAASoe,EAC1CA,EAAUtP,EACXoP,EACA,IAAItnB,MAAM,EAAIkY,EAAQsP,GAASjD,KAAK,KAAO+C,EAfrD,mC,kCCAA,gBAGI7nB,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GAkCxCmnB,EAA6B,SAAU9mB,GAKvC,SAAS8mB,EAAY7mB,GACjB,IAAIC,EAAQN,KACRO,EAAUF,GAA4B,GAW1C,OAVAC,EAAQF,EAAOR,KAAKI,KAAM,CACtB2C,OAAQuD,IACR1D,KAAMjC,EAAQiC,KACdK,OAAQtC,EAAQsC,OAChBO,OAAQ7C,EAAQ6C,OAChBjB,WAAyB1B,IAAlBF,EAAQ4B,MAAsB5B,EAAQ4B,MAAQ,EACrDD,cAA+BzB,IAArBF,EAAQ2B,SAAyB3B,EAAQ2B,SAAW,EAC9DF,oBAA2CvB,IAA3BF,EAAQyB,gBAA+BzB,EAAQyB,eAC/DI,kBAAuC3B,IAAzBF,EAAQ6B,aAA6B7B,EAAQ6B,aAAe,CAAC,EAAG,MAC5EpC,KACCM,EA+BX,OAhDArB,EAAUioB,EAAa9mB,GAwBvB8mB,EAAYxnB,UAAU+D,MAAQ,WAC1B,IAAItB,EAAQnC,KAAK0D,WACbC,EAAQ,IAAIujB,EAAY,CACxB1kB,KAAMxC,KAAK4D,UAAY5D,KAAK4D,UAAUH,aAAUhD,EAChD2C,OAAQpD,KAAKiE,YAAcjE,KAAKiE,YAAYR,aAAUhD,EACtDoC,OAAQ7C,KAAK8D,YACb3B,MAAO3C,MAAM4E,QAAQjC,GAASA,EAAMkC,QAAUlC,EAC9CD,SAAUlC,KAAKkE,cACflC,eAAgBhC,KAAKmE,oBACrB/B,aAAcpC,KAAKsE,kBAAkBD,UAGzC,OADAV,EAAMY,WAAWvE,KAAKwE,cACfb,GAQXujB,EAAYxnB,UAAUynB,UAAY,SAAUtkB,GACxC7C,KAAK4C,QAAUC,EACf7C,KAAKwD,UAEF0jB,EAjDqB,CAkD9B,QACa,U,kCCxFf,gBAGIjoB,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GAuBjCqnB,EAAc,2GAmCrBC,EAAqB,SAAUjnB,GAK/B,SAASinB,EAAIhnB,GACT,IAEIW,EAFAV,EAAQN,KACRO,EAAUF,GAAe,GAGzBW,OADyBP,IAAzBF,EAAQS,aACOT,EAAQS,aAGR,CAAComB,GAEpB,IAAIlmB,OAAsCT,IAAxBF,EAAQW,YAA4BX,EAAQW,YAAc,YACxEO,OAAsBhB,IAAhBF,EAAQkB,IACZlB,EAAQkB,IACR,uDAgBN,OAfAnB,EAAQF,EAAOR,KAAKI,KAAM,CACtBgB,aAAcA,EACda,yBAAyB,EACzBZ,UAAWV,EAAQU,UACnBC,YAAaA,EACbC,eAAgBZ,EAAQY,eACxBN,aAA6BJ,IAApBF,EAAQM,QAAwBN,EAAQM,QAAU,GAC3DO,YAA2BX,IAAnBF,EAAQa,QAAuBb,EAAQa,OAC/CC,2BAA4Bd,EAAQc,2BACpCC,iBAAkBf,EAAQe,iBAC1BM,WAAYrB,EAAQqB,WACpBH,IAAKA,EACLE,MAAOpB,EAAQoB,MACfG,WAAYvB,EAAQuB,cAClB9B,KACCM,EAEX,OAnCArB,EAAUooB,EAAKjnB,GAmCRinB,EApCa,CAqCtB,QACa,U,oFC5FA,GACXC,IAAK,MACLC,KAAM,Q,oFCNNtoB,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GA2ExC,EAAsB,SAAUK,GAKhC,SAASonB,EAAKjnB,GAEV,IAAID,EAAQN,KACRynB,OAA8ChnB,IAA5BF,EAAQknB,gBACmClnB,EAAuB,gBAClFmnB,EAAoBJ,IAGtB5mB,EAAWH,EAAQG,SACnBgB,EAAOnB,EAAQmB,KA+DnB,YA9DajB,IAATiB,QAAsCjB,IAAhBF,EAAQkB,MAC9BC,EAAO,eAAUnB,EAAQkB,MAE7BnB,EAAQF,EAAOR,KAAKI,KAAM,CACtBgB,aAAcT,EAAQS,aACtBa,wBAAyBtB,EAAQsB,wBACjCZ,UAAWV,EAAQU,UACnBC,YAAaX,EAAQW,YACrBC,eAAgBZ,EAAQY,eACxBX,WAAYD,EAAQC,WACpBa,2BAA4Bd,EAAQc,2BACpC6iB,UAAW3jB,EAAQ2jB,UACnBxjB,SAAUA,EACVY,iBAAkBf,EAAQe,iBAC1BC,eAAgBhB,EAAQgB,eACxBG,KAAMA,EACNC,WAAyBlB,IAAlBF,EAAQoB,OAAsBpB,EAAQoB,MAC7CC,WAAYrB,EAAQqB,WACpBE,WAAYvB,EAAQuB,cAClB9B,KAKNM,EAAMqnB,cAA+BlnB,IAApBF,EAAQqnB,QAAwBrnB,EAAQqnB,QAAU,QAKnEtnB,EAAM0O,aAA6BvO,IAAnBF,EAAQ0O,OAAuB1O,EAAQ0O,OAAS,aAKhE3O,EAAMunB,iBACqBpnB,IAAvBF,EAAQunB,WAA2BvnB,EAAQunB,WAAa,GAK5DxnB,EAAMynB,OAASxnB,EAAQynB,MAKvB1nB,EAAM2nB,WAAa1nB,EAAQ2nB,UAK3B5nB,EAAM6nB,OAAS5nB,EAAQoD,MAOvBrD,EAAM8nB,iBAAmBX,EACzBnnB,EAAMwhB,OAAOxhB,EAAM+nB,wBACf3mB,GAAQA,EAAKkH,OAAS,IACtBtI,EAAMkB,gBAAkB,eAA2BE,EAAKmK,IAAIvL,EAAMgoB,uBAAuBpW,KAAK5R,MAE3FA,EA0JX,OAtOArB,EAAUuoB,EAAMpnB,GAmFhBonB,EAAK9nB,UAAUyjB,QAAU,SAAUzhB,GAC/B1B,KAAK0B,KAAOA,EACZ,IAAIoI,EAAMpI,EAAKqiB,KAAK,MACpB/jB,KAAK6jB,mBAAmB,eAA2BniB,EAAKmK,IAAI7L,KAAKsoB,uBAAuBpW,KAAKlS,QAAS8J,IAS1G0d,EAAK9nB,UAAU6oB,cAAgB,WAC3B,OAAOvoB,KAAK6nB,aAOhBL,EAAK9nB,UAAUyU,UAAY,WACvB,OAAOnU,KAAKgP,SAOhBwY,EAAK9nB,UAAU8oB,SAAW,WACtB,OAAOxoB,KAAK+nB,QAOhBP,EAAK9nB,UAAU+oB,aAAe,WAC1B,OAAOzoB,KAAKioB,YAOhBT,EAAK9nB,UAAUgpB,mBAAqB,WAChC,OAAO1oB,KAAKooB,kBAOhBZ,EAAK9nB,UAAUipB,SAAW,WACtB,OAAO3oB,KAAKmoB,QAOhBX,EAAK9nB,UAAUkpB,WAAa,WACxB,OAAO5oB,KAAK2nB,UAMhBH,EAAK9nB,UAAU2oB,qBAAuB,WAClC,IAAIpf,EAAI,EACJ4f,EAAM,GACV,IAAK,IAAI/e,KAAO9J,KAAK6nB,YACjBgB,EAAI5f,KAAOa,EAAM,IAAM9J,KAAK6nB,YAAY/d,GAE5C,OAAO+e,EAAI9E,KAAK,MAOpByD,EAAK9nB,UAAUopB,iBAAmB,SAAUhB,GACxC,eAAO9nB,KAAK6nB,YAAaC,GACzB9nB,KAAK8hB,OAAO9hB,KAAKqoB,yBAMrBb,EAAK9nB,UAAU4oB,uBAAyB,SAAUS,GAC9C,IAAItB,EAAkBznB,KAAKooB,iBAGvBpjB,EAAU,CACV,MAAShF,KAAK+nB,OACd,MAAS/nB,KAAKmoB,OACd,cAAiBnoB,KAAKioB,YAEtBR,GAAmBC,EAAoBJ,KACvC,eAAOtiB,EAAS,CACZ,QAAW,OACX,QAAW,UACX,QAAWhF,KAAK2nB,SAChB,OAAU3nB,KAAKgP,UAMvB+Z,EACItB,GAAmBC,EAAoBJ,IACjC,eAAayB,EAAU/jB,GACvB+jB,EAAS7a,QAAQ,eAAe,SAAU8a,EAAGvpB,GAC3C,OAAOA,EAAEwpB,gBAAiBjkB,EAAUA,EAAQvF,EAAEwpB,eAAiBD,KAE3E,IAAItoB,EAAiEV,KAAa,SAC9E8nB,EAAa9nB,KAAK6nB,YACtB,OAAO,SAOGtF,EAAW1d,EAAYrE,GAC7B,GAAK+hB,EAGA,CACD,IAAI2G,EAAiB,CACjB,WAAcxoB,EAASyoB,YAAY5G,EAAU,IAC7C,QAAWA,EAAU,GACrB,QAAWA,EAAU,IAEzB,eAAO2G,EAAgBpB,GACvB,IAAIrmB,EAAMsnB,EASV,OAPItnB,EADAgmB,GAAmBC,EAAoBJ,IACjC,eAAa7lB,EAAKynB,GAGlBznB,EAAIyM,QAAQ,eAAe,SAAU8a,EAAGvpB,GAC1C,OAAOypB,EAAezpB,MAGvBgC,KAIZ+lB,EAvOc,CAwOvBxD,EAAA,MACa,SAyBR,SAASoF,EAAwBC,EAASC,GAC7C,IAAIC,EAASF,EAAQ,YAAY,SAC7BtiB,EAAI,eAAKwiB,GAAQ,SAAUC,EAAKC,EAAOC,GACvC,OAAOF,EAAI,eAAiBF,EAAO,YAEvC,GAAU,OAANviB,EACA,OAAO,KAEX,IACI4iB,EADAC,EAAiBP,EAAQ,YAAY,iBAIjCM,EAFJ5iB,EAAE,qBAAqB6B,OAAS,EAC5B,eAAgB0gB,EACV,eAAUviB,EAAE,sBAAsB,SAAUyiB,EAAKC,EAAOC,GAC1D,IAAIG,EAAgB,eAAKD,GAAgB,SAAUE,GAC/C,OAAOA,EAAG,eAAiBN,EAAI,oBAE/BO,EAAeF,EAAc,gBAC7BG,EAAQ,eAAcD,GACtBE,EAAQ,eAAcX,EAAO,eACjC,OAAIU,GAASC,EACF,eAAWD,EAAOC,GAGlBF,GAAgBT,EAAO,iBAKhC,eAAUviB,EAAE,sBAAsB,SAAUyiB,EAAKC,EAAOC,GAC1D,OAAOF,EAAI,kBAAoBF,EAAO,gBAKxC,EAENK,EAAM,IACNA,EAAM,GAEV,IAAIzB,EAEHnhB,EAAE,qBAAqB4iB,GAAK,iBACzBO,EAEHnjB,EAAE,qBAAqB4iB,GAAK,uBACzB1a,EAAgClI,EAAE,UAAU,GAC5C,WAAYuiB,IACZra,EAASqa,EAAO,WAEpBK,EAAM,eAAU5iB,EAAE,UAAU,SAAUyiB,EAAKC,EAAOC,GAC9C,MAAI,UAAWJ,EACJE,EAAI,UAAYF,EAAO,SAGvBE,EAAI,gBAGfG,EAAM,IACNA,EAAM,GAEV,IAAIhmB,EAA+BoD,EAAE,SAAS4iB,GAAK,cAC/C7B,EAAa,GACb,cAAe/gB,GACfA,EAAE,aAAaiF,SAAQ,SAAUwd,EAAKC,EAAOC,GACzC,IAAI5f,EAAM0f,EAAI,cACV1e,EAAQ0e,EAAI,gBACF/oB,IAAVqK,IACAA,EAAQ0e,EAAI,SAAS,IAEzB1B,EAAWhe,GAAOgB,KAG1B,IAIItK,EAJA2pB,EAAad,EAAQ,YAAY,iBACjCe,EAAe,eAAKD,GAAY,SAAUX,EAAKC,EAAOC,GACtD,OAAOF,EAAI,eAAiBtB,KAG5BmC,EAAOD,EAAa,gBAIxB,GAHIC,IACA7pB,EAAa,eAAc6pB,IAE3B,eAAgBf,EAAQ,CACxB,IAAIgB,EAAa,eAAchB,EAAO,eAClCgB,IACK9pB,IAAc,eAAW8pB,EAAY9pB,KACtCA,EAAa8pB,IAIzB,IAAI3oB,GAAQ,EACR4oB,EAAiE,MAAhD/pB,EAAWgqB,qBAAqBC,OAAO,EAAG,GAC3DC,EAASN,EAAaO,WAAW,GAEjCC,EAAsB,CACtBC,WAAY,EACZC,WAAY,EAEZC,WAAYL,EAAOM,YAAc,EACjCC,WAAYP,EAAOQ,aAAe,GAGtC,GAAIhB,EAAc,CACdU,EAAsBV,EAAaA,EAAathB,OAAS,GACzD,IAAIogB,EAAI,eAAKoB,EAAaO,YAAY,SAAUQ,GAC5C,OAAOA,EAAgBC,aAAeR,EAAoBD,YACtDP,EAAagB,WAAa,IAAMD,EAAgBC,aAC5CR,EAAoBD,cAE5B3B,IACA0B,EAAS1B,GAGjB,IAAIpU,EAAwC,MAA1B8V,EAAOW,iBAA8B7qB,EAAW8qB,mBAC9DC,EAAShB,EACP,CAACG,EAAOc,cAAc,GAAId,EAAOc,cAAc,IAC/Cd,EAAOc,cACTC,EAAYf,EAAOgB,UAAY9W,EAC/B+W,EAAYjB,EAAOkB,WAAahX,EAChCiX,EAAkBzB,EAAa,eAC/BzpB,EAAS,CACT4qB,EAAO,GAAKE,EAAYb,EAAoBC,WAE5CU,EAAO,GAAKI,GAAa,EAAIf,EAAoBK,YACjDM,EAAO,GAAKE,GAAa,EAAIb,EAAoBG,YACjDQ,EAAO,GAAKI,EAAYf,EAAoBE,YAEhD,QAAwBrqB,IAApBorB,IACC,eAAeA,EAAiBlrB,GAAS,CAC1C,IAAImrB,EAAmB/kB,EAAE,oBACrBglB,EAAwB,eAAc,aAAazf,YAEvD,GADA3L,EAASkrB,EACLC,EACAnqB,EACImqB,EAAiB,KAAOC,EAAsB,IAC1CD,EAAiB,KAAOC,EAAsB,OAErD,CACD,IAAIC,EAAuB,eAAgBH,EAAiBzB,EAAa,gBAAiB,aAE1FzoB,EACIqqB,EAAqB,GAAK,OAASD,EAAsB,IACrDC,EAAqB,GAAK,OAASD,EAAsB,IAGzE,IAAIrrB,EAAW,eAAgC0pB,EAAczpB,EAAQupB,GAEjExoB,EAAO,GACP+lB,EAAkB6B,EAAO,mBAE7B,GADA7B,OAAsChnB,IAApBgnB,EAAgCA,EAAkB,GAChE,uBAAwB4B,GACxB,YAAaA,EAAQ,sBAErB,IADA,IAAI4C,EAAO5C,EAAQ,sBAAsB,WAAW,OAAO,QAAQ,OAC1DpgB,EAAI,EAAG+L,EAAKiX,EAAKrjB,OAAQK,EAAI+L,IAAM/L,EACxC,GAAIgjB,EAAKhjB,GAAG,cAAe,CACvB,IAAIijB,EAAa,eAAKD,EAAKhjB,GAAG,eAAe,SAAUkjB,GACnD,MAA0B,eAAnBA,EAAQ,WAEfC,EAAYF,EAAW,iBAAiB,SAK5C,GAJwB,KAApBzE,IAEAA,EAAkB2E,EAAU,IAE5B3E,IAAoBC,EAAoBJ,IAMxC,MALI,eAAS8E,EAAW1E,EAAoBJ,MACxC5lB,EAAKgQ,KAA4Bua,EAAKhjB,GAAG,cAO5CgjB,EAAKhjB,GAAG,UACbwe,EAAkBC,EAAoBJ,IACtC5lB,EAAKgQ,KAA4Bua,EAAKhjB,GAAG,UAarD,OAToB,IAAhBvH,EAAKkH,SACL6e,EAAkBC,EAAoBH,KACtCxgB,EAAE,eAAeiF,SAAQ,SAAUmgB,GACC,SAA5BA,EAAQ,kBACRld,EAASkd,EAAQ,UACjBzqB,EAAKgQ,KAA4Bya,EAAQ,kBAI9C,CACHzqB,KAAMA,EACNsmB,MAAOsB,EAAO,SACdpB,UAAWA,EACXjZ,OAAQA,EACRzO,WAAYA,EACZinB,gBAAiBA,EACjB/mB,SAAUA,EACViD,MAAOA,EACPmkB,WAAYA,EACZnmB,MAAOA,EACPT,YAAaooB,EAAO,kB,kCCrhB5B,8DAQW+C,EAAOnmB,IAadomB,EAA+B,WAK/B,SAASA,EAAcC,EAAkBC,GAKrCxsB,KAAKysB,kBAAoBF,EAKzBvsB,KAAK0sB,aAAeF,EAKpBxsB,KAAK2sB,UAAY,GAKjB3sB,KAAK4sB,YAAc,GAKnB5sB,KAAK6sB,gBAAkB,GAyL3B,OApLAP,EAAc5sB,UAAUiK,MAAQ,WAC5B3J,KAAK2sB,UAAU/jB,OAAS,EACxB5I,KAAK4sB,YAAYhkB,OAAS,EAC1B,eAAM5I,KAAK6sB,kBAMfP,EAAc5sB,UAAUotB,QAAU,WAC9B,IAAIC,EAAW/sB,KAAK2sB,UAChBK,EAAahtB,KAAK4sB,YAClBT,EAAUY,EAAS,GACA,GAAnBA,EAASnkB,QACTmkB,EAASnkB,OAAS,EAClBokB,EAAWpkB,OAAS,IAGpBmkB,EAAS,GAAKA,EAAS9e,MACvB+e,EAAW,GAAKA,EAAW/e,MAC3BjO,KAAKitB,QAAQ,IAEjB,IAAIC,EAAaltB,KAAK0sB,aAAaP,GAEnC,cADOnsB,KAAK6sB,gBAAgBK,GACrBf,GAOXG,EAAc5sB,UAAUytB,QAAU,SAAUhB,GACxC,iBAASnsB,KAAK0sB,aAAaP,KAAYnsB,KAAK6sB,iBAAkB,IAC9D,IAAIO,EAAWptB,KAAKysB,kBAAkBN,GACtC,OAAIiB,GAAYf,IACZrsB,KAAK2sB,UAAUjb,KAAKya,GACpBnsB,KAAK4sB,YAAYlb,KAAK0b,GACtBptB,KAAK6sB,gBAAgB7sB,KAAK0sB,aAAaP,KAAY,EACnDnsB,KAAKqtB,UAAU,EAAGrtB,KAAK2sB,UAAU/jB,OAAS,IACnC,IAOf0jB,EAAc5sB,UAAUyN,SAAW,WAC/B,OAAOnN,KAAK2sB,UAAU/jB,QAQ1B0jB,EAAc5sB,UAAU4tB,mBAAqB,SAAU7D,GACnD,OAAe,EAARA,EAAY,GAQvB6C,EAAc5sB,UAAU6tB,oBAAsB,SAAU9D,GACpD,OAAe,EAARA,EAAY,GAQvB6C,EAAc5sB,UAAU8tB,gBAAkB,SAAU/D,GAChD,OAAQA,EAAQ,GAAM,GAM1B6C,EAAc5sB,UAAU+tB,SAAW,WAC/B,IAAIxkB,EACJ,IAAKA,GAAKjJ,KAAK2sB,UAAU/jB,QAAU,GAAK,EAAGK,GAAK,EAAGA,IAC/CjJ,KAAKitB,QAAQhkB,IAMrBqjB,EAAc5sB,UAAU2M,QAAU,WAC9B,OAAiC,IAA1BrM,KAAK2sB,UAAU/jB,QAM1B0jB,EAAc5sB,UAAUguB,YAAc,SAAU5jB,GAC5C,OAAOA,KAAO9J,KAAK6sB,iBAMvBP,EAAc5sB,UAAUiuB,SAAW,SAAUxB,GACzC,OAAOnsB,KAAK0tB,YAAY1tB,KAAK0sB,aAAaP,KAM9CG,EAAc5sB,UAAUutB,QAAU,SAAUxD,GACxC,IAAIsD,EAAW/sB,KAAK2sB,UAChBK,EAAahtB,KAAK4sB,YAClBgB,EAAQb,EAASnkB,OACjBujB,EAAUY,EAAStD,GACnB2D,EAAWJ,EAAWvD,GACtBoE,EAAapE,EACjB,MAAOA,EAAQmE,GAAS,EAAG,CACvB,IAAIE,EAAS9tB,KAAKstB,mBAAmB7D,GACjCsE,EAAS/tB,KAAKutB,oBAAoB9D,GAClCuE,EAAoBD,EAASH,GAASZ,EAAWe,GAAUf,EAAWc,GACpEC,EACAD,EACNf,EAAStD,GAASsD,EAASiB,GAC3BhB,EAAWvD,GAASuD,EAAWgB,GAC/BvE,EAAQuE,EAEZjB,EAAStD,GAAS0C,EAClBa,EAAWvD,GAAS2D,EACpBptB,KAAKqtB,UAAUQ,EAAYpE,IAO/B6C,EAAc5sB,UAAU2tB,UAAY,SAAUQ,EAAYpE,GACtD,IAAIsD,EAAW/sB,KAAK2sB,UAChBK,EAAahtB,KAAK4sB,YAClBT,EAAUY,EAAStD,GACnB2D,EAAWJ,EAAWvD,GAC1B,MAAOA,EAAQoE,EAAY,CACvB,IAAII,EAAcjuB,KAAKwtB,gBAAgB/D,GACvC,KAAIuD,EAAWiB,GAAeb,GAM1B,MALAL,EAAStD,GAASsD,EAASkB,GAC3BjB,EAAWvD,GAASuD,EAAWiB,GAC/BxE,EAAQwE,EAMhBlB,EAAStD,GAAS0C,EAClBa,EAAWvD,GAAS2D,GAKxBd,EAAc5sB,UAAUwuB,aAAe,WACnC,IAKI/B,EAASljB,EAAGmkB,EALZb,EAAmBvsB,KAAKysB,kBACxBM,EAAW/sB,KAAK2sB,UAChBK,EAAahtB,KAAK4sB,YAClBnD,EAAQ,EACR0E,EAAIpB,EAASnkB,OAEjB,IAAKK,EAAI,EAAGA,EAAIklB,IAAKllB,EACjBkjB,EAAUY,EAAS9jB,GACnBmkB,EAAWb,EAAiBJ,GACxBiB,GAAYf,SACLrsB,KAAK6sB,gBAAgB7sB,KAAK0sB,aAAaP,KAG9Ca,EAAWvD,GAAS2D,EACpBL,EAAStD,KAAW0C,GAG5BY,EAASnkB,OAAS6gB,EAClBuD,EAAWpkB,OAAS6gB,EACpBzpB,KAAKytB,YAEFnB,EAvNuB,GAyNnB,U,kCC9Of,oDAAIrtB,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GAwDxC+iB,EAAwB,SAAU1iB,GAKlC,SAAS0iB,EAAOviB,GACZ,IAAID,EAAQF,EAAOR,KAAKI,OAASA,KAoCjC,OA/BAM,EAAME,WAAa,eAAcD,EAAQC,YAKzCF,EAAM8tB,cAAgBC,EAAkB9tB,EAAQS,cAKhDV,EAAMguB,8BACkC7tB,IAApCF,EAAQsB,yBACFtB,EAAQsB,wBAOlBvB,EAAMkV,SAAU,EAKhBlV,EAAMiuB,YACgB9tB,IAAlBF,EAAQmO,MAAsBnO,EAAQmO,MAAQ,OAAYC,MAK9DrO,EAAMkuB,YAA2B/tB,IAAlBF,EAAQoB,OAAsBpB,EAAQoB,MAC9CrB,EA4EX,OArHArB,EAAU6jB,EAAQ1iB,GA+ClB0iB,EAAOpjB,UAAUme,gBAAkB,WAC/B,OAAO7d,KAAKouB,eAKhBtL,EAAOpjB,UAAU+uB,2BAA6B,WAC1C,OAAOzuB,KAAKsuB,0BAOhBxL,EAAOpjB,UAAUge,cAAgB,WAC7B,OAAO1d,KAAKQ,YAMhBsiB,EAAOpjB,UAAUsiB,eAAiB,WAC9B,OAAO,kBAOXc,EAAOpjB,UAAUiiB,SAAW,WACxB,OAAO3hB,KAAKuuB,QAKhBzL,EAAOpjB,UAAU+iB,SAAW,WACxB,OAAOziB,KAAKwuB,QAKhB1L,EAAOpjB,UAAUglB,kBAAoB,aAOrC5B,EAAOpjB,UAAU+V,QAAU,WACvBzV,KAAKuQ,WASTuS,EAAOpjB,UAAUqe,gBAAkB,SAAU/c,GACzChB,KAAKouB,cAAgBC,EAAkBrtB,GACvChB,KAAKuQ,WAMTuS,EAAOpjB,UAAUue,SAAW,SAAUvP,GAClC1O,KAAKuuB,OAAS7f,EACd1O,KAAKuQ,WAEFuS,EAtHgB,CAuHzB,QAMF,SAASuL,EAAkBK,GACvB,OAAKA,EAGDlvB,MAAM4E,QAAQsqB,GACP,SAAU1Q,GACb,OAAO0Q,GAGgB,oBAApBA,EACAA,EAEJ,SAAU1Q,GACb,MAAO,CAAC0Q,IAXD,KAcA","file":"js/chunk-752b6592.f38e9b6b.js","sourcesContent":["/**\n * @module ol/source/common\n */\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport var IMAGE_SMOOTHING_DISABLED = {\n    imageSmoothingEnabled: false,\n    msImageSmoothingEnabled: false,\n};\n//# sourceMappingURL=common.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line',\n};\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options} [opt_options] XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ? options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined\n            ? options.tileGrid\n            : createXYZ({\n                extent: extentFromProjection(projection),\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize,\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { defaultFillStyle, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../render/canvas.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: options.scale !== undefined ? options.scale : 1,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = undefined;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ =\n            options.radius !== undefined ? options.radius : options.radius1;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {RenderOptions}\n         */\n        _this.renderOptions_ = null;\n        _this.render();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var scale = this.getScale();\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        return style;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        return this.anchor_;\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @return {HTMLCanvasElement} Image element.\n     */\n    RegularShape.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionCanvas_) {\n            this.createHitDetectionCanvas_(this.renderOptions_);\n        }\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        var image = this.canvas_[pixelRatio];\n        if (!image) {\n            var renderOptions = this.renderOptions_;\n            var context = createCanvasContext2D(renderOptions.size * pixelRatio, renderOptions.size * pixelRatio);\n            this.draw_(renderOptions, context, pixelRatio);\n            image = context.canvas;\n            this.canvas_[pixelRatio] = image;\n        }\n        return image;\n    };\n    /**\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Pixel ratio.\n     */\n    RegularShape.prototype.getPixelRatio = function (pixelRatio) {\n        return pixelRatio;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @return {import(\"../size.js\").Size} Size.\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.listenImageChange = function (listener) { };\n    /**\n     * Load not yet loaded URI.\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener) { };\n    /**\n     * Calculate additional canvas size needed for the miter.\n     * @param {string} lineJoin Line join\n     * @param {number} strokeWidth Stroke width\n     * @param {number} miterLimit Miter limit\n     * @return {number} Additional canvas size needed\n     * @private\n     */\n    RegularShape.prototype.calculateLineJoinSize_ = function (lineJoin, strokeWidth, miterLimit) {\n        if (strokeWidth === 0 ||\n            this.points_ === Infinity ||\n            (lineJoin !== 'bevel' && lineJoin !== 'miter')) {\n            return strokeWidth;\n        }\n        // m  | ^\n        // i  | |\\                  .\n        // t >|  #\\\n        // e  | |\\ \\              .\n        // r      \\s\\\n        //      |  \\t\\          .                 .\n        //          \\r\\                      .   .\n        //      |    \\o\\      .          .  . . .\n        //          e \\k\\            .  .    . .\n        //      |      \\e\\  .    .  .       . .\n        //       d      \\ \\  .  .          . .\n        //      | _ _a_ _\\#  .            . .\n        //   r1          / `             . .\n        //      |                       . .\n        //       b     /               . .\n        //      |                     . .\n        //           / r2            . .\n        //      |                        .   .\n        //         /                           .   .\n        //      |α                                   .   .\n        //       /                                         .   .\n        //      ° center\n        var r1 = this.radius_;\n        var r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n        if (r1 < r2) {\n            var tmp = r1;\n            r1 = r2;\n            r2 = tmp;\n        }\n        var points = this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n        var alpha = (2 * Math.PI) / points;\n        var a = r2 * Math.sin(alpha);\n        var b = Math.sqrt(r2 * r2 - a * a);\n        var d = r1 - b;\n        var e = Math.sqrt(a * a + d * d);\n        var miterRatio = e / a;\n        if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n            return miterRatio * strokeWidth;\n        }\n        // Calculate the distnce from center to the stroke corner where\n        // it was cut short because of the miter limit.\n        //              l\n        //        ----+---- <= distance from center to here is maxr\n        //       /####|k ##\\\n        //      /#####^#####\\\n        //     /#### /+\\# s #\\\n        //    /### h/+++\\# t #\\\n        //   /### t/+++++\\# r #\\\n        //  /### a/+++++++\\# o #\\\n        // /### p/++ fill +\\# k #\\\n        ///#### /+++++^+++++\\# e #\\\n        //#####/+++++/+\\+++++\\#####\\\n        var k = strokeWidth / 2 / miterRatio;\n        var l = (strokeWidth / 2) * (d / e);\n        var maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n        var bevelAdd = maxr - r1;\n        if (this.radius2_ === undefined || lineJoin === 'bevel') {\n            return bevelAdd * 2;\n        }\n        // If outer miter is over the miter limit the inner miter may reach through the\n        // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n        var aa = r1 * Math.sin(alpha);\n        var bb = Math.sqrt(r1 * r1 - aa * aa);\n        var dd = r2 - bb;\n        var ee = Math.sqrt(aa * aa + dd * dd);\n        var innerMiterRatio = ee / aa;\n        if (innerMiterRatio <= miterLimit) {\n            var innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n            return 2 * Math.max(bevelAdd, innerLength);\n        }\n        return bevelAdd * 2;\n    };\n    /**\n     * @return {RenderOptions}  The render options\n     * @protected\n     */\n    RegularShape.prototype.createRenderOptions = function () {\n        var lineJoin = defaultLineJoin;\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n        var maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n        var size = Math.ceil(2 * maxRadius + add);\n        return {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit,\n        };\n    };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render = function () {\n        this.renderOptions_ = this.createRenderOptions();\n        var size = this.renderOptions_.size;\n        var displacement = this.getDisplacement();\n        this.canvas_ = {};\n        this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n        this.size_ = [size, size];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} pixelRatio The pixel ratio.\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, pixelRatio) {\n        context.scale(pixelRatio, pixelRatio);\n        // set origin to canvas center\n        context.translate(renderOptions.size / 2, renderOptions.size / 2);\n        this.createPath_(context);\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineJoin = renderOptions.lineJoin;\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            // determine if fill is transparent (or pattern or gradient)\n            var opacity = 0;\n            if (typeof color === 'string') {\n                color = asArray(color);\n            }\n            if (color === null) {\n                opacity = 1;\n            }\n            else if (Array.isArray(color)) {\n                opacity = color.length === 4 ? color[3] : 1;\n            }\n            if (opacity === 0) {\n                // if a transparent fill style is set, create an extra hit-detection image\n                // with a default fill style\n                var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n                this.hitDetectionCanvas_ = context.canvas;\n                this.drawHitDetectionCanvas_(renderOptions, context);\n            }\n        }\n        if (!this.hitDetectionCanvas_) {\n            this.hitDetectionCanvas_ = this.getImage(1);\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context The context to draw in.\n     */\n    RegularShape.prototype.createPath_ = function (context) {\n        var points = this.points_;\n        var radius = this.radius_;\n        if (points === Infinity) {\n            context.arc(0, 0, radius, 0, 2 * Math.PI);\n        }\n        else {\n            var radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n            if (this.radius2_ !== undefined) {\n                points *= 2;\n            }\n            var startAngle = this.angle_ - Math.PI / 2;\n            var step = (2 * Math.PI) / points;\n            for (var i = 0; i < points; i++) {\n                var angle0 = startAngle + i * step;\n                var radiusC = i % 2 === 0 ? radius : radius2;\n                context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n            }\n            context.closePath();\n        }\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context) {\n        // set origin to canvas center\n        context.translate(renderOptions.size / 2, renderOptions.size / 2);\n        this.createPath_(context);\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineJoin = renderOptions.lineJoin;\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n         * @type {!Object<string, import(\"./IconImage.js\").default>}\n         * @private\n         */\n        this.cache_ = {};\n        /**\n         * @type {number}\n         * @private\n         */\n        this.cacheSize_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @return {import(\"./IconImage.js\").default} Icon image.\n     */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n     */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n     * Set the cache size of the icon cache. Default is `32`. Change this value when\n     * your map uses more than 32 different icon images and you are not caching icon\n     * styles on the application level.\n     * @param {number} maxCacheSize Cache max size.\n     * @api\n     */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number} [opt_maxEntries] Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = new RBush_(opt_maxEntries);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value,\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value,\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/structs/LRUCache\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nvar LRUCache = /** @class */ (function () {\n    /**\n     * @param {number} [opt_highWaterMark] High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        /**\n         * Desired max cache size after expireCache(). If set to 0, no cache entries\n         * will be pruned at all.\n         * @type {number}\n         */\n        this.highWaterMark =\n            opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.newest_ = null;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache<T>): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*} [opt_options] Options (reserved for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value,\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}());\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { assert } from '../asserts.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { extend } from '../array.js';\nimport { getUid } from '../util.js';\nimport { getValues, isEmpty } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { xhr } from '../featureloader.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n     */\n    function VectorSourceEvent(type, opt_feature, opt_features) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n         * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        /**\n         * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n         * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n         * @api\n         */\n        _this.features = opt_features;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options} [opt_options] Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n        }) || this;\n        /***\n         * @type {VectorSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n         */\n        _this.on;\n        /***\n         * @type {VectorSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n         */\n        _this.once;\n        /***\n         * @type {VectorSourceOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, \n            /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ =\n            options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.loadingExtentsCount_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features by uid (using getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.uidIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * Note: this also applies if an {@link module:ol/Collection} is used for features,\n     * meaning that if a feature with a duplicate id is added in the collection, it will\n     * be removed from it right away.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            if (this.featuresCollection_) {\n                this.featuresCollection_.remove(feature);\n            }\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this),\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        if (valid) {\n            assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n            this.uidIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        this.addEventListener(VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        this.addEventListener(VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        collection.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        collection.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.uidIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get a snapshot of the features currently on the source in random order. The returned array\n     * is a copy, the features are references to the features in the source.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray().slice(0);\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * When `useSpatialIndex` is set to false, this method will return all\n     * features.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.getInExtent(extent);\n        }\n        else if (this.featuresCollection_) {\n            return this.featuresCollection_.getArray().slice(0);\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get a feature by its internal unique identifier (using `getUid`).\n     *\n     * @param {string} uid Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     */\n    VectorSource.prototype.getFeatureByUid = function (uid) {\n        var feature = this.uidIndex_[uid];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (this.idIndex_[sid] !== feature) {\n                this.removeFromIdIndex_(feature);\n                this.idIndex_[sid] = feature;\n            }\n        }\n        else {\n            this.removeFromIdIndex_(feature);\n            this.uidIndex_[featureKey] = feature;\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.uidIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution);\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                ++this_1.loadingExtentsCount_;\n                this_1.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADSTART));\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection, function (features) {\n                    --this.loadingExtentsCount_;\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADEND, undefined, features));\n                }.bind(this_1), function () {\n                    --this.loadingExtentsCount_;\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADERROR));\n                }.bind(this_1));\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n        this.loading =\n            this.loader_ === VOID ? false : this.loadingExtentsCount_ > 0;\n    };\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        delete this.uidIndex_[featureKey];\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.url_ = url;\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/style/Style\n */\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {import(\"./Image.js\").default}\n         */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            renderer: this.getRenderer(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex(),\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)',\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25,\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5,\n                }),\n                fill: fill,\n                stroke: stroke,\n            }),\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5],\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2,\n            }),\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width,\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue,\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2,\n                }),\n            }),\n            zIndex: Infinity,\n        }),\n    ];\n    styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Origin is at bottom left\n     * @api\n     */\n    BOTTOM_LEFT: 'bottom-left',\n    /**\n     * Origin is at bottom right\n     * @api\n     */\n    BOTTOM_RIGHT: 'bottom-right',\n    /**\n     * Origin is at top left\n     * @api\n     */\n    TOP_LEFT: 'top-left',\n    /**\n     * Origin is at top right\n     * @api\n     */\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { asString } from '../color.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar taintedTestContext = null;\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            if (!taintedTestContext) {\n                taintedTestContext = createCanvasContext2D(1, 1);\n            }\n            taintedTestContext.drawImage(this.image_, 0, 0);\n            try {\n                taintedTestContext.getImageData(0, 0, 1, 1);\n                this.tainted_ = false;\n            }\n            catch (e) {\n                taintedTestContext = null;\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        else {\n            this.size_ = [this.image_.width, this.image_.height];\n        }\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Image or Canvas element.\n     */\n    IconImage.prototype.getPixelRatio = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? pixelRatio : 1;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function (pixelRatio) {\n        if (!this.color_ || this.canvas_[pixelRatio]) {\n            return;\n        }\n        var canvas = document.createElement('canvas');\n        this.canvas_[pixelRatio] = canvas;\n        canvas.width = Math.ceil(this.image_.width * pixelRatio);\n        canvas.height = Math.ceil(this.image_.height * pixelRatio);\n        var ctx = canvas.getContext('2d');\n        ctx.scale(pixelRatio, pixelRatio);\n        ctx.drawImage(this.image_, 0, 0);\n        ctx.globalCompositeOperation = 'multiply';\n        // Internet Explorer 11 does not support the multiply operation.\n        // If the canvas is tainted in Internet Explorer this still produces\n        // a solid color image with the shape of the icon.\n        if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n            ctx.fillStyle = asString(this.color_);\n            ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n            ctx.globalCompositeOperation = 'destination-in';\n            ctx.drawImage(this.image_, 0, 0);\n        }\n        else {\n            var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n            var data = imgData.data;\n            var r = this.color_[0] / 255.0;\n            var g = this.color_[1] / 255.0;\n            var b = this.color_[2] / 255.0;\n            var a = this.color_[3];\n            for (var i = 0, ii = data.length; i < ii; i += 4) {\n                data[i] *= r;\n                data[i + 1] *= g;\n                data[i + 2] *= b;\n                data[i + 3] *= a;\n            }\n            ctx.putImageData(imgData, 0, 0);\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { get as getIconImage } from './IconImage.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n            rotateWithView: rotateWithView,\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ =\n            options.anchorOrigin !== undefined\n                ? options.anchorOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ =\n            options.anchorXUnits !== undefined\n                ? options.anchorXUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ =\n            options.anchorYUnits !== undefined\n                ? options.anchorYUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @type {import(\"../size.js\").Size}\n         */\n        var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, \n        /** @type {string} */ (src), imgSize, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ =\n            options.offsetOrigin !== undefined\n                ? options.offsetOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            crossOrigin: this.crossOrigin_,\n            color: this.color_ && this.color_.slice\n                ? this.color_.slice()\n                : this.color_ || undefined,\n            src: this.getSrc(),\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n        });\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        if (this.normalizedAnchor_) {\n            return this.normalizedAnchor_;\n        }\n        var anchor = this.anchor_;\n        var size = this.getSize();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n            this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n            if (!size) {\n                return null;\n            }\n            anchor = this.anchor_.slice();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[0] *= size[0];\n            }\n            if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[1] *= size[1];\n            }\n        }\n        if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n            if (!size) {\n                return null;\n            }\n            if (anchor === this.anchor_) {\n                anchor = this.anchor_.slice();\n            }\n            if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[0] = -anchor[0] + size[0];\n            }\n            if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[1] = -anchor[1] + size[1];\n            }\n        }\n        var displacement = this.getDisplacement();\n        anchor[0] -= displacement[0];\n        anchor[1] += displacement[1];\n        this.normalizedAnchor_ = anchor;\n        return this.normalizedAnchor_;\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * Get the pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} The pixel ratio of the image.\n     * @api\n     */\n    Icon.prototype.getPixelRatio = function (pixelRatio) {\n        return this.iconImage_.getPixelRatio(pixelRatio);\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    Icon.prototype.getHitDetectionImage = function () {\n        return this.iconImage_.getHitDetectionImage();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.listenImageChange = function (listener) {\n        this.iconImage_.addEventListener(EventType.CHANGE, listener);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.unlistenImageChange = function (listener) {\n        this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * See https://mapbox.com/developers/api/.\n */\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { assert } from '../asserts.js';\nimport { createFromTemplates } from '../tileurlfunction.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport { jsonp as requestJSONP } from '../net.js';\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nvar TileJSON = /** @class */ (function (_super) {\n    __extends(TileJSON, _super);\n    /**\n     * @param {Options} options TileJSON options.\n     */\n    function TileJSON(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            projection: getProjection('EPSG:3857'),\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            state: SourceState.LOADING,\n            tileLoadFunction: options.tileLoadFunction,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @type {Config}\n         * @private\n         */\n        _this.tileJSON_ = null;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         * @private\n         */\n        _this.tileSize_ = options.tileSize;\n        if (options.url) {\n            if (options.jsonp) {\n                requestJSONP(options.url, _this.handleTileJSONResponse.bind(_this), _this.handleTileJSONError.bind(_this));\n            }\n            else {\n                var client = new XMLHttpRequest();\n                client.addEventListener('load', _this.onXHRLoad_.bind(_this));\n                client.addEventListener('error', _this.onXHRError_.bind(_this));\n                client.open('GET', options.url);\n                client.send();\n            }\n        }\n        else if (options.tileJSON) {\n            _this.handleTileJSONResponse(options.tileJSON);\n        }\n        else {\n            assert(false, 51); // Either `url` or `tileJSON` options must be provided\n        }\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Event} event The load event.\n     */\n    TileJSON.prototype.onXHRLoad_ = function (event) {\n        var client = /** @type {XMLHttpRequest} */ (event.target);\n        // status will be 0 for file:// urls\n        if (!client.status || (client.status >= 200 && client.status < 300)) {\n            var response = void 0;\n            try {\n                response = /** @type {TileJSON} */ (JSON.parse(client.responseText));\n            }\n            catch (err) {\n                this.handleTileJSONError();\n                return;\n            }\n            this.handleTileJSONResponse(response);\n        }\n        else {\n            this.handleTileJSONError();\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event The error event.\n     */\n    TileJSON.prototype.onXHRError_ = function (event) {\n        this.handleTileJSONError();\n    };\n    /**\n     * @return {Config} The tilejson object.\n     * @api\n     */\n    TileJSON.prototype.getTileJSON = function () {\n        return this.tileJSON_;\n    };\n    /**\n     * @protected\n     * @param {Config} tileJSON Tile JSON.\n     */\n    TileJSON.prototype.handleTileJSONResponse = function (tileJSON) {\n        var epsg4326Projection = getProjection('EPSG:4326');\n        var sourceProjection = this.getProjection();\n        var extent;\n        if (tileJSON['bounds'] !== undefined) {\n            var transform = getTransformFromProjections(epsg4326Projection, sourceProjection);\n            extent = applyTransform(tileJSON['bounds'], transform);\n        }\n        var gridExtent = extentFromProjection(sourceProjection);\n        var minZoom = tileJSON['minzoom'] || 0;\n        var maxZoom = tileJSON['maxzoom'] || 22;\n        var tileGrid = createXYZ({\n            extent: gridExtent,\n            maxZoom: maxZoom,\n            minZoom: minZoom,\n            tileSize: this.tileSize_,\n        });\n        this.tileGrid = tileGrid;\n        this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n        if (tileJSON['attribution'] !== undefined && !this.getAttributions()) {\n            var attributionExtent_1 = extent !== undefined ? extent : gridExtent;\n            this.setAttributions(function (frameState) {\n                if (intersects(attributionExtent_1, frameState.extent)) {\n                    return [tileJSON['attribution']];\n                }\n                return null;\n            });\n        }\n        this.tileJSON_ = tileJSON;\n        this.setState(SourceState.READY);\n    };\n    /**\n     * @protected\n     */\n    TileJSON.prototype.handleTileJSONError = function () {\n        this.setState(SourceState.ERROR);\n    };\n    return TileJSON;\n}(TileImage));\nexport default TileJSON;\n//# sourceMappingURL=TileJSON.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error',\n};\n//# sourceMappingURL=State.js.map","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport { toDegrees, toRadians } from './math.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) *\n            Math.sin(deltaLonBy2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = \n            /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area +=\n            toRadians(x2 - x1) *\n                (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return (area * radius * radius) / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = \n            /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 +\n        Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Anchor is a fraction\n     * @api\n     */\n    FRACTION: 'fraction',\n    /**\n     * Anchor is in pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n};\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {CanvasLineCap|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {CanvasLineJoin|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth(),\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {CanvasLineCap|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {CanvasLineJoin|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {CanvasLineCap|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {CanvasLineJoin|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror',\n};\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { equivalent } from '../proj.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection, wrapX, } from '../tilegrid.js';\nimport { scale as scaleSize, toSize } from '../size.js';\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX,\n        }) || this;\n        /***\n         * @type {TileSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n         */\n        _this.on;\n        /***\n         * @type {TileSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n         */\n        _this.once;\n        /***\n         * @type {TileSourceOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ =\n            options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var tileSize = [256, 256];\n        var tileGrid = options.tileGrid;\n        if (tileGrid) {\n            toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(options.cacheSize || 0);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number|import(\"../array.js\").NearestDirectionFunction}\n         */\n        _this.zDirection = options.zDirection ? options.zDirection : 0;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = callback(tile) !== false;\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @return {Array<number>} Resolutions.\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        assert(equivalent(this.getProjection(), projection), 68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n        );\n        return this.tileCache;\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ? opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Increases the cache size if needed\n     * @param {number} tileCount Minimum number of tiles needed.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.updateCacheSize = function (tileCount, projection) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCount > tileCache.highWaterMark) {\n            tileCache.highWaterMark = tileCount;\n        }\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileState from '../TileState.js';\nimport { createFromTemplates, expandUrl } from '../tileurlfunction.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ =\n            _this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        if (options.tileUrlFunction) {\n            _this.tileUrlFunction = options.tileUrlFunction;\n        }\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n            ? this.tileUrlFunction.bind(this)\n            : this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type =\n                tileState == TileState.ERROR\n                    ? TileEventType.TILELOADERROR\n                    : tileState == TileState.LOADED\n                        ? TileEventType.TILELOADEND\n                        : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string} [key] Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = expandUrl(url);\n        this.urls = urls;\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    UrlTile.prototype.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n        return undefined;\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { IMAGE_SMOOTHING_DISABLED } from './common.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction\n                ? options.tileLoadFunction\n                : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass =\n            options.tileClass !== undefined ? options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {object|undefined}\n         */\n        _this.contextOptions_ =\n            options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    TileImage.prototype.getContextOptions = function () {\n        return this.contextOptions_;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileImage.prototype.getKey = function () {\n        return (_super.prototype.getKey.call(this) +\n            (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : ''));\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] =\n                    getTileGridForProjection(projection);\n            }\n            return this.tileGridForProjection[projKey];\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord\n            ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n            : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n        return tile;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = cache.get(tileCoordKey);\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_, this.contextOptions_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n        src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature',\n    /**\n     * Triggered when features starts loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n     * @api\n     */\n    FEATURESLOADSTART: 'featuresloadstart',\n    /**\n     * Triggered when features finishes loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n     * @api\n     */\n    FEATURESLOADEND: 'featuresloadend',\n    /**\n     * Triggered if feature loading results in an error.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n     * @api\n     */\n    FEATURESLOADERROR: 'featuresloaderror',\n};\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\nimport { toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.displacement_ = options.displacement;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number|import(\"../size.js\").Size} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    ImageStyle.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the displacement of the shape\n     * @return {Array<number>} Shape's center displacement\n     * @api\n     */\n    ImageStyle.prototype.getDisplacement = function () {\n        return this.displacement_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function () {\n        return abstract();\n    };\n    /**\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Pixel ratio.\n     */\n    ImageStyle.prototype.getPixelRatio = function (pixelRatio) {\n        return 1;\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale);\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.listenImageChange = function (listener) {\n        abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/string\n */\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [opt_precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n    var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n    var decimal = numberString.indexOf('.');\n    decimal = decimal === -1 ? numberString.length : decimal;\n    return decimal > width\n        ? numberString\n        : new Array(1 + width - decimal).join('0') + numberString;\n}\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n    var s1 = ('' + v1).split('.');\n    var s2 = ('' + v2).split('.');\n    for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n        var n1 = parseInt(s1[i] || '0', 10);\n        var n2 = parseInt(s2[i] || '0', 10);\n        if (n1 > n2) {\n            return 1;\n        }\n        if (n2 > n1) {\n            return -1;\n        }\n    }\n    return 0;\n}\n//# sourceMappingURL=string.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function CircleStyle(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke,\n            scale: options.scale !== undefined ? options.scale : 1,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            rotateWithView: options.rotateWithView !== undefined ? options.rotateWithView : false,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {CircleStyle} The cloned style.\n     * @api\n     */\n    CircleStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        return style;\n    };\n    /**\n     * Set the circle radius.\n     *\n     * @param {number} radius Circle radius.\n     * @api\n     */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n        this.render();\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/source/OSM\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport XYZ from './XYZ.js';\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n    '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n    'contributors.';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /** @class */ (function (_super) {\n    __extends(OSM, _super);\n    /**\n     * @param {Options} [opt_options] Open Street Map options.\n     */\n    function OSM(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var attributions;\n        if (options.attributions !== undefined) {\n            attributions = options.attributions;\n        }\n        else {\n            attributions = [ATTRIBUTION];\n        }\n        var crossOrigin = options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n        var url = options.url !== undefined\n            ? options.url\n            : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        _this = _super.call(this, {\n            attributions: attributions,\n            attributionsCollapsible: false,\n            cacheSize: options.cacheSize,\n            crossOrigin: crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n            opaque: options.opaque !== undefined ? options.opaque : true,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            transition: options.transition,\n            url: url,\n            wrapX: options.wrapX,\n            zDirection: options.zDirection,\n        }) || this;\n        return _this;\n    }\n    return OSM;\n}(XYZ));\nexport default OSM;\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/source/WMTSRequestEncoding\n */\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n    KVP: 'KVP',\n    REST: 'REST', // see spec §10\n};\n//# sourceMappingURL=WMTSRequestEncoding.js.map","/**\n * @module ol/source/WMTS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport { appendParams } from '../uri.js';\nimport { assign } from '../obj.js';\nimport { containsExtent } from '../extent.js';\nimport { createFromCapabilitiesMatrixSet } from '../tilegrid/WMTS.js';\nimport { createFromTileUrlFunctions, expandUrl } from '../tileurlfunction.js';\nimport { equivalent, get as getProjection, transformExtent } from '../proj.js';\nimport { find, findIndex, includes } from '../array.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nvar WMTS = /** @class */ (function (_super) {\n    __extends(WMTS, _super);\n    /**\n     * @param {Options} options WMTS options.\n     */\n    function WMTS(options) {\n        // TODO: add support for TileMatrixLimits\n        var _this = this;\n        var requestEncoding = options.requestEncoding !== undefined\n            ? /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding)\n            : WMTSRequestEncoding.KVP;\n        // FIXME: should we create a default tileGrid?\n        // we could issue a getCapabilities xhr to retrieve missing configuration\n        var tileGrid = options.tileGrid;\n        var urls = options.urls;\n        if (urls === undefined && options.url !== undefined) {\n            urls = expandUrl(options.url);\n        }\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileClass: options.tileClass,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            urls: urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : false,\n            transition: options.transition,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.version_ = options.version !== undefined ? options.version : '1.0.0';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.dimensions_ =\n            options.dimensions !== undefined ? options.dimensions : {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.layer_ = options.layer;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.matrixSet_ = options.matrixSet;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.style_ = options.style;\n        // FIXME: should we guess this requestEncoding from options.url(s)\n        //        structure? that would mean KVP only if a template is not provided.\n        /**\n         * @private\n         * @type {import(\"./WMTSRequestEncoding.js\").default}\n         */\n        _this.requestEncoding_ = requestEncoding;\n        _this.setKey(_this.getKeyForDimensions_());\n        if (urls && urls.length > 0) {\n            _this.tileUrlFunction = createFromTileUrlFunctions(urls.map(_this.createFromWMTSTemplate.bind(_this)));\n        }\n        return _this;\n    }\n    /**\n     * Set the URLs to use for requests.\n     * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n     * @param {Array<string>} urls URLs.\n     */\n    WMTS.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        this.setTileUrlFunction(createFromTileUrlFunctions(urls.map(this.createFromWMTSTemplate.bind(this))), key);\n    };\n    /**\n     * Get the dimensions, i.e. those passed to the constructor through the\n     * \"dimensions\" option, and possibly updated using the updateDimensions\n     * method.\n     * @return {!Object} Dimensions.\n     * @api\n     */\n    WMTS.prototype.getDimensions = function () {\n        return this.dimensions_;\n    };\n    /**\n     * Return the image format of the WMTS source.\n     * @return {string} Format.\n     * @api\n     */\n    WMTS.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * Return the layer of the WMTS source.\n     * @return {string} Layer.\n     * @api\n     */\n    WMTS.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Return the matrix set of the WMTS source.\n     * @return {string} MatrixSet.\n     * @api\n     */\n    WMTS.prototype.getMatrixSet = function () {\n        return this.matrixSet_;\n    };\n    /**\n     * Return the request encoding, either \"KVP\" or \"REST\".\n     * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n     * @api\n     */\n    WMTS.prototype.getRequestEncoding = function () {\n        return this.requestEncoding_;\n    };\n    /**\n     * Return the style of the WMTS source.\n     * @return {string} Style.\n     * @api\n     */\n    WMTS.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Return the version of the WMTS source.\n     * @return {string} Version.\n     * @api\n     */\n    WMTS.prototype.getVersion = function () {\n        return this.version_;\n    };\n    /**\n     * @private\n     * @return {string} The key for the current dimensions.\n     */\n    WMTS.prototype.getKeyForDimensions_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.dimensions_) {\n            res[i++] = key + '-' + this.dimensions_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Update the dimensions.\n     * @param {Object} dimensions Dimensions.\n     * @api\n     */\n    WMTS.prototype.updateDimensions = function (dimensions) {\n        assign(this.dimensions_, dimensions);\n        this.setKey(this.getKeyForDimensions_());\n    };\n    /**\n     * @param {string} template Template.\n     * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n     */\n    WMTS.prototype.createFromWMTSTemplate = function (template) {\n        var requestEncoding = this.requestEncoding_;\n        // context property names are lower case to allow for a case insensitive\n        // replacement as some services use different naming conventions\n        var context = {\n            'layer': this.layer_,\n            'style': this.style_,\n            'tilematrixset': this.matrixSet_,\n        };\n        if (requestEncoding == WMTSRequestEncoding.KVP) {\n            assign(context, {\n                'Service': 'WMTS',\n                'Request': 'GetTile',\n                'Version': this.version_,\n                'Format': this.format_,\n            });\n        }\n        // TODO: we may want to create our own appendParams function so that params\n        // order conforms to wmts spec guidance, and so that we can avoid to escape\n        // special template params\n        template =\n            requestEncoding == WMTSRequestEncoding.KVP\n                ? appendParams(template, context)\n                : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n                    return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n                });\n        var tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (this.tileGrid);\n        var dimensions = this.dimensions_;\n        return (\n        /**\n         * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {import(\"../proj/Projection.js\").default} projection Projection.\n         * @return {string|undefined} Tile URL.\n         */\n        function (tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n                return undefined;\n            }\n            else {\n                var localContext_1 = {\n                    'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n                    'TileCol': tileCoord[1],\n                    'TileRow': tileCoord[2],\n                };\n                assign(localContext_1, dimensions);\n                var url = template;\n                if (requestEncoding == WMTSRequestEncoding.KVP) {\n                    url = appendParams(url, localContext_1);\n                }\n                else {\n                    url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n                        return localContext_1[p];\n                    });\n                }\n                return url;\n            }\n        });\n    };\n    return WMTS;\n}(TileImage));\nexport default WMTS;\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n    var layers = wmtsCap['Contents']['Layer'];\n    var l = find(layers, function (elt, index, array) {\n        return elt['Identifier'] == config['layer'];\n    });\n    if (l === null) {\n        return null;\n    }\n    var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n    var idx;\n    if (l['TileMatrixSetLink'].length > 1) {\n        if ('projection' in config) {\n            idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n                var tileMatrixSet = find(tileMatrixSets, function (el) {\n                    return el['Identifier'] == elt['TileMatrixSet'];\n                });\n                var supportedCRS = tileMatrixSet['SupportedCRS'];\n                var proj1 = getProjection(supportedCRS);\n                var proj2 = getProjection(config['projection']);\n                if (proj1 && proj2) {\n                    return equivalent(proj1, proj2);\n                }\n                else {\n                    return supportedCRS == config['projection'];\n                }\n            });\n        }\n        else {\n            idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n                return elt['TileMatrixSet'] == config['matrixSet'];\n            });\n        }\n    }\n    else {\n        idx = 0;\n    }\n    if (idx < 0) {\n        idx = 0;\n    }\n    var matrixSet = \n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n    var matrixLimits = \n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n    var format = /** @type {string} */ (l['Format'][0]);\n    if ('format' in config) {\n        format = config['format'];\n    }\n    idx = findIndex(l['Style'], function (elt, index, array) {\n        if ('style' in config) {\n            return elt['Title'] == config['style'];\n        }\n        else {\n            return elt['isDefault'];\n        }\n    });\n    if (idx < 0) {\n        idx = 0;\n    }\n    var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n    var dimensions = {};\n    if ('Dimension' in l) {\n        l['Dimension'].forEach(function (elt, index, array) {\n            var key = elt['Identifier'];\n            var value = elt['Default'];\n            if (value === undefined) {\n                value = elt['Value'][0];\n            }\n            dimensions[key] = value;\n        });\n    }\n    var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n    var matrixSetObj = find(matrixSets, function (elt, index, array) {\n        return elt['Identifier'] == matrixSet;\n    });\n    var projection;\n    var code = matrixSetObj['SupportedCRS'];\n    if (code) {\n        projection = getProjection(code);\n    }\n    if ('projection' in config) {\n        var projConfig = getProjection(config['projection']);\n        if (projConfig) {\n            if (!projection || equivalent(projConfig, projection)) {\n                projection = projConfig;\n            }\n        }\n    }\n    var wrapX = false;\n    var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n    var matrix = matrixSetObj.TileMatrix[0];\n    // create default matrixLimit\n    var selectedMatrixLimit = {\n        MinTileCol: 0,\n        MinTileRow: 0,\n        // subtract one to end up at tile top left\n        MaxTileCol: matrix.MatrixWidth - 1,\n        MaxTileRow: matrix.MatrixHeight - 1,\n    };\n    //in case of matrix limits, use matrix limits to calculate extent\n    if (matrixLimits) {\n        selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n        var m = find(matrixSetObj.TileMatrix, function (tileMatrixValue) {\n            return tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n                matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n                    selectedMatrixLimit.TileMatrix;\n        });\n        if (m) {\n            matrix = m;\n        }\n    }\n    var resolution = (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n    var origin = switchOriginXY\n        ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n        : matrix.TopLeftCorner;\n    var tileSpanX = matrix.TileWidth * resolution;\n    var tileSpanY = matrix.TileHeight * resolution;\n    var matrixSetExtent = matrixSetObj['BoundingBox'];\n    var extent = [\n        origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n        // add one to get proper bottom/right coordinate\n        origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n        origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n        origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n    ];\n    if (matrixSetExtent !== undefined &&\n        !containsExtent(matrixSetExtent, extent)) {\n        var wgs84BoundingBox = l['WGS84BoundingBox'];\n        var wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n        extent = matrixSetExtent;\n        if (wgs84BoundingBox) {\n            wrapX =\n                wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n                    wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n        }\n        else {\n            var wgs84MatrixSetExtent = transformExtent(matrixSetExtent, matrixSetObj['SupportedCRS'], 'EPSG:4326');\n            // Ignore slight deviation from the correct x limits\n            wrapX =\n                wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n                    wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n        }\n    }\n    var tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n    /** @type {!Array<string>} */\n    var urls = [];\n    var requestEncoding = config['requestEncoding'];\n    requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n    if ('OperationsMetadata' in wmtsCap &&\n        'GetTile' in wmtsCap['OperationsMetadata']) {\n        var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n        for (var i = 0, ii = gets.length; i < ii; ++i) {\n            if (gets[i]['Constraint']) {\n                var constraint = find(gets[i]['Constraint'], function (element) {\n                    return element['name'] == 'GetEncoding';\n                });\n                var encodings = constraint['AllowedValues']['Value'];\n                if (requestEncoding === '') {\n                    // requestEncoding not provided, use the first encoding from the list\n                    requestEncoding = encodings[0];\n                }\n                if (requestEncoding === WMTSRequestEncoding.KVP) {\n                    if (includes(encodings, WMTSRequestEncoding.KVP)) {\n                        urls.push(/** @type {string} */ (gets[i]['href']));\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n            else if (gets[i]['href']) {\n                requestEncoding = WMTSRequestEncoding.KVP;\n                urls.push(/** @type {string} */ (gets[i]['href']));\n            }\n        }\n    }\n    if (urls.length === 0) {\n        requestEncoding = WMTSRequestEncoding.REST;\n        l['ResourceURL'].forEach(function (element) {\n            if (element['resourceType'] === 'tile') {\n                format = element['format'];\n                urls.push(/** @type {string} */ (element['template']));\n            }\n        });\n    }\n    return {\n        urls: urls,\n        layer: config['layer'],\n        matrixSet: matrixSet,\n        format: format,\n        projection: projection,\n        requestEncoding: requestEncoding,\n        tileGrid: tileGrid,\n        style: style,\n        dimensions: dimensions,\n        wrapX: wrapX,\n        crossOrigin: config['crossOrigin'],\n    };\n}\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < count >> 1) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count && priorities[rIndex] < priorities[lIndex]\n                ? rIndex\n                : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ =\n            options.attributionsCollapsible !== undefined\n                ? options.attributionsCollapsible\n                : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {import(\"./State.js\").default}\n         */\n        _this.state_ =\n            options.state !== undefined ? options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {import(\"./State.js\").default} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    Source.prototype.getContextOptions = function () {\n        return undefined;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {import(\"./State.js\").default} state State.\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map"],"sourceRoot":""}