{"version":3,"sources":["webpack:///./node_modules/multiformats/cjs/src/bases/base16.js","webpack:///./node_modules/multiformats/cjs/src/bases/base8.js","webpack:///./node_modules/multiformats/cjs/src/bases/base32.js","webpack:///./node_modules/multiformats/cjs/src/bases/base64.js","webpack:///./node_modules/multibase/src/rfc4648.js","webpack:///./node_modules/multiformats/cjs/src/hashes/identity.js","webpack:///./node_modules/multiformats/cjs/src/hashes/digest.js","webpack:///./node_modules/multihashes/src/index.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/multihashes/src/constants.js","webpack:///./node_modules/multiformats/cjs/src/bases/base36.js","webpack:///./node_modules/multibase/src/index.js","webpack:///./node_modules/multiformats/cjs/vendor/varint.js","webpack:///./node_modules/multiformats/cjs/vendor/base-x.js","webpack:///./node_modules/multiformats/cjs/src/codecs/json.js","webpack:///./node_modules/multiformats/cjs/src/hashes/sha2-browser.js","webpack:///./node_modules/json-schema-traverse/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/multiformats/cjs/src/bases/identity.js","webpack:///./node_modules/multiformats/cjs/src/codecs/raw.js","webpack:///./node_modules/multiformats/cjs/src/hashes/hasher.js","webpack:///./node_modules/multibase/src/base.js","webpack:///./node_modules/multibase/src/util.js","webpack:///./node_modules/multibase/src/constants.js","webpack:///./node_modules/multiformats/cjs/src/varint.js","webpack:///./node_modules/multiformats/cjs/src/basics.js","webpack:///./node_modules/multiformats/cjs/src/bases/base10.js","webpack:///./node_modules/multiformats/cjs/src/bases/base2.js","webpack:///./node_modules/multiformats/cjs/src/index.js","webpack:///./node_modules/multiformats/cjs/src/bases/base.js","webpack:///./node_modules/multiformats/cjs/src/bytes.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/multiformats/cjs/src/bases/base58.js","webpack:///./node_modules/multiformats/cjs/src/cid.js"],"names":["Object","defineProperty","exports","value","base","base16","rfc4648","prefix","name","alphabet","bitsPerChar","base16upper","base8","base32","base32upper","base32pad","base32padupper","base32hex","base32hexupper","base32hexpad","base32hexpadupper","base32z","base64","base64pad","base64url","base64urlpad","decode","string","codes","i","length","end","out","Uint8Array","bits","buffer","written","undefined","SyntaxError","encode","data","pad","mask","input","module","hasher","bytes","identity","from","code","coerce","varint","create","digest","size","byteLength","sizeOffset","encodingLength","digestOffset","encodeTo","set","Digest","multihash","bytes$1","subarray","Error","equals","a","b","this","multibase","names","uint8ArrayToString","uint8ArrayFromString","uint8ArrayConcat","key","toHexString","hash","fromHexString","toB58String","slice","fromB58String","encoded","isValidCode","toString","len","hashfn","coerceCode","isAppCode","validate","freeze","ctor","superCtor","super_","prototype","constructor","enumerable","writable","configurable","TempCtor","base36","baseX","base36upper","constants","encodeText","decodeText","concat","nameOrCode","buf","codeBuf","encoding","validEncode","enc","includes","toLowerCase","substring","isEncoded","call","err","hasOwnProperty","encodingFromData","encode_1","MSB","REST","MSBALL","INT","Math","pow","num","offset","oldOffset","read","MSB$1","REST$1","res","shift","counter","l","RangeError","N1","N2","N3","N4","N5","N6","N7","N8","N9","_brrp_varint","varint$1","ALPHABET","TypeError","BASE_MAP","j","x","charAt","xc","charCodeAt","BASE","LEADER","FACTOR","log","iFACTOR","source","ArrayBuffer","isView","byteOffset","Array","isArray","zeroes","pbegin","pend","b58","carry","it1","it2","str","repeat","decodeUnsafe","psz","b256","it3","it4","vch","src","_brrp__multiformats_scope_baseX","json","TextEncoder","JSON","stringify","parse","TextDecoder","sha","async","crypto","subtle","sha256","sha512","traverse","schema","opts","cb","pre","post","_traverse","jsonPtr","rootSchema","parentJsonPtr","parentKeyword","parentSchema","keyIndex","sch","arrayKeywords","propsKeywords","prop","escapeJsonPtr","keywords","allKeys","skipKeywords","replace","additionalItems","items","contains","additionalProperties","propertyNames","not","allOf","anyOf","oneOf","definitions","properties","patternProperties","dependencies","default","enum","const","required","maximum","minimum","exclusiveMaximum","exclusiveMinimum","multipleOf","maxLength","minLength","pattern","format","maxItems","minItems","uniqueItems","maxProperties","minProperties","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","write","c","rt","abs","isNaN","floor","LN2","fromString","raw","Hasher","digest$1","Base","factory","codec","char","indexOf","textDecoder","textEncoder","text","arrs","output","arr","reduce","prev","tupple","int","target","base2","base10","base58","sha2","identity$1","cid","bases","hashes","codecs","CID","baseX$1","Encoder","baseEncode","Decoder","baseDecode","decoder","decoders","ComposedDecoder","other","keys","Codec","encoder","empty","toHex","hex","byte","padStart","fromHex","hexes","match","map","parseInt","aa","bb","ii","o","isBinary","base58btc","base58flickr","version","asCID","_baseCache","Map","defineProperties","hidden","readonly","DAG_PB_CODE","SHA_256_CODE","createV0","createV1","toStringV0","toStringV1","get","Symbol","toStringTag","for","deprecate","IS_CID_DEPRECATION","cidSymbol","encodeCID","remainder","decodeFirst","specs","inspectBytes","prefixSize","multihashSize","multihashBytes","digestBytes","digestSize","multihashCode","initialBytes","next","parseCIDtoBytes","cache","codeOffset","hashOffset","range","message","test","console","warn"],"mappings":"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cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,YAAa,MACb,aAAc,MACd,aAAc,MACd,aAAc,MACd,aAAc,MACd,aAAc,MACd,aAAc,MACd,aAAc,MACd,aAAc,MACd,aAAc,MACd,aAAc,MACd,aAAc,MACd,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,aAAc,MACd,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,aAAc,MACd,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,cAAe,MACf,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB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","file":"js/chunk-vendors~7d359b94.a36beac6.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base16 = base.rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nconst base16upper = base.rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});\n\nexports.base16 = base16;\nexports.base16upper = base16upper;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base8 = base.rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});\n\nexports.base8 = base8;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base32 = base.rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nconst base32upper = base.rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nconst base32pad = base.rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nconst base32padupper = base.rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nconst base32hex = base.rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nconst base32hexupper = base.rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nconst base32hexpad = base.rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nconst base32hexpadupper = base.rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nconst base32z = base.rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});\n\nexports.base32 = base32;\nexports.base32hex = base32hex;\nexports.base32hexpad = base32hexpad;\nexports.base32hexpadupper = base32hexpadupper;\nexports.base32hexupper = base32hexupper;\nexports.base32pad = base32pad;\nexports.base32padupper = base32padupper;\nexports.base32upper = base32upper;\nexports.base32z = base32z;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base64 = base.rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nconst base64pad = base.rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nconst base64url = base.rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nconst base64urlpad = base.rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});\n\nexports.base64 = base64;\nexports.base64pad = base64pad;\nexports.base64url = base64url;\nexports.base64urlpad = base64urlpad;\n","'use strict'\n\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError('Invalid character ' + string[i])\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @param {number} bitsPerChar\n * @returns {CodecFactory}\n */\nconst rfc4648 = (bitsPerChar) => (alphabet) => {\n  return {\n    /**\n     * @param {Uint8Array} input\n     * @returns {string}\n     */\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    /**\n     * @param {string} input\n     * @returns {Uint8Array}\n     */\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar)\n    }\n  }\n}\n\nmodule.exports = { rfc4648 }\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar hasher = require('./hasher.js');\nvar bytes = require('../bytes.js');\n\nconst identity = hasher.from({\n  name: 'identity',\n  code: 0,\n  encode: input => bytes.coerce(input)\n});\n\nexports.identity = identity;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar bytes = require('../bytes.js');\nvar varint = require('../varint.js');\n\nconst create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nconst decode = multihash => {\n  const bytes$1 = bytes.coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes$1);\n  const [size, digestOffset] = varint.decode(bytes$1.subarray(sizeOffset));\n  const digest = bytes$1.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes$1);\n};\nconst equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && bytes.equals(a.bytes, b.bytes);\n  }\n};\nclass Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}\n\nexports.Digest = Digest;\nexports.create = create;\nexports.decode = decode;\nexports.equals = equals;\n","/**\n * Multihash implementation in JavaScript.\n *\n * @module multihash\n */\n'use strict'\n\nconst multibase = require('multibase')\nconst varint = require('varint')\nconst { names } = require('./constants')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\nconst uint8ArrayConcat = require('uint8arrays/concat')\n\nconst codes = /** @type {import('./types').CodeNameMap} */({})\n\n// eslint-disable-next-line guard-for-in\nfor (const key in names) {\n  const name = /** @type {HashName} */(key)\n  codes[names[name]] = name\n}\n\n/**\n * Convert the given multihash to a hex encoded string.\n *\n * @param {Uint8Array} hash\n * @returns {string}\n */\nfunction toHexString (hash) {\n  if (!(hash instanceof Uint8Array)) {\n    throw new Error('must be passed a Uint8Array')\n  }\n\n  return uint8ArrayToString(hash, 'base16')\n}\n\n/**\n * Convert the given hex encoded string to a multihash.\n *\n * @param {string} hash\n * @returns {Uint8Array}\n */\nfunction fromHexString (hash) {\n  return uint8ArrayFromString(hash, 'base16')\n}\n\n/**\n * Convert the given multihash to a base58 encoded string.\n *\n * @param {Uint8Array} hash\n * @returns {string}\n */\nfunction toB58String (hash) {\n  if (!(hash instanceof Uint8Array)) {\n    throw new Error('must be passed a Uint8Array')\n  }\n\n  return uint8ArrayToString(multibase.encode('base58btc', hash)).slice(1)\n}\n\n/**\n * Convert the given base58 encoded string to a multihash.\n *\n * @param {string|Uint8Array} hash\n * @returns {Uint8Array}\n */\nfunction fromB58String (hash) {\n  const encoded = hash instanceof Uint8Array\n    ? uint8ArrayToString(hash)\n    : hash\n\n  return multibase.decode('z' + encoded)\n}\n\n/**\n * Decode a hash from the given multihash.\n *\n * @param {Uint8Array} bytes\n * @returns {{code: HashCode, name: HashName, length: number, digest: Uint8Array}} result\n */\nfunction decode (bytes) {\n  if (!(bytes instanceof Uint8Array)) {\n    throw new Error('multihash must be a Uint8Array')\n  }\n\n  if (bytes.length < 2) {\n    throw new Error('multihash too short. must be > 2 bytes.')\n  }\n\n  const code = /** @type {HashCode} */(varint.decode(bytes))\n  if (!isValidCode(code)) {\n    throw new Error(`multihash unknown function code: 0x${code.toString(16)}`)\n  }\n  bytes = bytes.slice(varint.decode.bytes)\n\n  const len = varint.decode(bytes)\n  if (len < 0) {\n    throw new Error(`multihash invalid length: ${len}`)\n  }\n  bytes = bytes.slice(varint.decode.bytes)\n\n  if (bytes.length !== len) {\n    throw new Error(`multihash length inconsistent: 0x${uint8ArrayToString(bytes, 'base16')}`)\n  }\n\n  return {\n    code,\n    name: codes[code],\n    length: len,\n    digest: bytes\n  }\n}\n\n/**\n * Encode a hash digest along with the specified function code.\n *\n * > **Note:** the length is derived from the length of the digest itself.\n *\n * @param {Uint8Array} digest\n * @param {HashName | HashCode} code\n * @param {number} [length]\n * @returns {Uint8Array}\n */\nfunction encode (digest, code, length) {\n  if (!digest || code === undefined) {\n    throw new Error('multihash encode requires at least two args: digest, code')\n  }\n\n  // ensure it's a hashfunction code.\n  const hashfn = coerceCode(code)\n\n  if (!(digest instanceof Uint8Array)) {\n    throw new Error('digest should be a Uint8Array')\n  }\n\n  if (length == null) {\n    length = digest.length\n  }\n\n  if (length && digest.length !== length) {\n    throw new Error('digest length should be equal to specified length.')\n  }\n\n  const hash = varint.encode(hashfn)\n  const len = varint.encode(length)\n  return uint8ArrayConcat([hash, len, digest], hash.length + len.length + digest.length)\n}\n\n/**\n * Converts a hash function name into the matching code.\n * If passed a number it will return the number if it's a valid code.\n *\n * @param {HashName | number} name\n * @returns {number}\n */\nfunction coerceCode (name) {\n  let code = name\n\n  if (typeof name === 'string') {\n    if (names[name] === undefined) {\n      throw new Error(`Unrecognized hash function named: ${name}`)\n    }\n    code = names[name]\n  }\n\n  if (typeof code !== 'number') {\n    throw new Error(`Hash function code should be a number. Got: ${code}`)\n  }\n\n  // @ts-ignore\n  if (codes[code] === undefined && !isAppCode(code)) {\n    throw new Error(`Unrecognized function code: ${code}`)\n  }\n\n  return code\n}\n\n/**\n * Checks if a code is part of the app range\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction isAppCode (code) {\n  return code > 0 && code < 0x10\n}\n\n/**\n * Checks whether a multihash code is valid.\n *\n * @param {HashCode} code\n * @returns {boolean}\n */\nfunction isValidCode (code) {\n  if (isAppCode(code)) {\n    return true\n  }\n\n  if (codes[code]) {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Check if the given buffer is a valid multihash. Throws an error if it is not valid.\n *\n * @param {Uint8Array} multihash\n * @returns {void}\n * @throws {Error}\n */\nfunction validate (multihash) {\n  decode(multihash) // throws if bad.\n}\n\n/**\n * Returns a prefix from a valid multihash. Throws an error if it is not valid.\n *\n * @param {Uint8Array} multihash\n * @returns {Uint8Array}\n * @throws {Error}\n */\nfunction prefix (multihash) {\n  validate(multihash)\n\n  return multihash.subarray(0, 2)\n}\n\nmodule.exports = {\n  names,\n  codes: Object.freeze(codes),\n  toHexString,\n  fromHexString,\n  toB58String,\n  fromB58String,\n  decode,\n  encode,\n  coerceCode,\n  isAppCode,\n  validate,\n  prefix,\n  isValidCode\n}\n\n/**\n * @typedef { import(\"./constants\").HashCode } HashCode\n * @typedef { import(\"./constants\").HashName } HashName\n */\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","/* eslint quote-props: off */\n'use strict'\n\n/**\n * Names for all available hashes\n *\n * @typedef { \"identity\" | \"sha1\" | \"sha2-256\" | \"sha2-512\" | \"sha3-512\" | \"sha3-384\" | \"sha3-256\" | \"sha3-224\" | \"shake-128\" | \"shake-256\" | \"keccak-224\" | \"keccak-256\" | \"keccak-384\" | \"keccak-512\" | \"blake3\" | \"murmur3-128\" | \"murmur3-32\" | \"dbl-sha2-256\" | \"md4\" | \"md5\" | \"bmt\" | \"sha2-256-trunc254-padded\" | \"ripemd-128\" | \"ripemd-160\" | \"ripemd-256\" | \"ripemd-320\" | \"x11\" | \"kangarootwelve\" | \"sm3-256\" | \"blake2b-8\" | \"blake2b-16\" | \"blake2b-24\" | \"blake2b-32\" | \"blake2b-40\" | \"blake2b-48\" | \"blake2b-56\" | \"blake2b-64\" | \"blake2b-72\" | \"blake2b-80\" | \"blake2b-88\" | \"blake2b-96\" | \"blake2b-104\" | \"blake2b-112\" | \"blake2b-120\" | \"blake2b-128\" | \"blake2b-136\" | \"blake2b-144\" | \"blake2b-152\" | \"blake2b-160\" | \"blake2b-168\" | \"blake2b-176\" | \"blake2b-184\" | \"blake2b-192\" | \"blake2b-200\" | \"blake2b-208\" | \"blake2b-216\" | \"blake2b-224\" | \"blake2b-232\" | \"blake2b-240\" | \"blake2b-248\" | \"blake2b-256\" | \"blake2b-264\" | \"blake2b-272\" | \"blake2b-280\" | \"blake2b-288\" | \"blake2b-296\" | \"blake2b-304\" | \"blake2b-312\" | \"blake2b-320\" | \"blake2b-328\" | \"blake2b-336\" | \"blake2b-344\" | \"blake2b-352\" | \"blake2b-360\" | \"blake2b-368\" | \"blake2b-376\" | \"blake2b-384\" | \"blake2b-392\" | \"blake2b-400\" | \"blake2b-408\" | \"blake2b-416\" | \"blake2b-424\" | \"blake2b-432\" | \"blake2b-440\" | \"blake2b-448\" | \"blake2b-456\" | \"blake2b-464\" | \"blake2b-472\" | \"blake2b-480\" | \"blake2b-488\" | \"blake2b-496\" | \"blake2b-504\" | \"blake2b-512\" | \"blake2s-8\" | \"blake2s-16\" | \"blake2s-24\" | \"blake2s-32\" | \"blake2s-40\" | \"blake2s-48\" | \"blake2s-56\" | \"blake2s-64\" | \"blake2s-72\" | \"blake2s-80\" | \"blake2s-88\" | \"blake2s-96\" | \"blake2s-104\" | \"blake2s-112\" | \"blake2s-120\" | \"blake2s-128\" | \"blake2s-136\" | \"blake2s-144\" | \"blake2s-152\" | \"blake2s-160\" | \"blake2s-168\" | \"blake2s-176\" | \"blake2s-184\" | \"blake2s-192\" | \"blake2s-200\" | \"blake2s-208\" | \"blake2s-216\" | \"blake2s-224\" | \"blake2s-232\" | \"blake2s-240\" | \"blake2s-248\" | \"blake2s-256\" | \"skein256-8\" | \"skein256-16\" | \"skein256-24\" | \"skein256-32\" | \"skein256-40\" | \"skein256-48\" | \"skein256-56\" | \"skein256-64\" | \"skein256-72\" | \"skein256-80\" | \"skein256-88\" | \"skein256-96\" | \"skein256-104\" | \"skein256-112\" | \"skein256-120\" | \"skein256-128\" | \"skein256-136\" | \"skein256-144\" | \"skein256-152\" | \"skein256-160\" | \"skein256-168\" | \"skein256-176\" | \"skein256-184\" | \"skein256-192\" | \"skein256-200\" | \"skein256-208\" | \"skein256-216\" | \"skein256-224\" | \"skein256-232\" | \"skein256-240\" | \"skein256-248\" | \"skein256-256\" | \"skein512-8\" | \"skein512-16\" | \"skein512-24\" | \"skein512-32\" | \"skein512-40\" | \"skein512-48\" | \"skein512-56\" | \"skein512-64\" | \"skein512-72\" | \"skein512-80\" | \"skein512-88\" | \"skein512-96\" | \"skein512-104\" | \"skein512-112\" | \"skein512-120\" | \"skein512-128\" | \"skein512-136\" | \"skein512-144\" | \"skein512-152\" | \"skein512-160\" | \"skein512-168\" | \"skein512-176\" | \"skein512-184\" | \"skein512-192\" | \"skein512-200\" | \"skein512-208\" | \"skein512-216\" | \"skein512-224\" | \"skein512-232\" | \"skein512-240\" | \"skein512-248\" | \"skein512-256\" | \"skein512-264\" | \"skein512-272\" | \"skein512-280\" | \"skein512-288\" | \"skein512-296\" | \"skein512-304\" | \"skein512-312\" | \"skein512-320\" | \"skein512-328\" | \"skein512-336\" | \"skein512-344\" | \"skein512-352\" | \"skein512-360\" | \"skein512-368\" | \"skein512-376\" | \"skein512-384\" | \"skein512-392\" | \"skein512-400\" | \"skein512-408\" | \"skein512-416\" | \"skein512-424\" | \"skein512-432\" | \"skein512-440\" | \"skein512-448\" | \"skein512-456\" | \"skein512-464\" | \"skein512-472\" | \"skein512-480\" | \"skein512-488\" | \"skein512-496\" | \"skein512-504\" | \"skein512-512\" | \"skein1024-8\" | \"skein1024-16\" | \"skein1024-24\" | \"skein1024-32\" | \"skein1024-40\" | \"skein1024-48\" | \"skein1024-56\" | \"skein1024-64\" | \"skein1024-72\" | \"skein1024-80\" | \"skein1024-88\" | \"skein1024-96\" | \"skein1024-104\" | \"skein1024-112\" | \"skein1024-120\" | \"skein1024-128\" | \"skein1024-136\" | \"skein1024-144\" | \"skein1024-152\" | \"skein1024-160\" | \"skein1024-168\" | \"skein1024-176\" | \"skein1024-184\" | \"skein1024-192\" | \"skein1024-200\" | \"skein1024-208\" | \"skein1024-216\" | \"skein1024-224\" | \"skein1024-232\" | \"skein1024-240\" | \"skein1024-248\" | \"skein1024-256\" | \"skein1024-264\" | \"skein1024-272\" | \"skein1024-280\" | \"skein1024-288\" | \"skein1024-296\" | \"skein1024-304\" | \"skein1024-312\" | \"skein1024-320\" | \"skein1024-328\" | \"skein1024-336\" | \"skein1024-344\" | \"skein1024-352\" | \"skein1024-360\" | \"skein1024-368\" | \"skein1024-376\" | \"skein1024-384\" | \"skein1024-392\" | \"skein1024-400\" | \"skein1024-408\" | \"skein1024-416\" | \"skein1024-424\" | \"skein1024-432\" | \"skein1024-440\" | \"skein1024-448\" | \"skein1024-456\" | \"skein1024-464\" | \"skein1024-472\" | \"skein1024-480\" | \"skein1024-488\" | \"skein1024-496\" | \"skein1024-504\" | \"skein1024-512\" | \"skein1024-520\" | \"skein1024-528\" | \"skein1024-536\" | \"skein1024-544\" | \"skein1024-552\" | \"skein1024-560\" | \"skein1024-568\" | \"skein1024-576\" | \"skein1024-584\" | \"skein1024-592\" | \"skein1024-600\" | \"skein1024-608\" | \"skein1024-616\" | \"skein1024-624\" | \"skein1024-632\" | \"skein1024-640\" | \"skein1024-648\" | \"skein1024-656\" | \"skein1024-664\" | \"skein1024-672\" | \"skein1024-680\" | \"skein1024-688\" | \"skein1024-696\" | \"skein1024-704\" | \"skein1024-712\" | \"skein1024-720\" | \"skein1024-728\" | \"skein1024-736\" | \"skein1024-744\" | \"skein1024-752\" | \"skein1024-760\" | \"skein1024-768\" | \"skein1024-776\" | \"skein1024-784\" | \"skein1024-792\" | \"skein1024-800\" | \"skein1024-808\" | \"skein1024-816\" | \"skein1024-824\" | \"skein1024-832\" | \"skein1024-840\" | \"skein1024-848\" | \"skein1024-856\" | \"skein1024-864\" | \"skein1024-872\" | \"skein1024-880\" | \"skein1024-888\" | \"skein1024-896\" | \"skein1024-904\" | \"skein1024-912\" | \"skein1024-920\" | \"skein1024-928\" | \"skein1024-936\" | \"skein1024-944\" | \"skein1024-952\" | \"skein1024-960\" | \"skein1024-968\" | \"skein1024-976\" | \"skein1024-984\" | \"skein1024-992\" | \"skein1024-1000\" | \"skein1024-1008\" | \"skein1024-1016\" | \"skein1024-1024\" | \"poseidon-bls12_381-a2-fc1\" | \"poseidon-bls12_381-a2-fc1-sc\" } HashName\n */\n/**\n * Codes for all available hashes\n *\n * @typedef { 0x00 | 0x11 | 0x12 | 0x13 | 0x14 | 0x15 | 0x16 | 0x17 | 0x18 | 0x19 | 0x1a | 0x1b | 0x1c | 0x1d | 0x1e | 0x22 | 0x23 | 0x56 | 0xd4 | 0xd5 | 0xd6 | 0x1012 | 0x1052 | 0x1053 | 0x1054 | 0x1055 | 0x1100 | 0x1d01 | 0x534d | 0xb201 | 0xb202 | 0xb203 | 0xb204 | 0xb205 | 0xb206 | 0xb207 | 0xb208 | 0xb209 | 0xb20a | 0xb20b | 0xb20c | 0xb20d | 0xb20e | 0xb20f | 0xb210 | 0xb211 | 0xb212 | 0xb213 | 0xb214 | 0xb215 | 0xb216 | 0xb217 | 0xb218 | 0xb219 | 0xb21a | 0xb21b | 0xb21c | 0xb21d | 0xb21e | 0xb21f | 0xb220 | 0xb221 | 0xb222 | 0xb223 | 0xb224 | 0xb225 | 0xb226 | 0xb227 | 0xb228 | 0xb229 | 0xb22a | 0xb22b | 0xb22c | 0xb22d | 0xb22e | 0xb22f | 0xb230 | 0xb231 | 0xb232 | 0xb233 | 0xb234 | 0xb235 | 0xb236 | 0xb237 | 0xb238 | 0xb239 | 0xb23a | 0xb23b | 0xb23c | 0xb23d | 0xb23e | 0xb23f | 0xb240 | 0xb241 | 0xb242 | 0xb243 | 0xb244 | 0xb245 | 0xb246 | 0xb247 | 0xb248 | 0xb249 | 0xb24a | 0xb24b | 0xb24c | 0xb24d | 0xb24e | 0xb24f | 0xb250 | 0xb251 | 0xb252 | 0xb253 | 0xb254 | 0xb255 | 0xb256 | 0xb257 | 0xb258 | 0xb259 | 0xb25a | 0xb25b | 0xb25c | 0xb25d | 0xb25e | 0xb25f | 0xb260 | 0xb301 | 0xb302 | 0xb303 | 0xb304 | 0xb305 | 0xb306 | 0xb307 | 0xb308 | 0xb309 | 0xb30a | 0xb30b | 0xb30c | 0xb30d | 0xb30e | 0xb30f | 0xb310 | 0xb311 | 0xb312 | 0xb313 | 0xb314 | 0xb315 | 0xb316 | 0xb317 | 0xb318 | 0xb319 | 0xb31a | 0xb31b | 0xb31c | 0xb31d | 0xb31e | 0xb31f | 0xb320 | 0xb321 | 0xb322 | 0xb323 | 0xb324 | 0xb325 | 0xb326 | 0xb327 | 0xb328 | 0xb329 | 0xb32a | 0xb32b | 0xb32c | 0xb32d | 0xb32e | 0xb32f | 0xb330 | 0xb331 | 0xb332 | 0xb333 | 0xb334 | 0xb335 | 0xb336 | 0xb337 | 0xb338 | 0xb339 | 0xb33a | 0xb33b | 0xb33c | 0xb33d | 0xb33e | 0xb33f | 0xb340 | 0xb341 | 0xb342 | 0xb343 | 0xb344 | 0xb345 | 0xb346 | 0xb347 | 0xb348 | 0xb349 | 0xb34a | 0xb34b | 0xb34c | 0xb34d | 0xb34e | 0xb34f | 0xb350 | 0xb351 | 0xb352 | 0xb353 | 0xb354 | 0xb355 | 0xb356 | 0xb357 | 0xb358 | 0xb359 | 0xb35a | 0xb35b | 0xb35c | 0xb35d | 0xb35e | 0xb35f | 0xb360 | 0xb361 | 0xb362 | 0xb363 | 0xb364 | 0xb365 | 0xb366 | 0xb367 | 0xb368 | 0xb369 | 0xb36a | 0xb36b | 0xb36c | 0xb36d | 0xb36e | 0xb36f | 0xb370 | 0xb371 | 0xb372 | 0xb373 | 0xb374 | 0xb375 | 0xb376 | 0xb377 | 0xb378 | 0xb379 | 0xb37a | 0xb37b | 0xb37c | 0xb37d | 0xb37e | 0xb37f | 0xb380 | 0xb381 | 0xb382 | 0xb383 | 0xb384 | 0xb385 | 0xb386 | 0xb387 | 0xb388 | 0xb389 | 0xb38a | 0xb38b | 0xb38c | 0xb38d | 0xb38e | 0xb38f | 0xb390 | 0xb391 | 0xb392 | 0xb393 | 0xb394 | 0xb395 | 0xb396 | 0xb397 | 0xb398 | 0xb399 | 0xb39a | 0xb39b | 0xb39c | 0xb39d | 0xb39e | 0xb39f | 0xb3a0 | 0xb3a1 | 0xb3a2 | 0xb3a3 | 0xb3a4 | 0xb3a5 | 0xb3a6 | 0xb3a7 | 0xb3a8 | 0xb3a9 | 0xb3aa | 0xb3ab | 0xb3ac | 0xb3ad | 0xb3ae | 0xb3af | 0xb3b0 | 0xb3b1 | 0xb3b2 | 0xb3b3 | 0xb3b4 | 0xb3b5 | 0xb3b6 | 0xb3b7 | 0xb3b8 | 0xb3b9 | 0xb3ba | 0xb3bb | 0xb3bc | 0xb3bd | 0xb3be | 0xb3bf | 0xb3c0 | 0xb3c1 | 0xb3c2 | 0xb3c3 | 0xb3c4 | 0xb3c5 | 0xb3c6 | 0xb3c7 | 0xb3c8 | 0xb3c9 | 0xb3ca | 0xb3cb | 0xb3cc | 0xb3cd | 0xb3ce | 0xb3cf | 0xb3d0 | 0xb3d1 | 0xb3d2 | 0xb3d3 | 0xb3d4 | 0xb3d5 | 0xb3d6 | 0xb3d7 | 0xb3d8 | 0xb3d9 | 0xb3da | 0xb3db | 0xb3dc | 0xb3dd | 0xb3de | 0xb3df | 0xb3e0 | 0xb401 | 0xb402 } HashCode\n */\n\n/**\n * @type { Record<HashName,HashCode> }\n */\nconst names = Object.freeze({\n  'identity': 0x00,\n  'sha1': 0x11,\n  'sha2-256': 0x12,\n  'sha2-512': 0x13,\n  'sha3-512': 0x14,\n  'sha3-384': 0x15,\n  'sha3-256': 0x16,\n  'sha3-224': 0x17,\n  'shake-128': 0x18,\n  'shake-256': 0x19,\n  'keccak-224': 0x1a,\n  'keccak-256': 0x1b,\n  'keccak-384': 0x1c,\n  'keccak-512': 0x1d,\n  'blake3': 0x1e,\n  'murmur3-128': 0x22,\n  'murmur3-32': 0x23,\n  'dbl-sha2-256': 0x56,\n  'md4': 0xd4,\n  'md5': 0xd5,\n  'bmt': 0xd6,\n  'sha2-256-trunc254-padded': 0x1012,\n  'ripemd-128': 0x1052,\n  'ripemd-160': 0x1053,\n  'ripemd-256': 0x1054,\n  'ripemd-320': 0x1055,\n  'x11': 0x1100,\n  'kangarootwelve': 0x1d01,\n  'sm3-256': 0x534d,\n  'blake2b-8': 0xb201,\n  'blake2b-16': 0xb202,\n  'blake2b-24': 0xb203,\n  'blake2b-32': 0xb204,\n  'blake2b-40': 0xb205,\n  'blake2b-48': 0xb206,\n  'blake2b-56': 0xb207,\n  'blake2b-64': 0xb208,\n  'blake2b-72': 0xb209,\n  'blake2b-80': 0xb20a,\n  'blake2b-88': 0xb20b,\n  'blake2b-96': 0xb20c,\n  'blake2b-104': 0xb20d,\n  'blake2b-112': 0xb20e,\n  'blake2b-120': 0xb20f,\n  'blake2b-128': 0xb210,\n  'blake2b-136': 0xb211,\n  'blake2b-144': 0xb212,\n  'blake2b-152': 0xb213,\n  'blake2b-160': 0xb214,\n  'blake2b-168': 0xb215,\n  'blake2b-176': 0xb216,\n  'blake2b-184': 0xb217,\n  'blake2b-192': 0xb218,\n  'blake2b-200': 0xb219,\n  'blake2b-208': 0xb21a,\n  'blake2b-216': 0xb21b,\n  'blake2b-224': 0xb21c,\n  'blake2b-232': 0xb21d,\n  'blake2b-240': 0xb21e,\n  'blake2b-248': 0xb21f,\n  'blake2b-256': 0xb220,\n  'blake2b-264': 0xb221,\n  'blake2b-272': 0xb222,\n  'blake2b-280': 0xb223,\n  'blake2b-288': 0xb224,\n  'blake2b-296': 0xb225,\n  'blake2b-304': 0xb226,\n  'blake2b-312': 0xb227,\n  'blake2b-320': 0xb228,\n  'blake2b-328': 0xb229,\n  'blake2b-336': 0xb22a,\n  'blake2b-344': 0xb22b,\n  'blake2b-352': 0xb22c,\n  'blake2b-360': 0xb22d,\n  'blake2b-368': 0xb22e,\n  'blake2b-376': 0xb22f,\n  'blake2b-384': 0xb230,\n  'blake2b-392': 0xb231,\n  'blake2b-400': 0xb232,\n  'blake2b-408': 0xb233,\n  'blake2b-416': 0xb234,\n  'blake2b-424': 0xb235,\n  'blake2b-432': 0xb236,\n  'blake2b-440': 0xb237,\n  'blake2b-448': 0xb238,\n  'blake2b-456': 0xb239,\n  'blake2b-464': 0xb23a,\n  'blake2b-472': 0xb23b,\n  'blake2b-480': 0xb23c,\n  'blake2b-488': 0xb23d,\n  'blake2b-496': 0xb23e,\n  'blake2b-504': 0xb23f,\n  'blake2b-512': 0xb240,\n  'blake2s-8': 0xb241,\n  'blake2s-16': 0xb242,\n  'blake2s-24': 0xb243,\n  'blake2s-32': 0xb244,\n  'blake2s-40': 0xb245,\n  'blake2s-48': 0xb246,\n  'blake2s-56': 0xb247,\n  'blake2s-64': 0xb248,\n  'blake2s-72': 0xb249,\n  'blake2s-80': 0xb24a,\n  'blake2s-88': 0xb24b,\n  'blake2s-96': 0xb24c,\n  'blake2s-104': 0xb24d,\n  'blake2s-112': 0xb24e,\n  'blake2s-120': 0xb24f,\n  'blake2s-128': 0xb250,\n  'blake2s-136': 0xb251,\n  'blake2s-144': 0xb252,\n  'blake2s-152': 0xb253,\n  'blake2s-160': 0xb254,\n  'blake2s-168': 0xb255,\n  'blake2s-176': 0xb256,\n  'blake2s-184': 0xb257,\n  'blake2s-192': 0xb258,\n  'blake2s-200': 0xb259,\n  'blake2s-208': 0xb25a,\n  'blake2s-216': 0xb25b,\n  'blake2s-224': 0xb25c,\n  'blake2s-232': 0xb25d,\n  'blake2s-240': 0xb25e,\n  'blake2s-248': 0xb25f,\n  'blake2s-256': 0xb260,\n  'skein256-8': 0xb301,\n  'skein256-16': 0xb302,\n  'skein256-24': 0xb303,\n  'skein256-32': 0xb304,\n  'skein256-40': 0xb305,\n  'skein256-48': 0xb306,\n  'skein256-56': 0xb307,\n  'skein256-64': 0xb308,\n  'skein256-72': 0xb309,\n  'skein256-80': 0xb30a,\n  'skein256-88': 0xb30b,\n  'skein256-96': 0xb30c,\n  'skein256-104': 0xb30d,\n  'skein256-112': 0xb30e,\n  'skein256-120': 0xb30f,\n  'skein256-128': 0xb310,\n  'skein256-136': 0xb311,\n  'skein256-144': 0xb312,\n  'skein256-152': 0xb313,\n  'skein256-160': 0xb314,\n  'skein256-168': 0xb315,\n  'skein256-176': 0xb316,\n  'skein256-184': 0xb317,\n  'skein256-192': 0xb318,\n  'skein256-200': 0xb319,\n  'skein256-208': 0xb31a,\n  'skein256-216': 0xb31b,\n  'skein256-224': 0xb31c,\n  'skein256-232': 0xb31d,\n  'skein256-240': 0xb31e,\n  'skein256-248': 0xb31f,\n  'skein256-256': 0xb320,\n  'skein512-8': 0xb321,\n  'skein512-16': 0xb322,\n  'skein512-24': 0xb323,\n  'skein512-32': 0xb324,\n  'skein512-40': 0xb325,\n  'skein512-48': 0xb326,\n  'skein512-56': 0xb327,\n  'skein512-64': 0xb328,\n  'skein512-72': 0xb329,\n  'skein512-80': 0xb32a,\n  'skein512-88': 0xb32b,\n  'skein512-96': 0xb32c,\n  'skein512-104': 0xb32d,\n  'skein512-112': 0xb32e,\n  'skein512-120': 0xb32f,\n  'skein512-128': 0xb330,\n  'skein512-136': 0xb331,\n  'skein512-144': 0xb332,\n  'skein512-152': 0xb333,\n  'skein512-160': 0xb334,\n  'skein512-168': 0xb335,\n  'skein512-176': 0xb336,\n  'skein512-184': 0xb337,\n  'skein512-192': 0xb338,\n  'skein512-200': 0xb339,\n  'skein512-208': 0xb33a,\n  'skein512-216': 0xb33b,\n  'skein512-224': 0xb33c,\n  'skein512-232': 0xb33d,\n  'skein512-240': 0xb33e,\n  'skein512-248': 0xb33f,\n  'skein512-256': 0xb340,\n  'skein512-264': 0xb341,\n  'skein512-272': 0xb342,\n  'skein512-280': 0xb343,\n  'skein512-288': 0xb344,\n  'skein512-296': 0xb345,\n  'skein512-304': 0xb346,\n  'skein512-312': 0xb347,\n  'skein512-320': 0xb348,\n  'skein512-328': 0xb349,\n  'skein512-336': 0xb34a,\n  'skein512-344': 0xb34b,\n  'skein512-352': 0xb34c,\n  'skein512-360': 0xb34d,\n  'skein512-368': 0xb34e,\n  'skein512-376': 0xb34f,\n  'skein512-384': 0xb350,\n  'skein512-392': 0xb351,\n  'skein512-400': 0xb352,\n  'skein512-408': 0xb353,\n  'skein512-416': 0xb354,\n  'skein512-424': 0xb355,\n  'skein512-432': 0xb356,\n  'skein512-440': 0xb357,\n  'skein512-448': 0xb358,\n  'skein512-456': 0xb359,\n  'skein512-464': 0xb35a,\n  'skein512-472': 0xb35b,\n  'skein512-480': 0xb35c,\n  'skein512-488': 0xb35d,\n  'skein512-496': 0xb35e,\n  'skein512-504': 0xb35f,\n  'skein512-512': 0xb360,\n  'skein1024-8': 0xb361,\n  'skein1024-16': 0xb362,\n  'skein1024-24': 0xb363,\n  'skein1024-32': 0xb364,\n  'skein1024-40': 0xb365,\n  'skein1024-48': 0xb366,\n  'skein1024-56': 0xb367,\n  'skein1024-64': 0xb368,\n  'skein1024-72': 0xb369,\n  'skein1024-80': 0xb36a,\n  'skein1024-88': 0xb36b,\n  'skein1024-96': 0xb36c,\n  'skein1024-104': 0xb36d,\n  'skein1024-112': 0xb36e,\n  'skein1024-120': 0xb36f,\n  'skein1024-128': 0xb370,\n  'skein1024-136': 0xb371,\n  'skein1024-144': 0xb372,\n  'skein1024-152': 0xb373,\n  'skein1024-160': 0xb374,\n  'skein1024-168': 0xb375,\n  'skein1024-176': 0xb376,\n  'skein1024-184': 0xb377,\n  'skein1024-192': 0xb378,\n  'skein1024-200': 0xb379,\n  'skein1024-208': 0xb37a,\n  'skein1024-216': 0xb37b,\n  'skein1024-224': 0xb37c,\n  'skein1024-232': 0xb37d,\n  'skein1024-240': 0xb37e,\n  'skein1024-248': 0xb37f,\n  'skein1024-256': 0xb380,\n  'skein1024-264': 0xb381,\n  'skein1024-272': 0xb382,\n  'skein1024-280': 0xb383,\n  'skein1024-288': 0xb384,\n  'skein1024-296': 0xb385,\n  'skein1024-304': 0xb386,\n  'skein1024-312': 0xb387,\n  'skein1024-320': 0xb388,\n  'skein1024-328': 0xb389,\n  'skein1024-336': 0xb38a,\n  'skein1024-344': 0xb38b,\n  'skein1024-352': 0xb38c,\n  'skein1024-360': 0xb38d,\n  'skein1024-368': 0xb38e,\n  'skein1024-376': 0xb38f,\n  'skein1024-384': 0xb390,\n  'skein1024-392': 0xb391,\n  'skein1024-400': 0xb392,\n  'skein1024-408': 0xb393,\n  'skein1024-416': 0xb394,\n  'skein1024-424': 0xb395,\n  'skein1024-432': 0xb396,\n  'skein1024-440': 0xb397,\n  'skein1024-448': 0xb398,\n  'skein1024-456': 0xb399,\n  'skein1024-464': 0xb39a,\n  'skein1024-472': 0xb39b,\n  'skein1024-480': 0xb39c,\n  'skein1024-488': 0xb39d,\n  'skein1024-496': 0xb39e,\n  'skein1024-504': 0xb39f,\n  'skein1024-512': 0xb3a0,\n  'skein1024-520': 0xb3a1,\n  'skein1024-528': 0xb3a2,\n  'skein1024-536': 0xb3a3,\n  'skein1024-544': 0xb3a4,\n  'skein1024-552': 0xb3a5,\n  'skein1024-560': 0xb3a6,\n  'skein1024-568': 0xb3a7,\n  'skein1024-576': 0xb3a8,\n  'skein1024-584': 0xb3a9,\n  'skein1024-592': 0xb3aa,\n  'skein1024-600': 0xb3ab,\n  'skein1024-608': 0xb3ac,\n  'skein1024-616': 0xb3ad,\n  'skein1024-624': 0xb3ae,\n  'skein1024-632': 0xb3af,\n  'skein1024-640': 0xb3b0,\n  'skein1024-648': 0xb3b1,\n  'skein1024-656': 0xb3b2,\n  'skein1024-664': 0xb3b3,\n  'skein1024-672': 0xb3b4,\n  'skein1024-680': 0xb3b5,\n  'skein1024-688': 0xb3b6,\n  'skein1024-696': 0xb3b7,\n  'skein1024-704': 0xb3b8,\n  'skein1024-712': 0xb3b9,\n  'skein1024-720': 0xb3ba,\n  'skein1024-728': 0xb3bb,\n  'skein1024-736': 0xb3bc,\n  'skein1024-744': 0xb3bd,\n  'skein1024-752': 0xb3be,\n  'skein1024-760': 0xb3bf,\n  'skein1024-768': 0xb3c0,\n  'skein1024-776': 0xb3c1,\n  'skein1024-784': 0xb3c2,\n  'skein1024-792': 0xb3c3,\n  'skein1024-800': 0xb3c4,\n  'skein1024-808': 0xb3c5,\n  'skein1024-816': 0xb3c6,\n  'skein1024-824': 0xb3c7,\n  'skein1024-832': 0xb3c8,\n  'skein1024-840': 0xb3c9,\n  'skein1024-848': 0xb3ca,\n  'skein1024-856': 0xb3cb,\n  'skein1024-864': 0xb3cc,\n  'skein1024-872': 0xb3cd,\n  'skein1024-880': 0xb3ce,\n  'skein1024-888': 0xb3cf,\n  'skein1024-896': 0xb3d0,\n  'skein1024-904': 0xb3d1,\n  'skein1024-912': 0xb3d2,\n  'skein1024-920': 0xb3d3,\n  'skein1024-928': 0xb3d4,\n  'skein1024-936': 0xb3d5,\n  'skein1024-944': 0xb3d6,\n  'skein1024-952': 0xb3d7,\n  'skein1024-960': 0xb3d8,\n  'skein1024-968': 0xb3d9,\n  'skein1024-976': 0xb3da,\n  'skein1024-984': 0xb3db,\n  'skein1024-992': 0xb3dc,\n  'skein1024-1000': 0xb3dd,\n  'skein1024-1008': 0xb3de,\n  'skein1024-1016': 0xb3df,\n  'skein1024-1024': 0xb3e0,\n  'poseidon-bls12_381-a2-fc1': 0xb401,\n  'poseidon-bls12_381-a2-fc1-sc': 0xb402\n})\n\nmodule.exports = { names }\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base36 = base.baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nconst base36upper = base.baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});\n\nexports.base36 = base36;\nexports.base36upper = base36upper;\n","/**\n * Implementation of the [multibase](https://github.com/multiformats/multibase) specification.\n *\n */\n'use strict'\n\nconst constants = require('./constants')\nconst { encodeText, decodeText, concat } = require('./util')\n\n/** @typedef {import('./base')} Base */\n/** @typedef {import(\"./types\").BaseNameOrCode} BaseNameOrCode */\n/** @typedef {import(\"./types\").BaseCode} BaseCode */\n/** @typedef {import(\"./types\").BaseName} BaseName */\n\n/**\n * Create a new Uint8Array with the multibase varint+code.\n *\n * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\n * @param {Uint8Array} buf - The data to be prefixed with multibase.\n * @returns {Uint8Array}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction multibase (nameOrCode, buf) {\n  if (!buf) {\n    throw new Error('requires an encoded Uint8Array')\n  }\n  const { name, codeBuf } = encoding(nameOrCode)\n  validEncode(name, buf)\n\n  return concat([codeBuf, buf], codeBuf.length + buf.length)\n}\n\n/**\n * Encode data with the specified base and add the multibase prefix.\n *\n * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\n * @param {Uint8Array} buf - The data to be encoded.\n * @returns {Uint8Array}\n * @throws {Error} Will throw if the encoding is not supported\n *\n */\nfunction encode (nameOrCode, buf) {\n  const enc = encoding(nameOrCode)\n  const data = encodeText(enc.encode(buf))\n\n  return concat([enc.codeBuf, data], enc.codeBuf.length + data.length)\n}\n\n/**\n * Takes a Uint8Array or string encoded with multibase header, decodes it and\n * returns the decoded buffer\n *\n * @param {Uint8Array|string} data\n * @returns {Uint8Array}\n * @throws {Error} Will throw if the encoding is not supported\n *\n */\nfunction decode (data) {\n  if (data instanceof Uint8Array) {\n    data = decodeText(data)\n  }\n  const prefix = data[0]\n\n  // Make all encodings case-insensitive except the ones that include upper and lower chars in the alphabet\n  if (['f', 'F', 'v', 'V', 't', 'T', 'b', 'B', 'c', 'C', 'h', 'k', 'K'].includes(prefix)) {\n    data = data.toLowerCase()\n  }\n  const enc = encoding(/** @type {BaseCode} */(data[0]))\n  return enc.decode(data.substring(1))\n}\n\n/**\n * Is the given data multibase encoded?\n *\n * @param {Uint8Array|string} data\n * @returns {false | string}\n */\nfunction isEncoded (data) {\n  if (data instanceof Uint8Array) {\n    data = decodeText(data)\n  }\n\n  // Ensure bufOrString is a string\n  if (Object.prototype.toString.call(data) !== '[object String]') {\n    return false\n  }\n\n  try {\n    const enc = encoding(/** @type {BaseCode} */(data[0]))\n    return enc.name\n  } catch (err) {\n    return false\n  }\n}\n\n/**\n * Validate encoded data\n *\n * @param {BaseNameOrCode} name\n * @param {Uint8Array} buf\n * @returns {void}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction validEncode (name, buf) {\n  const enc = encoding(name)\n  enc.decode(decodeText(buf))\n}\n\n/**\n * Get the encoding by name or code\n *\n * @param {BaseNameOrCode} nameOrCode\n * @returns {Base}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction encoding (nameOrCode) {\n  if (Object.prototype.hasOwnProperty.call(constants.names, /** @type {BaseName} */(nameOrCode))) {\n    return constants.names[/** @type {BaseName} */(nameOrCode)]\n  } else if (Object.prototype.hasOwnProperty.call(constants.codes, /** @type {BaseCode} */(nameOrCode))) {\n    return constants.codes[/** @type {BaseCode} */(nameOrCode)]\n  } else {\n    throw new Error(`Unsupported encoding: ${nameOrCode}`)\n  }\n}\n\n/**\n * Get encoding from data\n *\n * @param {string|Uint8Array} data\n * @returns {Base}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction encodingFromData (data) {\n  if (data instanceof Uint8Array) {\n    data = decodeText(data)\n  }\n\n  return encoding(/** @type {BaseCode} */(data[0]))\n}\n\nexports = module.exports = multibase\nexports.encode = encode\nexports.decode = decode\nexports.isEncoded = isEncoded\nexports.encoding = encoding\nexports.encodingFromData = encodingFromData\nexports.names = Object.freeze(constants.names)\nexports.codes = Object.freeze(constants.codes)\n","'use strict';\n\nvar encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nvar varint$1 = _brrp_varint;\n\nmodule.exports = varint$1;\n","'use strict';\n\nfunction base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\n\nmodule.exports = _brrp__multiformats_scope_baseX;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst {name, code, encode, decode} = {\n  name: 'json',\n  code: 512,\n  encode: json => new TextEncoder().encode(JSON.stringify(json)),\n  decode: bytes => JSON.parse(new TextDecoder().decode(bytes))\n};\n\nexports.code = code;\nexports.decode = decode;\nexports.encode = encode;\nexports.name = name;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar hasher = require('./hasher.js');\n\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nconst sha256 = hasher.from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nconst sha512 = hasher.from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});\n\nexports.sha256 = sha256;\nexports.sha512 = sha512;\n","'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};\n  var post = cb.post || function() {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\nvar bytes = require('../bytes.js');\n\nconst identity = base.from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => bytes.toString(buf),\n  decode: str => bytes.fromString(str)\n});\n\nexports.identity = identity;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar bytes = require('../bytes.js');\n\nconst raw = bytes$1 => bytes.coerce(bytes$1);\nconst {name, code, encode, decode} = {\n  name: 'raw',\n  code: 85,\n  decode: raw,\n  encode: raw\n};\n\nexports.code = code;\nexports.decode = decode;\nexports.encode = encode;\nexports.name = name;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar digest = require('./digest.js');\n\nconst from = ({name, code, encode}) => new Hasher(name, code, encode);\nclass Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  async digest(input) {\n    if (input instanceof Uint8Array) {\n      const digest$1 = await this.encode(input);\n      return digest.create(this.code, digest$1);\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\n\nexports.Hasher = Hasher;\nexports.from = from;\n","'use strict'\n\nconst { encodeText } = require('./util')\n\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n/** @typedef {import(\"./types\").BaseName} BaseName */\n/** @typedef {import(\"./types\").BaseCode} BaseCode */\n\n/**\n * Class to encode/decode in the supported Bases\n *\n */\nclass Base {\n  /**\n   * @param {BaseName} name\n   * @param {BaseCode} code\n   * @param {CodecFactory} factory\n   * @param {string} alphabet\n   */\n  constructor (name, code, factory, alphabet) {\n    this.name = name\n    this.code = code\n    this.codeBuf = encodeText(this.code)\n    this.alphabet = alphabet\n    this.codec = factory(alphabet)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   * @returns {string}\n   */\n  encode (buf) {\n    return this.codec.encode(buf)\n  }\n\n  /**\n   * @param {string} string\n   * @returns {Uint8Array}\n   */\n  decode (string) {\n    for (const char of string) {\n      if (this.alphabet && this.alphabet.indexOf(char) < 0) {\n        throw new Error(`invalid character '${char}' in '${string}'`)\n      }\n    }\n    return this.codec.decode(string)\n  }\n}\n\nmodule.exports = Base\n","'use strict'\n\n// @ts-ignore\nconst { TextEncoder, TextDecoder } = require('web-encoding')\n\nconst textDecoder = new TextDecoder()\n/**\n * @param {ArrayBufferView|ArrayBuffer} bytes\n * @returns {string}\n */\nconst decodeText = (bytes) => textDecoder.decode(bytes)\n\nconst textEncoder = new TextEncoder()\n/**\n * @param {string} text\n * @returns {Uint8Array}\n */\nconst encodeText = (text) => textEncoder.encode(text)\n\n/**\n * Returns a new Uint8Array created by concatenating the passed Arrays\n *\n * @param {Array<ArrayLike<number>>} arrs\n * @param {number} length\n * @returns {Uint8Array}\n */\nfunction concat (arrs, length) {\n  const output = new Uint8Array(length)\n  let offset = 0\n\n  for (const arr of arrs) {\n    output.set(arr, offset)\n    offset += arr.length\n  }\n\n  return output\n}\n\nmodule.exports = { decodeText, encodeText, concat }\n","'use strict'\n\nconst baseX = require('@multiformats/base-x')\nconst Base = require('./base.js')\nconst { rfc4648 } = require('./rfc4648')\nconst { decodeText, encodeText } = require('./util')\n\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n/** @typedef {import('./types').Codec} Codec */\n/** @typedef {import('./types').BaseName} BaseName */\n/** @typedef {import('./types').BaseCode} BaseCode */\n\n/** @type {CodecFactory} */\nconst identity = () => {\n  return {\n    encode: decodeText,\n    decode: encodeText\n  }\n}\n\n/**\n *\n * name, code, implementation, alphabet\n *\n * @type {Array<[BaseName, BaseCode, CodecFactory, string]>}\n */\nconst constants = [\n  ['identity', '\\x00', identity, ''],\n  ['base2', '0', rfc4648(1), '01'],\n  ['base8', '7', rfc4648(3), '01234567'],\n  ['base10', '9', baseX, '0123456789'],\n  ['base16', 'f', rfc4648(4), '0123456789abcdef'],\n  ['base16upper', 'F', rfc4648(4), '0123456789ABCDEF'],\n  ['base32hex', 'v', rfc4648(5), '0123456789abcdefghijklmnopqrstuv'],\n  ['base32hexupper', 'V', rfc4648(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV'],\n  ['base32hexpad', 't', rfc4648(5), '0123456789abcdefghijklmnopqrstuv='],\n  ['base32hexpadupper', 'T', rfc4648(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV='],\n  ['base32', 'b', rfc4648(5), 'abcdefghijklmnopqrstuvwxyz234567'],\n  ['base32upper', 'B', rfc4648(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'],\n  ['base32pad', 'c', rfc4648(5), 'abcdefghijklmnopqrstuvwxyz234567='],\n  ['base32padupper', 'C', rfc4648(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567='],\n  ['base32z', 'h', rfc4648(5), 'ybndrfg8ejkmcpqxot1uwisza345h769'],\n  ['base36', 'k', baseX, '0123456789abcdefghijklmnopqrstuvwxyz'],\n  ['base36upper', 'K', baseX, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'],\n  ['base58btc', 'z', baseX, '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'],\n  ['base58flickr', 'Z', baseX, '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'],\n  ['base64', 'm', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'],\n  ['base64pad', 'M', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='],\n  ['base64url', 'u', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'],\n  ['base64urlpad', 'U', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=']\n]\n\n/** @type {Record<BaseName,Base>} */\nconst names = constants.reduce((prev, tupple) => {\n  prev[tupple[0]] = new Base(tupple[0], tupple[1], tupple[2], tupple[3])\n  return prev\n}, /** @type {Record<BaseName,Base>} */({}))\n\n/** @type {Record<BaseCode,Base>} */\nconst codes = constants.reduce((prev, tupple) => {\n  prev[tupple[1]] = names[tupple[0]]\n  return prev\n}, /** @type {Record<BaseCode,Base>} */({}))\n\nmodule.exports = {\n  names,\n  codes\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar varint$1 = require('../vendor/varint.js');\n\nconst decode = data => {\n  const code = varint$1.decode(data);\n  return [\n    code,\n    varint$1.decode.bytes\n  ];\n};\nconst encodeTo = (int, target, offset = 0) => {\n  varint$1.encode(int, target, offset);\n  return target;\n};\nconst encodingLength = int => {\n  return varint$1.encodingLength(int);\n};\n\nexports.decode = decode;\nexports.encodeTo = encodeTo;\nexports.encodingLength = encodingLength;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar identity = require('./bases/identity.js');\nvar base2 = require('./bases/base2.js');\nvar base8 = require('./bases/base8.js');\nvar base10 = require('./bases/base10.js');\nvar base16 = require('./bases/base16.js');\nvar base32 = require('./bases/base32.js');\nvar base36 = require('./bases/base36.js');\nvar base58 = require('./bases/base58.js');\nvar base64 = require('./bases/base64.js');\nvar sha2 = require('./hashes/sha2.js');\nvar identity$1 = require('./hashes/identity.js');\nvar raw = require('./codecs/raw.js');\nvar json = require('./codecs/json.js');\nrequire('./index.js');\nvar cid = require('./cid.js');\nvar hasher = require('./hashes/hasher.js');\nvar digest = require('./hashes/digest.js');\nvar varint = require('./varint.js');\nvar bytes = require('./bytes.js');\n\nconst bases = {\n  ...identity,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64\n};\nconst hashes = {\n  ...sha2,\n  ...identity$1\n};\nconst codecs = {\n  raw,\n  json\n};\n\nexports.CID = cid.CID;\nexports.hasher = hasher;\nexports.digest = digest;\nexports.varint = varint;\nexports.bytes = bytes;\nexports.bases = bases;\nexports.codecs = codecs;\nexports.hashes = hashes;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base10 = base.baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});\n\nexports.base10 = base10;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base2 = base.rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});\n\nexports.base2 = base2;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('./cid.js');\nvar varint = require('./varint.js');\nvar bytes = require('./bytes.js');\nvar hasher = require('./hashes/hasher.js');\nvar digest = require('./hashes/digest.js');\n\n\n\nexports.CID = cid.CID;\nexports.varint = varint;\nexports.bytes = bytes;\nexports.hasher = hasher;\nexports.digest = digest;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar baseX$1 = require('../../vendor/base-x.js');\nvar bytes = require('../bytes.js');\n\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      switch (text[0]) {\n      case this.prefix: {\n          return this.baseDecode(text.slice(1));\n        }\n      default: {\n          throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n        }\n      }\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    const decoders = {\n      [this.prefix]: this,\n      ...decoder.decoders || { [decoder.prefix]: decoder }\n    };\n    return new ComposedDecoder(decoders);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    const other = decoder.decoders || { [decoder.prefix]: decoder };\n    return new ComposedDecoder({\n      ...this.decoders,\n      ...other\n    });\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nclass Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nconst from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nconst baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = baseX$1(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => bytes.coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nconst rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};\n\nexports.Codec = Codec;\nexports.baseX = baseX;\nexports.from = from;\nexports.rfc4648 = rfc4648;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\n\nexports.coerce = coerce;\nexports.empty = empty;\nexports.equals = equals;\nexports.fromHex = fromHex;\nexports.fromString = fromString;\nexports.isBinary = isBinary;\nexports.toHex = toHex;\nexports.toString = toString;\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base58btc = base.baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nconst base58flickr = base.baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});\n\nexports.base58btc = base58btc;\nexports.base58flickr = base58flickr;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar varint = require('./varint.js');\nvar digest = require('./hashes/digest.js');\nvar base58 = require('./bases/base58.js');\nvar base32 = require('./bases/base32.js');\nvar bytes = require('./bytes.js');\n\nclass CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest: digest$1} = this.multihash;\n        const multihash = digest.create(code, digest$1);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58.base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest$1 = digest.decode(multihash);\n      return CID.create(version, code, digest$1);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes$1) {\n    const specs = CID.inspectBytes(bytes$1);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = bytes.coerce(bytes$1.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest$1 = new digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest$1) : CID.createV1(specs.codec, digest$1);\n    return [\n      cid,\n      bytes$1.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58.base58btc;\n      return [\n        base58.base58btc.prefix,\n        decoder.decode(`${ base58.base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58.base58btc.prefix: {\n      const decoder = base || base58.base58btc;\n      return [\n        base58.base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.base32.prefix: {\n      const decoder = base || base32.base32;\n      return [\n        base32.base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58.base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;\n\nexports.CID = CID;\n"],"sourceRoot":""}