{"version":3,"sources":["webpack:///./src/components/openlayers/progress.js","webpack:///src/components/MapMixin.vue","webpack:///./src/components/MapMixin.vue","webpack:///./src/components/MapMixin.vue?59f8","webpack:///./node_modules/rbush/rbush.min.js","webpack:///./node_modules/ol/webgl/ContextEventType.js","webpack:///./node_modules/ol/webgl/PostProcessingPass.js","webpack:///./node_modules/ol/vec/mat4.js","webpack:///./node_modules/ol/webgl/Helper.js","webpack:///./node_modules/ol/worker/webgl.js","webpack:///./node_modules/ol/webgl.js","webpack:///./src/components/MapMixin.css?c3cc","webpack:///./src/components/MapViewer.vue?e981","webpack:///src/components/MapViewer.vue","webpack:///./src/components/MapViewer.vue?b952","webpack:///./src/components/MapViewer.vue","webpack:///./node_modules/ol/webgl/Buffer.js","webpack:///./node_modules/ol/webgl/RenderTarget.js","webpack:///./node_modules/ol/xml.js"],"names":["Progress","constructor","this","createHtml","loading","loaded","addLoading","update","addLoaded","percent","toFixed","label","innerText","progressBarInner","style","width","el","opacity","show","document","createElement","className","progressBar","appendChild","getControl","c","Control","element","render","staticRenderFns","component","t","i","module","exports","r","e","a","h","n","o","s","l","Math","log","f","exp","u","sqrt","m","max","floor","min","p","d","x","length","_maxEntries","_minEntries","ceil","clear","indexOf","children","minX","minY","maxX","maxY","leaf","height","pop","push","prototype","all","_all","data","search","toBBox","collides","load","insert","_build","slice","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","LOST","RESTORED","DEFAULT_VERTEX_SHADER","DEFAULT_FRAGMENT_SHADER","WebGLPostProcessingPass","options","gl_","webGlContext","gl","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","verticesArray","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetTextureLocation_","uniforms_","uniforms","Object","keys","forEach","name","value","location","bind","getGL","init","frameState","textureSize","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","viewport","level","internalFormat","RGBA","border","format","type","UNSIGNED_BYTE","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","nextPass","size","activeTexture","TEXTURE0","clearColor","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","HTMLCanvasElement","ImageData","texture","Uint8Array","Array","isArray","uniform3f","uniform4f","uniform1f","create","fromTransform","mat4","transform","__extends","extendStatics","b","setPrototypeOf","__proto__","hasOwnProperty","call","TypeError","String","__","DefaultUniform","PROJECTION_MATRIX","OFFSET_SCALE_MATRIX","OFFSET_ROTATION_MATRIX","TIME","ZOOM","RESOLUTION","AttributeType","UNSIGNED_SHORT","UNSIGNED_INT","_super","WebGLHelper","opt_options","_this","boundHandleWebGLContextLost_","handleWebGLContextLost","boundHandleWebGLContextRestored_","handleWebGLContextRestored","canvas_","position","left","bufferCache_","extensionCache_","currentProgram_","addEventListener","ContextEventType","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocations_","attribLocations_","name_1","postProcessPasses_","postProcesses","map","shaderCompileErrors_","startTime_","Date","now","getExtension","extension","buffer","bufferKey","bufferCache","webGlBuffer","getType","flushBufferData","getArray","getUsage","deleteBuffer","buf","bufferCacheEntry","isContextLost","disposeInternal","removeEventListener","loseContext","prepareDraw","opt_disableAlphaBlend","canvas","getCanvas","pixelRatio","ZERO","applyFrameState","prepareDrawToRenderTarget","renderTarget","getSize","getFramebuffer","getTexture","drawElements","start","end","elementType","elementSize","numItems","offsetInBytes","finalizeDraw","rotation","viewState","offsetScaleMatrix","offsetRotateMatrix","setUniformMatrixValue","setUniformFloatValue","zoom","resolution","HTMLImageElement","prevValue","undefined","imageReady","complete","program","source","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderParameter","COMPILE_STATUS","message","getShaderInfoLog","Error","deleteShader","getProgramParameter","LINK_STATUS","getAttributeLocation","makeProjectionTransform","center","uniformMatrix4fv","enableAttributeArray_","attribName","stride","offset","enableAttributes","attributes","computeAttributesStride","attr","getByteSizeFromType","opt_data","opt_texture","Disposable","BYTES_PER_ELEMENT","Uint16Array","Uint32Array","blob","Blob","url","URL","createObjectURL","Worker","ELEMENT_ARRAY_BUFFER","STREAM_DRAW","DYNAMIC_DRAW","CONTEXT_IDS","getContext","opt_attributes","ii","context","_vm","_h","$createElement","_c","_self","attrs","id","BufferUsage","WebGLArrayBuffer","opt_usage","array","usage","ofSize","getArrayClassForType","fromArray","arrayClass","from","fromArrayBuffer","tmpArray4","WebGLRenderTarget","helper","opt_size","helper_","texture_","framebuffer_","size_","data_","dataCacheDirty_","updateSize_","setSize","clearCachedData","readAll","readPixels","readPixel","y","index","createElementNS","namespaceURI","qualifiedName","getDocument","getAllTextContent","node","normalizeWhitespace","getAllTextContent_","join","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","replace","firstChild","nextSibling","isDocument","object","parse","xml","DOMParser","parseFromString","makeArrayPusher","valueReader","opt_this","objectStack","makeObjectPropertyPusher","opt_property","property","localName","makeObjectPropertySetter","makeSimpleNodeFactory","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","firstElementChild","nextElementSibling","parsers","parser","pushParseAndPop","document_","implementation","createDocument"],"mappings":"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BAEA,6CACA,qDACA,qDAGA,sBACA,8BACA,GACA,yBAIA,mBACA,sCACA,eACA,mBACA,SAGA,aAGA,6BACA,kBACA,KACA,mBACA,mBACA,4DACA,4BAIA,OADA,sBACA,GAIA,uBACA,uCACA,GACA,4DAGA,IAaA,EAbA,GACA,QACA,WACA,qBAWA,OAPA,iCACA,2CACA,0BAKA,qBACA,UACA,yBACA,MACA,WACA,SACA,iBACA,wBAEA,kCACA,MACA,QAEA,YADA,0EAIA,yBAGA,IACA,oDACA,8EACA,cACA,eACA,oBACA,mBACA,UACA,+BAEA,uBACA,aAIA,eAEA,wBACA,UAEA,gBAEA,sBAEA,0CACA,SACA,iBAIA,kBACA,6BACA,iCACA,oBACA,SAEA,iDACA,SAGA,eAFA,IAKA,4CAGA,GAFA,+BAEA,8BACA,qBACA,qCACA,gDACA,0DACA,iBACA,4CAGA,mCACA,OACA,OACA,OACA,OACA,+BACA,aACA,gBACA,wBACA,QACA,wBAEA,IACA,+BAGA,6BACA,aACA,qBACA,4BACA,UACA,OAEA,UACA,KAGA,IACA,gCACA,iBAEA,qBAEA,gBACA,kBACA,QACA,iCACA,sBAEA,UAGA,SAOA,MANA,0BACA,uBACA,iBACA,UACA,YAGA,wCACA,6BAGA,GACA,uBAEA,yBACA,IACA,wCACA,oBACA,SAEA,6DACA,iBACA,iBACA,SACA,eAEA,QACA,SAEA,mCAEA,yBACA,gCACA,oEACA,iBAEA,yBAGA,kBACA,QACA,QACA,WAaA,OAXA,sBAEA,eACA,qCACA,gBACA,sCACA,sBAKA,GAGA,8BACA,8BAGA,kHACA,+BACA,cACA,QACA,0CACA,SAEA,sBAEA,cACA,QACA,QACA,QACA,KAIA,OADA,sBACA,KCrYmV,I,wBCQ/UC,EAAY,eACd,EACAF,EACAC,GACA,EACA,KACA,KACA,MAIa,aAAAC,E,2CCnBf,4BAWWiV,EAAc,CACrBvO,YAAa,OACbyN,YAAa,OACbC,aAAc,QAkBdc,EAAkC,WAMlC,SAASA,EAAiB1M,EAAM2M,GAK5B/W,KAAKgX,MAAQ,KAKbhX,KAAKoK,KAAOA,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","file":"js/chunk-8e976aa4.6bda8f87.js","sourcesContent":["import { Control } from 'ol/control.js';\n\nexport default class Progress {\n\n\tconstructor() {\n\t\tthis.createHtml();\n\t\tthis.loading = 0;\n\t\tthis.loaded = 0;\n\t}\n\n\taddLoading() {\n\t\tthis.loading++;\n\t\tthis.update();\n\t};\n\n\taddLoaded() {\n\t\tthis.loaded++;\n\t\tthis.update();\n\t}\n\n\tupdate() {\n\t\tvar percent = (this.loaded / this.loading * 100).toFixed(1) + '%';\n\t\n\t\tthis.label.innerText = \"Loading Tiles (\" + percent + \")\";\n\t\tthis.progressBarInner.style.width = percent;\n\n\t\tif (this.loading === this.loaded) {\n\t\t\tthis.loading = 0;\n\t\t\tthis.loaded = 0;\n\t\t}\n\n\t\tthis.el.style.opacity = this.show() ? 1 : 0;\n\t}\n\n\tshow() {\n\t\treturn (this.loading > 0 && this.loaded <= this.loading);\n\t}\n\n\tcreateHtml() {\n\t\tthis.el = document.createElement('div');\n\t\tthis.el.className = 'ol-unselectable ol-progress-control';\n\t\tthis.progressBar = document.createElement('div');\n\t\tthis.progressBar.className = 'progress-bar';\n\t\tthis.progressBarInner = document.createElement('div');\n\t\tthis.progressBarInner.className = 'progress-bar-inner';\n\t\tthis.progressBar.appendChild(this.progressBarInner);\n\t\tthis.label = document.createElement('div');\n\t\tthis.label.className = 'progress-label';\n\t\tthis.el.appendChild(this.progressBar);\n\t\tthis.el.appendChild(this.label);\n\t}\n\t\n\tgetControl() {\n\t\tvar c = new Control({\n\t\t\telement: this.el\n\t\t});\n\t\treturn c;\n\t}\n\n}","<script>\nimport EventBusMixin from './EventBusMixin.vue';\nimport Utils from '../utils.js';\n\nimport 'ol/ol.css';\nimport { defaults as defaultControls, FullScreen, ScaleLine } from 'ol/control';\nimport { isEmpty as extentIsEmpty } from 'ol/extent';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport { fromLonLat } from 'ol/proj';\nimport TileLayer from 'ol/layer/Tile';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport OSM from 'ol/source/OSM';\n\nimport 'ol-ext/control/LayerSwitcher.css';\nimport LayerSwitcher from 'ol-ext/control/LayerSwitcher';\n\nimport Progress from './openlayers/progress';\n\nexport default {\n\tmixins: [EventBusMixin],\n\tprops: {\n\t\tid: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\tcenter: { // WGS84: lat, lon\n\t\t\ttype: Array,\n\t\t\tdefault: () => [0,0]\n\t\t},\n\t\tzoom: {\n\t\t\ttype: Number,\n\t\t\tdefault: 1\n\t\t},\n\t\tshow: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t},\n\t\teditable: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t},\n\t\tremovableLayers: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tmap: null,\n\t\t\tbaseLayer: null,\n\t\t\tosm: null,\n\t\t\tprogress: null,\n\t\t\tfitOptions: {\n\t\t\t\tpadding: [30,30,30,30]\n\t\t\t}\n\t\t};\n\t},\n\twatch: {\n\t\tshow() {\n\t\t\tthis.showMap();\n\t\t}\n\t},\n\tmounted() {\n\t\tthis.showMap();\n\t},\n\tmethods: {\n\t\tshowMap() {\n\t\t\tif (this.show) {\n\t\t\t\tthis.$nextTick(() => this.renderMap());\n\t\t\t}\n\t\t},\n\t\tcreateMap(showLayerSwitcher = false, projection = 'EPSG:3857') {\n\t\t\tif (this.map !== null) {\n\t\t\t\tthis.map.updateSize();\n\t\t\t\tthis.map.render();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.progress = new Progress();\n\t\t\tthis.osm = new OSM();\n\t\t\tthis.baseLayer = new TileLayer({\n\t\t\t\tsource: this.trackTileProgress(this.osm),\n\t\t\t\tbaseLayer: true,\n\t\t\t\ttitle: \"OpenStreetMap\",\n\t\t\t\tnoSwitcherDelete: true\n\t\t\t});\n\t\t\tvar customControls = [\n\t\t\t\tnew FullScreen(),\n\t\t\t\tnew ScaleLine(),\n\t\t\t\tthis.progress.getControl()\n\t\t\t];\n\t\t\tif (showLayerSwitcher) {\n\t\t\t\tcustomControls.push(new LayerSwitcher({trash: this.removableLayers}));\n\t\t\t}\n\t\t\tlet center = [this.center[1], this.center[0]];\n\t\t\tvar mapOptions = {\n\t\t\t\ttarget: this.id,\n\t\t\t\tlayers: [\n\t\t\t\t\tthis.baseLayer\n\t\t\t\t],\n\t\t\t\tview: new View({\n\t\t\t\t\tcenter: projection === 'EPSG:3857' ? fromLonLat(center) : center,\n\t\t\t\t\tzoom: this.zoom,\n\t\t\t\t\tshowFullExtent: true,\n\t\t\t\t\tprojection\n\t\t\t\t})\n\t\t\t};\n\t\t\tif (!this.editable) {\n\t\t\t\tmapOptions.interactions = [];\n\t\t\t\tmapOptions.controls = customControls;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmapOptions.controls = defaultControls().extend(customControls);\n\t\t\t}\n\t\t\tthis.map = new Map(mapOptions);\n\n\t\t\tthis.listen('windowResized', this.updateMapSize);\n\t\t},\n\n\t\tfromLonLat(coords) {\n\t\t\tif (this.map && this.map.getView().getProjection().getCode() === 'EPSG:3857') {\n\t\t\t\treturn fromLonLat(coords);\n\t\t\t}\n\t\t\treturn coords;\n\t\t},\n\n\t\tonShow() {\n\t\t\tthis.listen('windowResized', this.updateMapSize);\n\t\t},\n\t\tonHide() {\n\t\t\tthis.unlisten('windowResized');\n\t\t},\n\n\t\t// To be overridden by implementing components.\n\t\trenderMap() {\n\t\t\tthis.createMap();\n\t\t},\n\n\t\tasync updateMapSize() {\n\t\t\tif (this.map) {\n\t\t\t\tawait this.$nextTick();\n\t\t\t\tthis.map.updateSize();\n\t\t\t}\n\t\t},\n\n\t\tgetVisibleLayers() {\n\t\t\tlet shownLayers = [];\n\t\t\tlet layers = this.map.getLayers().getArray();\n\t\t\tfor(let layer of layers) {\n\t\t\t\tif (layer.get('userLayer') && layer.getVisible()) {\n\t\t\t\t\tshownLayers.push(layer);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn shownLayers;\n\t\t},\n\n\t\taddGeoJson(geojson) {\n\t\t\tvar sourceOpts = {};\n\t\t\tif (Utils.detectGeoJson(geojson)) {\n\t\t\t\tsourceOpts.features = (new GeoJSON()).readFeatures(\n\t\t\t\t\tgeojson,\n\t\t\t\t\t{\n\t\t\t\t\t\tfeatureProjection: this.map.getView().getProjection()\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t\tvar source = new VectorSource(sourceOpts);\n\t\t\tvar layer = new VectorLayer({\n\t\t\t\ttitle: \"GeoJSON\",\n\t\t\t\tsource: source\n\t\t\t});\n\t\t\tthis.map.addLayer(layer);\n\t\t\tvar extent = source.getExtent();\n\t\t\tif (!extentIsEmpty(extent)) {\n\t\t\t\tthis.map.getView().fit(extent, this.fitOptions);\n\t\t\t}\n\t\t\treturn layer;\n\t\t},\n\n\t\ttrackTileProgress(source) {\n\t\t\tsource.on('tileloadstart', () => {\n\t\t\t\tthis.progress.addLoading();\n\t\t\t});\n\t\t\tsource.on('tileloadend', () => {\n\t\t\t\tthis.progress.addLoaded();\n\t\t\t});\n\t\t\tsource.on('tileloaderror', () => {\n\t\t\t\tthis.progress.addLoaded();\n\t\t\t});\n\t\t\treturn source;\n\t\t}\n\n\t}\n}\n</script>","var render, staticRenderFns\nimport script from \"./MapMixin.vue?vue&type=script&lang=js&\"\nexport * from \"./MapMixin.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapMixin.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapMixin.vue?vue&type=script&lang=js&\"","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/webgl/ContextEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    LOST: 'webglcontextlost',\n    RESTORED: 'webglcontextrestored',\n};\n//# sourceMappingURL=ContextEventType.js.map","/**\n * @module ol/webgl/PostProcessingPass\n */\nvar DEFAULT_VERTEX_SHADER = \"\\n  precision mediump float;\\n  \\n  attribute vec2 a_position;\\n  varying vec2 v_texCoord;\\n  varying vec2 v_screenCoord;\\n  \\n  uniform vec2 u_screenSize;\\n   \\n  void main() {\\n    v_texCoord = a_position * 0.5 + 0.5;\\n    v_screenCoord = v_texCoord * u_screenSize;\\n    gl_Position = vec4(a_position, 0.0, 1.0);\\n  }\\n\";\nvar DEFAULT_FRAGMENT_SHADER = \"\\n  precision mediump float;\\n   \\n  uniform sampler2D u_image;\\n   \\n  varying vec2 v_texCoord;\\n   \\n  void main() {\\n    gl_FragColor = texture2D(u_image, v_texCoord);\\n  }\\n\";\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {number} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord);\n *   }\n *   ```\n *\n * @api\n */\nvar WebGLPostProcessingPass = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function WebGLPostProcessingPass(options) {\n        this.gl_ = options.webGlContext;\n        var gl = this.gl_;\n        this.scaleRatio_ = options.scaleRatio || 1;\n        this.renderTargetTexture_ = gl.createTexture();\n        this.renderTargetTextureSize_ = null;\n        this.frameBuffer_ = gl.createFramebuffer();\n        // compile the program for the frame buffer\n        // TODO: make compilation errors show up\n        var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, options.vertexShader || DEFAULT_VERTEX_SHADER);\n        gl.compileShader(vertexShader);\n        var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, options.fragmentShader || DEFAULT_FRAGMENT_SHADER);\n        gl.compileShader(fragmentShader);\n        this.renderTargetProgram_ = gl.createProgram();\n        gl.attachShader(this.renderTargetProgram_, vertexShader);\n        gl.attachShader(this.renderTargetProgram_, fragmentShader);\n        gl.linkProgram(this.renderTargetProgram_);\n        // bind the vertices buffer for the frame buffer\n        this.renderTargetVerticesBuffer_ = gl.createBuffer();\n        var verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verticesArray), gl.STATIC_DRAW);\n        this.renderTargetAttribLocation_ = gl.getAttribLocation(this.renderTargetProgram_, 'a_position');\n        this.renderTargetUniformLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_screenSize');\n        this.renderTargetTextureLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_image');\n        /**\n         * Holds info about custom uniforms used in the post processing pass\n         * @type {Array<UniformInternalDescription>}\n         * @private\n         */\n        this.uniforms_ = [];\n        options.uniforms &&\n            Object.keys(options.uniforms).forEach(function (name) {\n                this.uniforms_.push({\n                    value: options.uniforms[name],\n                    location: gl.getUniformLocation(this.renderTargetProgram_, name),\n                });\n            }.bind(this));\n    }\n    /**\n     * Get the WebGL rendering context\n     * @return {WebGLRenderingContext} The rendering context.\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.getGL = function () {\n        return this.gl_;\n    };\n    /**\n     * Initialize the render target texture of the post process, make sure it is at the\n     * right size and bind it as a render target for the next draw calls.\n     * The last step to be initialized will be the one where the primitives are rendered.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.init = function (frameState) {\n        var gl = this.getGL();\n        var textureSize = [\n            gl.drawingBufferWidth * this.scaleRatio_,\n            gl.drawingBufferHeight * this.scaleRatio_,\n        ];\n        // rendering goes to my buffer\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n        gl.viewport(0, 0, textureSize[0], textureSize[1]);\n        // if size has changed: adjust canvas & render target texture\n        if (!this.renderTargetTextureSize_ ||\n            this.renderTargetTextureSize_[0] !== textureSize[0] ||\n            this.renderTargetTextureSize_[1] !== textureSize[1]) {\n            this.renderTargetTextureSize_ = textureSize;\n            // create a new texture\n            var level = 0;\n            var internalFormat = gl.RGBA;\n            var border = 0;\n            var format = gl.RGBA;\n            var type = gl.UNSIGNED_BYTE;\n            var data = null;\n            gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, textureSize[0], textureSize[1], border, format, type, data);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            // bind the texture to the framebuffer\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.renderTargetTexture_, 0);\n        }\n    };\n    /**\n     * Render to the next postprocessing pass (or to the canvas if final pass).\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.apply = function (frameState, nextPass) {\n        var gl = this.getGL();\n        var size = frameState.size;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, nextPass ? nextPass.getFrameBuffer() : null);\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n        // render the frame buffer to the canvas\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n        gl.useProgram(this.renderTargetProgram_);\n        gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n        gl.vertexAttribPointer(this.renderTargetAttribLocation_, 2, gl.FLOAT, false, 0, 0);\n        gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n        gl.uniform1i(this.renderTargetTextureLocation_, 0);\n        this.applyUniforms(frameState);\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n    };\n    /**\n     * @return {WebGLFramebuffer} Frame buffer\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.getFrameBuffer = function () {\n        return this.frameBuffer_;\n    };\n    /**\n     * Sets the custom uniforms based on what was given in the constructor.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLPostProcessingPass.prototype.applyUniforms = function (frameState) {\n        var gl = this.getGL();\n        var value;\n        var textureSlot = 1;\n        this.uniforms_.forEach(function (uniform) {\n            value =\n                typeof uniform.value === 'function'\n                    ? uniform.value(frameState)\n                    : uniform.value;\n            // apply value based on type\n            if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n                // create a texture & put data\n                if (!uniform.texture) {\n                    uniform.texture = gl.createTexture();\n                }\n                gl.activeTexture(gl[\"TEXTURE\" + textureSlot]);\n                gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                if (value instanceof ImageData) {\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, value.width, value.height, 0, gl.UNSIGNED_BYTE, new Uint8Array(value.data));\n                }\n                else {\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\n                }\n                // fill texture slots\n                gl.uniform1i(uniform.location, textureSlot++);\n            }\n            else if (Array.isArray(value)) {\n                switch (value.length) {\n                    case 2:\n                        gl.uniform2f(uniform.location, value[0], value[1]);\n                        return;\n                    case 3:\n                        gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n                        return;\n                    case 4:\n                        gl.uniform4f(uniform.location, value[0], value[1], value[2], value[3]);\n                        return;\n                    default:\n                        return;\n                }\n            }\n            else if (typeof value === 'number') {\n                gl.uniform1f(uniform.location, value);\n            }\n        });\n    };\n    return WebGLPostProcessingPass;\n}());\nexport default WebGLPostProcessingPass;\n//# sourceMappingURL=PostProcessingPass.js.map","/**\n * @module ol/vec/mat4\n */\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n    mat4[0] = transform[0];\n    mat4[1] = transform[1];\n    mat4[4] = transform[2];\n    mat4[5] = transform[3];\n    mat4[12] = transform[4];\n    mat4[13] = transform[5];\n    return mat4;\n}\n//# sourceMappingURL=mat4.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport { FLOAT, UNSIGNED_BYTE, UNSIGNED_INT, UNSIGNED_SHORT, getContext, } from '../webgl.js';\nimport { clear } from '../obj.js';\nimport { compose as composeTransform, create as createTransform, reset as resetTransform, rotate as rotateTransform, scale as scaleTransform, } from '../transform.js';\nimport { create, fromTransform } from '../vec/mat4.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport var ShaderType = {\n    FRAGMENT_SHADER: 0x8b30,\n    VERTEX_SHADER: 0x8b31,\n};\n/**\n * Uniform names used in the default shaders: `PROJECTION_MATRIX`, `OFFSET_SCALE_MATRIX`.\n * and `OFFSET_ROTATION_MATRIX`.\n * @enum {string}\n */\nexport var DefaultUniform = {\n    PROJECTION_MATRIX: 'u_projectionMatrix',\n    OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n    OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix',\n    TIME: 'u_time',\n    ZOOM: 'u_zoom',\n    RESOLUTION: 'u_resolution',\n};\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport var AttributeType = {\n    UNSIGNED_BYTE: UNSIGNED_BYTE,\n    UNSIGNED_SHORT: UNSIGNED_SHORT,\n    UNSIGNED_INT: UNSIGNED_INT,\n    FLOAT: FLOAT,\n};\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../PluggableMap.js\").FrameState):UniformLiteralValue} UniformValue\n */\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Use {@link enableAttributeArray_} and either\n *   the default attribute names in {@link module:ol/webgl/Helper.DefaultAttrib} or custom ones.\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n *\n * @api\n */\nvar WebGLHelper = /** @class */ (function (_super) {\n    __extends(WebGLHelper, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function WebGLHelper(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /** @private */\n        _this.boundHandleWebGLContextLost_ = _this.handleWebGLContextLost.bind(_this);\n        /** @private */\n        _this.boundHandleWebGLContextRestored_ =\n            _this.handleWebGLContextRestored.bind(_this);\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = document.createElement('canvas');\n        _this.canvas_.style.position = 'absolute';\n        _this.canvas_.style.left = '0';\n        /**\n         * @private\n         * @type {WebGLRenderingContext}\n         */\n        _this.gl_ = getContext(_this.canvas_);\n        var gl = _this.getGL();\n        /**\n         * @private\n         * @type {!Object<string, BufferCacheEntry>}\n         */\n        _this.bufferCache_ = {};\n        /**\n         * @private\n         * @type {Object<string, Object>}\n         */\n        _this.extensionCache_ = {};\n        /**\n         * @private\n         * @type {WebGLProgram}\n         */\n        _this.currentProgram_ = null;\n        _this.canvas_.addEventListener(ContextEventType.LOST, _this.boundHandleWebGLContextLost_);\n        _this.canvas_.addEventListener(ContextEventType.RESTORED, _this.boundHandleWebGLContextRestored_);\n        /**\n         * @private\n         * @type {import(\"../transform.js\").Transform}\n         */\n        _this.offsetRotateMatrix_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"../transform.js\").Transform}\n         */\n        _this.offsetScaleMatrix_ = createTransform();\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.tmpMat4_ = create();\n        /**\n         * @private\n         * @type {Object<string, WebGLUniformLocation>}\n         */\n        _this.uniformLocations_ = {};\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.attribLocations_ = {};\n        /**\n         * Holds info about custom uniforms used in the post processing pass.\n         * If the uniform is a texture, the WebGL Texture object will be stored here.\n         * @type {Array<UniformInternalDescription>}\n         * @private\n         */\n        _this.uniforms_ = [];\n        if (options.uniforms) {\n            for (var name_1 in options.uniforms) {\n                _this.uniforms_.push({\n                    name: name_1,\n                    value: options.uniforms[name_1],\n                });\n            }\n        }\n        /**\n         * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n         * options. If no post process was given, a default one is used (so as not to have to make an exception to\n         * the frame buffer logic).\n         * @type {Array<WebGLPostProcessingPass>}\n         * @private\n         */\n        _this.postProcessPasses_ = options.postProcesses\n            ? options.postProcesses.map(function (options) {\n                return new WebGLPostProcessingPass({\n                    webGlContext: gl,\n                    scaleRatio: options.scaleRatio,\n                    vertexShader: options.vertexShader,\n                    fragmentShader: options.fragmentShader,\n                    uniforms: options.uniforms,\n                });\n            })\n            : [new WebGLPostProcessingPass({ webGlContext: gl })];\n        /**\n         * @type {string|null}\n         * @private\n         */\n        _this.shaderCompileErrors_ = null;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.startTime_ = Date.now();\n        return _this;\n    }\n    /**\n     * Get a WebGL extension.  If the extension is not supported, null is returned.\n     * Extensions are cached after they are enabled for the first time.\n     * @param {string} name The extension name.\n     * @return {Object} The extension or null if not supported.\n     */\n    WebGLHelper.prototype.getExtension = function (name) {\n        if (name in this.extensionCache_) {\n            return this.extensionCache_[name];\n        }\n        var extension = this.gl_.getExtension(name);\n        this.extensionCache_[name] = extension;\n        return extension;\n    };\n    /**\n     * Just bind the buffer if it's in the cache. Otherwise create\n     * the WebGL buffer, bind it, populate it, and add an entry to\n     * the cache.\n     * @param {import(\"./Buffer\").default} buffer Buffer.\n     * @api\n     */\n    WebGLHelper.prototype.bindBuffer = function (buffer) {\n        var gl = this.getGL();\n        var bufferKey = getUid(buffer);\n        var bufferCache = this.bufferCache_[bufferKey];\n        if (!bufferCache) {\n            var webGlBuffer = gl.createBuffer();\n            bufferCache = {\n                buffer: buffer,\n                webGlBuffer: webGlBuffer,\n            };\n            this.bufferCache_[bufferKey] = bufferCache;\n        }\n        gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n    };\n    /**\n     * Update the data contained in the buffer array; this is required for the\n     * new data to be rendered\n     * @param {import(\"./Buffer\").default} buffer Buffer.\n     * @api\n     */\n    WebGLHelper.prototype.flushBufferData = function (buffer) {\n        var gl = this.getGL();\n        this.bindBuffer(buffer);\n        gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n    };\n    /**\n     * @param {import(\"./Buffer.js\").default} buf Buffer.\n     */\n    WebGLHelper.prototype.deleteBuffer = function (buf) {\n        var gl = this.getGL();\n        var bufferKey = getUid(buf);\n        var bufferCacheEntry = this.bufferCache_[bufferKey];\n        if (bufferCacheEntry && !gl.isContextLost()) {\n            gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n        }\n        delete this.bufferCache_[bufferKey];\n    };\n    /**\n     * Clean up.\n     */\n    WebGLHelper.prototype.disposeInternal = function () {\n        this.canvas_.removeEventListener(ContextEventType.LOST, this.boundHandleWebGLContextLost_);\n        this.canvas_.removeEventListener(ContextEventType.RESTORED, this.boundHandleWebGLContextRestored_);\n        var extension = this.gl_.getExtension('WEBGL_lose_context');\n        if (extension) {\n            extension.loseContext();\n        }\n        delete this.gl_;\n        delete this.canvas_;\n    };\n    /**\n     * Clear the buffer & set the viewport to draw.\n     * Post process passes will be initialized here, the first one being bound as a render target for\n     * subsequent draw calls.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @param {boolean} [opt_disableAlphaBlend] If true, no alpha blending will happen.\n     * @api\n     */\n    WebGLHelper.prototype.prepareDraw = function (frameState, opt_disableAlphaBlend) {\n        var gl = this.getGL();\n        var canvas = this.getCanvas();\n        var size = frameState.size;\n        var pixelRatio = frameState.pixelRatio;\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n        gl.useProgram(this.currentProgram_);\n        // loop backwards in post processes list\n        for (var i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n            this.postProcessPasses_[i].init(frameState);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, opt_disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n        gl.useProgram(this.currentProgram_);\n        this.applyFrameState(frameState);\n        this.applyUniforms(frameState);\n    };\n    /**\n     * Clear the render target & bind it for future draw operations.\n     * This is similar to `prepareDraw`, only post processes will not be applied.\n     * Note: the whole viewport will be drawn to the render target, regardless of its size.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n     * @param {boolean} [opt_disableAlphaBlend] If true, no alpha blending will happen.\n     */\n    WebGLHelper.prototype.prepareDrawToRenderTarget = function (frameState, renderTarget, opt_disableAlphaBlend) {\n        var gl = this.getGL();\n        var size = renderTarget.getSize();\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n        gl.viewport(0, 0, size[0], size[1]);\n        gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, opt_disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n        gl.useProgram(this.currentProgram_);\n        this.applyFrameState(frameState);\n        this.applyUniforms(frameState);\n    };\n    /**\n     * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n     * @param {number} start Start index.\n     * @param {number} end End index.\n     * @api\n     */\n    WebGLHelper.prototype.drawElements = function (start, end) {\n        var gl = this.getGL();\n        this.getExtension('OES_element_index_uint');\n        var elementType = gl.UNSIGNED_INT;\n        var elementSize = 4;\n        var numItems = end - start;\n        var offsetInBytes = start * elementSize;\n        gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n    };\n    /**\n     * Apply the successive post process passes which will eventually render to the actual canvas.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLHelper.prototype.finalizeDraw = function (frameState) {\n        // apply post processes using the next one as target\n        for (var i = 0; i < this.postProcessPasses_.length; i++) {\n            this.postProcessPasses_[i].apply(frameState, this.postProcessPasses_[i + 1] || null);\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Canvas.\n     * @api\n     */\n    WebGLHelper.prototype.getCanvas = function () {\n        return this.canvas_;\n    };\n    /**\n     * Get the WebGL rendering context\n     * @return {WebGLRenderingContext} The rendering context.\n     * @api\n     */\n    WebGLHelper.prototype.getGL = function () {\n        return this.gl_;\n    };\n    /**\n     * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLHelper.prototype.applyFrameState = function (frameState) {\n        var size = frameState.size;\n        var rotation = frameState.viewState.rotation;\n        var offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n        scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n        var offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n        if (rotation !== 0) {\n            rotateTransform(offsetRotateMatrix, -rotation);\n        }\n        this.setUniformMatrixValue(DefaultUniform.OFFSET_SCALE_MATRIX, fromTransform(this.tmpMat4_, offsetScaleMatrix));\n        this.setUniformMatrixValue(DefaultUniform.OFFSET_ROTATION_MATRIX, fromTransform(this.tmpMat4_, offsetRotateMatrix));\n        this.setUniformFloatValue(DefaultUniform.TIME, (Date.now() - this.startTime_) * 0.001);\n        this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n        this.setUniformFloatValue(DefaultUniform.RESOLUTION, frameState.viewState.resolution);\n    };\n    /**\n     * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLHelper.prototype.applyUniforms = function (frameState) {\n        var gl = this.getGL();\n        var value;\n        var textureSlot = 0;\n        this.uniforms_.forEach(function (uniform) {\n            value =\n                typeof uniform.value === 'function'\n                    ? uniform.value(frameState)\n                    : uniform.value;\n            // apply value based on type\n            if (value instanceof HTMLCanvasElement ||\n                value instanceof HTMLImageElement ||\n                value instanceof ImageData) {\n                // create a texture & put data\n                if (!uniform.texture) {\n                    uniform.prevValue = undefined;\n                    uniform.texture = gl.createTexture();\n                }\n                gl.activeTexture(gl[\"TEXTURE\" + textureSlot]);\n                gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                var imageReady = !(value instanceof HTMLImageElement) ||\n                    /** @type {HTMLImageElement} */ (value).complete;\n                if (imageReady && uniform.prevValue !== value) {\n                    uniform.prevValue = value;\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\n                }\n                // fill texture slots by increasing index\n                gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n            }\n            else if (Array.isArray(value) && value.length === 6) {\n                this.setUniformMatrixValue(uniform.name, fromTransform(this.tmpMat4_, value));\n            }\n            else if (Array.isArray(value) && value.length <= 4) {\n                switch (value.length) {\n                    case 2:\n                        gl.uniform2f(this.getUniformLocation(uniform.name), value[0], value[1]);\n                        return;\n                    case 3:\n                        gl.uniform3f(this.getUniformLocation(uniform.name), value[0], value[1], value[2]);\n                        return;\n                    case 4:\n                        gl.uniform4f(this.getUniformLocation(uniform.name), value[0], value[1], value[2], value[3]);\n                        return;\n                    default:\n                        return;\n                }\n            }\n            else if (typeof value === 'number') {\n                gl.uniform1f(this.getUniformLocation(uniform.name), value);\n            }\n        }.bind(this));\n    };\n    /**\n     * Use a program.  If the program is already in use, this will return `false`.\n     * @param {WebGLProgram} program Program.\n     * @return {boolean} Changed.\n     * @api\n     */\n    WebGLHelper.prototype.useProgram = function (program) {\n        if (program == this.currentProgram_) {\n            return false;\n        }\n        else {\n            var gl = this.getGL();\n            gl.useProgram(program);\n            this.currentProgram_ = program;\n            this.uniformLocations_ = {};\n            this.attribLocations_ = {};\n            return true;\n        }\n    };\n    /**\n     * Will attempt to compile a vertex or fragment shader based on source\n     * On error, the shader will be returned but\n     * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n     * Use `gl.getShaderInfoLog(shader)` to have details\n     * @param {string} source Shader source\n     * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n     * @return {WebGLShader} Shader object\n     */\n    WebGLHelper.prototype.compileShader = function (source, type) {\n        var gl = this.getGL();\n        var shader = gl.createShader(type);\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n        return shader;\n    };\n    /**\n     * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n     * @param {string} fragmentShaderSource Fragment shader source.\n     * @param {string} vertexShaderSource Vertex shader source.\n     * @return {WebGLProgram} Program\n     * @api\n     */\n    WebGLHelper.prototype.getProgram = function (fragmentShaderSource, vertexShaderSource) {\n        var gl = this.getGL();\n        var fragmentShader = this.compileShader(fragmentShaderSource, gl.FRAGMENT_SHADER);\n        var vertexShader = this.compileShader(vertexShaderSource, gl.VERTEX_SHADER);\n        var program = gl.createProgram();\n        gl.attachShader(program, fragmentShader);\n        gl.attachShader(program, vertexShader);\n        gl.linkProgram(program);\n        if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n            var message = \"Fragment shader compliation failed: \" + gl.getShaderInfoLog(fragmentShader);\n            throw new Error(message);\n        }\n        gl.deleteShader(fragmentShader);\n        if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n            var message = \"Vertex shader compilation failed: \" + gl.getShaderInfoLog(vertexShader);\n            throw new Error(message);\n        }\n        gl.deleteShader(vertexShader);\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n            var message = \"GL program linking failed: \" + gl.getShaderInfoLog(vertexShader);\n            throw new Error(message);\n        }\n        return program;\n    };\n    /**\n     * Will get the location from the shader or the cache\n     * @param {string} name Uniform name\n     * @return {WebGLUniformLocation} uniformLocation\n     * @api\n     */\n    WebGLHelper.prototype.getUniformLocation = function (name) {\n        if (this.uniformLocations_[name] === undefined) {\n            this.uniformLocations_[name] = this.getGL().getUniformLocation(this.currentProgram_, name);\n        }\n        return this.uniformLocations_[name];\n    };\n    /**\n     * Will get the location from the shader or the cache\n     * @param {string} name Attribute name\n     * @return {number} attribLocation\n     * @api\n     */\n    WebGLHelper.prototype.getAttributeLocation = function (name) {\n        if (this.attribLocations_[name] === undefined) {\n            this.attribLocations_[name] = this.getGL().getAttribLocation(this.currentProgram_, name);\n        }\n        return this.attribLocations_[name];\n    };\n    /**\n     * Modifies the given transform to apply the rotation/translation/scaling of the given frame state.\n     * The resulting transform can be used to convert world space coordinates to view coordinates.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../transform\").Transform} transform Transform to update.\n     * @return {import(\"../transform\").Transform} The updated transform object.\n     * @api\n     */\n    WebGLHelper.prototype.makeProjectionTransform = function (frameState, transform) {\n        var size = frameState.size;\n        var rotation = frameState.viewState.rotation;\n        var resolution = frameState.viewState.resolution;\n        var center = frameState.viewState.center;\n        resetTransform(transform);\n        composeTransform(transform, 0, 0, 2 / (resolution * size[0]), 2 / (resolution * size[1]), -rotation, -center[0], -center[1]);\n        return transform;\n    };\n    /**\n     * Give a value for a standard float uniform\n     * @param {string} uniform Uniform name\n     * @param {number} value Value\n     * @api\n     */\n    WebGLHelper.prototype.setUniformFloatValue = function (uniform, value) {\n        this.getGL().uniform1f(this.getUniformLocation(uniform), value);\n    };\n    /**\n     * Give a value for a standard matrix4 uniform\n     * @param {string} uniform Uniform name\n     * @param {Array<number>} value Matrix value\n     * @api\n     */\n    WebGLHelper.prototype.setUniformMatrixValue = function (uniform, value) {\n        this.getGL().uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n    };\n    /**\n     * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n     * internally.\n     * @param {string} attribName Attribute name\n     * @param {number} size Number of components per attributes\n     * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n     * @param {number} stride Stride in bytes (0 means attribs are packed)\n     * @param {number} offset Offset in bytes\n     * @private\n     */\n    WebGLHelper.prototype.enableAttributeArray_ = function (attribName, size, type, stride, offset) {\n        var location = this.getAttributeLocation(attribName);\n        // the attribute has not been found in the shaders; do not enable it\n        if (location < 0) {\n            return;\n        }\n        this.getGL().enableVertexAttribArray(location);\n        this.getGL().vertexAttribPointer(location, size, type, false, stride, offset);\n    };\n    /**\n     * Will enable the following attributes to be read from the currently bound buffer,\n     * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n     * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n     * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n     * @api\n     */\n    WebGLHelper.prototype.enableAttributes = function (attributes) {\n        var stride = computeAttributesStride(attributes);\n        var offset = 0;\n        for (var i = 0; i < attributes.length; i++) {\n            var attr = attributes[i];\n            this.enableAttributeArray_(attr.name, attr.size, attr.type || FLOAT, stride, offset);\n            offset += attr.size * getByteSizeFromType(attr.type);\n        }\n    };\n    /**\n     * WebGL context was lost\n     * @private\n     */\n    WebGLHelper.prototype.handleWebGLContextLost = function () {\n        clear(this.bufferCache_);\n        this.currentProgram_ = null;\n    };\n    /**\n     * WebGL context was restored\n     * @private\n     */\n    WebGLHelper.prototype.handleWebGLContextRestored = function () { };\n    /**\n     * Will create or reuse a given webgl texture and apply the given size. If no image data\n     * specified, the texture will be empty, otherwise image data will be used and the `size`\n     * parameter will be ignored.\n     * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n     * @param {Array<number>} size Expected size of the texture\n     * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [opt_data] Image data/object to bind to the texture\n     * @param {WebGLTexture} [opt_texture] Existing texture to reuse\n     * @return {WebGLTexture} The generated texture\n     * @api\n     */\n    WebGLHelper.prototype.createTexture = function (size, opt_data, opt_texture) {\n        var gl = this.getGL();\n        var texture = opt_texture || gl.createTexture();\n        // set params & size\n        var level = 0;\n        var internalFormat = gl.RGBA;\n        var border = 0;\n        var format = gl.RGBA;\n        var type = gl.UNSIGNED_BYTE;\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        if (opt_data) {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, opt_data);\n        }\n        else {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, size[0], size[1], border, format, type, null);\n        }\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        return texture;\n    };\n    return WebGLHelper;\n}(Disposable));\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n * @api\n */\nexport function computeAttributesStride(attributes) {\n    var stride = 0;\n    for (var i = 0; i < attributes.length; i++) {\n        var attr = attributes[i];\n        stride += attr.size * getByteSizeFromType(attr.type);\n    }\n    return stride;\n}\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n    switch (type) {\n        case AttributeType.UNSIGNED_BYTE:\n            return Uint8Array.BYTES_PER_ELEMENT;\n        case AttributeType.UNSIGNED_SHORT:\n            return Uint16Array.BYTES_PER_ELEMENT;\n        case AttributeType.UNSIGNED_INT:\n            return Uint32Array.BYTES_PER_ELEMENT;\n        case AttributeType.FLOAT:\n        default:\n            return Float32Array.BYTES_PER_ELEMENT;\n    }\n}\nexport default WebGLHelper;\n//# sourceMappingURL=Helper.js.map","var source = \"var e=\\\"function\\\"==typeof Object.assign?Object.assign:function(e,n){if(null==e)throw new TypeError(\\\"Cannot convert undefined or null to object\\\");for(var t=Object(e),r=1,o=arguments.length;r<o;++r){var i=arguments[r];if(null!=i)for(var f in i)i.hasOwnProperty(f)&&(t[f]=i[f])}return t},n=\\\"GENERATE_BUFFERS\\\",t=[],r={vertexPosition:0,indexPosition:0};function o(e,n,t,r,o){e[n+0]=t,e[n+1]=r,e[n+2]=o}function i(e,n,i,f,s,u){var a=3+s,l=e[n+0],v=e[n+1],c=t;c.length=s;for(var g=0;g<c.length;g++)c[g]=e[n+2+g];var b=u?u.vertexPosition:0,h=u?u.indexPosition:0,d=b/a;return o(i,b,l,v,0),c.length&&i.set(c,b+3),o(i,b+=a,l,v,1),c.length&&i.set(c,b+3),o(i,b+=a,l,v,2),c.length&&i.set(c,b+3),o(i,b+=a,l,v,3),c.length&&i.set(c,b+3),b+=a,f[h++]=d,f[h++]=d+1,f[h++]=d+3,f[h++]=d+1,f[h++]=d+2,f[h++]=d+3,r.vertexPosition=b,r.indexPosition=h,r}var f=self;f.onmessage=function(t){var r=t.data;if(r.type===n){for(var o=r.customAttributesCount,s=2+o,u=new Float32Array(r.renderInstructions),a=u.length/s,l=4*a*(o+3),v=new Uint32Array(6*a),c=new Float32Array(l),g=null,b=0;b<u.length;b+=s)g=i(u,b,c,v,o,g);var h=e({vertexBuffer:c.buffer,indexBuffer:v.buffer,renderInstructions:u.buffer},r);f.postMessage(h,[c.buffer,v.buffer,u.buffer])}};\";\nvar blob = new Blob([source], { type: 'application/javascript' });\nvar url = URL.createObjectURL(blob);\nexport function create() {\n    return new Worker(url);\n}\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/webgl\n */\n/**\n * Constants taken from goog.webgl\n */\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport var ARRAY_BUFFER = 0x8892;\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var STREAM_DRAW = 0x88e0;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var STATIC_DRAW = 0x88e4;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var DYNAMIC_DRAW = 0x88e8;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n/** end of goog.webgl constants\n */\n/**\n * @const\n * @type {Array<string>}\n */\nvar CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [opt_attributes] Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n    var ii = CONTEXT_IDS.length;\n    for (var i = 0; i < ii; ++i) {\n        try {\n            var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n            if (context) {\n                return /** @type {!WebGLRenderingContext} */ (context);\n            }\n        }\n        catch (e) {\n            // pass\n        }\n    }\n    return null;\n}\n/**\n * @type {Array<string>}\n */\nvar supportedExtensions;\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n    if (!supportedExtensions) {\n        var canvas = document.createElement('canvas');\n        var gl = getContext(canvas);\n        if (gl) {\n            supportedExtensions = gl.getSupportedExtensions();\n        }\n    }\n    return supportedExtensions;\n}\n//# sourceMappingURL=webgl.js.map","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!./MapMixin.css?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":_vm.id}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div :id=\"id\"></div>\n</template>\n\n<script>\nimport MapMixin from './MapMixin.vue';\nimport Utils from '../utils.js';\n\nimport Collection from 'ol/Collection';\nimport Feature from 'ol/Feature';\nimport LayerGroup from 'ol/layer/Group';\nimport { fromExtent as PolygonFromExtent } from 'ol/geom/Polygon';\nimport TileLayer from 'ol/layer/Tile';\nimport TileJSON from 'ol/source/TileJSON';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport XYZ from 'ol/source/XYZ';\nimport WMTSCapabilities from 'ol/format/WMTSCapabilities';\nimport WMTS, {optionsFromCapabilities} from 'ol/source/WMTS';\n\nimport 'ol-ext/control/Swipe.css';\nimport Swipe from 'ol-ext/control/Swipe';\n\nimport 'ol-ext/control/Timeline.css';\nimport Timeline from 'ol-ext/control/Timeline';\n\nexport default {\n\tname: 'MapViewer',\n\tmixins: [MapMixin],\n\tprops: {\n\t\textents: { // Array of Array (WGS84: west, south, east, north)\n\t\t\ttype: Array,\n\t\t\tdefault: () => null\n\t\t},\n\t\tgeoJson: {\n\t\t\ttype: Object,\n\t\t\tdefault: () => null\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tWMTSCapabilities: {},\n\t\t\tswipe: {\n\t\t\t\tcontrol: null,\n\t\t\t\tleft: null,\n\t\t\t\tright: null\n\t\t\t},\n\t\t\ttimeline: null\n\t\t}\n\t},\n\tmethods: {\n\t\trenderMap() {\n\t\t\tlet showExtents = Array.isArray(this.extents) && this.extents.length > 0;\n\t\t\tthis.createMap(!showExtents);\n\n\t\t\tif (showExtents) {\n\t\t\t\tfor(let extent of this.extents) {\n\t\t\t\t\tvar bbox = Utils.extentToBBox(extent);\n\t\t\t\t\tthis.addRectangle(bbox.west, bbox.east, bbox.north, bbox.south);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (Utils.isObject(this.geoJson)) {\n\t\t\t\tthis.geoJsonLayer = this.addGeoJson(this.geoJson);\n\t\t\t}\n\n\t\t\tlet layers = this.map.getLayers();\n\t\t\tlayers.on('add', () => this.toggleSwipeControl());\n\t\t\tlayers.on('remove', () => this.toggleSwipeControl());\n\n\t\t\tif (this.$listeners && this.$listeners.drop) {\n\t\t\t\tthis.map.getViewport().addEventListener('dragover', event => event.preventDefault());\n\t\t\t\tthis.map.getViewport().addEventListener('drop', this.$listeners.drop);\n\t\t\t}\n\t\t},\n\n\t\taddRectangle(w, e, n, s) {\n\t\t\tlet extent = [...this.fromLonLat([w, s]), ...this.fromLonLat([e, n])];\n\t\t\tlet layer = new VectorLayer({\n\t\t\t\ttitle: \"Extent\",\n\t\t\t\tdisplayInLayerSwitcher: false,\n\t\t\t\tsource: new VectorSource({\n\t\t\t\t\tfeatures: [\n\t\t\t\t\t\tnew Feature(PolygonFromExtent(extent))\n\t\t\t\t\t],\n\t\t\t\t\tprojection: \"EPSG:4326\",\n\t\t\t\t\twrapX: false\n\t\t\t\t})\n\t\t\t});\n\t\t\tthis.map.addLayer(layer);\n\t\t\tthis.map.getView().fit(extent, this.fitOptions);\n\t\t\t// ToDo: The Collection component has some smart fitting behavior in setMapSize()\n\t\t\t// Implement something similar here, too.\n\t\t},\n\n\t\tasync showWebService(service) {\n\t\t\tswitch(service.type.toLowerCase()) {\n\t\t\t\tcase 'xyz':\n\t\t\t\t\tthis.updateXYZLayer(service);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'wmts':\n\t\t\t\t\tawait this.updateWMTSLayer(service);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tUtils.error(this, 'Sorry, the service type is not supported by the map.');\n\t\t\t}\n\t\t},\n\n\t\ttoggleSwipeControl() {\n\t\t\tvar shownLayers = this.getVisibleLayers();\n\t\t\tif (shownLayers.length === 2) {\n\t\t\t\tif (this.swipe.control === null) {\n\t\t\t\t\tthis.swipe.control = new Swipe();\n\t\t\t\t\tthis.map.addControl(this.swipe.control);\n\t\t\t\t}\n\t\t\t\tif (this.swipe.left !== shownLayers[0]) {\n\t\t\t\t\tthis.swipe.control.addLayer(shownLayers[0]);\n\t\t\t\t\tthis.swipe.left = shownLayers[0];\n\t\t\t\t}\n\t\t\t\tif (this.swipe.right !== shownLayers[1]) {\n\t\t\t\t\tthis.swipe.control.addLayer(shownLayers[1], true);\n\t\t\t\t\tthis.swipe.right = shownLayers[1];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.map.removeControl(this.swipe.control);\n\t\t\t\tthis.swipe.control = null;\n\t\t\t\tthis.swipe.left = null;\n\t\t\t\tthis.swipe.right = null;\n\t\t\t}\n\t\t},\n\n\t\taddLayerToMap(layer) {\n\t\t\tlayer.set('userLayer', true);\n\n\t\t\tthis.map.addLayer(layer);\n\n\t\t\tlayer.on('change', () => this.toggleSwipeControl());\n\t\t\tlayer.on('change:visible', () => this.toggleSwipeControl());\n\t\t\tlayer.on('change:zIndex', () => this.toggleSwipeControl());\n\t\t},\n\n\t\tremoveLayerFromMap(id) {\n\t\t\tlet layer = this.getLayerFromMap(id);\n\t\t\tif (layer) {\n\t\t\t\tthis.map.removeLayer(layer);\n\t\t\t}\n\t\t},\n\n\t\tgetLayerFromMap(id) {\n\t\t\tlet layers = this.map.getLayers().getArray();\n\t\t\tfor(let layer of layers) {\n\t\t\t\tif (layer.get('id') === id) {\n\t\t\t\t\treturn layer;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\n\t\tupdateGeoTiffLayer(url, title = null) {\n\t\t\tvar layer = new TileLayer({\n\t\t\t\tid: url,\n\t\t\t\ttitle: title ? title : 'GeoTiff',\n\t\t\t\tsource: new TileJSON({\n\t\t\t\t\turl: 'http://tiles.rdnt.io/tiles?url=' + encodeURIComponent(url),\n\t\t\t\t\tcrossOrigin: 'anonymous'\n\t\t\t\t})\n\t\t\t});\n\t\t\tthis.addLayerToMap(layer);\n\t\t\treturn layer;\n\t\t\t// ToDo: Implement full/native GTiff support\n\t\t},\n\n\t\tasync addCollection(collection) {\n\t\t\tlet link = Utils.getPreviewLinkFromSTAC(collection);\n\t\t\tif (!link) {\n\t\t\t\tUtils.error(this, 'No visualizations found for collection');\n\t\t\t}\n\n\t\t\tlet service = {\n\t\t\t\tid: collection.id,\n\t\t\t\turl: link.href,\n\t\t\t\ttitle: collection.title || collection.id\n\t\t\t};\n\n\t\t\t// Remove other previewLayers, only show one at a time\n\t\t\tthis.map.getLayers().forEach(layer => {\n\t\t\t\tif (layer.get('previewLayer') && layer.get('id') !== service.id) {\n\t\t\t\t\tthis.map.removeLayer(layer);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tlet layer;\n\t\t\tswitch(link.rel.toLowerCase()) {\n\t\t\t\tcase 'xyz':\n\t\t\t\t\tlayer = this.updateXYZLayer(service);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'wmts':\n\t\t\t\t\tlet layers = [];\n\t\t\t\t\tif (link['wmts:layer']) {\n\t\t\t\t\t\tlayers.push(link['wmts:layer']);\n\t\t\t\t\t}\n\t\t\t\t\tlayer = await this.updateWMTSLayer(service, layers);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tUtils.error(this, 'Sorry, the service type is not supported by the map.');\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayer.set('previewLayer', true);\n\n\t\t\t// Fit to extent of collection\n\t\t\ttry {\n\t\t\t\tlet bbox = Utils.extentToBBox(collection.extent.spatial.bbox[0]);\n\t\t\t\tlet extent = [...this.fromLonLat([bbox.west, bbox.south]), ...this.fromLonLat([bbox.east, bbox.north])];\n\t\t\t\tlet extentLayer = new VectorLayer({\n\t\t\t\t\ttitle: \"Extent\",\n\t\t\t\t\tnoSwitcherDelete: true,\n\t\t\t\t\tsource: new VectorSource({\n\t\t\t\t\t\tfeatures: [\n\t\t\t\t\t\t\tnew Feature(PolygonFromExtent(extent))\n\t\t\t\t\t\t],\n\t\t\t\t\t\tprojection: \"EPSG:4326\",\n\t\t\t\t\t\twrapX: false\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t\n\t\t\t\tlet style = extentLayer.getStyle();\n\t\t\t\t// https://github.com/openlayers/openlayers/issues/10131\n\t\t\t\tif (typeof style === 'function') {\n\t\t\t\t\tstyle = style()[0];\n\t\t\t\t}\n\t\t\t\tstyle.setFill(null);\n\n\t\t\t\tlayer.getLayers().push(extentLayer);\n\n\t\t\t\tthis.map.getView().fit(extent, this.fitOptions);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t},\n\n\t\tgetWMTSTimes(capabilities, layerId) {\n\t\t\tconst layers = capabilities.Contents.Layer || [];\n\t\t\tlet layer = layers.find(l => l.Identifier == layerId);\n\t\t\tif (!layer || !layer.Dimension) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tlet timeDimension = layer.Dimension.find(d => d.Identifier === 'TIME');\n\t\t\tif (!timeDimension) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\treturn timeDimension.Value.sort();\n\t\t},\n\n\t\tasync updateWMTSLayer(service, layerNames = [], time = undefined, prefix = \"Service\") {\n\t\t\tthis.removeLayerFromMap(service.id);\n\n\t\t\tif (!this.WMTSCapabilities[service.url]) {\n\t\t\t\tlet url = new URL(service.url);\n\t\t\t\turl.searchParams.set('service', 'wmts');\n\t\t\t\turl.searchParams.set('request', 'GetCapabilities');\n\t\t\t\tlet response = await axios.get(url.toString(), { responseType: 'text' });\n\t\t\t\tvar parser = new WMTSCapabilities();\n\t\t\t\tthis.WMTSCapabilities[service.url] = parser.read(response.data);\n\t\t\t}\n\n\t\t\tlet capabilities = this.WMTSCapabilities[service.url];\n\t\t\tlet minDate = null;\n\t\t\tlet maxDate = null;\n\t\t\tlet defaultDate = null;\n\t\t\tlet source = null;\n\t\t\tlet title = Utils.getResourceTitle(service, prefix);\n\t\t\tlet layerCollection = new Collection();\n\t\t\tfor(let layer of layerNames) {\n\t\t\t\tlet options = optionsFromCapabilities(capabilities, {\n\t\t\t\t\tlayer,\n\t\t\t\t\tmatrixSet: 'EPSG:3857'\n\t\t\t\t});\n\t\t\t\tif (!defaultDate) {\n\t\t\t\t\tdefaultDate = new Date(options.dimensions.TIME);\n\t\t\t\t}\n\n\t\t\t\tlet times = this.getWMTSTimes(capabilities, layer);\n\t\t\t\tif (times.length) {\n\t\t\t\t\tlet min = new Date(times[0]);\n\t\t\t\t\tlet max = new Date(times[times.length -1]);\n\t\t\t\t\tif (!minDate || min < minDate) {\n\t\t\t\t\t\tminDate = min;\n\t\t\t\t\t}\n\t\t\t\t\tif (!maxDate || max > maxDate) {\n\t\t\t\t\t\tmaxDate = max;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (time) {\n\t\t\t\t\tif (!Utils.isObject(options.dimensions)) {\n\t\t\t\t\t\toptions.dimensions = {};\n\t\t\t\t\t}\n\t\t\t\t\toptions.dimensions.time = time;\n\t\t\t\t}\n\t\t\t\tsource = new WMTS(options);\n\t\t\t\tvar mapLayer = new TileLayer({\n\t\t\t\t\ttitle,\n\t\t\t\t\tsource: this.trackTileProgress(source),\n\t\t\t\t\tnoSwitcherDelete: true\n\t\t\t\t});\n\t\t\t\tlayerCollection.push(mapLayer);\n\t\t\t}\n\n\t\t\tif (minDate && maxDate) {\n\t\t\t\tthis.timeline = new Timeline({\n\t\t\t\t\tclassName: 'ol-pointer',\n\t\t\t\t\tgraduation: 'day',\n\t\t\t\t\tminDate: minDate,\n\t\t\t\t\tmaxDate: maxDate\n\t\t\t\t});\n\t\t\t\tlet run;\n\t\t\t\tthis.timeline.on('scroll', function(e) {\n\t\t\t\t\tif (!e.date || e.date > maxDate || e.date < minDate) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (run) {\n\t\t\t\t\t\twindow.clearTimeout(run);\n\t\t\t\t\t}\n\t\t\t\t\trun = window.setTimeout(() => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tlet date = e.date.toISOString().substr(0, 10);\n\t\t\t\t\t\t\tsource.updateDimensions({\n\t\t\t\t\t\t\t\tTIME: date\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tlet btns = document.getElementsByClassName('timeline-date-label');\n\t\t\t\t\t\t\tbtns[0].innerText = date;\n\t\t\t\t\t\t\tbtns[0].disabled = true;\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t\trun = null;\n\t\t\t\t\t}, 500);\n\t\t\t\t});\n\t\t\t\tthis.map.addControl(this.timeline);\n\n\t\t\t\tthis.timeline.addButton({\n\t\t\t\t\tclassName: 'timeline-date-label',\n\t\t\t\t\ttitle: `The date that is shown on the map for the collection '${title}'`,\n\t\t\t\t\thtml: 'No date'\n\t\t\t\t});\n\t\t\t\tthis.timeline.setDate(defaultDate);\n\t\t\t}\n\n\t\t\tlet group = new LayerGroup({\n\t\t\t\tid: service.id,\n\t\t\t\ttitle,\n\t\t\t\tlayers: layerCollection\n\t\t\t});\n\t\t\tthis.addLayerToMap(group);\n\n\t\t\tif (this.timeline) {\n\t\t\t\tthis.map.getLayers().on('remove', event => {\n\t\t\t\t\tif (event.element === group) {\n\t\t\t\t\t\tthis.map.removeControl(this.timeline);\n\t\t\t\t\t\tthis.timeline = null;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn group;\n\t\t},\n\n\t\tupdateXYZLayer(service, prefix = \"Service\") {\n\t\t\tthis.removeLayerFromMap(service.id);\n\n\t\t\t// Replace/add a query parameter with a unique ID so that OpenLayers doesn't load tiles from cache\n\t\t\tlet url = Utils.replaceParam(service.url, '__editorSessionId', new Date().getTime()).replace(/%7B/g, '{').replace(/%7D/g, '}');\n\t\t\tlet title = Utils.getResourceTitle(service, prefix);\n\t\t\tlet layer = new TileLayer({\n\t\t\t\ttitle,\n\t\t\t\tsource: this.trackTileProgress(new XYZ({\n\t\t\t\t\turl\n\t\t\t\t})),\n\t\t\t\tnoSwitcherDelete: true\n\t\t\t});\n\t\t\tlet group = new LayerGroup({\n\t\t\t\tid: service.id,\n\t\t\t\ttitle,\n\t\t\t\tlayers: [\n\t\t\t\t\tlayer\n\t\t\t\t]\n\t\t\t});\n\t\t\tthis.addLayerToMap(group);\n\t\t\treturn group;\n\t\t}\n\n\t}\n\n}\n</script>\n\n<style src=\"./MapMixin.css\"></style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapViewer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapViewer.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MapViewer.vue?vue&type=template&id=e56dbdaa&\"\nimport script from \"./MapViewer.vue?vue&type=script&lang=js&\"\nexport * from \"./MapViewer.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MapMixin.css?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/**\n * @module ol/webgl/Buffer\n */\nimport { ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER } from '../webgl.js';\nimport { DYNAMIC_DRAW, STATIC_DRAW, STREAM_DRAW } from '../webgl.js';\nimport { assert } from '../asserts.js';\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport var BufferUsage = {\n    STATIC_DRAW: STATIC_DRAW,\n    STREAM_DRAW: STREAM_DRAW,\n    DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n * @api\n */\nvar WebGLArrayBuffer = /** @class */ (function () {\n    /**\n     * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n     * @param {number} [opt_usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n     * Default is `DYNAMIC_DRAW`.\n     */\n    function WebGLArrayBuffer(type, opt_usage) {\n        /**\n         * @private\n         * @type {Float32Array|Uint32Array}\n         */\n        this.array = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.type = type;\n        assert(type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER, 62);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.usage = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n    }\n    /**\n     * Populates the buffer with an array of the given size (all values will be zeroes).\n     * @param {number} size Array size\n     */\n    WebGLArrayBuffer.prototype.ofSize = function (size) {\n        this.array = new (getArrayClassForType(this.type))(size);\n    };\n    /**\n     * Populates the buffer with an array of the given size (all values will be zeroes).\n     * @param {Array<number>} array Numerical array\n     */\n    WebGLArrayBuffer.prototype.fromArray = function (array) {\n        var arrayClass = getArrayClassForType(this.type);\n        this.array = arrayClass.from\n            ? arrayClass.from(array)\n            : new arrayClass(array);\n    };\n    /**\n     * Populates the buffer with a raw binary array buffer.\n     * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n     * initialized for the same typed array class.\n     */\n    WebGLArrayBuffer.prototype.fromArrayBuffer = function (buffer) {\n        this.array = new (getArrayClassForType(this.type))(buffer);\n    };\n    /**\n     * @return {number} Buffer type.\n     */\n    WebGLArrayBuffer.prototype.getType = function () {\n        return this.type;\n    };\n    /**\n     * Will return null if the buffer was not initialized\n     * @return {Float32Array|Uint32Array} Array.\n     */\n    WebGLArrayBuffer.prototype.getArray = function () {\n        return this.array;\n    };\n    /**\n     * @return {number} Usage.\n     */\n    WebGLArrayBuffer.prototype.getUsage = function () {\n        return this.usage;\n    };\n    /**\n     * Will return 0 if the buffer is not initialized\n     * @return {number} Array size\n     */\n    WebGLArrayBuffer.prototype.getSize = function () {\n        return this.array ? this.array.length : 0;\n    };\n    return WebGLArrayBuffer;\n}());\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n    switch (type) {\n        case ARRAY_BUFFER:\n            return Float32Array;\n        case ELEMENT_ARRAY_BUFFER:\n            return Uint32Array;\n        default:\n            return Float32Array;\n    }\n}\nexport default WebGLArrayBuffer;\n//# sourceMappingURL=Buffer.js.map","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport { equals } from '../array.js';\n// for pixel color reading\nvar tmpArray4 = new Uint8Array(4);\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n * @api\n */\nvar WebGLRenderTarget = /** @class */ (function () {\n    /**\n     * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n     * @param {Array<number>} [opt_size] Expected size of the render target texture; note: this can be changed later on.\n     */\n    function WebGLRenderTarget(helper, opt_size) {\n        /**\n         * @private\n         * @type {import(\"./Helper.js\").default}\n         */\n        this.helper_ = helper;\n        var gl = helper.getGL();\n        /**\n         * @private\n         * @type {WebGLTexture}\n         */\n        this.texture_ = gl.createTexture();\n        /**\n         * @private\n         * @type {WebGLFramebuffer}\n         */\n        this.framebuffer_ = gl.createFramebuffer();\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.size_ = opt_size || [1, 1];\n        /**\n         * @type {Uint8Array}\n         * @private\n         */\n        this.data_ = new Uint8Array(0);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.dataCacheDirty_ = true;\n        this.updateSize_();\n    }\n    /**\n     * Changes the size of the render target texture. Note: will do nothing if the size\n     * is already the same.\n     * @param {Array<number>} size Expected size of the render target texture\n     * @api\n     */\n    WebGLRenderTarget.prototype.setSize = function (size) {\n        if (equals(size, this.size_)) {\n            return;\n        }\n        this.size_[0] = size[0];\n        this.size_[1] = size[1];\n        this.updateSize_();\n    };\n    /**\n     * Returns the size of the render target texture\n     * @return {Array<number>} Size of the render target texture\n     * @api\n     */\n    WebGLRenderTarget.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n     * render target into memory, which is an expensive operation.\n     * This content will be kept in cache but should be cleared after each new render.\n     * @api\n     */\n    WebGLRenderTarget.prototype.clearCachedData = function () {\n        this.dataCacheDirty_ = true;\n    };\n    /**\n     * Returns the full content of the frame buffer as a series of r, g, b, a components\n     * in the 0-255 range (unsigned byte).\n     * @return {Uint8Array} Integer array of color values\n     * @api\n     */\n    WebGLRenderTarget.prototype.readAll = function () {\n        if (this.dataCacheDirty_) {\n            var size = this.size_;\n            var gl = this.helper_.getGL();\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n            gl.readPixels(0, 0, size[0], size[1], gl.RGBA, gl.UNSIGNED_BYTE, this.data_);\n            this.dataCacheDirty_ = false;\n        }\n        return this.data_;\n    };\n    /**\n     * Reads one pixel of the frame buffer as an array of r, g, b, a components\n     * in the 0-255 range (unsigned byte).\n     * If x and/or y are outside of existing data, an array filled with 0 is returned.\n     * @param {number} x Pixel coordinate\n     * @param {number} y Pixel coordinate\n     * @return {Uint8Array} Integer array with one color value (4 components)\n     * @api\n     */\n    WebGLRenderTarget.prototype.readPixel = function (x, y) {\n        if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n            tmpArray4[0] = 0;\n            tmpArray4[1] = 0;\n            tmpArray4[2] = 0;\n            tmpArray4[3] = 0;\n            return tmpArray4;\n        }\n        this.readAll();\n        var index = Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n        tmpArray4[0] = this.data_[index * 4];\n        tmpArray4[1] = this.data_[index * 4 + 1];\n        tmpArray4[2] = this.data_[index * 4 + 2];\n        tmpArray4[3] = this.data_[index * 4 + 3];\n        return tmpArray4;\n    };\n    /**\n     * @return {WebGLTexture} Texture to render to\n     */\n    WebGLRenderTarget.prototype.getTexture = function () {\n        return this.texture_;\n    };\n    /**\n     * @return {WebGLFramebuffer} Frame buffer of the render target\n     */\n    WebGLRenderTarget.prototype.getFramebuffer = function () {\n        return this.framebuffer_;\n    };\n    /**\n     * @private\n     */\n    WebGLRenderTarget.prototype.updateSize_ = function () {\n        var size = this.size_;\n        var gl = this.helper_.getGL();\n        this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n        gl.viewport(0, 0, size[0], size[1]);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture_, 0);\n        this.data_ = new Uint8Array(size[0] * size[1] * 4);\n    };\n    return WebGLRenderTarget;\n}());\nexport default WebGLRenderTarget;\n//# sourceMappingURL=RenderTarget.js.map","/**\n * @module ol/xml\n */\nimport { extend } from './array.js';\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node Node.\n */\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n/**\n * @type {string}\n */\nexport var XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n    return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n    return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n    if (node.nodeType == Node.CDATA_SECTION_NODE ||\n        node.nodeType == Node.TEXT_NODE) {\n        if (normalizeWhitespace) {\n            accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n        }\n        else {\n            accumulator.push(node.nodeValue);\n        }\n    }\n    else {\n        var n = void 0;\n        for (n = node.firstChild; n; n = n.nextSibling) {\n            getAllTextContent_(n, normalizeWhitespace, accumulator);\n        }\n    }\n    return accumulator;\n}\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n    return 'documentElement' in object;\n}\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n    return node.getAttributeNS(namespaceURI, name) || '';\n}\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n    return new DOMParser().parseFromString(xml, 'application/xml');\n}\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            extend(array, value);\n        }\n    });\n}\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            objectStack[objectStack.length - 1] = value;\n        }\n    });\n}\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            var array = void 0;\n            if (property in object) {\n                array = object[property];\n            }\n            else {\n                array = [];\n                object[property] = array;\n            }\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            object[property] = value;\n        }\n    });\n}\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n    return function (node, value, objectStack) {\n        nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n        var parent = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var parentNode = parent.node;\n        parentNode.appendChild(node);\n    };\n}\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n    var serializersNS, nodeFactory;\n    return function (node, value, objectStack) {\n        if (serializersNS === undefined) {\n            serializersNS = {};\n            var serializers = {};\n            serializers[node.localName] = nodeWriter;\n            serializersNS[node.namespaceURI] = serializers;\n            nodeFactory = makeSimpleNodeFactory(node.localName);\n        }\n        serialize(serializersNS, nodeFactory, value, objectStack);\n    };\n}\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [opt_nodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [opt_namespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n    var fixedNodeName = opt_nodeName;\n    return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [opt_nodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n        var context = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var node = context.node;\n        var nodeName = fixedNodeName;\n        if (nodeName === undefined) {\n            nodeName = opt_nodeName;\n        }\n        var namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n        return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    });\n}\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport var OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n    var length = orderedKeys.length;\n    var sequence = new Array(length);\n    for (var i = 0; i < length; ++i) {\n        sequence[i] = object[orderedKeys[i]];\n    }\n    return sequence;\n}\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [opt_structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n    /**\n     * @type {Object<string, T>}\n     */\n    var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n    var i, ii;\n    for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n        structureNS[namespaceURIs[i]] = structure;\n    }\n    return structureNS;\n}\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n    var n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n        var parsers = parsersNS[n.namespaceURI];\n        if (parsers !== undefined) {\n            var parser = parsers[n.localName];\n            if (parser !== undefined) {\n                parser.call(opt_this, n, objectStack);\n            }\n        }\n    }\n}\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n    objectStack.push(object);\n    parseNode(parsersNS, node, objectStack, opt_this);\n    return /** @type {T} */ (objectStack.pop());\n}\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    var length = (opt_keys !== undefined ? opt_keys : values).length;\n    var value, node;\n    for (var i = 0; i < length; ++i) {\n        value = values[i];\n        if (value !== undefined) {\n            node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack, opt_keys !== undefined ? opt_keys[i] : undefined);\n            if (node !== undefined) {\n                serializersNS[node.namespaceURI][node.localName].call(opt_this, node, value, objectStack);\n            }\n        }\n    }\n}\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    objectStack.push(object);\n    serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n    return /** @type {O|undefined} */ (objectStack.pop());\n}\nvar xmlSerializer_ = undefined;\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n    xmlSerializer_ = xmlSerializer;\n}\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n    if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n        xmlSerializer_ = new XMLSerializer();\n    }\n    return xmlSerializer_;\n}\nvar document_ = undefined;\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n    document_ = document;\n}\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n    if (document_ === undefined && typeof document !== 'undefined') {\n        document_ = document.implementation.createDocument('', '', null);\n    }\n    return document_;\n}\n//# sourceMappingURL=xml.js.map"],"sourceRoot":""}