{"version":3,"sources":["webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/source/WMTSRequestEncoding.js","webpack:///./node_modules/ol/source/WMTS.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","XYZ","_super","opt_options","options","interpolate","undefined","imageSmoothing","projection","tileGrid","extent","maxResolution","maxZoom","minZoom","tileSize","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","url","urls","wrapX","transition","attributionsCollapsible","zDirection","brokenDiagonalRendering_","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","sourceProj","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","c","key","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","canWrapX","getExtent","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","Math","max","ceil","addQuad_","leftBound_1","Infinity","forEach","triangle","i","arr","min","source","newTriangle","minX","maxX","bind","addTriangle_","a","aSrc","bSrc","cSrc","push","target","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isGlobal","targetQuadExtent","targetCoverageX","isFinite","isNotFinite","center","centerSrc","dx","centerSrcEstimX","dy","centerSrcErrorSquared","abs","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","src","getTriangles","drawTestTriangle","ctx","u1","v1","u2","v2","beginPath","moveTo","lineTo","closePath","save","clip","fillRect","restore","verifyBrokenDiagonalRendering","data","offset","isBrokenDiagonalRendering","document","createElement","getContext","globalCompositeOperation","fillStyle","getImageData","calculateSourceResolution","targetCenter","targetResolution","sourceCenter","sourceResolution","targetMetersPerUnit","getMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","corner","render","width","height","pixelRatio","triangulation","sources","gutter","opt_renderEdges","opt_interpolate","context","round","length","canvas","pixelRound","value","scale","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","image","drawImage","targetTopLeft","x0","y0","x1","y1","x2","y2","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","step","transform","translate","strokeStyle","lineWidth","stroke","ReprojTile","sourceTileGrid","targetTileGrid","tileCoord","wrappedTileCoord","getTileFunction","opt_errorThreshold","_this","TileState","IDLE","renderEdges_","pixelRatio_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","state","EMPTY","sourceProjExtent","getResolution","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","minY","maxY","tile","getImage","reproject_","getState","LOADED","ERROR","z","size","getTileSize","changed","load","LOADING","leftToLoad_1","sourceListenKey_1","EventType","CHANGE","e","unlistenSources_","setTimeout","Tile","VectorSourceEvent","type","opt_feature","opt_features","feature","features","VectorSource","READY","on","once","un","loader_","format_","format","overlaps_","overlaps","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","isArray","getArray","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","geometry","getGeometry","insert","dispatchEvent","ADDFEATURE","remove","handleFeatureChange_","PROPERTYCHANGE","valid","id","getId","toString","addFeatures","extents","newFeatures","geometryFeatures","length_1","length_2","hasListener","length_3","modifyingCollection","addEventListener","evt","REMOVEFEATURE","ADD","REMOVE","removeFeature","clear","opt_fast","featureId","keys","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","CLEAR","forEachFeature","callback","forEachFeatureAtCoordinateDirect","coordinate","forEachFeatureInExtent","intersectsCoordinate","forEachInExtent","forEachFeatureIntersectingExtent","intersectsExtent","result","getFeaturesCollection","getFeatures","slice","getAll","getFeaturesAtCoordinate","getFeaturesInExtent","getInExtent","getClosestFeatureToCoordinate","opt_filter","x","y","closestFeature","closestPoint","NaN","minSquaredDistance","filter","previousMinSquaredDistance","closestPointXY","minDistance","sqrt","opt_extent","getFeatureById","getFeatureByUid","uid","getFormat","getOverlaps","getUrl","event","update","sid","removeFromIdIndex_","CHANGEFEATURE","hasFeature","isEmpty","getLength","loadFeatures","resolution","loadedExtentsRtree","extentsToLoad","_loop_1","ii","extentToLoad","alreadyLoaded","object","this_1","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","loading","refresh","removeLoadedExtent","obj","featureChangeKeys","removed","setLoader","setUrl","disable","rotation","none","createSnapToN","n","theta","PI","opt_isMoving","floor","createSnapToZero","opt_tolerance","tolerance","UrlTile","generateTileUrlFunction_","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","handleTileChange","tileState","TileEventType","TILELOADSTART","TILELOADERROR","TILELOADEND","setTileLoadFunction","tileCache","setTileUrlFunction","pruneExceptNewestZ","setKey","join","useTile","tileCoordKey","containsKey","get","TileImage","defaultTileLoadFunction","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","canExpireCache","expireCache","usedTiles","usedTileCache","getTileCacheForProjection","getGutterForProjection","getProjection","getGutter","getKey","getInterpolate","getOpaque","getTileGridForProjection","thisProj","projKey","TileCache","highWaterMark","createTile_","urlTileCoord","getTileCoordForTileUrlFunction","tileUrl","tileOptions","getTile","sourceProjection","cache","newTile","getTilePixelRatio","getTileInternal","interimTile","refreshInterimChain","replace","set","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","ERROR_THRESHOLD","ENABLE_RASTER_REPROJECTION","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","minResolution","ratio","log","createSnapToResolutions","resolutions","opt_smooth","opt_maxExtent","opt_showFullExtent","direction","cappedMaxRes","smooth","capped","createSnapToPower","power","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","pow","createMinMaxResolution","KVP","REST","WMTS","requestEncoding","WMTSRequestEncoding","version_","version","dimensions_","dimensions","layer_","layer","matrixSet_","matrixSet","style_","style","requestEncoding_","getKeyForDimensions_","map","createFromWMTSTemplate","getDimensions","getLayer","getMatrixSet","getRequestEncoding","getStyle","getVersion","res","updateDimensions","template","m","toLowerCase","localContext_1","getMatrixId","optionsFromCapabilities","wmtsCap","config","layers","l","elt","index","array","idx","tileMatrixSets","tileMatrixSet","el","supportedCRS","proj1","proj2","matrixLimits","matrixSets","matrixSetObj","code","projConfig","switchOriginXY","getAxisOrientation","substr","matrix","TileMatrix","selectedMatrixLimit","MinTileCol","MinTileRow","MaxTileCol","MatrixWidth","MaxTileRow","MatrixHeight","tileMatrixValue","Identifier","ScaleDenominator","origin","TopLeftCorner","tileSpanX","TileWidth","tileSpanY","TileHeight","matrixSetExtent","wgs84BoundingBox","wgs84ProjectionExtent","wgs84MatrixSetExtent","gets","constraint","element","encodings"],"mappings":"oJAAA,4BAGIA,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GA+ExCI,EAAqB,SAAUC,GAK/B,SAASD,EAAIE,GACT,IAAIC,EAAUD,GAAe,GACzBE,OAAyCC,IAA3BF,EAAQG,gBAA+BH,EAAQG,oBACrCD,IAAxBF,EAAQC,cACRA,EAAcD,EAAQC,aAE1B,IAAIG,OAAoCF,IAAvBF,EAAQI,WAA2BJ,EAAQI,WAAa,YACrEC,OAAgCH,IAArBF,EAAQK,SACjBL,EAAQK,SACR,eAAU,CACRC,OAAQ,eAAqBF,GAC7BG,cAAeP,EAAQO,cACvBC,QAASR,EAAQQ,QACjBC,QAAST,EAAQS,QACjBC,SAAUV,EAAQU,WAE1B,OAAOZ,EAAOR,KAAKI,KAAM,CACrBiB,aAAcX,EAAQW,aACtBC,UAAWZ,EAAQY,UACnBC,YAAab,EAAQa,YACrBZ,YAAaA,EACba,OAAQd,EAAQc,OAChBV,WAAYA,EACZW,2BAA4Bf,EAAQe,2BACpCV,SAAUA,EACVW,iBAAkBhB,EAAQgB,iBAC1BC,eAAgBjB,EAAQiB,eACxBC,gBAAiBlB,EAAQkB,gBACzBC,IAAKnB,EAAQmB,IACbC,KAAMpB,EAAQoB,KACdC,WAAyBnB,IAAlBF,EAAQqB,OAAsBrB,EAAQqB,MAC7CC,WAAYtB,EAAQsB,WACpBC,wBAAyBvB,EAAQuB,wBACjCC,WAAYxB,EAAQwB,cAClB9B,KAEV,OAxCAf,EAAUkB,EAAKC,GAwCRD,EAzCa,CA0CtB,QACa,U,wCCpHX4B,E,oFCUAC,EAAkB,GASlBC,EAAqB,IAMrB,EAA+B,WAS/B,SAASC,EAAcC,EAAYC,EAAYC,EAAcC,EAAiBC,EAAgBC,GAK1FxC,KAAKyC,YAAcN,EAKnBnC,KAAK0C,YAAcN,EAEnB,IAAIO,EAAoB,GACpBC,EAAe,eAAa5C,KAAK0C,YAAa1C,KAAKyC,aAMvDzC,KAAK6C,cAAgB,SAAUC,GAC3B,IAAIC,EAAMD,EAAE,GAAK,IAAMA,EAAE,GAIzB,OAHKH,EAAkBI,KACnBJ,EAAkBI,GAAOH,EAAaE,IAEnCH,EAAkBI,IAM7B/C,KAAKgD,iBAAmBV,EAKxBtC,KAAKiD,uBAAyBV,EAAiBA,EAK/CvC,KAAKkD,WAAa,GAMlBlD,KAAKmD,iBAAkB,EAKvBnD,KAAKoD,kBACDpD,KAAKyC,YAAYY,cACXf,KACAtC,KAAKyC,YAAYa,aACnB,eAAShB,IAAoB,eAAStC,KAAKyC,YAAYa,aAK/DtD,KAAKuD,kBAAoBvD,KAAKyC,YAAYa,YACpC,eAAStD,KAAKyC,YAAYa,aAC1B,KAKNtD,KAAKwD,kBAAoBxD,KAAK0C,YAAYY,YACpC,eAAStD,KAAK0C,YAAYY,aAC1B,KACN,IAAIG,EAAqB,eAAWpB,GAChCqB,EAAsB,eAAYrB,GAClCsB,EAAyB,eAAetB,GACxCuB,EAAwB,eAAcvB,GACtCwB,EAAgB7D,KAAK6C,cAAcY,GACnCK,EAAiB9D,KAAK6C,cAAca,GACpCK,EAAoB/D,KAAK6C,cAAcc,GACvCK,EAAmBhE,KAAK6C,cAAce,GAWtCK,EAAiBjC,GAChBQ,EACK0B,KAAKC,IAAI,EAAGD,KAAKE,KAAK,eAAK,eAAQ/B,IAChCG,EACGA,EACA,IACA,QACN,GAEV,GADAxC,KAAKqE,SAASZ,EAAoBC,EAAqBC,EAAwBC,EAAuBC,EAAeC,EAAgBC,EAAmBC,EAAkBC,GACtKjE,KAAKmD,gBAAiB,CACtB,IAAImB,EAAcC,IAClBvE,KAAKkD,WAAWsB,SAAQ,SAAUC,EAAUC,EAAGC,GAC3CL,EAAcJ,KAAKU,IAAIN,EAAaG,EAASI,OAAO,GAAG,GAAIJ,EAASI,OAAO,GAAG,GAAIJ,EAASI,OAAO,GAAG,OAIzG7E,KAAKkD,WAAWsB,QAAQ,SAAUC,GAC9B,GAAIP,KAAKC,IAAIM,EAASI,OAAO,GAAG,GAAIJ,EAASI,OAAO,GAAG,GAAIJ,EAASI,OAAO,GAAG,IAC1EP,EACAtE,KAAKuD,kBAAoB,EAAG,CAC5B,IAAIuB,EAAc,CACd,CAACL,EAASI,OAAO,GAAG,GAAIJ,EAASI,OAAO,GAAG,IAC3C,CAACJ,EAASI,OAAO,GAAG,GAAIJ,EAASI,OAAO,GAAG,IAC3C,CAACJ,EAASI,OAAO,GAAG,GAAIJ,EAASI,OAAO,GAAG,KAE3CC,EAAY,GAAG,GAAKR,EAActE,KAAKuD,kBAAoB,IAC3DuB,EAAY,GAAG,IAAM9E,KAAKuD,mBAE1BuB,EAAY,GAAG,GAAKR,EAActE,KAAKuD,kBAAoB,IAC3DuB,EAAY,GAAG,IAAM9E,KAAKuD,mBAE1BuB,EAAY,GAAG,GAAKR,EAActE,KAAKuD,kBAAoB,IAC3DuB,EAAY,GAAG,IAAM9E,KAAKuD,mBAK9B,IAAIwB,EAAOb,KAAKU,IAAIE,EAAY,GAAG,GAAIA,EAAY,GAAG,GAAIA,EAAY,GAAG,IACrEE,EAAOd,KAAKC,IAAIW,EAAY,GAAG,GAAIA,EAAY,GAAG,GAAIA,EAAY,GAAG,IACrEE,EAAOD,EAAO/E,KAAKuD,kBAAoB,IACvCkB,EAASI,OAASC,KAG5BG,KAAKjF,OAEX2C,EAAoB,GA0LxB,OA9KAT,EAAcxC,UAAUwF,aAAe,SAAUC,EAAG/F,EAAG0D,EAAGsC,EAAMC,EAAMC,GAClEtF,KAAKkD,WAAWqC,KAAK,CACjBV,OAAQ,CAACO,EAAMC,EAAMC,GACrBE,OAAQ,CAACL,EAAG/F,EAAG0D,MAmBvBZ,EAAcxC,UAAU2E,SAAW,SAAUc,EAAG/F,EAAG0D,EAAG3D,EAAGiG,EAAMC,EAAMC,EAAMG,EAAMxB,GAC7E,IAAIyB,EAAmB,eAAe,CAACN,EAAMC,EAAMC,EAAMG,IACrDE,EAAkB3F,KAAKuD,kBACrB,eAASmC,GAAoB1F,KAAKuD,kBAClC,KACFqC,EAA0C5F,KAAsB,kBAGhE6F,EAAS7F,KAAKyC,YAAYY,YAC1BsC,EAAkB,IAClBA,EAAkB,EAClBG,GAAmB,EACvB,GAAI7B,EAAiB,EAAG,CACpB,GAAIjE,KAAK0C,YAAYqD,YAAc/F,KAAKwD,kBAAmB,CACvD,IAAIwC,EAAmB,eAAe,CAACb,EAAG/F,EAAG0D,EAAG3D,IAC5C8G,EAAkB,eAASD,GAAoBhG,KAAKwD,kBACxDsC,EACIG,EAAkBhE,GAAsB6D,GAE3CD,GAAU7F,KAAKyC,YAAYsD,YAAcJ,IAC1CG,EACIH,EAAkB1D,GAAsB6D,GAGpD,MAAKA,GAAoB9F,KAAKgD,kBACtBkD,SAASR,EAAiB,KAC1BQ,SAASR,EAAiB,KAC1BQ,SAASR,EAAiB,KAC1BQ,SAASR,EAAiB,MACrB,eAAWA,EAAkB1F,KAAKgD,kBAL/C,CAWA,IAAImD,EAAc,EAClB,IAAKL,KACII,SAASd,EAAK,MACdc,SAASd,EAAK,MACdc,SAASb,EAAK,MACda,SAASb,EAAK,MACda,SAASZ,EAAK,MACdY,SAASZ,EAAK,MACdY,SAAST,EAAK,MACdS,SAAST,EAAK,KACf,GAAIxB,EAAiB,EACjB6B,GAAmB,OAUnB,GALAK,GACMD,SAASd,EAAK,KAAQc,SAASd,EAAK,IAAU,EAAJ,IACtCc,SAASb,EAAK,KAAQa,SAASb,EAAK,IAAU,EAAJ,IAC1Ca,SAASZ,EAAK,KAAQY,SAASZ,EAAK,IAAU,EAAJ,IAC1CY,SAAST,EAAK,KAAQS,SAAST,EAAK,IAAU,EAAJ,GACjC,GAAfU,GACe,GAAfA,GACe,GAAfA,GACe,GAAfA,EACA,OAKhB,GAAIlC,EAAiB,EAAG,CACpB,IAAK6B,EAAkB,CACnB,IAAIM,EAAS,EAAEjB,EAAE,GAAKrC,EAAE,IAAM,GAAIqC,EAAE,GAAKrC,EAAE,IAAM,GAC7CuD,EAAYrG,KAAK6C,cAAcuD,GAC/BE,OAAK,EACT,GAAIT,EAAQ,CACR,IAAIU,GAAmB,eAAOnB,EAAK,GAAIQ,GACnC,eAAON,EAAK,GAAIM,IAChB,EACJU,EAAKC,EAAkB,eAAOF,EAAU,GAAIT,QAG5CU,GAAMlB,EAAK,GAAKE,EAAK,IAAM,EAAIe,EAAU,GAE7C,IAAIG,GAAMpB,EAAK,GAAKE,EAAK,IAAM,EAAIe,EAAU,GACzCI,EAAwBH,EAAKA,EAAKE,EAAKA,EAC3CV,EAAmBW,EAAwBzG,KAAKiD,uBAEpD,GAAI6C,EAAkB,CAClB,GAAI5B,KAAKwC,IAAIvB,EAAE,GAAKrC,EAAE,KAAOoB,KAAKwC,IAAIvB,EAAE,GAAKrC,EAAE,IAAK,CAEhD,IAAI6D,EAAK,EAAEvH,EAAE,GAAK0D,EAAE,IAAM,GAAI1D,EAAE,GAAK0D,EAAE,IAAM,GACzC8D,EAAQ5G,KAAK6C,cAAc8D,GAC3BE,EAAK,EAAE1H,EAAE,GAAKgG,EAAE,IAAM,GAAIhG,EAAE,GAAKgG,EAAE,IAAM,GACzC2B,EAAQ9G,KAAK6C,cAAcgE,GAC/B7G,KAAKqE,SAASc,EAAG/F,EAAGuH,EAAIE,EAAIzB,EAAMC,EAAMuB,EAAOE,EAAO7C,EAAiB,GACvEjE,KAAKqE,SAASwC,EAAIF,EAAI7D,EAAG3D,EAAG2H,EAAOF,EAAOtB,EAAMG,EAAMxB,EAAiB,OAEtE,CAED,IAAI8C,EAAK,EAAE5B,EAAE,GAAK/F,EAAE,IAAM,GAAI+F,EAAE,GAAK/F,EAAE,IAAM,GACzC4H,EAAQhH,KAAK6C,cAAckE,GAC3BE,EAAK,EAAEnE,EAAE,GAAK3D,EAAE,IAAM,GAAI2D,EAAE,GAAK3D,EAAE,IAAM,GACzC+H,EAAQlH,KAAK6C,cAAcoE,GAC/BjH,KAAKqE,SAASc,EAAG4B,EAAIE,EAAI9H,EAAGiG,EAAM4B,EAAOE,EAAOzB,EAAMxB,EAAiB,GACvEjE,KAAKqE,SAAS0C,EAAI3H,EAAG0D,EAAGmE,EAAID,EAAO3B,EAAMC,EAAM4B,EAAOjD,EAAiB,GAE3E,QAGR,GAAI4B,EAAQ,CACR,IAAK7F,KAAKoD,kBACN,OAEJpD,KAAKmD,iBAAkB,EAMA,IAAR,GAAdgD,IACDnG,KAAKkF,aAAaC,EAAGrC,EAAG3D,EAAGiG,EAAME,EAAMG,GAEhB,IAAR,GAAdU,IACDnG,KAAKkF,aAAaC,EAAGrC,EAAG1D,EAAGgG,EAAME,EAAMD,GAEvCc,IAE2B,IAAR,GAAdA,IACDnG,KAAKkF,aAAa9F,EAAGD,EAAGgG,EAAGE,EAAMI,EAAML,GAEhB,IAAR,EAAde,IACDnG,KAAKkF,aAAa9F,EAAGD,EAAG2D,EAAGuC,EAAMI,EAAMH,MASnDpD,EAAcxC,UAAUyH,sBAAwB,WAC5C,IAAIvG,EAAS,iBAOb,OANAZ,KAAKkD,WAAWsB,SAAQ,SAAUC,EAAUC,EAAGC,GAC3C,IAAIyC,EAAM3C,EAASI,OACnB,eAAiBjE,EAAQwG,EAAI,IAC7B,eAAiBxG,EAAQwG,EAAI,IAC7B,eAAiBxG,EAAQwG,EAAI,OAE1BxG,GAKXsB,EAAcxC,UAAU2H,aAAe,WACnC,OAAOrH,KAAKkD,YAEThB,EAxUuB,GA0UnB,I,oCDxVf,SAASoF,EAAiBC,EAAKC,EAAIC,EAAIC,EAAIC,GACvCJ,EAAIK,YACJL,EAAIM,OAAO,EAAG,GACdN,EAAIO,OAAON,EAAIC,GACfF,EAAIO,OAAOJ,EAAIC,GACfJ,EAAIQ,YACJR,EAAIS,OACJT,EAAIU,OACJV,EAAIW,SAAS,EAAG,EAAGhE,KAAKC,IAAIqD,EAAIE,GAAM,EAAGxD,KAAKC,IAAIsD,EAAIE,IACtDJ,EAAIY,UAUR,SAASC,EAA8BC,EAAMC,GAEzC,OAAQpE,KAAKwC,IAAI2B,EAAc,EAATC,GAAc,KAAO,GACvCpE,KAAKwC,IAAI2B,EAAc,EAATC,EAAa,GAAK,QAAc,EAYtD,SAASC,IACL,QAAiC/H,IAA7BuB,EAAwC,CACxC,IAAIwF,EAAMiB,SAASC,cAAc,UAAUC,WAAW,MACtDnB,EAAIoB,yBAA2B,UAC/BpB,EAAIqB,UAAY,wBAChBtB,EAAiBC,EAAK,EAAG,EAAG,EAAG,GAC/BD,EAAiBC,EAAK,EAAG,EAAG,EAAG,GAC/B,IAAIc,EAAOd,EAAIsB,aAAa,EAAG,EAAG,EAAG,GAAGR,KACxCtG,EACIqG,EAA8BC,EAAM,IAChCD,EAA8BC,EAAM,IACpCD,EAA8BC,EAAM,GAEhD,OAAOtG,EAcJ,SAAS+G,EAA0B3G,EAAYC,EAAY2G,EAAcC,GAC5E,IAAIC,EAAe,eAAUF,EAAc3G,EAAYD,GAEnD+G,EAAmB,eAAmB9G,EAAY4G,EAAkBD,GACpEI,EAAsB/G,EAAWgH,wBACT5I,IAAxB2I,IACAD,GAAoBC,GAExB,IAAIE,EAAsBlH,EAAWiH,wBACT5I,IAAxB6I,IACAH,GAAoBG,GAKxB,IAAIC,EAAenH,EAAWmB,YAC9B,IAAKgG,GAAgB,eAAmBA,EAAcL,GAAe,CACjE,IAAIM,EAAqB,eAAmBpH,EAAY+G,EAAkBD,GACtEC,EACAhD,SAASqD,IAAuBA,EAAqB,IACrDL,GAAoBK,GAG5B,OAAOL,EAcJ,SAASM,EAAgCrH,EAAYC,EAAYC,EAAc2G,GAClF,IAAID,EAAe,eAAU1G,GACzB6G,EAAmBJ,EAA0B3G,EAAYC,EAAY2G,EAAcC,GAOvF,QANK9C,SAASgD,IAAqBA,GAAoB,IACnD,eAAc7G,GAAc,SAAUoH,GAElC,OADAP,EAAmBJ,EAA0B3G,EAAYC,EAAYqH,EAAQT,GACtE9C,SAASgD,IAAqBA,EAAmB,KAGzDA,EAwBJ,SAASQ,EAAOC,EAAOC,EAAQC,EAAYX,EAAkBI,EAAcN,EAAkB3G,EAAcyH,EAAeC,EAASC,EAAQC,EAAiBC,GAC/J,IAAIC,EAAU,eAAsBjG,KAAKkG,MAAMP,EAAaF,GAAQzF,KAAKkG,MAAMP,EAAaD,IAI5F,GAHKM,GACD,eAAOC,EAAS,QAEG,IAAnBJ,EAAQM,OACR,OAAOF,EAAQG,OAGnB,SAASC,EAAWC,GAChB,OAAOtG,KAAKkG,MAAMI,EAAQX,GAAcA,EAF5CM,EAAQM,MAAMZ,EAAYA,GAI1BM,EAAQxB,yBAA2B,UACnC,IAAI+B,EAAmB,iBACvBX,EAAQvF,SAAQ,SAAU4C,EAAK1C,EAAGC,GAC9B,eAAO+F,EAAkBtD,EAAIxG,WAEjC,IAAI+J,EAAqB,eAASD,GAC9BE,EAAsB,eAAUF,GAChCG,EAAgB,eAAsB3G,KAAKkG,MAAOP,EAAac,EAAsBzB,GAAmBhF,KAAKkG,MAAOP,EAAae,EAAuB1B,IACvJgB,GACD,eAAOW,EAAe,QAE1B,IAAIC,EAAcjB,EAAaX,EAC/Ba,EAAQvF,SAAQ,SAAU4C,EAAK1C,EAAGC,GAC9B,IAAIoG,EAAO3D,EAAIxG,OAAO,GAAK8J,EAAiB,GACxCM,IAAS5D,EAAIxG,OAAO,GAAK8J,EAAiB,IAC1CO,EAAW,eAAS7D,EAAIxG,QACxBsK,EAAY,eAAU9D,EAAIxG,QAE1BwG,EAAI+D,MAAMxB,MAAQ,GAAKvC,EAAI+D,MAAMvB,OAAS,GAC1CiB,EAAcO,UAAUhE,EAAI+D,MAAOnB,EAAQA,EAAQ5C,EAAI+D,MAAMxB,MAAQ,EAAIK,EAAQ5C,EAAI+D,MAAMvB,OAAS,EAAII,EAAQe,EAAOD,EAAaE,EAAOF,EAAaG,EAAWH,EAAaI,EAAYJ,MAGpM,IAAIO,EAAgB,eAAWhJ,GA6G/B,OA5GAyH,EAAczC,eAAe7C,SAAQ,SAAUC,EAAUC,EAAGC,GAqBxD,IAAIE,EAASJ,EAASI,OAClBW,EAASf,EAASe,OAClB8F,EAAKzG,EAAO,GAAG,GAAI0G,EAAK1G,EAAO,GAAG,GAClC2G,EAAK3G,EAAO,GAAG,GAAI4G,EAAK5G,EAAO,GAAG,GAClC6G,EAAK7G,EAAO,GAAG,GAAI8G,EAAK9G,EAAO,GAAG,GAElC+G,EAAKrB,GAAY/E,EAAO,GAAG,GAAK6F,EAAc,IAAMrC,GACpD6C,EAAKtB,IAAa/E,EAAO,GAAG,GAAK6F,EAAc,IAAMrC,GACrDxB,EAAK+C,GAAY/E,EAAO,GAAG,GAAK6F,EAAc,IAAMrC,GACpDvB,EAAK8C,IAAa/E,EAAO,GAAG,GAAK6F,EAAc,IAAMrC,GACrDtB,EAAK6C,GAAY/E,EAAO,GAAG,GAAK6F,EAAc,IAAMrC,GACpDrB,EAAK4C,IAAa/E,EAAO,GAAG,GAAK6F,EAAc,IAAMrC,GAIrD8C,EAAwBR,EACxBS,EAAwBR,EAC5BD,EAAK,EACLC,EAAK,EACLC,GAAMM,EACNL,GAAMM,EACNL,GAAMI,EACNH,GAAMI,EACN,IAAIC,EAAkB,CAClB,CAACR,EAAIC,EAAI,EAAG,EAAGjE,EAAKoE,GACpB,CAACF,EAAIC,EAAI,EAAG,EAAGjE,EAAKkE,GACpB,CAAC,EAAG,EAAGJ,EAAIC,EAAIhE,EAAKoE,GACpB,CAAC,EAAG,EAAGH,EAAIC,EAAIhE,EAAKkE,IAEpBI,EAAc,eAAkBD,GACpC,GAAKC,EAAL,CAKA,GAFA9B,EAAQnC,OACRmC,EAAQvC,YACJW,MAAgC2B,EAAiB,CAEjDC,EAAQtC,OAAOL,EAAIC,GAKnB,IAHA,IAAIyE,EAAQ,EACRC,EAAKP,EAAKpE,EACV4E,EAAKP,EAAKpE,EACL4E,EAAO,EAAGA,EAAOH,EAAOG,IAE7BlC,EAAQrC,OAAON,EAAK+C,GAAa8B,EAAO,GAAKF,EAAMD,GAAQzE,EAAK8C,EAAY8B,EAAOD,GAAOF,EAAQ,KAE9FG,GAAQH,EAAQ,GAChB/B,EAAQrC,OAAON,EAAK+C,GAAa8B,EAAO,GAAKF,EAAMD,GAAQzE,EAAK8C,GAAa8B,EAAO,GAAKD,GAAOF,EAAQ,KAIhH/B,EAAQrC,OAAOJ,EAAIC,QAGnBwC,EAAQtC,OAAOL,EAAIC,GACnB0C,EAAQrC,OAAO8D,EAAIC,GACnB1B,EAAQrC,OAAOJ,EAAIC,GAEvBwC,EAAQlC,OACRkC,EAAQmC,UAAUL,EAAY,GAAIA,EAAY,GAAIA,EAAY,GAAIA,EAAY,GAAIL,EAAIC,GACtF1B,EAAQoC,UAAU7B,EAAiB,GAAKoB,EAAuBpB,EAAiB,GAAKqB,GACrF5B,EAAQM,MAAMvB,EAAmBW,GAAaX,EAAmBW,GACjEM,EAAQiB,UAAUP,EAAcP,OAAQ,EAAG,GAC3CH,EAAQhC,cAER8B,IACAE,EAAQnC,OACRmC,EAAQxB,yBAA2B,cACnCwB,EAAQqC,YAAc,QACtBrC,EAAQsC,UAAY,EACpB3C,EAAczC,eAAe7C,SAAQ,SAAUC,EAAUC,EAAGC,GACxD,IAAIa,EAASf,EAASe,OAClBoG,GAAMpG,EAAO,GAAG,GAAK6F,EAAc,IAAMrC,EACzC6C,IAAOrG,EAAO,GAAG,GAAK6F,EAAc,IAAMrC,EAC1CxB,GAAMhC,EAAO,GAAG,GAAK6F,EAAc,IAAMrC,EACzCvB,IAAOjC,EAAO,GAAG,GAAK6F,EAAc,IAAMrC,EAC1CtB,GAAMlC,EAAO,GAAG,GAAK6F,EAAc,IAAMrC,EACzCrB,IAAOnC,EAAO,GAAG,GAAK6F,EAAc,IAAMrC,EAC9CmB,EAAQvC,YACRuC,EAAQtC,OAAOL,EAAIC,GACnB0C,EAAQrC,OAAO8D,EAAIC,GACnB1B,EAAQrC,OAAOJ,EAAIC,GACnBwC,EAAQpC,YACRoC,EAAQuC,YAEZvC,EAAQhC,WAELgC,EAAQG,O,gBEtSfrL,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GAoCxC,EAA4B,SAAUK,GAiBtC,SAASuM,EAAWxK,EAAYyK,EAAgBxK,EAAYyK,EAAgBC,EAAWC,EAAkBlD,EAAYG,EAAQgD,EAAiBC,EAAoBhD,EAAiBC,GAC/K,IAAIgD,EAAQ9M,EAAOR,KAAKI,KAAM8M,EAAWK,EAAA,KAAUC,KAAM,CAAE7M,cAAe2J,KAAsBlK,KAKhGkN,EAAMG,kBAAmC7M,IAApByJ,GAAgCA,EAKrDiD,EAAMI,YAAczD,EAKpBqD,EAAMK,QAAUvD,EAKhBkD,EAAMM,QAAU,KAKhBN,EAAMO,gBAAkBb,EAKxBM,EAAMQ,gBAAkBb,EAKxBK,EAAMS,kBAAoBZ,GAAsCD,EAKhEI,EAAMU,aAAe,GAKrBV,EAAMW,qBAAuB,KAK7BX,EAAMY,SAAW,EACjB,IAAIzL,EAAewK,EAAekB,mBAAmBb,EAAMS,mBACvDK,EAAkBd,EAAMQ,gBAAgBpK,YACxChB,EAAkB4K,EAAMO,gBAAgBnK,YACxC2K,EAAsBD,EACpB,eAAgB3L,EAAc2L,GAC9B3L,EACN,GAAqC,IAAjC,eAAQ4L,GAIR,OADAf,EAAMgB,MAAQf,EAAA,KAAUgB,MACjBjB,EAEX,IAAIkB,EAAmBjM,EAAWmB,YAC9B8K,IAKI9L,EAJCA,EAIiB,eAAgBA,EAAiB8L,GAHjCA,GAM1B,IAAIpF,EAAmB6D,EAAewB,cAAcnB,EAAMS,kBAAkB,IACxEzE,EAAmBM,EAAgCrH,EAAYC,EAAY6L,EAAqBjF,GACpG,IAAK9C,SAASgD,IAAqBA,GAAoB,EAInD,OADAgE,EAAMgB,MAAQf,EAAA,KAAUgB,MACjBjB,EAEX,IAAIoB,OAAgD9N,IAAvByM,EAAmCA,EAAqB,OAMrF,GADAC,EAAMqB,eAAiB,IAAI,EAAcpM,EAAYC,EAAY6L,EAAqB3L,EAAiB4G,EAAmBoF,EAAwBtF,GAC/F,IAA/CkE,EAAMqB,eAAelH,eAAegD,OAGpC,OADA6C,EAAMgB,MAAQf,EAAA,KAAUgB,MACjBjB,EAEXA,EAAMY,SAAWlB,EAAe4B,kBAAkBtF,GAClD,IAAII,EAAe4D,EAAMqB,eAAepH,wBAUxC,GATI7E,IACIH,EAAWkB,YACXiG,EAAa,GAAK,eAAMA,EAAa,GAAIhH,EAAgB,GAAIA,EAAgB,IAC7EgH,EAAa,GAAK,eAAMA,EAAa,GAAIhH,EAAgB,GAAIA,EAAgB,KAG7EgH,EAAe,eAAgBA,EAAchH,IAGhD,eAAQgH,GAGR,CAED,IADA,IAAImF,EAAc7B,EAAe8B,0BAA0BpF,EAAc4D,EAAMY,UACtEa,EAAOF,EAAY1J,KAAM4J,GAAQF,EAAYzJ,KAAM2J,IACxD,IAAK,IAAIC,EAAOH,EAAYI,KAAMD,GAAQH,EAAYK,KAAMF,IAAQ,CAChE,IAAIG,EAAO/B,EAAgBE,EAAMY,SAAUa,EAAMC,EAAM/E,GACnDkF,GACA7B,EAAMU,aAAarI,KAAKwJ,GAIF,IAA9B7B,EAAMU,aAAavD,SACnB6C,EAAMgB,MAAQf,EAAA,KAAUgB,YAb5BjB,EAAMgB,MAAQf,EAAA,KAAUgB,MAgB5B,OAAOjB,EAwFX,OAhOAjO,EAAU0N,EAAYvM,GA8ItBuM,EAAWjN,UAAUsP,SAAW,WAC5B,OAAOhP,KAAKwN,SAKhBb,EAAWjN,UAAUuP,WAAa,WAC9B,IAAIlF,EAAU,GAUd,GATA/J,KAAK4N,aAAapJ,QAAQ,SAAUuK,EAAMrK,EAAGC,GACrCoK,GAAQA,EAAKG,YAAc/B,EAAA,KAAUgC,QACrCpF,EAAQxE,KAAK,CACT3E,OAAQZ,KAAKyN,gBAAgBM,mBAAmBgB,EAAKjC,WACrD3B,MAAO4D,EAAKC,cAGtB/J,KAAKjF,OACPA,KAAK4N,aAAavD,OAAS,EACJ,IAAnBN,EAAQM,OACRrK,KAAKkO,MAAQf,EAAA,KAAUiC,UAEtB,CACD,IAAIC,EAAIrP,KAAK2N,kBAAkB,GAC3B2B,EAAOtP,KAAK0N,gBAAgB6B,YAAYF,GACxC1F,EAAwB,kBAAT2F,EAAoBA,EAAOA,EAAK,GAC/C1F,EAAyB,kBAAT0F,EAAoBA,EAAOA,EAAK,GAChDtG,EAAmBhJ,KAAK0N,gBAAgBW,cAAcgB,GACtDnG,EAAmBlJ,KAAKyN,gBAAgBY,cAAcrO,KAAK8N,UAC3DzL,EAAerC,KAAK0N,gBAAgBK,mBAAmB/N,KAAK2N,mBAChE3N,KAAKwN,QAAU9D,EAAkBC,EAAOC,EAAQ5J,KAAKsN,YAAapE,EAAkBlJ,KAAKyN,gBAAgBnK,YAAa0F,EAAkB3G,EAAcrC,KAAKuO,eAAgBxE,EAAS/J,KAAKuN,QAASvN,KAAKqN,aAAcrN,KAAKO,aAC1NP,KAAKkO,MAAQf,EAAA,KAAUgC,OAE3BnP,KAAKwP,WAKT7C,EAAWjN,UAAU+P,KAAO,WACxB,GAAIzP,KAAKkO,OAASf,EAAA,KAAUC,KAAM,CAC9BpN,KAAKkO,MAAQf,EAAA,KAAUuC,QACvB1P,KAAKwP,UACL,IAAIG,EAAe,EACnB3P,KAAK6N,qBAAuB,GAC5B7N,KAAK4N,aAAapJ,QAAQ,SAAUuK,EAAMrK,EAAGC,GACzC,IAAIuJ,EAAQa,EAAKG,WACjB,GAAIhB,GAASf,EAAA,KAAUC,MAAQc,GAASf,EAAA,KAAUuC,QAAS,CACvDC,IACA,IAAIC,EAAoB,eAAOb,EAAMc,EAAA,KAAUC,QAAQ,SAAUC,GAC7D,IAAI7B,EAAQa,EAAKG,WACbhB,GAASf,EAAA,KAAUgC,QACnBjB,GAASf,EAAA,KAAUiC,OACnBlB,GAASf,EAAA,KAAUgB,QACnB,eAAcyB,GACdD,IACqB,IAAjBA,IACA3P,KAAKgQ,mBACLhQ,KAAKiP,iBAGdjP,MACHA,KAAK6N,qBAAqBtI,KAAKqK,KAErC3K,KAAKjF,OACc,IAAjB2P,EACAM,WAAWjQ,KAAKiP,WAAWhK,KAAKjF,MAAO,GAGvCA,KAAK4N,aAAapJ,SAAQ,SAAUuK,EAAMrK,EAAGC,GACzC,IAAIuJ,EAAQa,EAAKG,WACbhB,GAASf,EAAA,KAAUC,MACnB2B,EAAKU,YASzB9C,EAAWjN,UAAUsQ,iBAAmB,WACpChQ,KAAK6N,qBAAqBrJ,QAAQ,QAClCxE,KAAK6N,qBAAuB,MAEzBlB,EAjOoB,CAkO7BuD,EAAA,MACa,U,kCCvQf,4NAGIjR,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GA+CxCoQ,EAAmC,SAAU/P,GAO7C,SAAS+P,EAAkBC,EAAMC,EAAaC,GAC1C,IAAIpD,EAAQ9M,EAAOR,KAAKI,KAAMoQ,IAASpQ,KAavC,OAPAkN,EAAMqD,QAAUF,EAMhBnD,EAAMsD,SAAWF,EACVpD,EAEX,OAtBAjO,EAAUkR,EAAmB/P,GAsBtB+P,EAvB2B,CAwBpC,QA+GEM,EAA8B,SAAUrQ,GAKxC,SAASqQ,EAAapQ,GAClB,IAAI6M,EAAQlN,KACRM,EAAUD,GAAe,GAC7B6M,EAAQ9M,EAAOR,KAAKI,KAAM,CACtBiB,aAAcX,EAAQW,aACtBV,aAAa,EACbG,gBAAYF,EACZ0N,MAAO,OAAYwC,MACnB/O,WAAyBnB,IAAlBF,EAAQqB,OAAsBrB,EAAQqB,SAC3C3B,KAINkN,EAAMyD,GAINzD,EAAM0D,KAIN1D,EAAM2D,GAKN3D,EAAM4D,QAAU,OAKhB5D,EAAM6D,QAAUzQ,EAAQ0Q,OAKxB9D,EAAM+D,eAAiCzQ,IAArBF,EAAQ4Q,UAAgC5Q,EAAQ4Q,SAKlEhE,EAAMiE,KAAO7Q,EAAQmB,SACEjB,IAAnBF,EAAQ8Q,OACRlE,EAAM4D,QAAUxQ,EAAQ8Q,YAEJ5Q,IAAf0M,EAAMiE,OACX,eAAOjE,EAAM6D,QAAS,GAEtB7D,EAAM4D,QAAU,eAAI5D,EAAMiE,KAC6BjE,EAAa,UAMxEA,EAAMmE,eACmB7Q,IAArBF,EAAQgR,SAAyBhR,EAAQgR,SAAW,OACxD,IA2CIC,EAAYf,EA3CZgB,OAA8ChR,IAA5BF,EAAQkR,iBAAgClR,EAAQkR,gBA8DtE,OAzDAtE,EAAMuE,eAAiBD,EAAkB,IAAI,OAAU,KAKvDtE,EAAMwE,oBAAsB,IAAI,OAKhCxE,EAAMyE,qBAAuB,EAK7BzE,EAAM0E,sBAAwB,GAM9B1E,EAAM2E,SAAW,GAMjB3E,EAAM4E,UAAY,GAKlB5E,EAAM6E,mBAAqB,GAK3B7E,EAAM8E,oBAAsB,KAExBxS,MAAMyS,QAAQ3R,EAAQkQ,UACtBA,EACqElQ,EAAgB,SAEhFA,EAAQkQ,WACbe,EAC0EjR,EAAgB,SAC1FkQ,EAAWe,EAAWW,YAErBV,QAAkChR,IAAf+Q,IACpBA,EAAa,IAAI,OAAWf,SAEfhQ,IAAbgQ,GACAtD,EAAMiF,oBAAoB3B,QAEXhQ,IAAf+Q,GACArE,EAAMkF,wBAAwBb,GAE3BrE,EA6sBX,OAx0BAjO,EAAUwR,EAAcrQ,GAyIxBqQ,EAAa/Q,UAAU2S,WAAa,SAAU9B,GAC1CvQ,KAAKsS,mBAAmB/B,GACxBvQ,KAAKwP,WAOTiB,EAAa/Q,UAAU4S,mBAAqB,SAAU/B,GAClD,IAAIgC,EAAa,eAAOhC,GACxB,GAAKvQ,KAAKwS,YAAYD,EAAYhC,GAAlC,CAMAvQ,KAAKyS,mBAAmBF,EAAYhC,GACpC,IAAImC,EAAWnC,EAAQoC,cACvB,GAAID,EAAU,CACV,IAAI9R,EAAS8R,EAASpP,YAClBtD,KAAKyR,gBACLzR,KAAKyR,eAAemB,OAAOhS,EAAQ2P,QAIvCvQ,KAAK4R,sBAAsBW,GAAchC,EAE7CvQ,KAAK6S,cAAc,IAAI1C,EAAkB,OAAgB2C,WAAYvC,SAhB7DvQ,KAAKgS,qBACLhS,KAAKgS,oBAAoBe,OAAOxC,IAsB5CE,EAAa/Q,UAAU+S,mBAAqB,SAAUF,EAAYhC,GAC9DvQ,KAAK+R,mBAAmBQ,GAAc,CAClC,eAAOhC,EAAS,OAAUT,OAAQ9P,KAAKgT,qBAAsBhT,MAC7D,eAAOuQ,EAAS,OAAgB0C,eAAgBjT,KAAKgT,qBAAsBhT,QAUnFyQ,EAAa/Q,UAAU8S,YAAc,SAAUD,EAAYhC,GACvD,IAAI2C,GAAQ,EACRC,EAAK5C,EAAQ6C,QAajB,YAZW5S,IAAP2S,IACMA,EAAGE,aAAcrT,KAAK6R,SAIxBqB,GAAQ,EAHRlT,KAAK6R,SAASsB,EAAGE,YAAc9C,GAMnC2C,IACA,iBAASX,KAAcvS,KAAK8R,WAAY,IACxC9R,KAAK8R,UAAUS,GAAchC,GAE1B2C,GAOXzC,EAAa/Q,UAAU4T,YAAc,SAAU9C,GAC3CxQ,KAAKmS,oBAAoB3B,GACzBxQ,KAAKwP,WAOTiB,EAAa/Q,UAAUyS,oBAAsB,SAAU3B,GAInD,IAHA,IAAI+C,EAAU,GACVC,EAAc,GACdC,EAAmB,GACd/O,EAAI,EAAGgP,EAAWlD,EAASnG,OAAQ3F,EAAIgP,EAAUhP,IAAK,CAC3D,IAAI6L,EAAUC,EAAS9L,GACnB6N,EAAa,eAAOhC,GACpBvQ,KAAKwS,YAAYD,EAAYhC,IAC7BiD,EAAYjO,KAAKgL,GAGhB7L,EAAI,EAAb,IAAK,IAAWiP,EAAWH,EAAYnJ,OAAQ3F,EAAIiP,EAAUjP,IAAK,CAC1D6L,EAAUiD,EAAY9O,GACtB6N,EAAa,eAAOhC,GACxBvQ,KAAKyS,mBAAmBF,EAAYhC,GACpC,IAAImC,EAAWnC,EAAQoC,cACvB,GAAID,EAAU,CACV,IAAI9R,EAAS8R,EAASpP,YACtBiQ,EAAQhO,KAAK3E,GACb6S,EAAiBlO,KAAKgL,QAGtBvQ,KAAK4R,sBAAsBW,GAAchC,EAMjD,GAHIvQ,KAAKyR,gBACLzR,KAAKyR,eAAehC,KAAK8D,EAASE,GAElCzT,KAAK4T,YAAY,OAAgBd,YAC5B,CAAIpO,EAAI,EAAb,IAAK,IAAWmP,EAAWL,EAAYnJ,OAAQ3F,EAAImP,EAAUnP,IACzD1E,KAAK6S,cAAc,IAAI1C,EAAkB,OAAgB2C,WAAYU,EAAY9O,OAQ7F+L,EAAa/Q,UAAU0S,wBAA0B,SAAUb,GACvD,IAAIuC,GAAsB,EAC1B9T,KAAK+T,iBAAiB,OAAgBjB,YAItC,SAAUkB,GACDF,IACDA,GAAsB,EACtBvC,EAAWhM,KAAKyO,EAAIzD,SACpBuD,GAAsB,MAG9B9T,KAAK+T,iBAAiB,OAAgBE,eAItC,SAAUD,GACDF,IACDA,GAAsB,EACtBvC,EAAWwB,OAAOiB,EAAIzD,SACtBuD,GAAsB,MAG9BvC,EAAWwC,iBAAiB,OAAoBG,IAIhD,SAAUF,GACDF,IACDA,GAAsB,EACtB9T,KAAKqS,WACqD2B,EAAW,SACrEF,GAAsB,IAE5B7O,KAAKjF,OACPuR,EAAWwC,iBAAiB,OAAoBI,OAIhD,SAAUH,GACDF,IACDA,GAAsB,EACtB9T,KAAKoU,cACqDJ,EAAW,SACrEF,GAAsB,IAE5B7O,KAAKjF,OACPA,KAAKgS,oBAAsBT,GAO/Bd,EAAa/Q,UAAU2U,MAAQ,SAAUC,GACrC,GAAIA,EAAU,CACV,IAAK,IAAIC,KAAavU,KAAK+R,mBAAoB,CAC3C,IAAIyC,EAAOxU,KAAK+R,mBAAmBwC,GACnCC,EAAKhQ,QAAQ,QAEZxE,KAAKgS,sBACNhS,KAAK+R,mBAAqB,GAC1B/R,KAAK6R,SAAW,GAChB7R,KAAK8R,UAAY,SAIrB,GAAI9R,KAAKyR,eAAgB,CACrB,IAAIgD,EAAwB,SAAUlE,GAClCvQ,KAAK0U,sBAAsBnE,IAC7BtL,KAAKjF,MAEP,IAAK,IAAImT,KADTnT,KAAKyR,eAAejN,QAAQiQ,GACbzU,KAAK4R,sBAChB5R,KAAK0U,sBAAsB1U,KAAK4R,sBAAsBuB,IAI9DnT,KAAKgS,qBACLhS,KAAKgS,oBAAoBqC,QAEzBrU,KAAKyR,gBACLzR,KAAKyR,eAAe4C,QAExBrU,KAAK4R,sBAAwB,GAC7B,IAAI+C,EAAa,IAAIxE,EAAkB,OAAgByE,OACvD5U,KAAK6S,cAAc8B,GACnB3U,KAAKwP,WAcTiB,EAAa/Q,UAAUmV,eAAiB,SAAUC,GAC9C,GAAI9U,KAAKyR,eACL,OAAOzR,KAAKyR,eAAejN,QAAQsQ,GAE9B9U,KAAKgS,qBACVhS,KAAKgS,oBAAoBxN,QAAQsQ,IAezCrE,EAAa/Q,UAAUqV,iCAAmC,SAAUC,EAAYF,GAC5E,IAAIlU,EAAS,CAACoU,EAAW,GAAIA,EAAW,GAAIA,EAAW,GAAIA,EAAW,IACtE,OAAOhV,KAAKiV,uBAAuBrU,GAAQ,SAAU2P,GACjD,IAAImC,EAAWnC,EAAQoC,cACvB,OAAID,EAASwC,qBAAqBF,GACvBF,EAASvE,QAGhB,MAuBZE,EAAa/Q,UAAUuV,uBAAyB,SAAUrU,EAAQkU,GAC9D,GAAI9U,KAAKyR,eACL,OAAOzR,KAAKyR,eAAe0D,gBAAgBvU,EAAQkU,GAE9C9U,KAAKgS,qBACVhS,KAAKgS,oBAAoBxN,QAAQsQ,IAkBzCrE,EAAa/Q,UAAU0V,iCAAmC,SAAUxU,EAAQkU,GACxE,OAAO9U,KAAKiV,uBAAuBrU,GAKnC,SAAU2P,GACN,IAAImC,EAAWnC,EAAQoC,cACvB,GAAID,EAAS2C,iBAAiBzU,GAAS,CACnC,IAAI0U,EAASR,EAASvE,GACtB,GAAI+E,EACA,OAAOA,OAYvB7E,EAAa/Q,UAAU6V,sBAAwB,WAC3C,OAAOvV,KAAKgS,qBAQhBvB,EAAa/Q,UAAU8V,YAAc,WACjC,IAAIhF,EAUJ,OATIxQ,KAAKgS,oBACLxB,EAAWxQ,KAAKgS,oBAAoBE,WAAWuD,MAAM,GAEhDzV,KAAKyR,iBACVjB,EAAWxQ,KAAKyR,eAAeiE,SAC1B,eAAQ1V,KAAK4R,wBACd,eAAOpB,EAAU,eAAUxQ,KAAK4R,yBAG+B,GAQ3EnB,EAAa/Q,UAAUiW,wBAA0B,SAAUX,GACvD,IAAIxE,EAAW,GAIf,OAHAxQ,KAAK+U,iCAAiCC,GAAY,SAAUzE,GACxDC,EAASjL,KAAKgL,MAEXC,GAcXC,EAAa/Q,UAAUkW,oBAAsB,SAAUhV,GACnD,OAAIZ,KAAKyR,eACEzR,KAAKyR,eAAeoE,YAAYjV,GAElCZ,KAAKgS,oBACHhS,KAAKgS,oBAAoBE,WAAWuD,MAAM,GAG1C,IAefhF,EAAa/Q,UAAUoW,8BAAgC,SAAUd,EAAYe,GAQzE,IAAIC,EAAIhB,EAAW,GACfiB,EAAIjB,EAAW,GACfkB,EAAiB,KACjBC,EAAe,CAACC,IAAKA,KACrBC,EAAqB9R,IACrB3D,EAAS,EAAE2D,KAAWA,IAAUA,IAAUA,KAC1C+R,EAASP,GAA0B,OAwBvC,OAvBA/V,KAAKyR,eAAe0D,gBAAgBvU,GAIpC,SAAU2P,GACN,GAAI+F,EAAO/F,GAAU,CACjB,IAAImC,EAAWnC,EAAQoC,cACnB4D,EAA6BF,EAEjC,GADAA,EAAqB3D,EAAS8D,eAAeR,EAAGC,EAAGE,EAAcE,GAC7DA,EAAqBE,EAA4B,CACjDL,EAAiB3F,EAKjB,IAAIkG,EAAcvS,KAAKwS,KAAKL,GAC5BzV,EAAO,GAAKoV,EAAIS,EAChB7V,EAAO,GAAKqV,EAAIQ,EAChB7V,EAAO,GAAKoV,EAAIS,EAChB7V,EAAO,GAAKqV,EAAIQ,OAIrBP,GAYXzF,EAAa/Q,UAAU4D,UAAY,SAAUqT,GACzC,OAAO3W,KAAKyR,eAAenO,UAAUqT,IAWzClG,EAAa/Q,UAAUkX,eAAiB,SAAUzD,GAC9C,IAAI5C,EAAUvQ,KAAK6R,SAASsB,EAAGE,YAC/B,YAAmB7S,IAAZ+P,EAAwBA,EAAU,MAQ7CE,EAAa/Q,UAAUmX,gBAAkB,SAAUC,GAC/C,IAAIvG,EAAUvQ,KAAK8R,UAAUgF,GAC7B,YAAmBtW,IAAZ+P,EAAwBA,EAAU,MAQ7CE,EAAa/Q,UAAUqX,UAAY,WAC/B,OAAO/W,KAAK+Q,SAKhBN,EAAa/Q,UAAUsX,YAAc,WACjC,OAAOhX,KAAKiR,WAQhBR,EAAa/Q,UAAUuX,OAAS,WAC5B,OAAOjX,KAAKmR,MAMhBV,EAAa/Q,UAAUsT,qBAAuB,SAAUkE,GACpD,IAAI3G,EAAoE2G,EAAY,OAChF3E,EAAa,eAAOhC,GACpBmC,EAAWnC,EAAQoC,cACvB,GAAKD,EAQA,CACD,IAAI9R,EAAS8R,EAASpP,YAClBiP,KAAcvS,KAAK4R,8BACZ5R,KAAK4R,sBAAsBW,GAC9BvS,KAAKyR,gBACLzR,KAAKyR,eAAemB,OAAOhS,EAAQ2P,IAInCvQ,KAAKyR,gBACLzR,KAAKyR,eAAe0F,OAAOvW,EAAQ2P,QAjBrCgC,KAAcvS,KAAK4R,wBACjB5R,KAAKyR,gBACLzR,KAAKyR,eAAesB,OAAOxC,GAE/BvQ,KAAK4R,sBAAsBW,GAAchC,GAiBjD,IAAI4C,EAAK5C,EAAQ6C,QACjB,QAAW5S,IAAP2S,EAAkB,CAClB,IAAIiE,EAAMjE,EAAGE,WACTrT,KAAK6R,SAASuF,KAAS7G,IACvBvQ,KAAKqX,mBAAmB9G,GACxBvQ,KAAK6R,SAASuF,GAAO7G,QAIzBvQ,KAAKqX,mBAAmB9G,GACxBvQ,KAAK8R,UAAUS,GAAchC,EAEjCvQ,KAAKwP,UACLxP,KAAK6S,cAAc,IAAI1C,EAAkB,OAAgBmH,cAAe/G,KAQ5EE,EAAa/Q,UAAU6X,WAAa,SAAUhH,GAC1C,IAAI4C,EAAK5C,EAAQ6C,QACjB,YAAW5S,IAAP2S,EACOA,KAAMnT,KAAK6R,SAGX,eAAOtB,KAAYvQ,KAAK8R,WAMvCrB,EAAa/Q,UAAU8X,QAAU,WAC7B,OAAIxX,KAAKyR,eACGzR,KAAKyR,eAAe+F,WAAa,eAAQxX,KAAK4R,wBAEtD5R,KAAKgS,qBAC2C,IAAzChS,KAAKgS,oBAAoByF,aASxChH,EAAa/Q,UAAUgY,aAAe,SAAU9W,EAAQ+W,EAAYjX,GA2BhE,IA1BA,IAAIkX,EAAqB5X,KAAK0R,oBAC1BmG,EAAgB7X,KAAKqR,UAAUzQ,EAAQ+W,EAAYjX,GACnDoX,EAAU,SAAUpT,EAAGqT,GACvB,IAAIC,EAAeH,EAAcnT,GAC7BuT,EAAgBL,EAAmBzC,gBAAgB6C,GAKvD,SAAUE,GACN,OAAO,eAAeA,EAAOtX,OAAQoX,MAEpCC,MACCE,EAAOxG,qBACTwG,EAAOtF,cAAc,IAAI1C,EAAkB,OAAgBiI,oBAC3DD,EAAOrH,QAAQlR,KAAKuY,EAAQH,EAAcL,EAAYjX,EAAY,SAAU8P,KACtExQ,KAAK2R,qBACP3R,KAAK6S,cAAc,IAAI1C,EAAkB,OAAgBkI,qBAAiB7X,EAAWgQ,KACvFvL,KAAKkT,GAAS,aACVnY,KAAK2R,qBACP3R,KAAK6S,cAAc,IAAI1C,EAAkB,OAAgBmI,qBAC3DrT,KAAKkT,IACPP,EAAmBhF,OAAOoF,EAAc,CAAEpX,OAAQoX,EAAavC,YAGnE0C,EAASnY,KACJ0E,EAAI,EAAGqT,EAAKF,EAAcxN,OAAQ3F,EAAIqT,IAAMrT,EACjDoT,EAAQpT,EAAGqT,GAEf/X,KAAKuY,UACDvY,KAAK8Q,QAAQzG,OAAS,IAAYrK,KAAK2R,qBAAuB,GAEtElB,EAAa/Q,UAAU8Y,QAAU,WAC7BxY,KAAKqU,OAAM,GACXrU,KAAK0R,oBAAoB2C,QACzBjU,EAAOV,UAAU8Y,QAAQ5Y,KAAKI,OAOlCyQ,EAAa/Q,UAAU+Y,mBAAqB,SAAU7X,GAClD,IACI8X,EADAd,EAAqB5X,KAAK0R,oBAE9BkG,EAAmBzC,gBAAgBvU,GAAQ,SAAUsX,GACjD,GAAI,eAAOA,EAAOtX,OAAQA,GAEtB,OADA8X,EAAMR,GACC,KAGXQ,GACAd,EAAmB7E,OAAO2F,IAUlCjI,EAAa/Q,UAAU0U,cAAgB,SAAU7D,GAC7C,GAAKA,EAAL,CAGA,IAAIgC,EAAa,eAAOhC,GACpBgC,KAAcvS,KAAK4R,6BACZ5R,KAAK4R,sBAAsBW,GAG9BvS,KAAKyR,gBACLzR,KAAKyR,eAAesB,OAAOxC,GAGnC,IAAI+E,EAAStV,KAAK0U,sBAAsBnE,GACpC+E,GACAtV,KAAKwP,YAUbiB,EAAa/Q,UAAUgV,sBAAwB,SAAUnE,GACrD,IAAIgC,EAAa,eAAOhC,GACpBoI,EAAoB3Y,KAAK+R,mBAAmBQ,GAChD,GAAKoG,EAAL,CAGAA,EAAkBnU,QAAQ,eACnBxE,KAAK+R,mBAAmBQ,GAC/B,IAAIY,EAAK5C,EAAQ6C,QAMjB,YALW5S,IAAP2S,UACOnT,KAAK6R,SAASsB,EAAGE,mBAErBrT,KAAK8R,UAAUS,GACtBvS,KAAK6S,cAAc,IAAI1C,EAAkB,OAAgB8D,cAAe1D,IACjEA,IASXE,EAAa/Q,UAAU2X,mBAAqB,SAAU9G,GAClD,IAAIqI,GAAU,EACd,IAAK,IAAIzF,KAAMnT,KAAK6R,SAChB,GAAI7R,KAAK6R,SAASsB,KAAQ5C,EAAS,QACxBvQ,KAAK6R,SAASsB,GACrByF,GAAU,EACV,MAGR,OAAOA,GAQXnI,EAAa/Q,UAAUmZ,UAAY,SAAUzH,GACzCpR,KAAK8Q,QAAUM,GAOnBX,EAAa/Q,UAAUoZ,OAAS,SAAUrX,GACtC,eAAOzB,KAAK+Q,QAAS,GACrB/Q,KAAKmR,KAAO1P,EACZzB,KAAK6Y,UAAU,eAAIpX,EAAKzB,KAAK+Q,WAE1BN,EAz0BsB,CA00B/B,QACa,U,oCCpgCf,wJAWO,SAASsI,EAAQC,GACpB,YAAiBxY,IAAbwY,EACO,OAGP,EAOD,SAASC,EAAKD,GACjB,YAAiBxY,IAAbwY,EACOA,OAGP,EAOD,SAASE,EAAcC,GAC1B,IAAIC,EAAS,EAAIlV,KAAKmV,GAAMF,EAC5B,OAAO,SAMGH,EAAUM,GAChB,OAAIA,EACON,OAEMxY,IAAbwY,GACAA,EAAW9U,KAAKqV,MAAMP,EAAWI,EAAQ,IAAOA,EACzCJ,QAGP,GAQL,SAASQ,EAAiBC,GAC7B,IAAIC,EAAYD,GAAiB,eAAU,GAC3C,OAAO,SAMGT,EAAUM,GAChB,OAAIA,EACON,OAEMxY,IAAbwY,EACI9U,KAAKwC,IAAIsS,IAAaU,EACf,EAGAV,OAIX,K,gKCjFR/Z,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GAmDxC,EAAyB,SAAUK,GAKnC,SAASuZ,EAAQrZ,GACb,IAAI4M,EAAQ9M,EAAOR,KAAKI,KAAM,CAC1BiB,aAAcX,EAAQW,aACtBC,UAAWZ,EAAQY,UACnBE,OAAQd,EAAQc,OAChBV,WAAYJ,EAAQI,WACpBwN,MAAO5N,EAAQ4N,MACfvN,SAAUL,EAAQK,SAClBY,eAAgBjB,EAAQiB,eACxBI,MAAOrB,EAAQqB,MACfC,WAAYtB,EAAQsB,WACpBrB,YAAaD,EAAQC,YACrBwC,IAAKzC,EAAQyC,IACblB,wBAAyBvB,EAAQuB,wBACjCC,WAAYxB,EAAQwB,cAClB9B,KA+BN,OA1BAkN,EAAM0M,yBACF1M,EAAM1L,kBAAoBmY,EAAQja,UAAU8B,gBAKhD0L,EAAM5L,iBAAmBhB,EAAQgB,iBAC7BhB,EAAQkB,kBACR0L,EAAM1L,gBAAkBlB,EAAQkB,iBAMpC0L,EAAMxL,KAAO,KACTpB,EAAQoB,KACRwL,EAAM2M,QAAQvZ,EAAQoB,MAEjBpB,EAAQmB,KACbyL,EAAM4L,OAAOxY,EAAQmB,KAMzByL,EAAM4M,iBAAmB,GAClB5M,EAiIX,OAnLAjO,EAAU0a,EAASvZ,GAyDnBuZ,EAAQja,UAAUqa,oBAAsB,WACpC,OAAO/Z,KAAKsB,kBAOhBqY,EAAQja,UAAUsa,mBAAqB,WACnC,OAAO3a,OAAO4a,eAAeja,MAAMwB,kBAAoBxB,KAAKwB,gBACtDxB,KAAKwB,gBAAgByD,KAAKjF,MAC1BA,KAAKwB,iBASfmY,EAAQja,UAAUwa,QAAU,WACxB,OAAOla,KAAK0B,MAOhBiY,EAAQja,UAAUya,iBAAmB,SAAUjD,GAC3C,IAGI9G,EAHArB,EAAoDmI,EAAY,OAChEJ,EAAM,eAAO/H,GACbqL,EAAYrL,EAAKG,WAEjBkL,GAAajN,EAAA,KAAUuC,SACvB1P,KAAK8Z,iBAAiBhD,IAAO,EAC7B1G,EAAOiK,EAAA,KAAcC,eAEhBxD,KAAO9W,KAAK8Z,0BACV9Z,KAAK8Z,iBAAiBhD,GAC7B1G,EACIgK,GAAajN,EAAA,KAAUiC,MACjBiL,EAAA,KAAcE,cACdH,GAAajN,EAAA,KAAUgC,OACnBkL,EAAA,KAAcG,iBACdha,QAENA,GAAR4P,GACApQ,KAAK6S,cAAc,IAAI,OAAgBzC,EAAMrB,KAQrD4K,EAAQja,UAAU+a,oBAAsB,SAAUnZ,GAC9CtB,KAAK0a,UAAUrG,QACfrU,KAAKsB,iBAAmBA,EACxBtB,KAAKwP,WAQTmK,EAAQja,UAAUib,mBAAqB,SAAUnZ,EAAiBuB,GAC9D/C,KAAKwB,gBAAkBA,EACvBxB,KAAK0a,UAAUE,qBACI,qBAAR7X,EACP/C,KAAK6a,OAAO9X,GAGZ/C,KAAKwP,WAQbmK,EAAQja,UAAUoZ,OAAS,SAAUrX,GACjC,IAAIC,EAAO,eAAUD,GACrBzB,KAAK0B,KAAOA,EACZ1B,KAAK6Z,QAAQnY,IAOjBiY,EAAQja,UAAUma,QAAU,SAAUnY,GAClC1B,KAAK0B,KAAOA,EACZ,IAAIqB,EAAMrB,EAAKoZ,KAAK,MAChB9a,KAAK4Z,yBACL5Z,KAAK2a,mBAAmB,eAAoBjZ,EAAM1B,KAAKW,UAAWoC,GAGlE/C,KAAK6a,OAAO9X,IASpB4W,EAAQja,UAAU8B,gBAAkB,SAAUsL,EAAWjD,EAAYnJ,KASrEiZ,EAAQja,UAAUqb,QAAU,SAAU1L,EAAG2G,EAAGC,GACxC,IAAI+E,EAAe,eAAU3L,EAAG2G,EAAGC,GAC/BjW,KAAK0a,UAAUO,YAAYD,IAC3Bhb,KAAK0a,UAAUQ,IAAIF,IAGpBrB,EApLiB,CAqL1B,QACa,I,oCCzOX,EAAwC,WACxC,IAAIza,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GAiFxC,EAA2B,SAAUK,GAKrC,SAAS+a,EAAU7a,GACf,IAAI4M,EAAQlN,KACRO,OAAyCC,IAA3BF,EAAQG,gBAA+BH,EAAQG,eAyDjE,YAxD4BD,IAAxBF,EAAQC,cACRA,EAAcD,EAAQC,aAE1B2M,EAAQ9M,EAAOR,KAAKI,KAAM,CACtBiB,aAAcX,EAAQW,aACtBC,UAAWZ,EAAQY,UACnBE,OAAQd,EAAQc,OAChBV,WAAYJ,EAAQI,WACpBwN,MAAO5N,EAAQ4N,MACfvN,SAAUL,EAAQK,SAClBW,iBAAkBhB,EAAQgB,iBACpBhB,EAAQgB,iBACR8Z,EACN7Z,eAAgBjB,EAAQiB,eACxBC,gBAAiBlB,EAAQkB,gBACzBC,IAAKnB,EAAQmB,IACbC,KAAMpB,EAAQoB,KACdC,MAAOrB,EAAQqB,MACfC,WAAYtB,EAAQsB,WACpBrB,YAAaA,EACbwC,IAAKzC,EAAQyC,IACblB,wBAAyBvB,EAAQuB,wBACjCC,WAAYxB,EAAQwB,cAClB9B,KAKNkN,EAAM/L,iBACsBX,IAAxBF,EAAQa,YAA4Bb,EAAQa,YAAc,KAK9D+L,EAAMmO,eACoB7a,IAAtBF,EAAQ+a,UAA0B/a,EAAQ+a,UAAYC,EAAA,KAK1DpO,EAAMqO,uBAAyB,GAK/BrO,EAAMsO,sBAAwB,GAK9BtO,EAAMuO,4BAA8Bnb,EAAQe,2BAK5C6L,EAAMwO,0BAA2B,EAC1BxO,EAgRX,OA/UA,EAAUiO,EAAW/a,GAoErB+a,EAAUzb,UAAUic,eAAiB,WACjC,IAAK,OACD,OAAOvb,EAAOV,UAAUic,eAAe/b,KAAKI,MAEhD,GAAIA,KAAK0a,UAAUiB,iBACf,OAAO,EAGP,IAAK,IAAI5Y,KAAO/C,KAAKub,uBACjB,GAAIvb,KAAKub,uBAAuBxY,GAAK4Y,iBACjC,OAAO,EAInB,OAAO,GAMXR,EAAUzb,UAAUkc,YAAc,SAAUlb,EAAYmb,GACpD,GAAK,OAAL,CAIA,IAAIC,EAAgB9b,KAAK+b,0BAA0Brb,GAEnD,IAAK,IAAIyS,KADTnT,KAAK0a,UAAUkB,YAAY5b,KAAK0a,WAAaoB,EAAgBD,EAAY,IAC1D7b,KAAKub,uBAAwB,CACxC,IAAIb,EAAY1a,KAAKub,uBAAuBpI,GAC5CuH,EAAUkB,YAAYlB,GAAaoB,EAAgBD,EAAY,UAP/Dzb,EAAOV,UAAUkc,YAAYhc,KAAKI,KAAMU,EAAYmb,IAc5DV,EAAUzb,UAAUsc,uBAAyB,SAAUtb,GACnD,OAAI,QACAV,KAAKic,iBACLvb,IACC,eAAWV,KAAKic,gBAAiBvb,GAC3B,EAGAV,KAAKkc,aAMpBf,EAAUzb,UAAUwc,UAAY,WAC5B,OAAO,GAMXf,EAAUzb,UAAUyc,OAAS,WACzB,IAAIpZ,EAAM3C,EAAOV,UAAUyc,OAAOvc,KAAKI,MAIvC,OAHKA,KAAKoc,mBACNrZ,GAAO,0BAEJA,GAMXoY,EAAUzb,UAAU2c,UAAY,SAAU3b,GACtC,QAAI,QACAV,KAAKic,iBACLvb,IACC,eAAWV,KAAKic,gBAAiBvb,KAI3BN,EAAOV,UAAU2c,UAAUzc,KAAKI,KAAMU,IAOrDya,EAAUzb,UAAU4c,yBAA2B,SAAU5b,GACrD,IAAK,OACD,OAAON,EAAOV,UAAU4c,yBAAyB1c,KAAKI,KAAMU,GAEhE,IAAI6b,EAAWvc,KAAKic,gBACpB,IAAIjc,KAAKW,UAAc4b,IAAY,eAAWA,EAAU7b,GAGnD,CACD,IAAI8b,EAAU,eAAO9b,GAKrB,OAJM8b,KAAWxc,KAAKwb,wBAClBxb,KAAKwb,sBAAsBgB,GACvB,eAAyB9b,IAE1BV,KAAKwb,sBAAsBgB,GARlC,OAAOxc,KAAKW,UAepBwa,EAAUzb,UAAUqc,0BAA4B,SAAUrb,GACtD,IAAK,OACD,OAAON,EAAOV,UAAUqc,0BAA0Bnc,KAAKI,KAAMU,GAEjE,IAAI6b,EAAWvc,KAAKic,gBACpB,IAAKM,GAAY,eAAWA,EAAU7b,GAClC,OAAOV,KAAK0a,UAGZ,IAAI8B,EAAU,eAAO9b,GAIrB,OAHM8b,KAAWxc,KAAKub,yBAClBvb,KAAKub,uBAAuBiB,GAAW,IAAIC,EAAA,KAAUzc,KAAK0a,UAAUgC,gBAEjE1c,KAAKub,uBAAuBiB,IAa3CrB,EAAUzb,UAAUid,YAAc,SAAUtN,EAAG2G,EAAGC,EAAGpM,EAAYnJ,EAAYqC,GACzE,IAAI+J,EAAY,CAACuC,EAAG2G,EAAGC,GACnB2G,EAAe5c,KAAK6c,+BAA+B/P,EAAWpM,GAC9Doc,EAAUF,EACR5c,KAAKwB,gBAAgBob,EAAc/S,EAAYnJ,QAC/CF,EACFuO,EAAO,IAAI/O,KAAKqb,UAAUvO,OAAuBtM,IAAZsc,EAAwB3P,EAAA,KAAUC,KAAOD,EAAA,KAAUgB,WAAmB3N,IAAZsc,EAAwBA,EAAU,GAAI9c,KAAKmB,YAAanB,KAAKsB,iBAAkBtB,KAAK+c,aAGvL,OAFAhO,EAAKhM,IAAMA,EACXgM,EAAKgF,iBAAiBlE,EAAA,KAAUC,OAAQ9P,KAAKma,iBAAiBlV,KAAKjF,OAC5D+O,GAUXoM,EAAUzb,UAAUsd,QAAU,SAAU3N,EAAG2G,EAAGC,EAAGpM,EAAYnJ,GACzD,IAAIuc,EAAmBjd,KAAKic,gBAC5B,GAAK,QACAgB,GACAvc,IACD,eAAWuc,EAAkBvc,GAG5B,CACD,IAAIwc,EAAQld,KAAK+b,0BAA0Brb,GACvCoM,EAAY,CAACuC,EAAG2G,EAAGC,GACnBlH,OAAO,EACPiM,EAAe,eAAOlO,GACtBoQ,EAAMjC,YAAYD,KAClBjM,EAAOmO,EAAMhC,IAAIF,IAErB,IAAIjY,EAAM/C,KAAKmc,SACf,GAAIpN,GAAQA,EAAKhM,KAAOA,EACpB,OAAOgM,EAGP,IAAInC,EAAiB5M,KAAKsc,yBAAyBW,GAC/CpQ,EAAiB7M,KAAKsc,yBAAyB5b,GAC/CqM,EAAmB/M,KAAK6c,+BAA+B/P,EAAWpM,GAClEyc,EAAU,IAAI,OAAWF,EAAkBrQ,EAAgBlM,EAAYmM,EAAgBC,EAAWC,EAAkB/M,KAAKod,kBAAkBvT,GAAa7J,KAAKkc,YAAa,SAAU7M,EAAG2G,EAAGC,EAAGpM,GAC7L,OAAO7J,KAAKqd,gBAAgBhO,EAAG2G,EAAGC,EAAGpM,EAAYoT,IACnDhY,KAAKjF,MAAOA,KAAKyb,4BAA6Bzb,KAAK0b,yBAA0B1b,KAAKoc,kBAUpF,OATAe,EAAQpa,IAAMA,EACVgM,GACAoO,EAAQG,YAAcvO,EACtBoO,EAAQI,sBACRL,EAAMM,QAAQxC,EAAcmC,IAG5BD,EAAMO,IAAIzC,EAAcmC,GAErBA,EA9BX,OAAOnd,KAAKqd,gBAAgBhO,EAAG2G,EAAGC,EAAGpM,EAAYoT,GAAoBvc,IA2C7Eya,EAAUzb,UAAU2d,gBAAkB,SAAUhO,EAAG2G,EAAGC,EAAGpM,EAAYnJ,GACjE,IAAIqO,EAAO,KACPiM,EAAe,eAAU3L,EAAG2G,EAAGC,GAC/BlT,EAAM/C,KAAKmc,SACf,GAAKnc,KAAK0a,UAAUO,YAAYD,IAM5B,GADAjM,EAAO/O,KAAK0a,UAAUQ,IAAIF,GACtBjM,EAAKhM,KAAOA,EAAK,CAIjB,IAAIua,EAAcvO,EAClBA,EAAO/O,KAAK2c,YAAYtN,EAAG2G,EAAGC,EAAGpM,EAAYnJ,EAAYqC,GAErDua,EAAYpO,YAAc/B,EAAA,KAAUC,KAEpC2B,EAAKuO,YAAcA,EAAYA,YAG/BvO,EAAKuO,YAAcA,EAEvBvO,EAAKwO,sBACLvd,KAAK0a,UAAU8C,QAAQxC,EAAcjM,SApBzCA,EAAO/O,KAAK2c,YAAYtN,EAAG2G,EAAGC,EAAGpM,EAAYnJ,EAAYqC,GACzD/C,KAAK0a,UAAU+C,IAAIzC,EAAcjM,GAsBrC,OAAOA,GAOXoM,EAAUzb,UAAUge,2BAA6B,SAAUhU,GACvD,GAAK,QACD1J,KAAK0b,0BAA4BhS,EADrC,CAKA,IAAK,IAAIyJ,KADTnT,KAAK0b,yBAA2BhS,EACjB1J,KAAKub,uBAChBvb,KAAKub,uBAAuBpI,GAAIkB,QAEpCrU,KAAKwP,YAcT2L,EAAUzb,UAAUie,yBAA2B,SAAUjd,EAAYkd,GACjE,GAAI,OAA4B,CAC5B,IAAIC,EAAO,eAAcnd,GACzB,GAAImd,EAAM,CACN,IAAIrB,EAAU,eAAOqB,GACfrB,KAAWxc,KAAKwb,wBAClBxb,KAAKwb,sBAAsBgB,GAAWoB,MAK/CzC,EAhVmB,CAiV5B,GAKF,SAASC,EAAwB0C,EAAW1W,GACU0W,EAAU9O,WAAY5H,IACpEA,EAEO,U,kCCraA,QAMX0L,WAAY,aAMZwE,cAAe,gBAMf1C,MAAO,QAOPX,cAAe,gBAMfmE,kBAAmB,oBAMnBC,gBAAiB,kBAMjBC,kBAAmB,sB,kCCjDvB,oEAQO,IAAIyF,EAAkB,GAMlBC,GAA6B,G,kCCdxC,8IAkBA,SAASC,EAA6BtG,EAAYuG,EAAWC,EAAcC,GACvE,IAAIC,EAAc,eAASH,GAAaC,EAAa,GACjDG,EAAc,eAAUJ,GAAaC,EAAa,GACtD,OAAIC,EACOla,KAAKU,IAAI+S,EAAYzT,KAAKC,IAAIka,EAAaC,IAE/Cpa,KAAKU,IAAI+S,EAAYzT,KAAKU,IAAIyZ,EAAaC,IActD,SAASC,EAA2B5G,EAAY9W,EAAe2d,GAC3D,IAAIlJ,EAASpR,KAAKU,IAAI+S,EAAY9W,GAC9B4d,EAAQ,GAWZ,OAVAnJ,GACIpR,KAAKwa,IAAI,EAAID,EAAQva,KAAKC,IAAI,EAAGwT,EAAa9W,EAAgB,IAAM4d,EAChE,EACJD,IACAlJ,EAASpR,KAAKC,IAAImR,EAAQkJ,GAC1BlJ,GACIpR,KAAKwa,IAAI,EAAID,EAAQva,KAAKC,IAAI,EAAGqa,EAAgB7G,EAAa,IAC1D8G,EACA,GAEL,eAAMnJ,EAAQkJ,EAAgB,EAAmB,EAAhB3d,GASrC,SAAS8d,EAAwBC,EAAaC,EAAYC,EAAeC,GAC5E,OAAO,SAQGpH,EAAYqH,EAAW1P,EAAMgK,GACnC,QAAmB9Y,IAAfmX,EAA0B,CAC1B,IAAI9W,EAAgB+d,EAAY,GAC5BJ,EAAgBI,EAAYA,EAAYvU,OAAS,GACjD4U,EAAeH,EACbb,EAA6Bpd,EAAeie,EAAexP,EAAMyP,GACjEle,EAEN,GAAIyY,EAAc,CACd,IAAI4F,OAAwB1e,IAAfqe,GAA2BA,EACxC,OAAKK,EAGEX,EAA2B5G,EAAYsH,EAAcT,GAFjD,eAAM7G,EAAY6G,EAAeS,GAIhD,IAAIE,EAASjb,KAAKU,IAAIqa,EAActH,GAChCtI,EAAInL,KAAKqV,MAAM,eAAkBqF,EAAaO,EAAQH,IAC1D,OAAIJ,EAAYvP,GAAK4P,GAAgB5P,EAAIuP,EAAYvU,OAAS,EACnDuU,EAAYvP,EAAI,GAEpBuP,EAAYvP,KAgBxB,SAAS+P,EAAkBC,EAAOxe,EAAeye,EAAmBT,EAAYC,EAAeC,GAClG,OAAO,SAQGpH,EAAYqH,EAAW1P,EAAMgK,GACnC,QAAmB9Y,IAAfmX,EAA0B,CAC1B,IAAIsH,EAAeH,EACbb,EAA6Bpd,EAAeie,EAAexP,EAAMyP,GACjEle,EACF2d,OAAsChe,IAAtB8e,EAAkCA,EAAoB,EAE1E,GAAIhG,EAAc,CACd,IAAI4F,OAAwB1e,IAAfqe,GAA2BA,EACxC,OAAKK,EAGEX,EAA2B5G,EAAYsH,EAAcT,GAFjD,eAAM7G,EAAY6G,EAAeS,GAIhD,IAAIvF,EAAY,KACZ6F,EAAerb,KAAKE,KAAKF,KAAKwa,IAAI7d,EAAgBoe,GAAgB/a,KAAKwa,IAAIW,GAAS3F,GACpFpR,GAAU0W,GAAa,GAAMtF,GAAa,GAC1CyF,EAASjb,KAAKU,IAAIqa,EAActH,GAChC6H,EAAkBtb,KAAKqV,MAAMrV,KAAKwa,IAAI7d,EAAgBse,GAAUjb,KAAKwa,IAAIW,GAAS/W,GAClFmX,EAAYvb,KAAKC,IAAIob,EAAcC,GACnCE,EAAgB7e,EAAgBqD,KAAKyb,IAAIN,EAAOI,GACpD,OAAO,eAAMC,EAAelB,EAAeS,KAehD,SAASW,EAAuB/e,EAAe2d,EAAeK,EAAYC,EAAeC,GAC5F,OAAO,SAQGpH,EAAYqH,EAAW1P,EAAMgK,GACnC,QAAmB9Y,IAAfmX,EAA0B,CAC1B,IAAIsH,EAAeH,EACbb,EAA6Bpd,EAAeie,EAAexP,EAAMyP,GACjEle,EACFqe,OAAwB1e,IAAfqe,GAA2BA,EACxC,OAAKK,GAAW5F,EAGTiF,EAA2B5G,EAAYsH,EAAcT,GAFjD,eAAM7G,EAAY6G,EAAeS,O,oFC/JzC,GACXY,IAAK,MACLC,KAAM,Q,oFCNN7gB,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GA6ExC,EAAsB,SAAUK,GAKhC,SAAS2f,EAAKzf,GACV,IAAI4M,EAAQlN,KACRO,OAAyCC,IAA3BF,EAAQG,gBAA+BH,EAAQG,oBACrCD,IAAxBF,EAAQC,cACRA,EAAcD,EAAQC,aAG1B,IAAIyf,OAA8Cxf,IAA5BF,EAAQ0f,gBACmC1f,EAAuB,gBAClF2f,EAAoBJ,IAGtBlf,EAAWL,EAAQK,SACnBe,EAAOpB,EAAQoB,KA+DnB,YA9DalB,IAATkB,QAAsClB,IAAhBF,EAAQmB,MAC9BC,EAAO,eAAUpB,EAAQmB,MAE7ByL,EAAQ9M,EAAOR,KAAKI,KAAM,CACtBiB,aAAcX,EAAQW,aACtBY,wBAAyBvB,EAAQuB,wBACjCX,UAAWZ,EAAQY,UACnBC,YAAab,EAAQa,YACrBZ,YAAaA,EACbG,WAAYJ,EAAQI,WACpBW,2BAA4Bf,EAAQe,2BACpCga,UAAW/a,EAAQ+a,UACnB1a,SAAUA,EACVW,iBAAkBhB,EAAQgB,iBAC1BC,eAAgBjB,EAAQiB,eACxBG,KAAMA,EACNC,WAAyBnB,IAAlBF,EAAQqB,OAAsBrB,EAAQqB,MAC7CC,WAAYtB,EAAQsB,WACpBE,WAAYxB,EAAQwB,cAClB9B,KAKNkN,EAAMgT,cAA+B1f,IAApBF,EAAQ6f,QAAwB7f,EAAQ6f,QAAU,QAKnEjT,EAAM6D,aAA6BvQ,IAAnBF,EAAQ0Q,OAAuB1Q,EAAQ0Q,OAAS,aAKhE9D,EAAMkT,iBACqB5f,IAAvBF,EAAQ+f,WAA2B/f,EAAQ+f,WAAa,GAK5DnT,EAAMoT,OAAShgB,EAAQigB,MAKvBrT,EAAMsT,WAAalgB,EAAQmgB,UAK3BvT,EAAMwT,OAASpgB,EAAQqgB,MAOvBzT,EAAM0T,iBAAmBZ,EACzB9S,EAAM2N,OAAO3N,EAAM2T,wBACfnf,GAAQA,EAAK2I,OAAS,IACtB6C,EAAM1L,gBAAkB,eAA2BE,EAAKof,IAAI5T,EAAM6T,uBAAuB9b,KAAKiI,MAE3FA,EA0JX,OA1OAjO,EAAU8gB,EAAM3f,GAuFhB2f,EAAKrgB,UAAUma,QAAU,SAAUnY,GAC/B1B,KAAK0B,KAAOA,EACZ,IAAIqB,EAAMrB,EAAKoZ,KAAK,MACpB9a,KAAK2a,mBAAmB,eAA2BjZ,EAAKof,IAAI9gB,KAAK+gB,uBAAuB9b,KAAKjF,QAAS+C,IAS1Ggd,EAAKrgB,UAAUshB,cAAgB,WAC3B,OAAOhhB,KAAKogB,aAOhBL,EAAKrgB,UAAUqX,UAAY,WACvB,OAAO/W,KAAK+Q,SAOhBgP,EAAKrgB,UAAUuhB,SAAW,WACtB,OAAOjhB,KAAKsgB,QAOhBP,EAAKrgB,UAAUwhB,aAAe,WAC1B,OAAOlhB,KAAKwgB,YAOhBT,EAAKrgB,UAAUyhB,mBAAqB,WAChC,OAAOnhB,KAAK4gB,kBAOhBb,EAAKrgB,UAAU0hB,SAAW,WACtB,OAAOphB,KAAK0gB,QAOhBX,EAAKrgB,UAAU2hB,WAAa,WACxB,OAAOrhB,KAAKkgB,UAMhBH,EAAKrgB,UAAUmhB,qBAAuB,WAClC,IAAInc,EAAI,EACJ4c,EAAM,GACV,IAAK,IAAIve,KAAO/C,KAAKogB,YACjBkB,EAAI5c,KAAO3B,EAAM,IAAM/C,KAAKogB,YAAYrd,GAE5C,OAAOue,EAAIxG,KAAK,MAOpBiF,EAAKrgB,UAAU6hB,iBAAmB,SAAUlB,GACxC,eAAOrgB,KAAKogB,YAAaC,GACzBrgB,KAAK6a,OAAO7a,KAAK6gB,yBAMrBd,EAAKrgB,UAAUqhB,uBAAyB,SAAUS,GAC9C,IAAIxB,EAAkBhgB,KAAK4gB,iBAGvBzW,EAAU,CACV,MAASnK,KAAKsgB,OACd,MAAStgB,KAAK0gB,OACd,cAAiB1gB,KAAKwgB,YAEtBR,GAAmBC,EAAoBJ,KACvC,eAAO1V,EAAS,CACZ,QAAW,OACX,QAAW,UACX,QAAWnK,KAAKkgB,SAChB,OAAUlgB,KAAK+Q,UAMvByQ,EACIxB,GAAmBC,EAAoBJ,IACjC,eAAa2B,EAAUrX,GACvBqX,EAAShE,QAAQ,eAAe,SAAUiE,EAAGhiB,GAC3C,OAAOA,EAAEiiB,gBAAiBvX,EAAUA,EAAQ1K,EAAEiiB,eAAiBD,KAE3E,IAAI9gB,EAAiEX,KAAa,SAC9EqgB,EAAargB,KAAKogB,YACtB,OAAO,SAOGtT,EAAWjD,EAAYnJ,GAC7B,GAAKoM,EAGA,CACD,IAAI6U,EAAiB,CACjB,WAAchhB,EAASihB,YAAY9U,EAAU,IAC7C,QAAWA,EAAU,GACrB,QAAWA,EAAU,IAEzB,eAAO6U,EAAgBtB,GACvB,IAAI5e,EAAM+f,EASV,OAPI/f,EADAue,GAAmBC,EAAoBJ,IACjC,eAAape,EAAKkgB,GAGlBlgB,EAAI+b,QAAQ,eAAe,SAAUiE,EAAGhiB,GAC1C,OAAOkiB,EAAeliB,MAGvBgC,KAIZse,EA3Oc,CA4OvB5E,EAAA,MACa,SAyBR,SAAS0G,EAAwBC,EAASC,GAC7C,IAAIC,EAASF,EAAQ,YAAY,SAC7BG,EAAI,eAAKD,GAAQ,SAAUE,EAAKC,EAAOC,GACvC,OAAOF,EAAI,eAAiBH,EAAO,YAEvC,GAAU,OAANE,EACA,OAAO,KAEX,IACII,EADAC,EAAiBR,EAAQ,YAAY,iBAIjCO,EAFJJ,EAAE,qBAAqB5X,OAAS,EAC5B,eAAgB0X,EACV,eAAUE,EAAE,sBAAsB,SAAUC,EAAKC,EAAOC,GAC1D,IAAIG,EAAgB,eAAKD,GAAgB,SAAUE,GAC/C,OAAOA,EAAG,eAAiBN,EAAI,oBAE/BO,EAAeF,EAAc,gBAC7BG,EAAQ,eAAcD,GACtBE,EAAQ,eAAcZ,EAAO,eACjC,OAAIW,GAASC,EACF,eAAWD,EAAOC,GAGlBF,GAAgBV,EAAO,iBAKhC,eAAUE,EAAE,sBAAsB,SAAUC,EAAKC,EAAOC,GAC1D,OAAOF,EAAI,kBAAoBH,EAAO,gBAKxC,EAENM,EAAM,IACNA,EAAM,GAEV,IAAI5B,EAEHwB,EAAE,qBAAqBI,GAAK,iBACzBO,EAEHX,EAAE,qBAAqBI,GAAK,uBACzBrR,EAAgCiR,EAAE,UAAU,GAC5C,WAAYF,IACZ/Q,EAAS+Q,EAAO,WAEpBM,EAAM,eAAUJ,EAAE,UAAU,SAAUC,EAAKC,EAAOC,GAC9C,MAAI,UAAWL,EACJG,EAAI,UAAYH,EAAO,SAGvBG,EAAI,gBAGfG,EAAM,IACNA,EAAM,GAEV,IAAI1B,EAA+BsB,EAAE,SAASI,GAAK,cAC/ChC,EAAa,GACb,cAAe4B,GACfA,EAAE,aAAazd,SAAQ,SAAU0d,EAAKC,EAAOC,GACzC,IAAIrf,EAAMmf,EAAI,cACV1X,EAAQ0X,EAAI,gBACF1hB,IAAVgK,IACAA,EAAQ0X,EAAI,SAAS,IAEzB7B,EAAWtd,GAAOyH,KAG1B,IAII9J,EAJAmiB,EAAaf,EAAQ,YAAY,iBACjCgB,EAAe,eAAKD,GAAY,SAAUX,EAAKC,EAAOC,GACtD,OAAOF,EAAI,eAAiBzB,KAG5BsC,EAAOD,EAAa,gBAIxB,GAHIC,IACAriB,EAAa,eAAcqiB,IAE3B,eAAgBhB,EAAQ,CACxB,IAAIiB,EAAa,eAAcjB,EAAO,eAClCiB,IACKtiB,IAAc,eAAWsiB,EAAYtiB,KACtCA,EAAasiB,IAIzB,IAAIrhB,GAAQ,EACRshB,EAAiE,MAAhDviB,EAAWwiB,qBAAqBC,OAAO,EAAG,GAC3DC,EAASN,EAAaO,WAAW,GAEjCC,EAAsB,CACtBC,WAAY,EACZC,WAAY,EAEZC,WAAYL,EAAOM,YAAc,EACjCC,WAAYP,EAAOQ,aAAe,GAGtC,GAAIhB,EAAc,CACdU,EAAsBV,EAAaA,EAAavY,OAAS,GACzD,IAAIoX,EAAI,eAAKqB,EAAaO,YAAY,SAAUQ,GAC5C,OAAOA,EAAgBC,aAAeR,EAAoBD,YACtDP,EAAagB,WAAa,IAAMD,EAAgBC,aAC5CR,EAAoBD,cAE5B5B,IACA2B,EAAS3B,GAGjB,IAAI9J,EAAwC,MAA1ByL,EAAOW,iBAA8BrjB,EAAW0I,mBAC9D4a,EAASf,EACP,CAACG,EAAOa,cAAc,GAAIb,EAAOa,cAAc,IAC/Cb,EAAOa,cACTC,EAAYd,EAAOe,UAAYxM,EAC/ByM,EAAYhB,EAAOiB,WAAa1M,EAChC2M,EAAkBxB,EAAa,eAC/BliB,EAAS,CACTojB,EAAO,GAAKE,EAAYZ,EAAoBC,WAE5CS,EAAO,GAAKI,GAAa,EAAId,EAAoBK,YACjDK,EAAO,GAAKE,GAAa,EAAIZ,EAAoBG,YACjDO,EAAO,GAAKI,EAAYd,EAAoBE,YAEhD,QAAwBhjB,IAApB8jB,IACC,eAAeA,EAAiB1jB,GAAS,CAC1C,IAAI2jB,EAAmBtC,EAAE,oBACrBuC,EAAwB,eAAc,aAAalhB,YAEvD,GADA1C,EAAS0jB,EACLC,EACA5iB,EACI4iB,EAAiB,KAAOC,EAAsB,IAC1CD,EAAiB,KAAOC,EAAsB,OAErD,CACD,IAAIC,EAAuB,eAAgBH,EAAiBxB,EAAa,gBAAiB,aAE1FnhB,EACI8iB,EAAqB,GAAK,OAASD,EAAsB,IACrDC,EAAqB,GAAK,OAASD,EAAsB,IAGzE,IAAI7jB,EAAW,eAAgCmiB,EAAcliB,EAAQgiB,GAEjElhB,EAAO,GACPse,EAAkB+B,EAAO,mBAE7B,GADA/B,OAAsCxf,IAApBwf,EAAgCA,EAAkB,GAChE,uBAAwB8B,GACxB,YAAaA,EAAQ,sBAErB,IADA,IAAI4C,EAAO5C,EAAQ,sBAAsB,WAAW,OAAO,QAAQ,OAC1Dpd,EAAI,EAAGqT,EAAK2M,EAAKra,OAAQ3F,EAAIqT,IAAMrT,EACxC,GAAIggB,EAAKhgB,GAAG,cAAe,CACvB,IAAIigB,EAAa,eAAKD,EAAKhgB,GAAG,eAAe,SAAUkgB,GACnD,MAA0B,eAAnBA,EAAQ,WAEfC,EAAYF,EAAW,iBAAiB,SAK5C,GAJwB,KAApB3E,IAEAA,EAAkB6E,EAAU,IAE5B7E,IAAoBC,EAAoBJ,IAMxC,MALI,eAASgF,EAAW5E,EAAoBJ,MACxCne,EAAK6D,KAA4Bmf,EAAKhgB,GAAG,cAO5CggB,EAAKhgB,GAAG,UACbsb,EAAkBC,EAAoBJ,IACtCne,EAAK6D,KAA4Bmf,EAAKhgB,GAAG,UAarD,OAToB,IAAhBhD,EAAK2I,SACL2V,EAAkBC,EAAoBH,KACtCmC,EAAE,eAAezd,SAAQ,SAAUogB,GACC,SAA5BA,EAAQ,kBACR5T,EAAS4T,EAAQ,UACjBljB,EAAK6D,KAA4Bqf,EAAQ,kBAI9C,CACHljB,KAAMA,EACN6e,MAAOwB,EAAO,SACdtB,UAAWA,EACXzP,OAAQA,EACRtQ,WAAYA,EACZsf,gBAAiBA,EACjBrf,SAAUA,EACVggB,MAAOA,EACPN,WAAYA,EACZ1e,MAAOA,EACPR,YAAa4gB,EAAO","file":"js/chunk-fd645248.04135ddc.js","sourcesContent":["/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options} [opt_options] XYZ options.\n     */\n    function XYZ(opt_options) {\n        var options = opt_options || {};\n        var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n        if (options.interpolate !== undefined) {\n            interpolate = options.interpolate;\n        }\n        var projection = options.projection !== undefined ? options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined\n            ? options.tileGrid\n            : createXYZ({\n                extent: extentFromProjection(projection),\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize,\n            });\n        return _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            interpolate: interpolate,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/reproj\n */\nimport { IMAGE_SMOOTHING_DISABLED } from './renderer/canvas/common.js';\nimport { assign } from './obj.js';\nimport { containsCoordinate, createEmpty, extend, forEachCorner, getCenter, getHeight, getTopLeft, getWidth, } from './extent.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { getPointResolution, transform } from './proj.js';\nimport { solveLinearSystem } from './math.js';\nvar brokenDiagonalRendering_;\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(u1, v1);\n    ctx.lineTo(u2, v2);\n    ctx.closePath();\n    ctx.save();\n    ctx.clip();\n    ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n    ctx.restore();\n}\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n    // the values ought to be close to the rgba(210, 0, 0, 0.75)\n    return (Math.abs(data[offset * 4] - 210) > 2 ||\n        Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2);\n}\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n    if (brokenDiagonalRendering_ === undefined) {\n        var ctx = document.createElement('canvas').getContext('2d');\n        ctx.globalCompositeOperation = 'lighter';\n        ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n        drawTestTriangle(ctx, 4, 5, 4, 0);\n        drawTestTriangle(ctx, 4, 5, 0, 5);\n        var data = ctx.getImageData(0, 0, 3, 3).data;\n        brokenDiagonalRendering_ =\n            verifyBrokenDiagonalRendering(data, 0) ||\n                verifyBrokenDiagonalRendering(data, 4) ||\n                verifyBrokenDiagonalRendering(data, 8);\n    }\n    return brokenDiagonalRendering_;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(sourceProj, targetProj, targetExtent, targetResolution) {\n    var targetCenter = getCenter(targetExtent);\n    var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n        forEachCorner(targetExtent, function (corner) {\n            sourceResolution = calculateSourceResolution(sourceProj, targetProj, corner, targetResolution);\n            return isFinite(sourceResolution) && sourceResolution > 0;\n        });\n    }\n    return sourceResolution;\n}\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges, opt_interpolate) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    if (!opt_interpolate) {\n        assign(context, IMAGE_SMOOTHING_DISABLED);\n    }\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    function pixelRound(value) {\n        return Math.round(value * pixelRatio) / pixelRatio;\n    }\n    context.globalCompositeOperation = 'lighter';\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution), Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution));\n    if (!opt_interpolate) {\n        assign(stitchContext, IMAGE_SMOOTHING_DISABLED);\n    }\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        // This test should never fail -- but it does. Need to find a fix the upstream condition\n        if (src.image.width > 0 && src.image.height > 0) {\n            stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n        }\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        // Make sure that everything is on pixel boundaries\n        var u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n        var v0 = pixelRound(-(target[0][1] - targetTopLeft[1]) / targetResolution);\n        var u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n        var v1 = pixelRound(-(target[1][1] - targetTopLeft[1]) / targetResolution);\n        var u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n        var v2 = pixelRound(-(target[2][1] - targetTopLeft[1]) / targetResolution);\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0],\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        if (isBrokenDiagonalRendering() || !opt_interpolate) {\n            // Make sure that all lines are horizontal or vertical\n            context.moveTo(u1, v1);\n            // This is the diagonal line. Do it in 4 steps\n            var steps = 4;\n            var ud = u0 - u1;\n            var vd = v0 - v1;\n            for (var step = 0; step < steps; step++) {\n                // Go horizontally\n                context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound((step * vd) / (steps - 1)));\n                // Go vertically\n                if (step != steps - 1) {\n                    context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound(((step + 1) * vd) / (steps - 1)));\n                }\n            }\n            // We are almost at u0r, v0r\n            context.lineTo(u2, v2);\n        }\n        else {\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n        }\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.globalCompositeOperation = 'source-over';\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getArea, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects, } from '../extent.js';\nimport { getTransform } from '../proj.js';\nimport { log2, modulo } from '../math.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold, opt_destinationResolution) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ =\n            this.sourceProj_.canWrapX() &&\n                !!maxSourceExtent &&\n                !!this.sourceProj_.getExtent() &&\n                getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n            ? getWidth(this.sourceProj_.getExtent())\n            : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent()\n            ? getWidth(this.targetProj_.getExtent())\n            : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        /*\n         * The maxSubdivision controls how many splittings of the target area can\n         * be done. The idea here is to do a linear mapping of the target areas\n         * but the actual overal reprojection (can be) extremely non-linear. The\n         * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n         * tile size. However this function is also called to remap canvas rendered\n         * layers which can be much larger. This calculation increases the maxSubdivision\n         * value by the right factor so that each 256x256 pixel area has\n         * MAX_SUBDIVISION divisions.\n         */\n        var maxSubdivision = MAX_SUBDIVISION +\n            (opt_destinationResolution\n                ? Math.max(0, Math.ceil(log2(getArea(targetExtent) /\n                    (opt_destinationResolution *\n                        opt_destinationResolution *\n                        256 *\n                        256))))\n                : 0);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, maxSubdivision);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) -\n                    leftBound_1 >\n                    this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [\n                        [triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]],\n                    ];\n                    if (newTriangle[0][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[1][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[2][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if (maxX - minX < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c],\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_\n            ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n            : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 &&\n            sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision =\n                    targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision =\n                    sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (isFinite(sourceQuadExtent[0]) &&\n                isFinite(sourceQuadExtent[1]) &&\n                isFinite(sourceQuadExtent[2]) &&\n                isFinite(sourceQuadExtent[3])) {\n                if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                    // whole quad outside source projection extent -> ignore\n                    return;\n                }\n            }\n        }\n        var isNotFinite = 0;\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) ||\n                !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) ||\n                !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) ||\n                !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) ||\n                !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    // It might be the case that only 1 of the points is infinite. In this case\n                    // we can draw a single triangle with the other three points\n                    isNotFinite =\n                        (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n                            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n                            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n                            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n                    if (isNotFinite != 1 &&\n                        isNotFinite != 2 &&\n                        isNotFinite != 4 &&\n                        isNotFinite != 8) {\n                        return;\n                    }\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) /\n                        2;\n                    dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        // Exactly zero or one of *Src is not finite\n        // The triangles must have the diagonal line as the first side\n        // This is to allow easy code in reproj.s to make it straight for broken\n        // browsers that can't handle diagonal clipping\n        if ((isNotFinite & 0xb) == 0) {\n            this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        }\n        if ((isNotFinite & 0xe) == 0) {\n            this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n        }\n        if (isNotFinite) {\n            // Try the other two triangles\n            if ((isNotFinite & 0xd) == 0) {\n                this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n            }\n            if ((isNotFinite & 0x7) == 0) {\n                this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n            }\n        }\n    };\n    /**\n     * Calculates extent of the `source` coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport { calculateSourceExtentResolution, render as renderReprojected, } from '../reproj.js';\nimport { clamp } from '../math.js';\nimport { getArea, getIntersection } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n     * @param {boolean} [opt_renderEdges] Render reprojection edges.\n     * @param {boolean} [opt_interpolate] Use linear interpolation when resampling.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges, opt_interpolate) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE, { interpolate: !!opt_interpolate }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {?Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent\n            ? getIntersection(targetExtent, maxTargetExtent)\n            : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var sourceResolution = calculateSourceExtentResolution(sourceProj, targetProj, limitedTargetExtent, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage(),\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_, this.interpolate);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n            else {\n                this.sourceTiles_.forEach(function (tile, i, arr) {\n                    var state = tile.getState();\n                    if (state == TileState.IDLE) {\n                        tile.load();\n                    }\n                });\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { assert } from '../asserts.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { extend } from '../array.js';\nimport { getUid } from '../util.js';\nimport { getValues, isEmpty } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { xhr } from '../featureloader.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n     */\n    function VectorSourceEvent(type, opt_feature, opt_features) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n         * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        /**\n         * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n         * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n         * @api\n         */\n        _this.features = opt_features;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options} [opt_options] Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            interpolate: true,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n        }) || this;\n        /***\n         * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {VectorSourceOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, \n            /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ =\n            options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.loadingExtentsCount_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features by uid (using getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.uidIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features =\n                /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (options.features);\n        }\n        else if (options.features) {\n            collection =\n                /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */ (options.features);\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n     * meaning that if a feature with a duplicate id is added in the collection, it will\n     * be removed from it right away.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            if (this.featuresCollection_) {\n                this.featuresCollection_.remove(feature);\n            }\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this),\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        if (valid) {\n            assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n            this.uidIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        if (this.hasListener(VectorEventType.ADDFEATURE)) {\n            for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n                this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n            }\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        this.addEventListener(VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        this.addEventListener(VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        collection.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        collection.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.uidIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                var removeAndIgnoreReturn = function (feature) {\n                    this.removeFeatureInternal(feature);\n                }.bind(this);\n                this.featuresRtree_.forEach(removeAndIgnoreReturn);\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection~Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get a snapshot of the features currently on the source in random order. The returned array\n     * is a copy, the features are references to the features in the source.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray().slice(0);\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * When `useSpatialIndex` is set to false, this method will return all\n     * features.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.getInExtent(extent);\n        }\n        else if (this.featuresCollection_) {\n            return this.featuresCollection_.getArray().slice(0);\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get a feature by its internal unique identifier (using `getUid`).\n     *\n     * @param {string} uid Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n     */\n    VectorSource.prototype.getFeatureByUid = function (uid) {\n        var feature = this.uidIndex_[uid];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (this.idIndex_[sid] !== feature) {\n                this.removeFromIdIndex_(feature);\n                this.idIndex_[sid] = feature;\n            }\n        }\n        else {\n            this.removeFromIdIndex_(feature);\n            this.uidIndex_[featureKey] = feature;\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.uidIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        if (this.featuresRtree_) {\n            return (this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_));\n        }\n        if (this.featuresCollection_) {\n            return this.featuresCollection_.getLength() === 0;\n        }\n        return true;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution, projection);\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                ++this_1.loadingExtentsCount_;\n                this_1.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADSTART));\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection, function (features) {\n                    --this.loadingExtentsCount_;\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADEND, undefined, features));\n                }.bind(this_1), function () {\n                    --this.loadingExtentsCount_;\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADERROR));\n                }.bind(this_1));\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n        this.loading =\n            this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n    };\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        if (!feature) {\n            return;\n        }\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        var result = this.removeFeatureInternal(feature);\n        if (result) {\n            this.changed();\n        }\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n     *     (or undefined if the feature was not found).\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        var featureChangeKeys = this.featureChangeKeys_[featureKey];\n        if (!featureChangeKeys) {\n            return;\n        }\n        featureChangeKeys.forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        delete this.uidIndex_[featureKey];\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n        return feature;\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.url_ = url;\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = (2 * Math.PI) / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileState from '../TileState.js';\nimport { createFromTemplates, expandUrl } from '../tileurlfunction.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            interpolate: options.interpolate,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ =\n            _this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        if (options.tileUrlFunction) {\n            _this.tileUrlFunction = options.tileUrlFunction;\n        }\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n            ? this.tileUrlFunction.bind(this)\n            : this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type =\n                tileState == TileState.ERROR\n                    ? TileEventType.TILELOADERROR\n                    : tileState == TileState.LOADED\n                        ? TileEventType.TILELOADEND\n                        : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string} [key] Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = expandUrl(url);\n        this.urls = urls;\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    UrlTile.prototype.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n        return undefined;\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = this;\n        var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n        if (options.interpolate !== undefined) {\n            interpolate = options.interpolate;\n        }\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction\n                ? options.tileLoadFunction\n                : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            interpolate: interpolate,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass =\n            options.tileClass !== undefined ? options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     */\n    TileImage.prototype.getKey = function () {\n        var key = _super.prototype.getKey.call(this);\n        if (!this.getInterpolate()) {\n            key += ':disable-interpolation';\n        }\n        return key;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] =\n                    getTileGridForProjection(projection);\n            }\n            return this.tileGridForProjection[projKey];\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!ImageTile} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord\n            ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n            : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n        return tile;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!(ImageTile|ReprojTile)} Tile.\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = cache.get(tileCoordKey);\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_, this.getInterpolate());\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!(ImageTile|ReprojTile)} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n        src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature',\n    /**\n     * Triggered when features starts loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n     * @api\n     */\n    FEATURESLOADSTART: 'featuresloadstart',\n    /**\n     * Triggered when features finishes loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n     * @api\n     */\n    FEATURESLOADEND: 'featuresloadend',\n    /**\n     * Triggered if feature loading results in an error.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n     * @api\n     */\n    FEATURESLOADERROR: 'featuresloaderror',\n};\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { clamp } from './math.js';\nimport { getHeight, getWidth } from './extent.js';\nimport { linearFindNearest } from './array.js';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize, showFullExtent) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    if (showFullExtent) {\n        return Math.min(resolution, Math.max(xResolution, yResolution));\n    }\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *=\n        Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n            1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /=\n            Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n                ratio +\n                1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n                return resolutions[z + 1];\n            }\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var tolerance = 1e-9;\n            var minZoomLevel = Math.ceil(Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance);\n            var offset = -direction * (0.5 - tolerance) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var cappedZoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/source/WMTSRequestEncoding\n */\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n    KVP: 'KVP',\n    REST: 'REST', // see spec §10\n};\n//# sourceMappingURL=WMTSRequestEncoding.js.map","/**\n * @module ol/source/WMTS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport { appendParams } from '../uri.js';\nimport { assign } from '../obj.js';\nimport { containsExtent } from '../extent.js';\nimport { createFromCapabilitiesMatrixSet } from '../tilegrid/WMTS.js';\nimport { createFromTileUrlFunctions, expandUrl } from '../tileurlfunction.js';\nimport { equivalent, get as getProjection, transformExtent } from '../proj.js';\nimport { find, findIndex, includes } from '../array.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nvar WMTS = /** @class */ (function (_super) {\n    __extends(WMTS, _super);\n    /**\n     * @param {Options} options WMTS options.\n     */\n    function WMTS(options) {\n        var _this = this;\n        var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n        if (options.interpolate !== undefined) {\n            interpolate = options.interpolate;\n        }\n        // TODO: add support for TileMatrixLimits\n        var requestEncoding = options.requestEncoding !== undefined\n            ? /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding)\n            : WMTSRequestEncoding.KVP;\n        // FIXME: should we create a default tileGrid?\n        // we could issue a getCapabilities xhr to retrieve missing configuration\n        var tileGrid = options.tileGrid;\n        var urls = options.urls;\n        if (urls === undefined && options.url !== undefined) {\n            urls = expandUrl(options.url);\n        }\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            interpolate: interpolate,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileClass: options.tileClass,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            urls: urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : false,\n            transition: options.transition,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.version_ = options.version !== undefined ? options.version : '1.0.0';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.dimensions_ =\n            options.dimensions !== undefined ? options.dimensions : {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.layer_ = options.layer;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.matrixSet_ = options.matrixSet;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.style_ = options.style;\n        // FIXME: should we guess this requestEncoding from options.url(s)\n        //        structure? that would mean KVP only if a template is not provided.\n        /**\n         * @private\n         * @type {import(\"./WMTSRequestEncoding.js\").default}\n         */\n        _this.requestEncoding_ = requestEncoding;\n        _this.setKey(_this.getKeyForDimensions_());\n        if (urls && urls.length > 0) {\n            _this.tileUrlFunction = createFromTileUrlFunctions(urls.map(_this.createFromWMTSTemplate.bind(_this)));\n        }\n        return _this;\n    }\n    /**\n     * Set the URLs to use for requests.\n     * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n     * @param {Array<string>} urls URLs.\n     */\n    WMTS.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        this.setTileUrlFunction(createFromTileUrlFunctions(urls.map(this.createFromWMTSTemplate.bind(this))), key);\n    };\n    /**\n     * Get the dimensions, i.e. those passed to the constructor through the\n     * \"dimensions\" option, and possibly updated using the updateDimensions\n     * method.\n     * @return {!Object} Dimensions.\n     * @api\n     */\n    WMTS.prototype.getDimensions = function () {\n        return this.dimensions_;\n    };\n    /**\n     * Return the image format of the WMTS source.\n     * @return {string} Format.\n     * @api\n     */\n    WMTS.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * Return the layer of the WMTS source.\n     * @return {string} Layer.\n     * @api\n     */\n    WMTS.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Return the matrix set of the WMTS source.\n     * @return {string} MatrixSet.\n     * @api\n     */\n    WMTS.prototype.getMatrixSet = function () {\n        return this.matrixSet_;\n    };\n    /**\n     * Return the request encoding, either \"KVP\" or \"REST\".\n     * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n     * @api\n     */\n    WMTS.prototype.getRequestEncoding = function () {\n        return this.requestEncoding_;\n    };\n    /**\n     * Return the style of the WMTS source.\n     * @return {string} Style.\n     * @api\n     */\n    WMTS.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Return the version of the WMTS source.\n     * @return {string} Version.\n     * @api\n     */\n    WMTS.prototype.getVersion = function () {\n        return this.version_;\n    };\n    /**\n     * @private\n     * @return {string} The key for the current dimensions.\n     */\n    WMTS.prototype.getKeyForDimensions_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.dimensions_) {\n            res[i++] = key + '-' + this.dimensions_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Update the dimensions.\n     * @param {Object} dimensions Dimensions.\n     * @api\n     */\n    WMTS.prototype.updateDimensions = function (dimensions) {\n        assign(this.dimensions_, dimensions);\n        this.setKey(this.getKeyForDimensions_());\n    };\n    /**\n     * @param {string} template Template.\n     * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n     */\n    WMTS.prototype.createFromWMTSTemplate = function (template) {\n        var requestEncoding = this.requestEncoding_;\n        // context property names are lower case to allow for a case insensitive\n        // replacement as some services use different naming conventions\n        var context = {\n            'layer': this.layer_,\n            'style': this.style_,\n            'tilematrixset': this.matrixSet_,\n        };\n        if (requestEncoding == WMTSRequestEncoding.KVP) {\n            assign(context, {\n                'Service': 'WMTS',\n                'Request': 'GetTile',\n                'Version': this.version_,\n                'Format': this.format_,\n            });\n        }\n        // TODO: we may want to create our own appendParams function so that params\n        // order conforms to wmts spec guidance, and so that we can avoid to escape\n        // special template params\n        template =\n            requestEncoding == WMTSRequestEncoding.KVP\n                ? appendParams(template, context)\n                : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n                    return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n                });\n        var tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (this.tileGrid);\n        var dimensions = this.dimensions_;\n        return (\n        /**\n         * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {import(\"../proj/Projection.js\").default} projection Projection.\n         * @return {string|undefined} Tile URL.\n         */\n        function (tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n                return undefined;\n            }\n            else {\n                var localContext_1 = {\n                    'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n                    'TileCol': tileCoord[1],\n                    'TileRow': tileCoord[2],\n                };\n                assign(localContext_1, dimensions);\n                var url = template;\n                if (requestEncoding == WMTSRequestEncoding.KVP) {\n                    url = appendParams(url, localContext_1);\n                }\n                else {\n                    url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n                        return localContext_1[p];\n                    });\n                }\n                return url;\n            }\n        });\n    };\n    return WMTS;\n}(TileImage));\nexport default WMTS;\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n    var layers = wmtsCap['Contents']['Layer'];\n    var l = find(layers, function (elt, index, array) {\n        return elt['Identifier'] == config['layer'];\n    });\n    if (l === null) {\n        return null;\n    }\n    var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n    var idx;\n    if (l['TileMatrixSetLink'].length > 1) {\n        if ('projection' in config) {\n            idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n                var tileMatrixSet = find(tileMatrixSets, function (el) {\n                    return el['Identifier'] == elt['TileMatrixSet'];\n                });\n                var supportedCRS = tileMatrixSet['SupportedCRS'];\n                var proj1 = getProjection(supportedCRS);\n                var proj2 = getProjection(config['projection']);\n                if (proj1 && proj2) {\n                    return equivalent(proj1, proj2);\n                }\n                else {\n                    return supportedCRS == config['projection'];\n                }\n            });\n        }\n        else {\n            idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n                return elt['TileMatrixSet'] == config['matrixSet'];\n            });\n        }\n    }\n    else {\n        idx = 0;\n    }\n    if (idx < 0) {\n        idx = 0;\n    }\n    var matrixSet = \n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n    var matrixLimits = \n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n    var format = /** @type {string} */ (l['Format'][0]);\n    if ('format' in config) {\n        format = config['format'];\n    }\n    idx = findIndex(l['Style'], function (elt, index, array) {\n        if ('style' in config) {\n            return elt['Title'] == config['style'];\n        }\n        else {\n            return elt['isDefault'];\n        }\n    });\n    if (idx < 0) {\n        idx = 0;\n    }\n    var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n    var dimensions = {};\n    if ('Dimension' in l) {\n        l['Dimension'].forEach(function (elt, index, array) {\n            var key = elt['Identifier'];\n            var value = elt['Default'];\n            if (value === undefined) {\n                value = elt['Value'][0];\n            }\n            dimensions[key] = value;\n        });\n    }\n    var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n    var matrixSetObj = find(matrixSets, function (elt, index, array) {\n        return elt['Identifier'] == matrixSet;\n    });\n    var projection;\n    var code = matrixSetObj['SupportedCRS'];\n    if (code) {\n        projection = getProjection(code);\n    }\n    if ('projection' in config) {\n        var projConfig = getProjection(config['projection']);\n        if (projConfig) {\n            if (!projection || equivalent(projConfig, projection)) {\n                projection = projConfig;\n            }\n        }\n    }\n    var wrapX = false;\n    var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n    var matrix = matrixSetObj.TileMatrix[0];\n    // create default matrixLimit\n    var selectedMatrixLimit = {\n        MinTileCol: 0,\n        MinTileRow: 0,\n        // subtract one to end up at tile top left\n        MaxTileCol: matrix.MatrixWidth - 1,\n        MaxTileRow: matrix.MatrixHeight - 1,\n    };\n    //in case of matrix limits, use matrix limits to calculate extent\n    if (matrixLimits) {\n        selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n        var m = find(matrixSetObj.TileMatrix, function (tileMatrixValue) {\n            return tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n                matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n                    selectedMatrixLimit.TileMatrix;\n        });\n        if (m) {\n            matrix = m;\n        }\n    }\n    var resolution = (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n    var origin = switchOriginXY\n        ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n        : matrix.TopLeftCorner;\n    var tileSpanX = matrix.TileWidth * resolution;\n    var tileSpanY = matrix.TileHeight * resolution;\n    var matrixSetExtent = matrixSetObj['BoundingBox'];\n    var extent = [\n        origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n        // add one to get proper bottom/right coordinate\n        origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n        origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n        origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n    ];\n    if (matrixSetExtent !== undefined &&\n        !containsExtent(matrixSetExtent, extent)) {\n        var wgs84BoundingBox = l['WGS84BoundingBox'];\n        var wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n        extent = matrixSetExtent;\n        if (wgs84BoundingBox) {\n            wrapX =\n                wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n                    wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n        }\n        else {\n            var wgs84MatrixSetExtent = transformExtent(matrixSetExtent, matrixSetObj['SupportedCRS'], 'EPSG:4326');\n            // Ignore slight deviation from the correct x limits\n            wrapX =\n                wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n                    wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n        }\n    }\n    var tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n    /** @type {!Array<string>} */\n    var urls = [];\n    var requestEncoding = config['requestEncoding'];\n    requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n    if ('OperationsMetadata' in wmtsCap &&\n        'GetTile' in wmtsCap['OperationsMetadata']) {\n        var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n        for (var i = 0, ii = gets.length; i < ii; ++i) {\n            if (gets[i]['Constraint']) {\n                var constraint = find(gets[i]['Constraint'], function (element) {\n                    return element['name'] == 'GetEncoding';\n                });\n                var encodings = constraint['AllowedValues']['Value'];\n                if (requestEncoding === '') {\n                    // requestEncoding not provided, use the first encoding from the list\n                    requestEncoding = encodings[0];\n                }\n                if (requestEncoding === WMTSRequestEncoding.KVP) {\n                    if (includes(encodings, WMTSRequestEncoding.KVP)) {\n                        urls.push(/** @type {string} */ (gets[i]['href']));\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n            else if (gets[i]['href']) {\n                requestEncoding = WMTSRequestEncoding.KVP;\n                urls.push(/** @type {string} */ (gets[i]['href']));\n            }\n        }\n    }\n    if (urls.length === 0) {\n        requestEncoding = WMTSRequestEncoding.REST;\n        l['ResourceURL'].forEach(function (element) {\n            if (element['resourceType'] === 'tile') {\n                format = element['format'];\n                urls.push(/** @type {string} */ (element['template']));\n            }\n        });\n    }\n    return {\n        urls: urls,\n        layer: config['layer'],\n        matrixSet: matrixSet,\n        format: format,\n        projection: projection,\n        requestEncoding: requestEncoding,\n        tileGrid: tileGrid,\n        style: style,\n        dimensions: dimensions,\n        wrapX: wrapX,\n        crossOrigin: config['crossOrigin'],\n    };\n}\n//# sourceMappingURL=WMTS.js.map"],"sourceRoot":""}