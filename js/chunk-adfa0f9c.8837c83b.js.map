{"version":3,"sources":["webpack:///./node_modules/entities/lib/encode.js","webpack:///./node_modules/entities/lib/decode_codepoint.js","webpack:///./node_modules/@openeo/vue-components/components/Description.vue?868b","webpack:///node_modules/@openeo/vue-components/components/Description.vue","webpack:///./node_modules/@openeo/vue-components/components/Description.vue?66aa","webpack:///./node_modules/@openeo/vue-components/components/Description.vue","webpack:///./node_modules/entities/lib/index.js","webpack:///./node_modules/entities/lib/decode.js","webpack:///./node_modules/@openeo/vue-components/components/Description.vue?f17d","webpack:///./node_modules/mdurl/encode.js","webpack:///./node_modules/commonmark/lib/node.js","webpack:///./node_modules/commonmark/lib/from-code-point.js","webpack:///./node_modules/commonmark/lib/common.js","webpack:///./node_modules/commonmark/lib/inlines.js","webpack:///./node_modules/commonmark/lib/blocks.js","webpack:///./node_modules/commonmark/lib/render/renderer.js","webpack:///./node_modules/commonmark/lib/render/html.js","webpack:///./node_modules/commonmark/lib/render/xml.js","webpack:///./node_modules/string.prototype.repeat/repeat.js"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","escape","encodeHTML","encodeXML","xml_json_1","inverseXML","getInverseObj","default","xmlReplacer","getInverseReplacer","getInverse","entities_json_1","inverseHTML","htmlReplacer","obj","keys","sort","reduce","inverse","name","single","multiple","_i","_a","length","k","push","start","end","charCodeAt","count","splice","unshift","join","RegExp","reNonASCII","singleCharReplacer","c","codePointAt","toString","toUpperCase","re","data","replace","reXmlChars","decode_json_1","decodeCodePoint","codePoint","output","String","fromCharCode","render","_vm","_h","$createElement","_c","_self","staticClass","class","compact","domProps","_s","markup","description","staticRenderFns","component","encode","decodeStrict","decode","decode_1","encode_1","level","decodeXML","decodeHTML","decodeHTMLStrict","encode_2","enumerable","get","decode_2","legacy_json_1","decode_codepoint_1","getStrictDecoder","map","getReplacer","str","sorter","a","b","charAt","secondChar","parseInt","substr","slice","legacy","i","j","replacer","encodeCache","getEncodeCache","exclude","ch","cache","test","string","keepEscaped","l","code","nextCode","result","defaultChars","encodeURIComponent","componentChars","module","isContainer","node","_type","resumeAt","entering","current","cur","container","_firstChild","root","_next","_parent","NodeWalker","next","Node","nodeType","sourcepos","_lastChild","_prev","_sourcepos","_lastLineBlank","_lastLineChecked","_open","_string_content","_literal","_listData","_info","_destination","_title","_isFenced","_fenceChar","_fenceLength","_fenceOffset","_level","_onEnter","_onExit","proto","prototype","set","s","type","t","tight","n","delimiter","delim","appendChild","child","unlink","prependChild","insertAfter","sibling","insertBefore","walker","_fromCodePoint","C_BACKSLASH","ENTITY","TAGNAME","ATTRIBUTENAME","UNQUOTEDVALUE","SINGLEQUOTEDVALUE","DOUBLEQUOTEDVALUE","ATTRIBUTEVALUE","ATTRIBUTEVALUESPEC","ATTRIBUTE","OPENTAG","CLOSETAG","HTMLCOMMENT","PROCESSINGINSTRUCTION","DECLARATION","CDATA","HTMLTAG","reHtmlTag","reBackslashOrAmp","ESCAPABLE","reEntityOrEscapedChar","XMLSPECIAL","reXmlSpecial","unescapeChar","unescapeString","normalizeURI","uri","err","replaceUnsafeChar","escapeXml","fromCodePoint","_","e","RangeError","stringFromCharCode","floor","Math","highSurrogate","lowSurrogate","MAX_SIZE","codeUnits","index","arguments","Number","isFinite","apply","C_NEWLINE","C_ASTERISK","C_UNDERSCORE","C_BACKTICK","C_OPEN_BRACKET","C_CLOSE_BRACKET","C_LESSTHAN","C_BANG","C_AMPERSAND","C_OPEN_PAREN","C_CLOSE_PAREN","C_COLON","C_SINGLEQUOTE","C_DOUBLEQUOTE","ESCAPED_CHAR","rePunctuation","reLinkTitle","reLinkDestinationBraces","reEscapable","reEntityHere","reTicks","reTicksHere","reEllipses","reDash","reEmailAutolink","reAutolink","reSpnl","reWhitespaceChar","reUnicodeWhitespaceChar","reFinalSpace","reInitialSpace","reSpaceAtEndOfLine","reLinkLabel","reMain","normalizeReference","trim","toLowerCase","m","exec","subject","pos","peek","spnl","match","parseBackticks","block","ticks","matched","contents","afterOpenTicks","parseBackslash","subj","parseAutolink","dest","parseHtmlTag","scanDelims","cc","char_before","char_after","cc_after","left_flanking","right_flanking","can_open","can_close","after_is_whitespace","after_is_punctuation","before_is_whitespace","before_is_punctuation","numdelims","startpos","handleDelim","res","options","smart","delimiters","origdelims","previous","removeDelimiter","removeDelimitersBetween","bottom","top","processEmphasis","stack_bottom","opener","closer","old_closer","opener_inl","closer_inl","tempstack","use_delims","tmp","opener_found","openers_bottom","odd_match","closercc","emph","literal","parseLinkTitle","title","parseLinkDestination","savepos","openparens","parseLinkLabel","parseOpenBracket","addBracket","parseBang","parseCloseBracket","is_image","reflabel","brackets","active","removeBracket","image","beforelabel","bracketAfter","link","refmap","destination","previousDelimiter","parseEntity","parseString","chars","enCount","emCount","repeat","parseNewline","lastc","hardbreak","parseReference","rawlabel","matchChars","beforetitle","atLineEnd","normlabel","parseInline","parseInlines","InlineParser","parse","CODE_INDENT","C_TAB","C_GREATERTHAN","C_SPACE","reHtmlBlockOpen","reHtmlBlockClose","reThematicBreak","reMaybeSpecial","reNonSpace","reBulletListMarker","reOrderedListMarker","reATXHeadingMarker","reCodeFence","reClosingCodeFence","reSetextHeadingLine","reLineEnding","isBlank","isSpaceOrTab","ln","endsWithBlankLine","addLine","partiallyConsumedTab","offset","charsToTab","column","tip","currentLine","addChild","tag","blocks","canContain","finalize","lineNumber","column_number","newBlock","parseListMarker","parser","nextc","spacesStartCol","spacesStartOffset","rest","nextNonspace","bulletChar","padding","markerOffset","indent","advanceNextNonspace","advanceOffset","blank_item","spaces_after_marker","listsMatch","list_data","item_data","closeUnmatchedBlocks","allClosed","oldtip","lastMatchedContainer","parent","document","continue","acceptsLines","list","item","subitem","block_quote","indented","blank","heading","thematic_break","code_block","lastLineLength","content","newlinePos","indexOf","firstLine","info","html_block","_htmlBlockType","paragraph","hasReferenceDefs","inlineParser","blockStarts","fenceLength","blockType","columns","charsToAdvance","nextNonspaceColumn","findNextNonspace","cols","incorporateLine","lastChild","all_matched","doc","matchedLeaf","starts","startsLen","lastLineBlank","cont","above","processInlines","event","Document","input","time","console","lines","split","len","timeEnd","Parser","Renderer","ast","buffer","lastOut","lit","cr","out","esc","reUnsafeProtocol","reSafeDataProtocol","potentiallyUnsafe","url","attrs","selfclosing","disableTags","attrib","undefined","HtmlRenderer","softbreak","linebreak","safe","strong","grandparent","listTight","tagname","info_words","listType","listStart","html_inline","custom_inline","onEnter","onExit","custom_block","att","create","text","reXMLTag","toTagName","XmlRenderer","indentLevel","selfClosing","nodetype","listDelimiter","delimword","object","$defineProperty","error","TypeError","Infinity"],"mappings":"oJACA,IAAIA,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,IAExDE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQE,OAASF,EAAQG,WAAaH,EAAQI,eAAY,EAC1D,IAAIC,EAAaX,EAAgB,EAAQ,SACrCY,EAAaC,EAAcF,EAAWG,SACtCC,EAAcC,EAAmBJ,GACrCN,EAAQI,UAAYO,EAAWL,EAAYG,GAC3C,IAAIG,EAAkBlB,EAAgB,EAAQ,SAC1CmB,EAAcN,EAAcK,EAAgBJ,SAC5CM,EAAeJ,EAAmBG,GAEtC,SAASN,EAAcQ,GACnB,OAAOjB,OAAOkB,KAAKD,GACdE,OACAC,QAAO,SAAUC,EAASC,GAE3B,OADAD,EAAQJ,EAAIK,IAAS,IAAMA,EAAO,IAC3BD,IACR,IAEP,SAAST,EAAmBS,GAGxB,IAFA,IAAIE,EAAS,GACTC,EAAW,GACNC,EAAK,EAAGC,EAAK1B,OAAOkB,KAAKG,GAAUI,EAAKC,EAAGC,OAAQF,IAAM,CAC9D,IAAIG,EAAIF,EAAGD,GACM,IAAbG,EAAED,OAEFJ,EAAOM,KAAK,KAAOD,GAInBJ,EAASK,KAAKD,GAItBL,EAAOJ,OACP,IAAK,IAAIW,EAAQ,EAAGA,EAAQP,EAAOI,OAAS,EAAGG,IAAS,CAEpD,IAAIC,EAAMD,EACV,MAAOC,EAAMR,EAAOI,OAAS,GACzBJ,EAAOQ,GAAKC,WAAW,GAAK,IAAMT,EAAOQ,EAAM,GAAGC,WAAW,GAC7DD,GAAO,EAEX,IAAIE,EAAQ,EAAIF,EAAMD,EAElBG,EAAQ,GAEZV,EAAOW,OAAOJ,EAAOG,EAAOV,EAAOO,GAAS,IAAMP,EAAOQ,IAG7D,OADAP,EAASW,QAAQ,IAAMZ,EAAOa,KAAK,IAAM,KAClC,IAAIC,OAAOb,EAASY,KAAK,KAAM,KAvC1ClC,EAAQG,WAAaQ,EAAWE,EAAaC,GAyC7C,IAAIsB,EAAa,0IACjB,SAASC,EAAmBC,GAExB,MAAO,MAAQA,EAAEC,YAAY,GAAGC,SAAS,IAAIC,cAAgB,IAEjE,SAAS9B,EAAWQ,EAASuB,GACzB,OAAO,SAAUC,GACb,OAAOA,EACFC,QAAQF,GAAI,SAAUtB,GAAQ,OAAOD,EAAQC,MAC7CwB,QAAQR,EAAYC,IAGjC,IAAIQ,EAAanC,EAAmBJ,GACpC,SAASJ,EAAOyC,GACZ,OAAOA,EACFC,QAAQC,EAAYR,GACpBO,QAAQR,EAAYC,GAE7BrC,EAAQE,OAASA,G,uXCvEjB,IAAIR,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,IAExDE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,IAAI6C,EAAgBpD,EAAgB,EAAQ,SAE5C,SAASqD,EAAgBC,GACrB,GAAKA,GAAa,OAAUA,GAAa,OAAWA,EAAY,QAC5D,MAAO,IAEPA,KAAaF,EAActC,UAC3BwC,EAAYF,EAActC,QAAQwC,IAEtC,IAAIC,EAAS,GAOb,OANID,EAAY,QACZA,GAAa,MACbC,GAAUC,OAAOC,aAAeH,IAAc,GAAM,KAAS,OAC7DA,EAAY,MAAsB,KAAZA,GAE1BC,GAAUC,OAAOC,aAAaH,GACvBC,EAEXjD,EAAQQ,QAAUuC,G,yCCvBlB,IAAIK,EAAS,WAAa,IAAIC,EAAI1D,KAAS2D,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,mCAAmCC,MAAM,CAACC,QAASP,EAAIO,SAASC,SAAS,CAAC,UAAYR,EAAIS,GAAGT,EAAIU,OAAOV,EAAIW,kBAC9NC,EAAkB,G,wBCOtB,GACA,mBACA,OACA,aACA,YACA,YAEA,cACA,cACA,cAEA,WACA,cACA,cAEA,YACA,YACA,cAEA,SACA,aACA,YAEA,WACA,aACA,aAGA,eACA,8BAEA,SACA,UACA,uBACA,SAKA,oCACA,yDACA,oBAKA,sBACA,yDACA,wCACA,wBAEA,iBACA,cAUA,MATA,qCACA,qBAIA,oCACA,2DAGA,GAEA,iBACA,2DACA,mDACA,mFC3EmS,I,wBCQ/RC,EAAY,eACd,EACAd,EACAa,GACA,EACA,KACA,KACA,MAIa,aAAAC,E,6CClBfpE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQmE,OAASnE,EAAQoE,aAAepE,EAAQqE,YAAS,EACzD,IAAIC,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QAOvB,SAASF,EAAO1B,EAAM6B,GAClB,QAASA,GAASA,GAAS,EAAIF,EAASG,UAAYH,EAASI,YAAY/B,GAS7E,SAASyB,EAAazB,EAAM6B,GACxB,QAASA,GAASA,GAAS,EAAIF,EAASG,UAAYH,EAASK,kBAAkBhC,GASnF,SAASwB,EAAOxB,EAAM6B,GAClB,QAASA,GAASA,GAAS,EAAID,EAASnE,UAAYmE,EAASpE,YAAYwC,GAlB7E3C,EAAQqE,OAASA,EAUjBrE,EAAQoE,aAAeA,EAUvBpE,EAAQmE,OAASA,EACjB,IAAIS,EAAW,EAAQ,QACvB9E,OAAOC,eAAeC,EAAS,YAAa,CAAE6E,YAAY,EAAMC,IAAK,WAAc,OAAOF,EAASxE,aACnGN,OAAOC,eAAeC,EAAS,aAAc,CAAE6E,YAAY,EAAMC,IAAK,WAAc,OAAOF,EAASzE,cACpGL,OAAOC,eAAeC,EAAS,SAAU,CAAE6E,YAAY,EAAMC,IAAK,WAAc,OAAOF,EAAS1E,UAEhGJ,OAAOC,eAAeC,EAAS,cAAe,CAAE6E,YAAY,EAAMC,IAAK,WAAc,OAAOF,EAASzE,cACrGL,OAAOC,eAAeC,EAAS,cAAe,CAAE6E,YAAY,EAAMC,IAAK,WAAc,OAAOF,EAASzE,cACrG,IAAI4E,EAAW,EAAQ,QACvBjF,OAAOC,eAAeC,EAAS,YAAa,CAAE6E,YAAY,EAAMC,IAAK,WAAc,OAAOC,EAASN,aACnG3E,OAAOC,eAAeC,EAAS,aAAc,CAAE6E,YAAY,EAAMC,IAAK,WAAc,OAAOC,EAASL,cACpG5E,OAAOC,eAAeC,EAAS,mBAAoB,CAAE6E,YAAY,EAAMC,IAAK,WAAc,OAAOC,EAASJ,oBAE1G7E,OAAOC,eAAeC,EAAS,cAAe,CAAE6E,YAAY,EAAMC,IAAK,WAAc,OAAOC,EAASL,cACrG5E,OAAOC,eAAeC,EAAS,cAAe,CAAE6E,YAAY,EAAMC,IAAK,WAAc,OAAOC,EAASL,cACrG5E,OAAOC,eAAeC,EAAS,oBAAqB,CAAE6E,YAAY,EAAMC,IAAK,WAAc,OAAOC,EAASJ,oBAC3G7E,OAAOC,eAAeC,EAAS,oBAAqB,CAAE6E,YAAY,EAAMC,IAAK,WAAc,OAAOC,EAASJ,oBAC3G7E,OAAOC,eAAeC,EAAS,kBAAmB,CAAE6E,YAAY,EAAMC,IAAK,WAAc,OAAOC,EAASN,c,2DClDzG,IAAI/E,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,IAExDE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ0E,WAAa1E,EAAQ2E,iBAAmB3E,EAAQyE,eAAY,EACpE,IAAI7D,EAAkBlB,EAAgB,EAAQ,SAC1CsF,EAAgBtF,EAAgB,EAAQ,SACxCW,EAAaX,EAAgB,EAAQ,SACrCuF,EAAqBvF,EAAgB,EAAQ,SAGjD,SAASwF,EAAiBC,GACtB,IAAInE,EAAOlB,OAAOkB,KAAKmE,GAAKjD,KAAK,KAC7BU,EAAUwC,EAAYD,GAC1BnE,GAAQ,2BACR,IAAI0B,EAAK,IAAIP,OAAO,OAASnB,EAAO,KAAM,KAC1C,OAAO,SAAUqE,GAAO,OAAOnC,OAAOmC,GAAKzC,QAAQF,EAAIE,IAP3D5C,EAAQyE,UAAYS,EAAiB7E,EAAWG,SAChDR,EAAQ2E,iBAAmBO,EAAiBtE,EAAgBJ,SAQ5D,IAAI8E,EAAS,SAAUC,EAAGC,GAAK,OAAQD,EAAIC,EAAI,GAAK,GAuBpD,SAASJ,EAAYD,GACjB,OAAO,SAAiBE,GACpB,GAAsB,MAAlBA,EAAII,OAAO,GAAY,CACvB,IAAIC,EAAaL,EAAII,OAAO,GAC5B,MAAmB,MAAfC,GAAqC,MAAfA,EACfT,EAAmBzE,QAAQmF,SAASN,EAAIO,OAAO,GAAI,KAEvDX,EAAmBzE,QAAQmF,SAASN,EAAIO,OAAO,GAAI,KAE9D,OAAOT,EAAIE,EAAIQ,MAAM,GAAI,KA/BjC7F,EAAQ0E,WAAa,WAGjB,IAFA,IAAIoB,EAAShG,OAAOkB,KAAKgE,EAAcxE,SAASS,KAAKqE,GACjDtE,EAAOlB,OAAOkB,KAAKJ,EAAgBJ,SAASS,KAAKqE,GAC5CS,EAAI,EAAGC,EAAI,EAAGD,EAAI/E,EAAKS,OAAQsE,IAChCD,EAAOE,KAAOhF,EAAK+E,IACnB/E,EAAK+E,IAAM,KACXC,KAGAhF,EAAK+E,IAAM,IAGnB,IAAIrD,EAAK,IAAIP,OAAO,OAASnB,EAAKkB,KAAK,KAAO,gCAAiC,KAC3EU,EAAUwC,EAAYxE,EAAgBJ,SAC1C,SAASyF,EAASZ,GAGd,MAFuB,MAAnBA,EAAIO,QAAQ,KACZP,GAAO,KACJzC,EAAQyC,GAGnB,OAAO,SAAUA,GAAO,OAAOnC,OAAOmC,GAAKzC,QAAQF,EAAIuD,IApBtC,I,wzCCpBrB,W,kCCIA,IAAIC,EAAc,GAMlB,SAASC,EAAeC,GACtB,IAAIL,EAAGM,EAAIC,EAAQJ,EAAYE,GAC/B,GAAIE,EAAS,OAAOA,EAIpB,IAFAA,EAAQJ,EAAYE,GAAW,GAE1BL,EAAI,EAAGA,EAAI,IAAKA,IACnBM,EAAKnD,OAAOC,aAAa4C,GAErB,cAAcQ,KAAKF,GAErBC,EAAM3E,KAAK0E,GAEXC,EAAM3E,KAAK,KAAO,IAAMoE,EAAEvD,SAAS,IAAIC,eAAeoD,OAAO,IAIjE,IAAKE,EAAI,EAAGA,EAAIK,EAAQ3E,OAAQsE,IAC9BO,EAAMF,EAAQtE,WAAWiE,IAAMK,EAAQL,GAGzC,OAAOO,EAWT,SAASnC,EAAOqC,EAAQJ,EAASK,GAC/B,IAAIV,EAAGW,EAAGC,EAAMC,EAAUN,EACtBO,EAAS,GAcb,IAZuB,kBAAZT,IAETK,EAAeL,EACfA,EAAUjC,EAAO2C,cAGQ,qBAAhBL,IACTA,GAAc,GAGhBH,EAAQH,EAAeC,GAElBL,EAAI,EAAGW,EAAIF,EAAO/E,OAAQsE,EAAIW,EAAGX,IAGpC,GAFAY,EAAOH,EAAO1E,WAAWiE,GAErBU,GAAwB,KAATE,GAAyBZ,EAAI,EAAIW,GAC9C,iBAAiBH,KAAKC,EAAOX,MAAME,EAAI,EAAGA,EAAI,IAChDc,GAAUL,EAAOX,MAAME,EAAGA,EAAI,GAC9BA,GAAK,OAKT,GAAIY,EAAO,IACTE,GAAUP,EAAMK,QAIlB,GAAIA,GAAQ,OAAUA,GAAQ,MAA9B,CACE,GAAIA,GAAQ,OAAUA,GAAQ,OAAUZ,EAAI,EAAIW,IAC9CE,EAAWJ,EAAO1E,WAAWiE,EAAI,GAC7Ba,GAAY,OAAUA,GAAY,OAAQ,CAC5CC,GAAUE,mBAAmBP,EAAOT,GAAKS,EAAOT,EAAI,IACpDA,IACA,SAGJc,GAAU,iBAIZA,GAAUE,mBAAmBP,EAAOT,IAGtC,OAAOc,EAGT1C,EAAO2C,aAAiB,uBACxB3C,EAAO6C,eAAiB,YAGxBC,EAAOjH,QAAUmE,G,2g5BC/FjB,SAAS+C,EAAYC,GACjB,OAAQA,EAAKC,OACT,IAAK,WACL,IAAK,cACL,IAAK,OACL,IAAK,OACL,IAAK,YACL,IAAK,UACL,IAAK,OACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,gBACL,IAAK,eACD,OAAO,EACX,QACI,OAAO,G,yNAInB,IAAIC,EAAW,SAASF,EAAMG,GAC1B3H,KAAK4H,QAAUJ,EACfxH,KAAK2H,UAAwB,IAAbA,GAGhB,EAAO,WACP,IAAIE,EAAM7H,KAAK4H,QACXD,EAAW3H,KAAK2H,SAEpB,GAAY,OAARE,EACA,OAAO,KAGX,IAAIC,EAAYP,EAAYM,GAoB5B,OAlBIF,GAAYG,EACRD,EAAIE,aACJ/H,KAAK4H,QAAUC,EAAIE,YACnB/H,KAAK2H,UAAW,GAGhB3H,KAAK2H,UAAW,EAEbE,IAAQ7H,KAAKgI,KACpBhI,KAAK4H,QAAU,KACM,OAAdC,EAAII,OACXjI,KAAK4H,QAAUC,EAAIK,QACnBlI,KAAK2H,UAAW,IAEhB3H,KAAK4H,QAAUC,EAAII,MACnBjI,KAAK2H,UAAW,GAGb,CAAEA,SAAUA,EAAUH,KAAMK,IAGnCM,EAAa,SAASH,GACtB,MAAO,CACHJ,QAASI,EACTA,KAAMA,EACNL,UAAU,EACVS,KAAM,EACNV,SAAUA,IAIdW,EAAO,SAASC,EAAUC,GAC1BvI,KAAKyH,MAAQa,EACbtI,KAAKkI,QAAU,KACflI,KAAK+H,YAAc,KACnB/H,KAAKwI,WAAa,KAClBxI,KAAKyI,MAAQ,KACbzI,KAAKiI,MAAQ,KACbjI,KAAK0I,WAAaH,EAClBvI,KAAK2I,gBAAiB,EACtB3I,KAAK4I,kBAAmB,EACxB5I,KAAK6I,OAAQ,EACb7I,KAAK8I,gBAAkB,KACvB9I,KAAK+I,SAAW,KAChB/I,KAAKgJ,UAAY,GACjBhJ,KAAKiJ,MAAQ,KACbjJ,KAAKkJ,aAAe,KACpBlJ,KAAKmJ,OAAS,KACdnJ,KAAKoJ,WAAY,EACjBpJ,KAAKqJ,WAAa,KAClBrJ,KAAKsJ,aAAe,EACpBtJ,KAAKuJ,aAAe,KACpBvJ,KAAKwJ,OAAS,KACdxJ,KAAKyJ,SAAW,KAChBzJ,KAAK0J,QAAU,MAGfC,EAAQtB,EAAKuB,UAEjBzJ,OAAOC,eAAeuJ,EAAO,cAAe,CACxCxE,IAAK,WACD,OAAOoC,EAAYvH,SAI3BG,OAAOC,eAAeuJ,EAAO,OAAQ,CACjCxE,IAAK,WACD,OAAOnF,KAAKyH,SAIpBtH,OAAOC,eAAeuJ,EAAO,aAAc,CACvCxE,IAAK,WACD,OAAOnF,KAAK+H,eAIpB5H,OAAOC,eAAeuJ,EAAO,YAAa,CACtCxE,IAAK,WACD,OAAOnF,KAAKwI,cAIpBrI,OAAOC,eAAeuJ,EAAO,OAAQ,CACjCxE,IAAK,WACD,OAAOnF,KAAKiI,SAIpB9H,OAAOC,eAAeuJ,EAAO,OAAQ,CACjCxE,IAAK,WACD,OAAOnF,KAAKyI,SAIpBtI,OAAOC,eAAeuJ,EAAO,SAAU,CACnCxE,IAAK,WACD,OAAOnF,KAAKkI,WAIpB/H,OAAOC,eAAeuJ,EAAO,YAAa,CACtCxE,IAAK,WACD,OAAOnF,KAAK0I,cAIpBvI,OAAOC,eAAeuJ,EAAO,UAAW,CACpCxE,IAAK,WACD,OAAOnF,KAAK+I,UAEhBc,IAAK,SAASC,GACV9J,KAAK+I,SAAWe,KAIxB3J,OAAOC,eAAeuJ,EAAO,cAAe,CACxCxE,IAAK,WACD,OAAOnF,KAAKkJ,cAEhBW,IAAK,SAASC,GACV9J,KAAKkJ,aAAeY,KAI5B3J,OAAOC,eAAeuJ,EAAO,QAAS,CAClCxE,IAAK,WACD,OAAOnF,KAAKmJ,QAEhBU,IAAK,SAASC,GACV9J,KAAKmJ,OAASW,KAItB3J,OAAOC,eAAeuJ,EAAO,OAAQ,CACjCxE,IAAK,WACD,OAAOnF,KAAKiJ,OAEhBY,IAAK,SAASC,GACV9J,KAAKiJ,MAAQa,KAIrB3J,OAAOC,eAAeuJ,EAAO,QAAS,CAClCxE,IAAK,WACD,OAAOnF,KAAKwJ,QAEhBK,IAAK,SAASC,GACV9J,KAAKwJ,OAASM,KAItB3J,OAAOC,eAAeuJ,EAAO,WAAY,CACrCxE,IAAK,WACD,OAAOnF,KAAKgJ,UAAUe,MAE1BF,IAAK,SAASG,GACVhK,KAAKgJ,UAAUe,KAAOC,KAI9B7J,OAAOC,eAAeuJ,EAAO,YAAa,CACtCxE,IAAK,WACD,OAAOnF,KAAKgJ,UAAUiB,OAE1BJ,IAAK,SAASG,GACVhK,KAAKgJ,UAAUiB,MAAQD,KAI/B7J,OAAOC,eAAeuJ,EAAO,YAAa,CACtCxE,IAAK,WACD,OAAOnF,KAAKgJ,UAAU/G,OAE1B4H,IAAK,SAASK,GACVlK,KAAKgJ,UAAU/G,MAAQiI,KAI/B/J,OAAOC,eAAeuJ,EAAO,gBAAiB,CAC1CxE,IAAK,WACD,OAAOnF,KAAKgJ,UAAUmB,WAE1BN,IAAK,SAASO,GACVpK,KAAKgJ,UAAUmB,UAAYC,KAInCjK,OAAOC,eAAeuJ,EAAO,UAAW,CACpCxE,IAAK,WACD,OAAOnF,KAAKyJ,UAEhBI,IAAK,SAASC,GACV9J,KAAKyJ,SAAWK,KAIxB3J,OAAOC,eAAeuJ,EAAO,SAAU,CACnCxE,IAAK,WACD,OAAOnF,KAAK0J,SAEhBG,IAAK,SAASC,GACV9J,KAAK0J,QAAUI,KAIvBzB,EAAKuB,UAAUS,YAAc,SAASC,GAClCA,EAAMC,SACND,EAAMpC,QAAUlI,KACZA,KAAKwI,YACLxI,KAAKwI,WAAWP,MAAQqC,EACxBA,EAAM7B,MAAQzI,KAAKwI,WACnBxI,KAAKwI,WAAa8B,IAElBtK,KAAK+H,YAAcuC,EACnBtK,KAAKwI,WAAa8B,IAI1BjC,EAAKuB,UAAUY,aAAe,SAASF,GACnCA,EAAMC,SACND,EAAMpC,QAAUlI,KACZA,KAAK+H,aACL/H,KAAK+H,YAAYU,MAAQ6B,EACzBA,EAAMrC,MAAQjI,KAAK+H,YACnB/H,KAAK+H,YAAcuC,IAEnBtK,KAAK+H,YAAcuC,EACnBtK,KAAKwI,WAAa8B,IAI1BjC,EAAKuB,UAAUW,OAAS,WAChBvK,KAAKyI,MACLzI,KAAKyI,MAAMR,MAAQjI,KAAKiI,MACjBjI,KAAKkI,UACZlI,KAAKkI,QAAQH,YAAc/H,KAAKiI,OAEhCjI,KAAKiI,MACLjI,KAAKiI,MAAMQ,MAAQzI,KAAKyI,MACjBzI,KAAKkI,UACZlI,KAAKkI,QAAQM,WAAaxI,KAAKyI,OAEnCzI,KAAKkI,QAAU,KACflI,KAAKiI,MAAQ,KACbjI,KAAKyI,MAAQ,MAGjBJ,EAAKuB,UAAUa,YAAc,SAASC,GAClCA,EAAQH,SACRG,EAAQzC,MAAQjI,KAAKiI,MACjByC,EAAQzC,QACRyC,EAAQzC,MAAMQ,MAAQiC,GAE1BA,EAAQjC,MAAQzI,KAChBA,KAAKiI,MAAQyC,EACbA,EAAQxC,QAAUlI,KAAKkI,QAClBwC,EAAQzC,QACTyC,EAAQxC,QAAQM,WAAakC,IAIrCrC,EAAKuB,UAAUe,aAAe,SAASD,GACnCA,EAAQH,SACRG,EAAQjC,MAAQzI,KAAKyI,MACjBiC,EAAQjC,QACRiC,EAAQjC,MAAMR,MAAQyC,GAE1BA,EAAQzC,MAAQjI,KAChBA,KAAKyI,MAAQiC,EACbA,EAAQxC,QAAUlI,KAAKkI,QAClBwC,EAAQjC,QACTiC,EAAQxC,QAAQH,YAAc2C,IAItCrC,EAAKuB,UAAUgB,OAAS,WACpB,IAAIA,EAAS,IAAIzC,EAAWnI,MAC5B,OAAO4K,GAGI,ICzTXC,EDyTW,I,iCEzTXC,EAAc,GAEdC,EAAS,wDAETC,EAAU,wBACVC,EAAgB,6BAChBC,EAAgB,yBAChBC,EAAoB,UACpBC,EAAoB,UACpBC,EACA,MACAH,EACA,IACAC,EACA,IACAC,EACA,IACAE,EAAqB,eAA2BD,EAAiB,IACjEE,EAAY,UAAiBN,EAAgBK,EAAqB,KAClEE,EAAU,IAAMR,EAAUO,EAAhB,WACVE,EAAW,KAAOT,EAAU,UAC5BU,EAAc,oDACdC,EAAwB,yBACxBC,EAAc,qBACdC,EAAQ,iCACRC,EACA,MACAN,EACA,IACAC,EACA,IACAC,EACA,IACAC,EACA,IACAC,EACA,IACAC,EACA,IACAE,EAAY,IAAIvJ,OAAO,IAAMsJ,GAE7BE,EAAmB,QAEnBC,EAAY,2CAEZC,EAAwB,IAAI1J,OAAO,OAASyJ,EAAY,IAAMlB,EAAQ,MAEtEoB,EAAa,SAEbC,EAAe,IAAI5J,OAAO2J,EAAY,KAEtCE,EAAe,SAASvC,GACxB,OAAIA,EAAE3H,WAAW,KAAO2I,EACbhB,EAAEhE,OAAO,GAET,wBAAWgE,IAKtBwC,EAAiB,SAASxC,GAC1B,OAAIkC,EAAiBpF,KAAKkD,GACfA,EAAE7G,QAAQiJ,EAAuBG,GAEjCvC,GAIXyC,EAAe,SAASC,GACxB,IACI,OAAO,IAAOA,GAChB,MAAOC,GACL,OAAOD,IAIXE,EAAoB,SAAS5C,GAC7B,OAAQA,GACJ,IAAK,IACD,MAAO,QACX,IAAK,IACD,MAAO,OACX,IAAK,IACD,MAAO,OACX,IAAK,IACD,MAAO,SACX,QACI,OAAOA,IAIf6C,EAAY,SAAS7C,GACrB,OAAIsC,EAAaxF,KAAKkD,GACXA,EAAE7G,QAAQmJ,EAAcM,GAExB5C,GD7FA,SAAS8C,EAAcC,GAClC,OAAOhC,EAAegC,GAG1B,GAAItJ,OAAOqJ,cACP/B,EAAiB,SAASgC,GACtB,IACI,OAAOtJ,OAAOqJ,cAAcC,GAC9B,MAAOC,GACL,GAAIA,aAAaC,WACb,OAAOxJ,OAAOC,aAAa,OAE/B,MAAMsJ,QAGX,CACH,IAAIE,EAAqBzJ,OAAOC,aAC5ByJ,EAAQC,KAAKD,MACjBpC,EAAiB,WACb,IAEIsC,EACAC,EAHAC,EAAW,MACXC,EAAY,GAGZC,GAAS,EACTzL,EAAS0L,UAAU1L,OACvB,IAAKA,EACD,MAAO,GAEX,IAAIoF,EAAS,GACb,QAASqG,EAAQzL,EAAQ,CACrB,IAAIuB,EAAYoK,OAAOD,UAAUD,IACjC,IACKG,SAASrK,IACVA,EAAY,GACZA,EAAY,SACZ4J,EAAM5J,KAAeA,EAErB,OAAOE,OAAOC,aAAa,OAE3BH,GAAa,MAEbiK,EAAUtL,KAAKqB,IAIfA,GAAa,MACb8J,EAAoC,OAAnB9J,GAAa,IAC9B+J,EAAgB/J,EAAY,KAAS,MACrCiK,EAAUtL,KAAKmL,EAAeC,KAE9BG,EAAQ,IAAMzL,GAAUwL,EAAUxL,OAASuL,KAC3CnG,GAAU8F,EAAmBW,MAAM,KAAML,GACzCA,EAAUxL,OAAS,GAG3B,OAAOoF,G,cEtDX,EAAe,EACf,EAAiB,EAIjB0G,EAAY,GACZC,EAAa,GACbC,EAAe,GACfC,EAAa,GACbC,EAAiB,GACjBC,EAAkB,GAClBC,EAAa,GACbC,GAAS,GACT,GAAc,GACdC,GAAc,GACdC,GAAe,GACfC,GAAgB,GAChBC,GAAU,GACVC,GAAgB,GAChBC,GAAgB,GAIhB,GAAY,EACZC,GAAe,OAAS,GAExB,GAAS,EACT,GAAY,EAEZC,GAAgB,IAAInM,OACpB,mpDAGAoM,GAAc,IAAIpM,OAClB,SACIkM,GADJ,oBAKIA,GALJ,qBASIA,GACA,qBAGJG,GAA0B,gCAE1BC,GAAc,IAAItM,OAAO,IAAM,IAE/BuM,GAAe,IAAIvM,OAAO,IAAM,GAAQ,KAExCwM,GAAU,KAEVC,GAAc,MAEdC,GAAa,UAEbC,GAAS,OAETC,GAAkB,2IAElBC,GAAa,mDAEbC,GAAS,eAETC,GAAmB,uBAEnBC,GAA0B,MAE1BC,GAAe,MAEfC,GAAiB,MAEjBC,GAAqB,cAErBC,GAAc,iCAGdC,GAAS,yBAET,GAAO,SAAS/F,GAChB,IAAItC,EAAO,IAAI,EAAK,QAEpB,OADAA,EAAKuB,SAAWe,EACTtC,GAMPsI,GAAqB,SAASjJ,GAC9B,OAAOA,EACFX,MAAM,EAAGW,EAAO/E,OAAS,GACzBiO,OACA9M,QAAQ,aAAc,KACtB+M,cACAlN,eAWL,GAAQ,SAASC,GACjB,IAAIkN,EAAIlN,EAAGmN,KAAKlQ,KAAKmQ,QAAQjK,MAAMlG,KAAKoQ,MACxC,OAAU,OAANH,EACO,MAEPjQ,KAAKoQ,KAAOH,EAAE1C,MAAQ0C,EAAE,GAAGnO,OACpBmO,EAAE,KAMbI,GAAO,WACP,OAAIrQ,KAAKoQ,IAAMpQ,KAAKmQ,QAAQrO,OACjB9B,KAAKmQ,QAAQhO,WAAWnC,KAAKoQ,MAE5B,GAKZE,GAAO,WAEP,OADAtQ,KAAKuQ,MAAMjB,KACJ,GASPkB,GAAiB,SAASC,GAC1B,IAAIC,EAAQ1Q,KAAKuQ,MAAMtB,IACvB,GAAc,OAAVyB,EACA,OAAO,EAEX,IACIC,EACAnJ,EACAoJ,EAHAC,EAAiB7Q,KAAKoQ,IAI1B,MAA2C,QAAnCO,EAAU3Q,KAAKuQ,MAAMvB,KACzB,GAAI2B,IAAYD,EAgBZ,OAfAlJ,EAAO,IAAI,EAAK,QAChBoJ,EAAW5Q,KAAKmQ,QACXjK,MAAM2K,EAAgB7Q,KAAKoQ,IAAMM,EAAM5O,QACvCmB,QAAQ,OAAQ,KAEjB2N,EAAS9O,OAAS,GACS,OAA3B8O,EAASL,MAAM,SACA,KAAfK,EAAS,IACwB,KAAjCA,EAASA,EAAS9O,OAAS,GAE3B0F,EAAKuB,SAAW6H,EAAS1K,MAAM,EAAG0K,EAAS9O,OAAS,GAEpD0F,EAAKuB,SAAW6H,EAEpBH,EAAMpG,YAAY7C,IACX,EAMf,OAFAxH,KAAKoQ,IAAMS,EACXJ,EAAMpG,YAAY,GAAKqG,KAChB,GAOPI,GAAiB,SAASL,GAC1B,IACIjJ,EADAuJ,EAAO/Q,KAAKmQ,QAahB,OAXAnQ,KAAKoQ,KAAO,EACRpQ,KAAKqQ,SAAWzC,GAChB5N,KAAKoQ,KAAO,EACZ5I,EAAO,IAAI,EAAK,aAChBiJ,EAAMpG,YAAY7C,IACXsH,GAAYlI,KAAKmK,EAAKjL,OAAO9F,KAAKoQ,OACzCK,EAAMpG,YAAY,GAAK0G,EAAKjL,OAAO9F,KAAKoQ,OACxCpQ,KAAKoQ,KAAO,GAEZK,EAAMpG,YAAY,GAAK,QAEpB,GAIP2G,GAAgB,SAASP,GACzB,IAAIR,EACAgB,EACAzJ,EACJ,OAAKyI,EAAIjQ,KAAKuQ,MAAMnB,MAChB6B,EAAOhB,EAAE/J,MAAM,EAAG+J,EAAEnO,OAAS,GAC7B0F,EAAO,IAAI,EAAK,QAChBA,EAAK0B,aAAe,EAAa,UAAY+H,GAC7CzJ,EAAK2B,OAAS,GACd3B,EAAK6C,YAAY,GAAK4G,IACtBR,EAAMpG,YAAY7C,IACX,MACCyI,EAAIjQ,KAAKuQ,MAAMlB,OACvB4B,EAAOhB,EAAE/J,MAAM,EAAG+J,EAAEnO,OAAS,GAC7B0F,EAAO,IAAI,EAAK,QAChBA,EAAK0B,aAAe,EAAa+H,GACjCzJ,EAAK2B,OAAS,GACd3B,EAAK6C,YAAY,GAAK4G,IACtBR,EAAMpG,YAAY7C,IACX,IAOX0J,GAAe,SAAST,GACxB,IAAIR,EAAIjQ,KAAKuQ,MAAM,IACnB,GAAU,OAANN,EACA,OAAO,EAEP,IAAIzI,EAAO,IAAI,EAAK,eAGpB,OAFAA,EAAKuB,SAAWkH,EAChBQ,EAAMpG,YAAY7C,IACX,GAQX2J,GAAa,SAASC,GACtB,IACIC,EAAaC,EAAYC,EAEzBC,EAAeC,EAAgBC,EAAUC,EACzCC,EACAC,EACAC,EACAC,EAPAC,EAAY,EAEZC,EAAWjS,KAAKoQ,IAOpB,GAAIgB,IAAO5C,IAAiB4C,IAAO3C,GAC/BuD,IACAhS,KAAKoQ,WAEL,MAAOpQ,KAAKqQ,SAAWe,EACnBY,IACAhS,KAAKoQ,MAIb,OAAkB,IAAd4B,EACO,MAGXX,EAA2B,IAAbY,EAAiB,KAAOjS,KAAKmQ,QAAQrK,OAAOmM,EAAW,GAErEV,EAAWvR,KAAKqQ,OAEZiB,GADc,IAAdC,EACa,KAEA3E,EAAc2E,GAG/BK,EAAsBpC,GAAwB5I,KAAK0K,GACnDO,EAAuBlD,GAAc/H,KAAK0K,GAC1CQ,EAAuBtC,GAAwB5I,KAAKyK,GACpDU,EAAwBpD,GAAc/H,KAAKyK,GAE3CG,GACKI,KACCC,GACEC,GACAC,GACRN,GACKK,KACCC,GAAyBH,GAAuBC,GAClDT,IAAOtD,GACP4D,EAAWF,KAAmBC,GAAkBM,GAChDJ,EAAYF,KAAoBD,GAAiBK,IAC1CT,IAAO5C,IAAiB4C,IAAO3C,IACtCiD,EAAWF,IAAkBC,EAC7BE,EAAYF,IAEZC,EAAWF,EACXG,EAAYF,GAEhBzR,KAAKoQ,IAAM6B,EACJ,CAAED,UAAWA,EAAWN,SAAUA,EAAUC,UAAWA,KAI9DO,GAAc,SAASd,EAAIX,GAC3B,IAAI0B,EAAMnS,KAAKmR,WAAWC,GAC1B,IAAKe,EACD,OAAO,EAEX,IAEIvB,EAFAoB,EAAYG,EAAIH,UAChBC,EAAWjS,KAAKoQ,IAGpBpQ,KAAKoQ,KAAO4B,EAERpB,EADAQ,IAAO5C,GACI,IACJ4C,IAAO3C,GACH,IAEAzO,KAAKmQ,QAAQjK,MAAM+L,EAAUjS,KAAKoQ,KAEjD,IAAI5I,EAAO,GAAKoJ,GAuBhB,OAtBAH,EAAMpG,YAAY7C,IAIb2K,EAAIT,UAAYS,EAAIR,aACpB3R,KAAKoS,QAAQC,OAAUjB,IAAO5C,IAAiB4C,IAAO3C,MAEvDzO,KAAKsS,WAAa,CACdlB,GAAIA,EACJY,UAAWA,EACXO,WAAYP,EACZxK,KAAMA,EACNgL,SAAUxS,KAAKsS,WACflK,KAAM,KACNsJ,SAAUS,EAAIT,SACdC,UAAWQ,EAAIR,WAEc,OAA7B3R,KAAKsS,WAAWE,WAChBxS,KAAKsS,WAAWE,SAASpK,KAAOpI,KAAKsS,cAItC,GAGPG,GAAkB,SAASrI,GACJ,OAAnBA,EAAMoI,WACNpI,EAAMoI,SAASpK,KAAOgC,EAAMhC,MAEb,OAAfgC,EAAMhC,KAENpI,KAAKsS,WAAalI,EAAMoI,SAExBpI,EAAMhC,KAAKoK,SAAWpI,EAAMoI,UAIhCE,GAA0B,SAASC,EAAQC,GACvCD,EAAOvK,OAASwK,IAChBD,EAAOvK,KAAOwK,EACdA,EAAIJ,SAAWG,IAInBE,GAAkB,SAASC,GAU3B,IATA,IAAIC,EAAQC,EAAQC,EAChBC,EAAYC,EACZC,EACAC,EACAC,EAAKlL,EACLmL,EACAC,EAAiB,CAAC,GAAI,GAAI,IAC1BC,GAAY,EAEPrN,EAAI,EAAGA,EAAI,EAAGA,IACnBoN,EAAepN,GAAG0H,GAAgBgF,EAClCU,EAAepN,GAAGyH,GAAciF,EAChCU,EAAepN,GAAGoI,IAAiBsE,EACnCU,EAAepN,GAAGqI,IAAiBqE,EAGvCE,EAAShT,KAAKsS,WACd,MAAkB,OAAXU,GAAmBA,EAAOR,WAAaM,EAC1CE,EAASA,EAAOR,SAGpB,MAAkB,OAAXQ,EAAiB,CACpB,IAAIU,EAAWV,EAAO5B,GACtB,GAAK4B,EAAOrB,UAEL,CAEHoB,EAASC,EAAOR,SAChBe,GAAe,EACf,MACe,OAAXR,GACAA,IAAWD,GACXC,IAAWS,EAAeR,EAAOT,WAAa,GAAGmB,GACnD,CAKE,GAJAD,GACKT,EAAOtB,UAAYqB,EAAOpB,YAC3BqB,EAAOT,WAAa,IAAM,IACzBQ,EAAOR,WAAaS,EAAOT,YAAc,IAAM,EAChDQ,EAAO3B,KAAO4B,EAAO5B,IAAM2B,EAAOrB,WAAa+B,EAAW,CAC1DF,GAAe,EACf,MAEJR,EAASA,EAAOP,SAIpB,GAFAS,EAAaD,EAETU,IAAa7F,GAAc6F,IAAa5F,EACxC,GAAKyF,EAEE,CAEHF,EACIL,EAAOhB,WAAa,GAAKe,EAAOf,WAAa,EAAI,EAAI,EAEzDkB,EAAaH,EAAOvL,KACpB2L,EAAaH,EAAOxL,KAGpBuL,EAAOf,WAAaqB,EACpBL,EAAOhB,WAAaqB,EACpBH,EAAWnK,SAAWmK,EAAWnK,SAAS7C,MACtC,EACAgN,EAAWnK,SAASjH,OAASuR,GAEjCF,EAAWpK,SAAWoK,EAAWpK,SAAS7C,MACtC,EACAiN,EAAWpK,SAASjH,OAASuR,GAIjC,IAAIM,EAAO,IAAI,EAAoB,IAAfN,EAAmB,OAAS,UAEhDC,EAAMJ,EAAWjL,MACjB,MAAOqL,GAAOA,IAAQH,EAClB/K,EAAOkL,EAAIrL,MACXqL,EAAI/I,SACJoJ,EAAKtJ,YAAYiJ,GACjBA,EAAMlL,EAGV8K,EAAWzI,YAAYkJ,GAGvBjB,GAAwBK,EAAQC,GAGP,IAArBD,EAAOf,YACPkB,EAAW3I,SACXvK,KAAKyS,gBAAgBM,IAGA,IAArBC,EAAOhB,YACPmB,EAAW5I,SACX6I,EAAYJ,EAAO5K,KACnBpI,KAAKyS,gBAAgBO,GACrBA,EAASI,QA/CbJ,EAASA,EAAO5K,UAkDbsL,IAAalF,IACpBwE,EAAOxL,KAAKuB,SAAW,IACnBwK,IACAR,EAAOvL,KAAKuB,SAAW,KAE3BiK,EAASA,EAAO5K,MACTsL,IAAajF,KACpBuE,EAAOxL,KAAKuB,SAAW,IACnBwK,IACAR,EAAOvL,KAAKoM,QAAU,KAE1BZ,EAASA,EAAO5K,MAEfmL,IAEDC,EAAeP,EAAWV,WAAa,GAAGmB,GACtCT,EAAWT,SACVS,EAAWvB,UAGZ1R,KAAKyS,gBAAgBQ,SA9F7BD,EAASA,EAAO5K,KAqGxB,MAA2B,OAApBpI,KAAKsS,YAAuBtS,KAAKsS,aAAeQ,EACnD9S,KAAKyS,gBAAgBzS,KAAKsS,aAM9BuB,GAAiB,WACjB,IAAIC,EAAQ9T,KAAKuQ,MAAM3B,IACvB,OAAc,OAAVkF,EACO,KAGA,EAAeA,EAAM7N,OAAO,EAAG6N,EAAMhS,OAAS,KAMzDiS,GAAuB,WACvB,IAAI5B,EAAMnS,KAAKuQ,MAAM1B,IACrB,GAAY,OAARsD,EAAc,CACd,GAAInS,KAAKqQ,SAAWnC,EAChB,OAAO,KAGX,IAEIvL,EAFAqR,EAAUhU,KAAKoQ,IACf6D,EAAa,EAEjB,OAA8B,KAAtBtR,EAAI3C,KAAKqQ,QACb,GACI1N,IAAM,IACNmM,GAAYlI,KAAK5G,KAAKmQ,QAAQrK,OAAO9F,KAAKoQ,IAAM,IAEhDpQ,KAAKoQ,KAAO,GACS,IAAjBpQ,KAAKqQ,SACLrQ,KAAKoQ,KAAO,QAEb,GAAIzN,IAAM0L,GACbrO,KAAKoQ,KAAO,EACZ6D,GAAc,OACX,GAAItR,IAAM2L,GAAe,CAC5B,GAAI2F,EAAa,EACb,MAEAjU,KAAKoQ,KAAO,EACZ6D,GAAc,MAEf,IAAgD,OAA5C1E,GAAiBW,KAAKtD,EAAcjK,IAC3C,MAEA3C,KAAKoQ,KAAO,EAGpB,OAAIpQ,KAAKoQ,MAAQ4D,GAAWrR,IAAM2L,IAGf,IAAf2F,EAFO,MAKX9B,EAAMnS,KAAKmQ,QAAQlK,OAAO+N,EAAShU,KAAKoQ,IAAM4D,GACvC,EAAa,EAAe7B,KAGnC,OAAO,EAAa,EAAeA,EAAIlM,OAAO,EAAGkM,EAAIrQ,OAAS,MAKlEoS,GAAiB,WACjB,IAAIjE,EAAIjQ,KAAKuQ,MAAMX,IACnB,OAAU,OAANK,GAAcA,EAAEnO,OAAS,KAClB,EAEAmO,EAAEnO,QAKbqS,GAAmB,SAAS1D,GAC5B,IAAIwB,EAAWjS,KAAKoQ,IACpBpQ,KAAKoQ,KAAO,EAEZ,IAAI5I,EAAO,GAAK,KAKhB,OAJAiJ,EAAMpG,YAAY7C,GAGlBxH,KAAKoU,WAAW5M,EAAMyK,GAAU,IACzB,GAKPoC,GAAY,SAAS5D,GACrB,IAAIwB,EAAWjS,KAAKoQ,IAEpB,GADApQ,KAAKoQ,KAAO,EACRpQ,KAAKqQ,SAAWrC,EAAgB,CAChChO,KAAKoQ,KAAO,EAEZ,IAAI5I,EAAO,GAAK,MAChBiJ,EAAMpG,YAAY7C,GAGlBxH,KAAKoU,WAAW5M,EAAMyK,EAAW,GAAG,QAEpCxB,EAAMpG,YAAY,GAAK,MAE3B,OAAO,GAOPiK,GAAoB,SAAS7D,GAC7B,IAAIwB,EACAsC,EACAtD,EACA6C,EAEAU,EACAzB,EAFApC,GAAU,EAUd,GANA3Q,KAAKoQ,KAAO,EACZ6B,EAAWjS,KAAKoQ,IAGhB2C,EAAS/S,KAAKyU,SAEC,OAAX1B,EAGA,OADAtC,EAAMpG,YAAY,GAAK,OAChB,EAGX,IAAK0I,EAAO2B,OAKR,OAHAjE,EAAMpG,YAAY,GAAK,MAEvBrK,KAAK2U,iBACE,EAIXJ,EAAWxB,EAAO6B,MAIlB,IAAIZ,EAAUhU,KAAKoQ,IAuBnB,GApBIpQ,KAAKqQ,SAAWhC,KAChBrO,KAAKoQ,MAEDpQ,KAAKsQ,QACoC,QAAxCW,EAAOjR,KAAK+T,yBACb/T,KAAKsQ,SAEHf,GAAiB3I,KAAK5G,KAAKmQ,QAAQrK,OAAO9F,KAAKoQ,IAAM,MAClD0D,EAAQ9T,KAAK6T,kBADlB,IAGA7T,KAAKsQ,QACLtQ,KAAKqQ,SAAW/B,IAEhBtO,KAAKoQ,KAAO,EACZO,GAAU,GAEV3Q,KAAKoQ,IAAM4D,IAIdrD,EAAS,CAEV,IAAIkE,EAAc7U,KAAKoQ,IACnBlG,EAAIlK,KAAKkU,iBAab,GAZIhK,EAAI,EACJsK,EAAWxU,KAAKmQ,QAAQjK,MAAM2O,EAAaA,EAAc3K,GACjD6I,EAAO+B,eAGfN,EAAWxU,KAAKmQ,QAAQjK,MAAM6M,EAAOxF,MAAO0E,IAEtC,IAAN/H,IAEAlK,KAAKoQ,IAAM4D,GAGXQ,EAAU,CAEV,IAAIO,EAAO/U,KAAKgV,OAAOlF,GAAmB0E,IACtCO,IACA9D,EAAO8D,EAAKE,YACZnB,EAAQiB,EAAKjB,MACbnD,GAAU,IAKtB,GAAIA,EAAS,CACT,IAII2C,EAAKlL,EAJLZ,EAAO,IAAI,EAAK+M,EAAW,QAAU,QACzC/M,EAAK0B,aAAe+H,EACpBzJ,EAAK2B,OAAS2K,GAAS,GAGvBR,EAAMP,EAAOvL,KAAKS,MAClB,MAAOqL,EACHlL,EAAOkL,EAAIrL,MACXqL,EAAI/I,SACJ/C,EAAK6C,YAAYiJ,GACjBA,EAAMlL,EAUV,GARAqI,EAAMpG,YAAY7C,GAClBxH,KAAK6S,gBAAgBE,EAAOmC,mBAC5BlV,KAAK2U,gBACL5B,EAAOvL,KAAK+C,UAKPgK,EAAU,CACXxB,EAAS/S,KAAKyU,SACd,MAAkB,OAAX1B,EACEA,EAAO6B,QACR7B,EAAO2B,QAAS,GAEpB3B,EAASA,EAAOP,SAIxB,OAAO,EAOP,OAHAxS,KAAK2U,gBACL3U,KAAKoQ,IAAM6B,EACXxB,EAAMpG,YAAY,GAAK,OAChB,GAIX+J,GAAa,SAAS5M,EAAM+F,EAAOqH,GACb,OAAlB5U,KAAKyU,WACLzU,KAAKyU,SAASK,cAAe,GAEjC9U,KAAKyU,SAAW,CACZjN,KAAMA,EACNgL,SAAUxS,KAAKyU,SACfS,kBAAmBlV,KAAKsS,WACxB/E,MAAOA,EACPqH,MAAOA,EACPF,QAAQ,IAIZC,GAAgB,WAChB3U,KAAKyU,SAAWzU,KAAKyU,SAASjC,UAI9B2C,GAAc,SAAS1E,GACvB,IAAIR,EACJ,SAAKA,EAAIjQ,KAAKuQ,MAAMxB,OAChB0B,EAAMpG,YAAY,GAAK,wBAAW4F,MAC3B,IAQXmF,GAAc,SAAS3E,GACvB,IAAIR,EACJ,SAAKA,EAAIjQ,KAAKuQ,MAAMV,OACZ7P,KAAKoS,QAAQC,MACb5B,EAAMpG,YACF,GACI4F,EACKhN,QAAQiM,GAAY,KACpBjM,QAAQkM,IAAQ,SAASkG,GACtB,IAAIC,EAAU,EACVC,EAAU,EAgBd,OAfIF,EAAMvT,OAAS,IAAM,EAErByT,EAAUF,EAAMvT,OAAS,EAClBuT,EAAMvT,OAAS,IAAM,EAE5BwT,EAAUD,EAAMvT,OAAS,EAClBuT,EAAMvT,OAAS,IAAM,GAE5BwT,EAAU,EACVC,GAAWF,EAAMvT,OAAS,GAAK,IAG/BwT,EAAU,EACVC,GAAWF,EAAMvT,OAAS,GAAK,GAG/B,IAAS0T,OAAOD,GAChB,IAASC,OAAOF,QAMpC7E,EAAMpG,YAAY,GAAK4F,KAEpB,IAQXwF,GAAe,SAAShF,GACxBzQ,KAAKoQ,KAAO,EAEZ,IAAIsF,EAAQjF,EAAMjI,WAClB,GACIkN,GACe,SAAfA,EAAM3L,MACwC,MAA9C2L,EAAM3M,SAAS2M,EAAM3M,SAASjH,OAAS,GACzC,CACE,IAAI6T,EAA0D,MAA9CD,EAAM3M,SAAS2M,EAAM3M,SAASjH,OAAS,GACvD4T,EAAM3M,SAAW2M,EAAM3M,SAAS9F,QAAQwM,GAAc,IACtDgB,EAAMpG,YAAY,IAAI,EAAKsL,EAAY,YAAc,mBAErDlF,EAAMpG,YAAY,IAAI,EAAK,cAG/B,OADArK,KAAKuQ,MAAMb,KACJ,GAIPkG,GAAiB,SAAS9L,EAAGkL,GAG7B,IAAIa,EACA5E,EACA6C,EACAgC,EALJ9V,KAAKmQ,QAAUrG,EACf9J,KAAKoQ,IAAM,EAKX,IAAI6B,EAAWjS,KAAKoQ,IAIpB,GADA0F,EAAa9V,KAAKkU,iBACC,IAAf4B,EACA,OAAO,EAMX,GAJID,EAAW7V,KAAKmQ,QAAQlK,OAAO,EAAG6P,GAIlC9V,KAAKqQ,SAAW9B,GAIhB,OADAvO,KAAKoQ,IAAM6B,EACJ,EAOX,GAVIjS,KAAKoQ,MAOTpQ,KAAKsQ,OAELW,EAAOjR,KAAK+T,uBACC,OAAT9C,EAEA,OADAjR,KAAKoQ,IAAM6B,EACJ,EAGX,IAAI8D,EAAc/V,KAAKoQ,IACvBpQ,KAAKsQ,OACDtQ,KAAKoQ,MAAQ2F,IACbjC,EAAQ9T,KAAK6T,kBAEH,OAAVC,IACAA,EAAQ,GAER9T,KAAKoQ,IAAM2F,GAIf,IAAIC,GAAY,EAgBhB,GAfuC,OAAnChW,KAAKuQ,MAAMZ,MACG,KAAVmE,EACAkC,GAAY,GAKZlC,EAAQ,GAER9T,KAAKoQ,IAAM2F,EAEXC,EAA+C,OAAnChW,KAAKuQ,MAAMZ,OAI1BqG,EAED,OADAhW,KAAKoQ,IAAM6B,EACJ,EAGX,IAAIgE,EAAYnG,GAAmB+F,GACnC,MAAkB,KAAdI,GAEAjW,KAAKoQ,IAAM6B,EACJ,IAGN+C,EAAOiB,KACRjB,EAAOiB,GAAa,CAAEhB,YAAahE,EAAM6C,MAAOA,IAE7C9T,KAAKoQ,IAAM6B,IAMlBiE,GAAc,SAASzF,GACvB,IAAI0B,GAAM,EACNxP,EAAI3C,KAAKqQ,OACb,IAAW,IAAP1N,EACA,OAAO,EAEX,OAAQA,GACJ,KAAKiL,EACDuE,EAAMnS,KAAKyV,aAAahF,GACxB,MACJ,KAAK,GACD0B,EAAMnS,KAAK8Q,eAAeL,GAC1B,MACJ,KAAK1C,EACDoE,EAAMnS,KAAKwQ,eAAeC,GAC1B,MACJ,KAAK5C,EACL,KAAKC,EACDqE,EAAMnS,KAAKkS,YAAYvP,EAAG8N,GAC1B,MACJ,KAAKjC,GACL,KAAKC,GACD0D,EAAMnS,KAAKoS,QAAQC,OAASrS,KAAKkS,YAAYvP,EAAG8N,GAChD,MACJ,KAAKzC,EACDmE,EAAMnS,KAAKmU,iBAAiB1D,GAC5B,MACJ,KAAKtC,GACDgE,EAAMnS,KAAKqU,UAAU5D,GACrB,MACJ,KAAKxC,EACDkE,EAAMnS,KAAKsU,kBAAkB7D,GAC7B,MACJ,KAAKvC,EACDiE,EAAMnS,KAAKgR,cAAcP,IAAUzQ,KAAKkR,aAAaT,GACrD,MACJ,KAAKrC,GACD+D,EAAMnS,KAAKmV,YAAY1E,GACvB,MACJ,QACI0B,EAAMnS,KAAKoV,YAAY3E,GACvB,MAOR,OALK0B,IACDnS,KAAKoQ,KAAO,EACZK,EAAMpG,YAAY,GAAKuC,EAAcjK,OAGlC,GAKPwT,GAAe,SAAS1F,GACxBzQ,KAAKmQ,QAAUM,EAAM3H,gBAAgBiH,OACrC/P,KAAKoQ,IAAM,EACXpQ,KAAKsS,WAAa,KAClBtS,KAAKyU,SAAW,KAChB,MAAOzU,KAAKkW,YAAYzF,IACxBA,EAAM3H,gBAAkB,KACxB9I,KAAK6S,gBAAgB,OAIzB,SAASuD,GAAahE,GAClB,MAAO,CACHjC,QAAS,GACTmC,WAAY,KACZmC,SAAU,KACVrE,IAAK,EACL4E,OAAQ,GACRzE,MAAO,GACPF,KAAMA,GACNC,KAAMA,GACNE,eAAgBA,GAChBM,eAAgBA,GAChBE,cAAeA,GACfE,aAAcA,GACdC,WAAYA,GACZe,YAAaA,GACb2B,eAAgBA,GAChBE,qBAAsBA,GACtBG,eAAgBA,GAChBC,iBAAkBA,GAClBE,UAAWA,GACXC,kBAAmBA,GACnBF,WAAYA,GACZO,cAAeA,GACfQ,YAAaA,GACbC,YAAaA,GACbK,aAAcA,GACdG,eAAgBA,GAChBM,YAAaA,GACbrD,gBAAiBA,GACjBJ,gBAAiBA,GACjBL,QAASA,GAAW,GACpBiE,MAAOF,IAIA,UCh/BXG,GAAc,EAEdC,GAAQ,EACR,GAAY,GACZC,GAAgB,GAChB,GAAa,GACbC,GAAU,GACV,GAAiB,GAEjBC,GAAkB,CAClB,IACA,6CACA,QACA,QACA,WACA,eACA,yXACA,IAAIlU,OAAO,OAASgJ,EAAU,IAAMC,EAAW,SAAU,MAGzDkL,GAAmB,CACnB,IACA,qCACA,MACA,MACA,IACA,SAGAC,GAAkB,+DAElBC,GAAiB,mBAEjBC,GAAa,iBAEbC,GAAqB,SAErBC,GAAsB,mBAEtBC,GAAqB,sBAErBC,GAAc,uBAEdC,GAAqB,0BAErBC,GAAsB,oBAEtBC,GAAe,aAGfC,GAAU,SAASxN,GACnB,OAAQgN,GAAWlQ,KAAKkD,IAGxByN,GAAe,SAAS5U,GACxB,OAAOA,IAAM8T,IAAW9T,IAAM4T,IAG9B,GAAO,SAASiB,EAAIpH,GACpB,OAAIA,EAAMoH,EAAG1V,OACF0V,EAAGrV,WAAWiO,IAEb,GAUZqH,GAAoB,SAAShH,GAC7B,MAAOA,EAAO,CACV,GAAIA,EAAM9H,eACN,OAAO,EAEX,IAAIqB,EAAIyG,EAAM1G,KACd,GAAK0G,EAAM7H,kBAA2B,SAANoB,GAAsB,SAANA,EAGzC,CACHyG,EAAM7H,kBAAmB,EACzB,MAJA6H,EAAM7H,kBAAmB,EACzB6H,EAAQA,EAAMjI,WAMtB,OAAO,GAKPkP,GAAU,WACV,GAAI1X,KAAK2X,qBAAsB,CAC3B3X,KAAK4X,QAAU,EAEf,IAAIC,EAAa,EAAK7X,KAAK8X,OAAS,EACpC9X,KAAK+X,IAAIjP,iBAAmB,IAAI0M,OAAOqC,GAE3C7X,KAAK+X,IAAIjP,iBAAmB9I,KAAKgY,YAAY9R,MAAMlG,KAAK4X,QAAU,MAMlEK,GAAW,SAASC,EAAKN,GACzB,OAAQ5X,KAAKmY,OAAOnY,KAAK+X,IAAIhO,MAAMqO,WAAWF,GAC1ClY,KAAKqY,SAASrY,KAAK+X,IAAK/X,KAAKsY,WAAa,GAG9C,IAAIC,EAAgBX,EAAS,EACzBY,EAAW,IAAI,EAAKN,EAAK,CACzB,CAAClY,KAAKsY,WAAYC,GAClB,CAAC,EAAG,KAKR,OAHAC,EAAS1P,gBAAkB,GAC3B9I,KAAK+X,IAAI1N,YAAYmO,GACrBxY,KAAK+X,IAAMS,EACJA,GAKPC,GAAkB,SAASC,EAAQ5Q,GACnC,IACIyI,EACAoI,EACAC,EACAC,EAJAC,EAAOJ,EAAOV,YAAY9R,MAAMwS,EAAOK,cAKvC/V,EAAO,CACP+G,KAAM,KACNE,OAAO,EACP+O,WAAY,KACZ/W,MAAO,KACPkI,UAAW,KACX8O,QAAS,KACTC,aAAcR,EAAOS,QAEzB,GAAIT,EAAOS,QAAU,EACjB,OAAO,KAEX,GAAK5I,EAAQuI,EAAKvI,MAAMwG,IACpB/T,EAAK+G,KAAO,SACZ/G,EAAKgW,WAAazI,EAAM,GAAG,OACxB,MACFA,EAAQuI,EAAKvI,MAAMyG,MACA,cAAnBlP,EAAUiC,MAAqC,MAAbwG,EAAM,GAMzC,OAAO,KAJPvN,EAAK+G,KAAO,UACZ/G,EAAKf,MAAQ+D,SAASuK,EAAM,IAC5BvN,EAAKmH,UAAYoG,EAAM,GAM3B,GADAoI,EAAQ,GAAKD,EAAOV,YAAaU,EAAOK,aAAexI,EAAM,GAAGzO,SAC/C,IAAX6W,GAAgBA,IAAUpC,IAASoC,IAAUlC,GAC/C,OAAO,KAIX,GACuB,cAAnB3O,EAAUiC,OACT2O,EAAOV,YACH9R,MAAMwS,EAAOK,aAAexI,EAAM,GAAGzO,QACrCyO,MAAMuG,IAEX,OAAO,KAIX4B,EAAOU,sBACPV,EAAOW,cAAc9I,EAAM,GAAGzO,QAAQ,GACtC8W,EAAiBF,EAAOZ,OACxBe,EAAoBH,EAAOd,OAC3B,GACIc,EAAOW,cAAc,GAAG,GACxBV,EAAQ,GAAKD,EAAOV,YAAaU,EAAOd,cACnCc,EAAOZ,OAASc,EAAiB,GAAKrB,GAAaoB,IAC5D,IAAIW,GAA0D,IAA7C,GAAKZ,EAAOV,YAAaU,EAAOd,QAC7C2B,EAAsBb,EAAOZ,OAASc,EAW1C,OAVIW,GAAuB,GAAKA,EAAsB,GAAKD,GACvDtW,EAAKiW,QAAU1I,EAAM,GAAGzO,OAAS,EACjC4W,EAAOZ,OAASc,EAChBF,EAAOd,OAASiB,EACZtB,GAAa,GAAKmB,EAAOV,YAAaU,EAAOd,UAC7Cc,EAAOW,cAAc,GAAG,IAG5BrW,EAAKiW,QAAU1I,EAAM,GAAGzO,OAASyX,EAE9BvW,GAMPwW,GAAa,SAASC,EAAWC,GACjC,OACID,EAAU1P,OAAS2P,EAAU3P,MAC7B0P,EAAUtP,YAAcuP,EAAUvP,WAClCsP,EAAUT,aAAeU,EAAUV,YAKvCW,GAAuB,WACvB,IAAK3Z,KAAK4Z,UAAW,CAEjB,MAAO5Z,KAAK6Z,SAAW7Z,KAAK8Z,qBAAsB,CAC9C,IAAIC,EAAS/Z,KAAK6Z,OAAO3R,QACzBlI,KAAKqY,SAASrY,KAAK6Z,OAAQ7Z,KAAKsY,WAAa,GAC7CtY,KAAK6Z,OAASE,EAElB/Z,KAAK4Z,WAAY,IASrBzB,GAAS,CACT6B,SAAU,CACNC,SAAU,WACN,OAAO,GAEX5B,SAAU,aAGVD,WAAY,SAASpO,GACjB,MAAa,SAANA,GAEXkQ,cAAc,GAElBC,KAAM,CACFF,SAAU,WACN,OAAO,GAEX5B,SAAU,SAASK,EAAQjI,GACvB,IAAI2J,EAAO3J,EAAM1I,YACjB,MAAOqS,EAAM,CAET,GAAI3C,GAAkB2C,IAASA,EAAKnS,MAAO,CACvCwI,EAAMzH,UAAUiB,OAAQ,EACxB,MAIJ,IAAIoQ,EAAUD,EAAKrS,YACnB,MAAOsS,EAAS,CACZ,GACI5C,GAAkB4C,KACjBD,EAAKnS,OAASoS,EAAQpS,OACzB,CACEwI,EAAMzH,UAAUiB,OAAQ,EACxB,MAEJoQ,EAAUA,EAAQpS,MAEtBmS,EAAOA,EAAKnS,QAGpBmQ,WAAY,SAASpO,GACjB,MAAa,SAANA,GAEXkQ,cAAc,GAElBI,YAAa,CACTL,SAAU,SAASvB,GACf,IAAIlB,EAAKkB,EAAOV,YAChB,OACKU,EAAO6B,UACR,GAAK/C,EAAIkB,EAAOK,gBAAkBvC,GAQ3B,GANPkC,EAAOU,sBACPV,EAAOW,cAAc,GAAG,GACpB9B,GAAa,GAAKC,EAAIkB,EAAOd,UAC7Bc,EAAOW,cAAc,GAAG,GAKzB,IAEXhB,SAAU,aAGVD,WAAY,SAASpO,GACjB,MAAa,SAANA,GAEXkQ,cAAc,GAElBE,KAAM,CACFH,SAAU,SAASvB,EAAQ5Q,GACvB,GAAI4Q,EAAO8B,MAAO,CACd,GAA6B,MAAzB1S,EAAUC,YAEV,OAAO,EAEP2Q,EAAOU,0BAER,MACHV,EAAOS,QACPrR,EAAUkB,UAAUkQ,aAAepR,EAAUkB,UAAUiQ,SAQvD,OAAO,EANPP,EAAOW,cACHvR,EAAUkB,UAAUkQ,aAChBpR,EAAUkB,UAAUiQ,SACxB,GAKR,OAAO,GAEXZ,SAAU,aAGVD,WAAY,SAASpO,GACjB,MAAa,SAANA,GAEXkQ,cAAc,GAElBO,QAAS,CACLR,SAAU,WAEN,OAAO,GAEX5B,SAAU,aAGVD,WAAY,WACR,OAAO,GAEX8B,cAAc,GAElBQ,eAAgB,CACZT,SAAU,WAEN,OAAO,GAEX5B,SAAU,aAGVD,WAAY,WACR,OAAO,GAEX8B,cAAc,GAElBS,WAAY,CACRV,SAAU,SAASvB,EAAQ5Q,GACvB,IAAI0P,EAAKkB,EAAOV,YACZmB,EAAST,EAAOS,OACpB,GAAIrR,EAAUsB,UAAW,CAErB,IAAImH,EACA4I,GAAU,GACV3B,EAAG1R,OAAO4S,EAAOK,gBAAkBjR,EAAUuB,YAC7CmO,EAAGtR,MAAMwS,EAAOK,cAAcxI,MAAM4G,IACxC,GAAI5G,GAASA,EAAM,GAAGzO,QAAUgG,EAAUwB,aAKtC,OAHAoP,EAAOkC,eACHlC,EAAOd,OAASuB,EAAS5I,EAAM,GAAGzO,OACtC4W,EAAOL,SAASvQ,EAAW4Q,EAAOJ,YAC3B,EAGP,IAAIlS,EAAI0B,EAAUyB,aAClB,MAAOnD,EAAI,GAAKmR,GAAa,GAAKC,EAAIkB,EAAOd,SACzCc,EAAOW,cAAc,GAAG,GACxBjT,SAKR,GAAI+S,GAAU7C,GACVoC,EAAOW,cAAc/C,IAAa,OAC/B,KAAIoC,EAAO8B,MAGd,OAAO,EAFP9B,EAAOU,sBAKf,OAAO,GAEXf,SAAU,SAASK,EAAQjI,GACvB,GAAIA,EAAMrH,UAAW,CAGjB,IAAIyR,EAAUpK,EAAM3H,gBAChBgS,EAAaD,EAAQE,QAAQ,MAC7BC,EAAYH,EAAQ3U,MAAM,EAAG4U,GAC7BhC,EAAO+B,EAAQ3U,MAAM4U,EAAa,GACtCrK,EAAMwK,KAAO3O,EAAe0O,EAAUjL,QACtCU,EAAM1H,SAAW+P,OAGjBrI,EAAM1H,SAAW0H,EAAM3H,gBAAgB7F,QACnC,WACA,MAGRwN,EAAM3H,gBAAkB,MAE5BsP,WAAY,WACR,OAAO,GAEX8B,cAAc,GAElBgB,WAAY,CACRjB,SAAU,SAASvB,EAAQ5Q,GACvB,OAAO4Q,EAAO8B,OACoB,IAA7B1S,EAAUqT,gBACsB,IAA7BrT,EAAUqT,eAEZ,EADA,GAGV9C,SAAU,SAASK,EAAQjI,GACvBA,EAAM1H,SAAW0H,EAAM3H,gBAAgB7F,QAAQ,WAAY,IAC3DwN,EAAM3H,gBAAkB,MAE5BsP,WAAY,WACR,OAAO,GAEX8B,cAAc,GAElBkB,UAAW,CACPnB,SAAU,SAASvB,GACf,OAAOA,EAAO8B,MAAQ,EAAI,GAE9BnC,SAAU,SAASK,EAAQjI,GACvB,IAAIL,EACAiL,GAAmB,EAGvB,MACI,GAAK5K,EAAM3H,gBAAiB,KAAO,KAClCsH,EAAMsI,EAAO4C,aAAa1F,eACvBnF,EAAM3H,gBACN4P,EAAO1D,SAGXvE,EAAM3H,gBAAkB2H,EAAM3H,gBAAgB5C,MAAMkK,GACpDiL,GAAmB,EAEnBA,GAAoB/D,GAAQ7G,EAAM3H,kBAClC2H,EAAMlG,UAGd6N,WAAY,WACR,OAAO,GAEX8B,cAAc,IAQlBqB,GAAc,CAEd,SAAS7C,GACL,OACKA,EAAO6B,UACR,GAAK7B,EAAOV,YAAaU,EAAOK,gBAAkBvC,GAY3C,GAVPkC,EAAOU,sBACPV,EAAOW,cAAc,GAAG,GAEpB9B,GAAa,GAAKmB,EAAOV,YAAaU,EAAOd,UAC7Cc,EAAOW,cAAc,GAAG,GAE5BX,EAAOiB,uBACPjB,EAAOT,SAAS,cAAeS,EAAOK,cAC/B,IAOf,SAASL,GACL,IAAInI,EACJ,IACKmI,EAAO6B,WACPhK,EAAQmI,EAAOV,YACX9R,MAAMwS,EAAOK,cACbxI,MAAM0G,KACb,CACEyB,EAAOU,sBACPV,EAAOW,cAAc9I,EAAM,GAAGzO,QAAQ,GACtC4W,EAAOiB,uBACP,IAAI7R,EAAY4Q,EAAOT,SAAS,UAAWS,EAAOK,cAQlD,OAPAjR,EAAUjD,MAAQ0L,EAAM,GAAGR,OAAOjO,OAElCgG,EAAUgB,gBAAkB4P,EAAOV,YAC9B9R,MAAMwS,EAAOd,QACb3U,QAAQ,mBAAoB,IAC5BA,QAAQ,kBAAmB,IAChCyV,EAAOW,cAAcX,EAAOV,YAAYlW,OAAS4W,EAAOd,QACjD,EAEP,OAAO,GAKf,SAASc,GACL,IAAInI,EACJ,IACKmI,EAAO6B,WACPhK,EAAQmI,EAAOV,YACX9R,MAAMwS,EAAOK,cACbxI,MAAM2G,KACb,CACE,IAAIsE,EAAcjL,EAAM,GAAGzO,OAC3B4W,EAAOiB,uBACP,IAAI7R,EAAY4Q,EAAOT,SAAS,aAAcS,EAAOK,cAOrD,OANAjR,EAAUsB,WAAY,EACtBtB,EAAUwB,aAAekS,EACzB1T,EAAUuB,WAAakH,EAAM,GAAG,GAChCzI,EAAUyB,aAAemP,EAAOS,OAChCT,EAAOU,sBACPV,EAAOW,cAAcmC,GAAa,GAC3B,EAEP,OAAO,GAKf,SAAS9C,EAAQ5Q,GACb,IACK4Q,EAAO6B,UACR,GAAK7B,EAAOV,YAAaU,EAAOK,gBAAkB,GACpD,CACE,IACI0C,EADA3R,EAAI4O,EAAOV,YAAY9R,MAAMwS,EAAOK,cAGxC,IAAK0C,EAAY,EAAGA,GAAa,EAAGA,IAChC,GACI/E,GAAgB+E,GAAW7U,KAAKkD,KAC/B2R,EAAY,GAAwB,cAAnB3T,EAAUiC,MAC9B,CACE2O,EAAOiB,uBAGP,IAAI9T,EAAI6S,EAAOT,SAAS,aAAcS,EAAOd,QAE7C,OADA/R,EAAEsV,eAAiBM,EACZ,GAKnB,OAAO,GAIX,SAAS/C,EAAQ5Q,GACb,IAAIyI,EACJ,IACKmI,EAAO6B,UACW,cAAnBzS,EAAUiC,OACTwG,EAAQmI,EAAOV,YACX9R,MAAMwS,EAAOK,cACbxI,MAAM6G,KACb,CAGE,IAAIhH,EAFJsI,EAAOiB,uBAGP,MACI,GAAK7R,EAAUgB,gBAAiB,KAAO,KACtCsH,EAAMsI,EAAO4C,aAAa1F,eACvB9N,EAAUgB,gBACV4P,EAAO1D,SAGXlN,EAAUgB,gBAAkBhB,EAAUgB,gBAAgB5C,MAClDkK,GAGR,GAAItI,EAAUgB,gBAAgBhH,OAAS,EAAG,CACtC,IAAI2Y,EAAU,IAAI,EAAK,UAAW3S,EAAUS,WAU5C,OATAkS,EAAQ5V,MAAwB,MAAhB0L,EAAM,GAAG,GAAa,EAAI,EAC1CkK,EAAQ3R,gBAAkBhB,EAAUgB,gBACpChB,EAAU2C,YAAYgQ,GACtB3S,EAAUyC,SACVmO,EAAOX,IAAM0C,EACb/B,EAAOW,cACHX,EAAOV,YAAYlW,OAAS4W,EAAOd,QACnC,GAEG,EAEP,OAAO,EAGX,OAAO,GAKf,SAASc,GACL,OACKA,EAAO6B,UACR3D,GAAgBhQ,KAAK8R,EAAOV,YAAY9R,MAAMwS,EAAOK,gBAErDL,EAAOiB,uBACPjB,EAAOT,SAAS,iBAAkBS,EAAOK,cACzCL,EAAOW,cACHX,EAAOV,YAAYlW,OAAS4W,EAAOd,QACnC,GAEG,GAEA,GAKf,SAASc,EAAQ5Q,GACb,IAAI9E,EAEJ,OACM0V,EAAO6B,UAA+B,SAAnBzS,EAAUiC,QAC9B/G,EAAOyV,GAAgBC,EAAQ5Q,IAkBzB,GAhBP4Q,EAAOiB,uBAIiB,SAApBjB,EAAOX,IAAIhO,MACVyP,GAAW1R,EAAUkB,UAAWhG,KAEjC8E,EAAY4Q,EAAOT,SAAS,OAAQS,EAAOK,cAC3CjR,EAAUkB,UAAYhG,GAI1B8E,EAAY4Q,EAAOT,SAAS,OAAQS,EAAOK,cAC3CjR,EAAUkB,UAAYhG,EACf,IAOf,SAAS0V,GACL,OACIA,EAAO6B,UACa,cAApB7B,EAAOX,IAAIhO,OACV2O,EAAO8B,OAGR9B,EAAOW,cAAc/C,IAAa,GAClCoC,EAAOiB,uBACPjB,EAAOT,SAAS,aAAcS,EAAOd,QAC9B,GAEA,IAKfyB,GAAgB,SAASjX,EAAOsZ,GAChC,IACI7D,EAAY8D,EACZhZ,EAFAqV,EAAchY,KAAKgY,YAGvB,MAAO5V,EAAQ,IAAMO,EAAIqV,EAAYhY,KAAK4X,SAC5B,OAANjV,GACAkV,EAAa,EAAK7X,KAAK8X,OAAS,EAC5B4D,GACA1b,KAAK2X,qBAAuBE,EAAazV,EACzCuZ,EAAiB9D,EAAazV,EAAQA,EAAQyV,EAC9C7X,KAAK8X,QAAU6D,EACf3b,KAAK4X,QAAU5X,KAAK2X,qBAAuB,EAAI,EAC/CvV,GAASuZ,IAET3b,KAAK2X,sBAAuB,EAC5B3X,KAAK8X,QAAUD,EACf7X,KAAK4X,QAAU,EACfxV,GAAS,KAGbpC,KAAK2X,sBAAuB,EAC5B3X,KAAK4X,QAAU,EACf5X,KAAK8X,QAAU,EACf1V,GAAS,IAKjBgX,GAAsB,WACtBpZ,KAAK4X,OAAS5X,KAAK+Y,aACnB/Y,KAAK8X,OAAS9X,KAAK4b,mBACnB5b,KAAK2X,sBAAuB,GAG5BkE,GAAmB,WACnB,IAGIlZ,EAHAqV,EAAchY,KAAKgY,YACnB5R,EAAIpG,KAAK4X,OACTkE,EAAO9b,KAAK8X,OAGhB,MAAuC,MAA/BnV,EAAIqV,EAAYlS,OAAOM,IAC3B,GAAU,MAANzD,EACAyD,IACA0V,QACG,IAAU,OAANnZ,EAIP,MAHAyD,IACA0V,GAAQ,EAAKA,EAAO,EAK5B9b,KAAKwa,MAAc,OAAN7X,GAAoB,OAANA,GAAoB,KAANA,EACzC3C,KAAK+Y,aAAe3S,EACpBpG,KAAK4b,mBAAqBE,EAC1B9b,KAAKmZ,OAASnZ,KAAK4b,mBAAqB5b,KAAK8X,OAC7C9X,KAAKua,SAAWva,KAAKmZ,QAAU7C,IAM/ByF,GAAkB,SAASvE,GAC3B,IACIxN,EAoBAgS,EArBAC,GAAc,EAGdnU,EAAY9H,KAAKkc,IACrBlc,KAAK6Z,OAAS7Z,KAAK+X,IACnB/X,KAAK4X,OAAS,EACd5X,KAAK8X,OAAS,EACd9X,KAAKwa,OAAQ,EACbxa,KAAK2X,sBAAuB,EAC5B3X,KAAKsY,YAAc,GAGW,IAA1Bd,EAAGuD,QAAQ,QACXvD,EAAKA,EAAGvU,QAAQ,MAAO,MAG3BjD,KAAKgY,YAAcR,EAMnB,OAAQwE,EAAYlU,EAAUU,aAAewT,EAAUnT,MAAO,CAK1D,OAJAf,EAAYkU,EAEZhc,KAAK6b,mBAEG7b,KAAKmY,OAAOrQ,EAAUiC,MAAMkQ,SAASja,KAAM8H,IAC/C,KAAK,EACD,MACJ,KAAK,EACDmU,GAAc,EACd,MACJ,KAAK,EACD,OACJ,QACI,KAAM,sDAEd,IAAKA,EAAa,CACdnU,EAAYA,EAAUI,QACtB,OAIRlI,KAAK4Z,UAAY9R,IAAc9H,KAAK6Z,OACpC7Z,KAAK8Z,qBAAuBhS,EAE5B,IAAIqU,EACmB,cAAnBrU,EAAUiC,MAAwBoO,GAAOrQ,EAAUiC,MAAMmQ,aACzDkC,EAASpc,KAAKub,YACdc,EAAYD,EAAOta,OAGvB,OAAQqa,EAAa,CAIjB,GAHAnc,KAAK6b,oBAIA7b,KAAKua,WACL1D,GAAejQ,KAAK4Q,EAAGtR,MAAMlG,KAAK+Y,eACrC,CACE/Y,KAAKoZ,sBACL,MAGJ,IAAIhT,EAAI,EACR,MAAOA,EAAIiW,EAAW,CAClB,IAAIlK,EAAMiK,EAAOhW,GAAGpG,KAAM8H,GAC1B,GAAY,IAARqK,EAAW,CACXrK,EAAY9H,KAAK+X,IACjB,MACG,GAAY,IAAR5F,EAAW,CAClBrK,EAAY9H,KAAK+X,IACjBoE,GAAc,EACd,MAEA/V,IAIR,GAAIA,IAAMiW,EAAW,CAEjBrc,KAAKoZ,sBACL,OAQR,GAAKpZ,KAAK4Z,WAAc5Z,KAAKwa,OAA2B,cAAlBxa,KAAK+X,IAAIhO,KAGxC,CAIH/J,KAAK2Z,uBACD3Z,KAAKwa,OAAS1S,EAAUkU,YACxBlU,EAAUkU,UAAUrT,gBAAiB,GAGzCqB,EAAIlC,EAAUiC,KAMd,IAAIuS,EACAtc,KAAKwa,SAEK,gBAANxQ,GACO,eAANA,GAAsBlC,EAAUsB,WAC1B,SAANY,IACIlC,EAAUC,aACXD,EAAUS,UAAU,GAAG,KAAOvI,KAAKsY,YAI3CiE,EAAOzU,EACX,MAAOyU,EACHA,EAAK5T,eAAiB2T,EACtBC,EAAOA,EAAKrU,QAGZlI,KAAKmY,OAAOnO,GAAGkQ,cACfla,KAAK0X,UAGK,eAAN1N,GACAlC,EAAUqT,gBAAkB,GAC5BrT,EAAUqT,gBAAkB,GAC5BxE,GAAiB7O,EAAUqT,gBAAgBvU,KACvC5G,KAAKgY,YAAY9R,MAAMlG,KAAK4X,WAGhC5X,KAAK4a,eAAiBpD,EAAG1V,OACzB9B,KAAKqY,SAASvQ,EAAW9H,KAAKsY,cAE3BtY,KAAK4X,OAASJ,EAAG1V,SAAW9B,KAAKwa,QAExC1S,EAAY9H,KAAKiY,SAAS,YAAajY,KAAK4X,QAC5C5X,KAAKoZ,sBACLpZ,KAAK0X,gBAnDT1X,KAAK0X,UAsDT1X,KAAK4a,eAAiBpD,EAAG1V,QAQzBuW,GAAW,SAAS5H,EAAO6H,GAC3B,IAAIkE,EAAQ/L,EAAMvI,QAClBuI,EAAM5H,OAAQ,EACd4H,EAAMlI,UAAU,GAAK,CAAC+P,EAAYtY,KAAK4a,gBAEvC5a,KAAKmY,OAAO1H,EAAM1G,MAAMsO,SAASrY,KAAMyQ,GAEvCzQ,KAAK+X,IAAMyE,GAKXC,GAAiB,SAAShM,GAC1B,IAAIjJ,EAAMkV,EAAO1S,EACbY,EAAS6F,EAAM7F,SACnB5K,KAAKsb,aAAatG,OAAShV,KAAKgV,OAChChV,KAAKsb,aAAalJ,QAAUpS,KAAKoS,QACjC,MAAQsK,EAAQ9R,EAAOxC,OACnBZ,EAAOkV,EAAMlV,KACbwC,EAAIxC,EAAKuC,KACJ2S,EAAM/U,UAAmB,cAANqC,GAA2B,YAANA,GACzChK,KAAKsb,aAAajF,MAAM7O,IAKhCmV,GAAW,WACX,IAAIT,EAAM,IAAI,EAAK,WAAY,CAC3B,CAAC,EAAG,GACJ,CAAC,EAAG,KAER,OAAOA,GAIP7F,GAAQ,SAASuG,GACjB5c,KAAKkc,IAAM,IAAIS,GACf3c,KAAK+X,IAAM/X,KAAKkc,IAChBlc,KAAKgV,OAAS,GACdhV,KAAKsY,WAAa,EAClBtY,KAAK4a,eAAiB,EACtB5a,KAAK4X,OAAS,EACd5X,KAAK8X,OAAS,EACd9X,KAAK8Z,qBAAuB9Z,KAAKkc,IACjClc,KAAKgY,YAAc,GACfhY,KAAKoS,QAAQyK,MACbC,QAAQD,KAAK,mBAEjB,IAAIE,EAAQH,EAAMI,MAAM3F,IACpB4F,EAAMF,EAAMjb,OACZ8a,EAAMza,WAAWya,EAAM9a,OAAS,KAAO,KAEvCmb,GAAO,GAEPjd,KAAKoS,QAAQyK,MACbC,QAAQI,QAAQ,mBAEhBld,KAAKoS,QAAQyK,MACbC,QAAQD,KAAK,iBAEjB,IAAK,IAAIzW,EAAI,EAAGA,EAAI6W,EAAK7W,IACrBpG,KAAK+b,gBAAgBgB,EAAM3W,IAE/B,MAAOpG,KAAK+X,IACR/X,KAAKqY,SAASrY,KAAK+X,IAAKkF,GAY5B,OAVIjd,KAAKoS,QAAQyK,MACbC,QAAQI,QAAQ,iBAEhBld,KAAKoS,QAAQyK,MACbC,QAAQD,KAAK,kBAEjB7c,KAAKyc,eAAezc,KAAKkc,KACrBlc,KAAKoS,QAAQyK,MACbC,QAAQI,QAAQ,kBAEbld,KAAKkc,KAIhB,SAASiB,GAAO/K,GACZ,MAAO,CACH8J,IAAK,IAAIS,GACTxE,OAAQA,GACRoD,YAAaA,GACbxD,IAAK/X,KAAKkc,IACVrC,OAAQ7Z,KAAKkc,IACblE,YAAa,GACbM,WAAY,EACZV,OAAQ,EACRE,OAAQ,EACRiB,aAAc,EACd6C,mBAAoB,EACpBzC,OAAQ,EACRoB,UAAU,EACVC,OAAO,EACP7C,sBAAsB,EACtBiC,WAAW,EACXE,qBAAsB9Z,KAAKkc,IAC3BlH,OAAQ,GACR4F,eAAgB,EAChBU,aAAc,IAAI,GAAalJ,GAC/ByJ,iBAAkBA,GAClBxC,cAAeA,GACfD,oBAAqBA,GACrB1B,QAASA,GACTO,SAAUA,GACV8D,gBAAiBA,GACjB1D,SAAUA,GACVoE,eAAgBA,GAChB9C,qBAAsBA,GACtBtD,MAAOA,GACPjE,QAASA,GAAW,IAIb,UC5+Bf,SAASgL,MAOT,SAAS3Z,GAAO4Z,GACZ,IACIX,EACA3S,EAFAa,EAASyS,EAAIzS,SAIjB5K,KAAKsd,OAAS,GACdtd,KAAKud,QAAU,KAEf,MAAQb,EAAQ9R,EAAOxC,OACnB2B,EAAO2S,EAAMlV,KAAKuC,KACd/J,KAAK+J,IACL/J,KAAK+J,GAAM2S,EAAMlV,KAAMkV,EAAM/U,UAGrC,OAAO3H,KAAKsd,OAQhB,SAASE,GAAI9X,GACT1F,KAAKsd,QAAU5X,EACf1F,KAAKud,QAAU7X,EAMnB,SAAS+X,KACgB,OAAjBzd,KAAKud,SACLvd,KAAKwd,IAAI,MAWjB,SAASE,GAAIhY,GACT1F,KAAKwd,IAAI9X,GAWb,SAASiY,GAAIjY,GACT,OAAOA,EAGX0X,GAASxT,UAAUnG,OAASA,GAC5B2Z,GAASxT,UAAU8T,IAAMA,GACzBN,GAASxT,UAAU4T,IAAMA,GACzBJ,GAASxT,UAAU6T,GAAKA,GACxBL,GAASxT,UAAU+T,IAAMA,GAEV,UCrEXC,GAAmB,sCACnBC,GAAqB,sCAErBC,GAAoB,SAASC,GAC7B,OAAOH,GAAiBhX,KAAKmX,KAASF,GAAmBjX,KAAKmX,IAIlE,SAAS,GAAItc,EAAMuc,EAAOC,GACtB,KAAIje,KAAKke,YAAc,GAAvB,CAIA,GADAle,KAAKsd,QAAU,IAAM7b,EACjBuc,GAASA,EAAMlc,OAAS,EAAG,CAC3B,IACIqc,EADA/X,EAAI,EAER,WAA+BgY,KAAvBD,EAASH,EAAM5X,IACnBpG,KAAKsd,QAAU,IAAMa,EAAO,GAAK,KAAOA,EAAO,GAAK,IACpD/X,IAGJ6X,IACAje,KAAKsd,QAAU,MAEnBtd,KAAKsd,QAAU,IACftd,KAAKud,QAAU,KAGnB,SAASc,GAAajM,GAClBA,EAAUA,GAAW,GAErBA,EAAQkM,UAAYlM,EAAQkM,WAAa,KAIzCte,KAAKke,YAAc,EACnBle,KAAKud,QAAU,KACfvd,KAAKoS,QAAUA,EAKnB,SAAS,GAAK5K,GACVxH,KAAK0d,IAAIlW,EAAKoM,SAGlB,SAAS0K,KACLte,KAAKwd,IAAIxd,KAAKoS,QAAQkM,WAG1B,SAASC,KACLve,KAAKkY,IAAI,KAAM,IAAI,GACnBlY,KAAKyd,KAGT,SAAS,GAAKjW,EAAMG,GAChB,IAAIqW,EAAQhe,KAAKge,MAAMxW,GACnBG,GACM3H,KAAKoS,QAAQoM,MAAQV,GAAkBtW,EAAKyN,cAC9C+I,EAAMhc,KAAK,CAAC,OAAQhC,KAAK2d,IAAInW,EAAKyN,eAElCzN,EAAKsM,OACLkK,EAAMhc,KAAK,CAAC,QAAShC,KAAK2d,IAAInW,EAAKsM,SAEvC9T,KAAKkY,IAAI,IAAK8F,IAEdhe,KAAKkY,IAAI,MAIjB,SAAS,GAAM1Q,EAAMG,GACbA,GACyB,IAArB3H,KAAKke,cACDle,KAAKoS,QAAQoM,MAAQV,GAAkBtW,EAAKyN,aAC5CjV,KAAKwd,IAAI,qBAETxd,KAAKwd,IAAI,aAAexd,KAAK2d,IAAInW,EAAKyN,aAAe,YAG7DjV,KAAKke,aAAe,IAEpBle,KAAKke,aAAe,EACK,IAArBle,KAAKke,cACD1W,EAAKsM,OACL9T,KAAKwd,IAAI,YAAcxd,KAAK2d,IAAInW,EAAKsM,QAEzC9T,KAAKwd,IAAI,UAKrB,SAAS,GAAKhW,EAAMG,GAChB3H,KAAKkY,IAAIvQ,EAAW,KAAO,OAG/B,SAAS8W,GAAOjX,EAAMG,GAClB3H,KAAKkY,IAAIvQ,EAAW,SAAW,WAGnC,SAASyT,GAAU5T,EAAMG,GACrB,IAAI+W,EAAclX,EAAKuS,OAAOA,OAC1BiE,EAAQhe,KAAKge,MAAMxW,GACH,OAAhBkX,GAA6C,SAArBA,EAAY3U,MAChC2U,EAAYC,YAIhBhX,GACA3H,KAAKyd,KACLzd,KAAKkY,IAAI,IAAK8F,KAEdhe,KAAKkY,IAAI,MACTlY,KAAKyd,OAIb,SAAS,GAAQjW,EAAMG,GACnB,IAAIiX,EAAU,IAAMpX,EAAK3C,MACrBmZ,EAAQhe,KAAKge,MAAMxW,GACnBG,GACA3H,KAAKyd,KACLzd,KAAKkY,IAAI0G,EAASZ,KAElBhe,KAAKkY,IAAI,IAAM0G,GACf5e,KAAKyd,MAIb,SAASzW,GAAKQ,GACVxH,KAAKkY,IAAI,QACTlY,KAAK0d,IAAIlW,EAAKoM,SACd5T,KAAKkY,IAAI,SAGb,SAASyC,GAAWnT,GAChB,IAAIqX,EAAarX,EAAKyT,KAAOzT,EAAKyT,KAAK+B,MAAM,OAAS,GAClDgB,EAAQhe,KAAKge,MAAMxW,GACnBqX,EAAW/c,OAAS,GAAK+c,EAAW,GAAG/c,OAAS,GAChDkc,EAAMhc,KAAK,CAAC,QAAS,YAAchC,KAAK2d,IAAIkB,EAAW,MAE3D7e,KAAKyd,KACLzd,KAAKkY,IAAI,OACTlY,KAAKkY,IAAI,OAAQ8F,GACjBhe,KAAK0d,IAAIlW,EAAKoM,SACd5T,KAAKkY,IAAI,SACTlY,KAAKkY,IAAI,QACTlY,KAAKyd,KAGT,SAAS/C,GAAelT,GACpB,IAAIwW,EAAQhe,KAAKge,MAAMxW,GACvBxH,KAAKyd,KACLzd,KAAKkY,IAAI,KAAM8F,GAAO,GACtBhe,KAAKyd,KAGT,SAASnD,GAAY9S,EAAMG,GACvB,IAAIqW,EAAQhe,KAAKge,MAAMxW,GACnBG,GACA3H,KAAKyd,KACLzd,KAAKkY,IAAI,aAAc8F,GACvBhe,KAAKyd,OAELzd,KAAKyd,KACLzd,KAAKkY,IAAI,eACTlY,KAAKyd,MAIb,SAAStD,GAAK3S,EAAMG,GAChB,IAAIiX,EAA4B,WAAlBpX,EAAKsX,SAAwB,KAAO,KAC9Cd,EAAQhe,KAAKge,MAAMxW,GAEvB,GAAIG,EAAU,CACV,IAAI1F,EAAQuF,EAAKuX,UACH,OAAV9c,GAA4B,IAAVA,GAClB+b,EAAMhc,KAAK,CAAC,QAASC,EAAMY,aAE/B7C,KAAKyd,KACLzd,KAAKkY,IAAI0G,EAASZ,GAClBhe,KAAKyd,UAELzd,KAAKyd,KACLzd,KAAKkY,IAAI,IAAM0G,GACf5e,KAAKyd,KAIb,SAASrD,GAAK5S,EAAMG,GAChB,IAAIqW,EAAQhe,KAAKge,MAAMxW,GACnBG,EACA3H,KAAKkY,IAAI,KAAM8F,IAEfhe,KAAKkY,IAAI,OACTlY,KAAKyd,MAIb,SAASuB,GAAYxX,GACbxH,KAAKoS,QAAQoM,KACbxe,KAAKwd,IAAI,mCAETxd,KAAKwd,IAAIhW,EAAKoM,SAItB,SAASsH,GAAW1T,GAChBxH,KAAKyd,KACDzd,KAAKoS,QAAQoM,KACbxe,KAAKwd,IAAI,mCAETxd,KAAKwd,IAAIhW,EAAKoM,SAElB5T,KAAKyd,KAGT,SAASwB,GAAczX,EAAMG,GACrBA,GAAYH,EAAK0X,QACjBlf,KAAKwd,IAAIhW,EAAK0X,UACNvX,GAAYH,EAAK2X,QACzBnf,KAAKwd,IAAIhW,EAAK2X,QAItB,SAASC,GAAa5X,EAAMG,GACxB3H,KAAKyd,KACD9V,GAAYH,EAAK0X,QACjBlf,KAAKwd,IAAIhW,EAAK0X,UACNvX,GAAYH,EAAK2X,QACzBnf,KAAKwd,IAAIhW,EAAK2X,QAElBnf,KAAKyd,KAKT,SAAS,GAAI3T,GACT9J,KAAKwd,IAAIxd,KAAK2d,IAAI7T,IAGtB,SAASkU,GAAMxW,GACX,IAAI6X,EAAM,GACV,GAAIrf,KAAKoS,QAAQ7J,UAAW,CACxB,IAAI6H,EAAM5I,EAAKe,UACX6H,GACAiP,EAAIrd,KAAK,CACL,iBACAuB,OAAO6M,EAAI,GAAG,IACV,IACA7M,OAAO6M,EAAI,GAAG,IACd,IACA7M,OAAO6M,EAAI,GAAG,IACd,IACA7M,OAAO6M,EAAI,GAAG,MAI9B,OAAOiP,EAIXhB,GAAazU,UAAYzJ,OAAOmf,OAAO,GAAS1V,WAEhDyU,GAAazU,UAAU2V,KAAO,GAC9BlB,GAAazU,UAAUoV,YAAcA,GACrCX,GAAazU,UAAUsR,WAAaA,GACpCmD,GAAazU,UAAU0U,UAAYA,GACnCD,GAAazU,UAAU2U,UAAYA,GACnCF,GAAazU,UAAUmL,KAAO,GAC9BsJ,GAAazU,UAAUgL,MAAQ,GAC/ByJ,GAAazU,UAAU+J,KAAO,GAC9B0K,GAAazU,UAAU6U,OAASA,GAChCJ,GAAazU,UAAUwR,UAAYA,GACnCiD,GAAazU,UAAU6Q,QAAU,GACjC4D,GAAazU,UAAU5C,KAAOA,GAC9BqX,GAAazU,UAAU+Q,WAAaA,GACpC0D,GAAazU,UAAU8Q,eAAiBA,GACxC2D,GAAazU,UAAU0Q,YAAcA,GACrC+D,GAAazU,UAAUuQ,KAAOA,GAC9BkE,GAAazU,UAAUwQ,KAAOA,GAC9BiE,GAAazU,UAAUqV,cAAgBA,GACvCZ,GAAazU,UAAUwV,aAAeA,GAEtCf,GAAazU,UAAU+T,IAAMhR,EAE7B0R,GAAazU,UAAU8T,IAAM,GAC7BW,GAAazU,UAAUsO,IAAM,GAC7BmG,GAAazU,UAAUoU,MAAQA,GAEhB,UCjSXwB,GAAW,YAEf,SAASC,GAAU3V,GACf,OAAOA,EAAE7G,QAAQ,kBAAmB,SAAS+M,cAGjD,SAAS0P,GAAYtN,GACjBA,EAAUA,GAAW,GAErBpS,KAAKke,YAAc,EACnBle,KAAKud,QAAU,KAEfvd,KAAK2f,YAAc,EACnB3f,KAAKmZ,OAAS,KAEdnZ,KAAKoS,QAAUA,EAGnB,SAAS,GAAOiL,GAGZ,IAAIW,EACAY,EAHJ5e,KAAKsd,OAAS,GAId,IACIZ,EAAOlV,EAAMG,EACbG,EACA8X,EACAC,EAJAjV,EAASyS,EAAIzS,SAMbwH,EAAUpS,KAAKoS,QAEfA,EAAQyK,MACRC,QAAQD,KAAK,aAGjB7c,KAAKsd,QAAU,2CACftd,KAAKsd,QAAU,gDAEf,MAAQZ,EAAQ9R,EAAOxC,OAcnB,GAbAT,EAAW+U,EAAM/U,SACjBH,EAAOkV,EAAMlV,KACbqY,EAAWrY,EAAKuC,KAEhBjC,EAAYN,EAAKD,YAEjBqY,EACiB,mBAAbC,GACa,cAAbA,GACa,cAAbA,EAEJjB,EAAUa,GAAUI,GAEhBlY,EAAU,CAGV,OAFAqW,EAAQ,GAEA6B,GACJ,IAAK,WACD7B,EAAMhc,KAAK,CAAC,QAAS,kCACrB,MACJ,IAAK,OACqB,OAAlBwF,EAAKsX,UACLd,EAAMhc,KAAK,CAAC,OAAQwF,EAAKsX,SAAS9O,gBAEf,OAAnBxI,EAAKuX,WACLf,EAAMhc,KAAK,CAAC,QAASuB,OAAOiE,EAAKuX,aAEd,OAAnBvX,EAAKmX,WACLX,EAAMhc,KAAK,CACP,QACAwF,EAAKmX,UAAY,OAAS,UAGlC,IAAIvU,EAAQ5C,EAAKsY,cACjB,GAAc,OAAV1V,EAAgB,CAChB,IAAI2V,EAAY,GAEZA,EADU,MAAV3V,EACY,SAEA,QAEhB4T,EAAMhc,KAAK,CAAC,YAAa+d,IAE7B,MACJ,IAAK,aACGvY,EAAKyT,MACL+C,EAAMhc,KAAK,CAAC,OAAQwF,EAAKyT,OAE7B,MACJ,IAAK,UACD+C,EAAMhc,KAAK,CAAC,QAASuB,OAAOiE,EAAK3C,SACjC,MACJ,IAAK,OACL,IAAK,QACDmZ,EAAMhc,KAAK,CAAC,cAAewF,EAAKyN,cAChC+I,EAAMhc,KAAK,CAAC,QAASwF,EAAKsM,QAC1B,MACJ,IAAK,gBACL,IAAK,eACDkK,EAAMhc,KAAK,CAAC,WAAYwF,EAAK0X,UAC7BlB,EAAMhc,KAAK,CAAC,UAAWwF,EAAK2X,SAC5B,MACJ,QACI,MAER,GAAI/M,EAAQ7J,UAAW,CACnB,IAAI6H,EAAM5I,EAAKe,UACX6H,GACA4N,EAAMhc,KAAK,CACP,YACAuB,OAAO6M,EAAI,GAAG,IACV,IACA7M,OAAO6M,EAAI,GAAG,IACd,IACA7M,OAAO6M,EAAI,GAAG,IACd,IACA7M,OAAO6M,EAAI,GAAG,MAO9B,GAFApQ,KAAKyd,KACLzd,KAAK0d,IAAI1d,KAAKkY,IAAI0G,EAASZ,EAAO4B,IAC9B9X,EACA9H,KAAK2f,aAAe,OACjB,IAAK7X,IAAc8X,EAAa,CACnC,IAAIpC,EAAMhW,EAAKoM,QACX4J,GACAxd,KAAK0d,IAAI1d,KAAK2d,IAAIH,IAEtBxd,KAAK0d,IAAI1d,KAAKkY,IAAI,IAAM0G,UAG5B5e,KAAK2f,aAAe,EACpB3f,KAAKyd,KACLzd,KAAK0d,IAAI1d,KAAKkY,IAAI,IAAM0G,IAOhC,OAJIxM,EAAQyK,MACRC,QAAQI,QAAQ,aAEpBld,KAAKsd,QAAU,KACRtd,KAAKsd,OAGhB,SAAS,GAAIxT,GACL9J,KAAKke,YAAc,EACnBle,KAAKsd,QAAUxT,EAAE7G,QAAQuc,GAAU,IAEnCxf,KAAKsd,QAAUxT,EAEnB9J,KAAKud,QAAUzT,EAGnB,SAAS,KACL,GAAqB,OAAjB9J,KAAKud,QAAkB,CACvBvd,KAAKsd,QAAU,KACftd,KAAKud,QAAU,KACf,IAAK,IAAInX,EAAIpG,KAAK2f,YAAavZ,EAAI,EAAGA,IAClCpG,KAAKsd,QAAUtd,KAAKmZ,QAMhC,SAAS,GAAI1X,EAAMuc,EAAOC,GACtB,IAAI/W,EAAS,IAAMzF,EACnB,GAAIuc,GAASA,EAAMlc,OAAS,EAAG,CAC3B,IACIqc,EADA/X,EAAI,EAER,WAA+BgY,KAAvBD,EAASH,EAAM5X,IACnBc,GAAU,IAAMiX,EAAO,GAAK,KAAOne,KAAK2d,IAAIQ,EAAO,IAAM,IACzD/X,IAOR,OAJI6X,IACA/W,GAAU,MAEdA,GAAU,IACHA,EAIXwY,GAAY9V,UAAYzJ,OAAOmf,OAAO,GAAS1V,WAE/C8V,GAAY9V,UAAUnG,OAAS,GAC/Bic,GAAY9V,UAAU8T,IAAM,GAC5BgC,GAAY9V,UAAU6T,GAAK,GAC3BiC,GAAY9V,UAAUsO,IAAM,GAC5BwH,GAAY9V,UAAU+T,IAAMhR,EAEb,W;;AClMVpJ,OAAOqG,UAAU4L,QACpB,WACA,aACA,IAAIpV,EAAkB,WAErB,IACC,IAAI4f,EAAS,GACTC,EAAkB9f,OAAOC,eACzB8G,EAAS+Y,EAAgBD,EAAQA,EAAQA,IAAWC,EACvD,MAAMC,IACR,OAAOhZ,EAPa,GASjBsO,EAAS,SAASpT,GACrB,GAAY,MAARpC,KACH,MAAMmgB,YAEP,IAAItZ,EAAStD,OAAOvD,MAEhBkK,EAAI9H,EAAQqL,OAAOrL,GAAS,EAKhC,GAJI8H,GAAKA,IACRA,EAAI,GAGDA,EAAI,GAAKA,GAAKkW,IACjB,MAAMrT,aAEP,IAAI7F,EAAS,GACb,MAAOgD,EACFA,EAAI,GAAK,IACZhD,GAAUL,GAEPqD,EAAI,IACPrD,GAAUA,GAEXqD,IAAM,EAEP,OAAOhD,GAEJ9G,EACHA,EAAemD,OAAOqG,UAAW,SAAU,CAC1C,MAAS4L,EACT,cAAgB,EAChB,UAAY,IAGbjS,OAAOqG,UAAU4L,OAASA,EA5C5B,I","file":"js/chunk-adfa0f9c.8837c83b.js","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escape = exports.encodeHTML = exports.encodeXML = void 0;\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar inverseXML = getInverseObj(xml_json_1.default);\nvar xmlReplacer = getInverseReplacer(inverseXML);\nexports.encodeXML = getInverse(inverseXML, xmlReplacer);\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar inverseHTML = getInverseObj(entities_json_1.default);\nvar htmlReplacer = getInverseReplacer(inverseHTML);\nexports.encodeHTML = getInverse(inverseHTML, htmlReplacer);\nfunction getInverseObj(obj) {\n    return Object.keys(obj)\n        .sort()\n        .reduce(function (inverse, name) {\n        inverse[obj[name]] = \"&\" + name + \";\";\n        return inverse;\n    }, {});\n}\nfunction getInverseReplacer(inverse) {\n    var single = [];\n    var multiple = [];\n    for (var _i = 0, _a = Object.keys(inverse); _i < _a.length; _i++) {\n        var k = _a[_i];\n        if (k.length === 1) {\n            // Add value to single array\n            single.push(\"\\\\\" + k);\n        }\n        else {\n            // Add value to multiple array\n            multiple.push(k);\n        }\n    }\n    // Add ranges to single characters.\n    single.sort();\n    for (var start = 0; start < single.length - 1; start++) {\n        // Find the end of a run of characters\n        var end = start;\n        while (end < single.length - 1 &&\n            single[end].charCodeAt(1) + 1 === single[end + 1].charCodeAt(1)) {\n            end += 1;\n        }\n        var count = 1 + end - start;\n        // We want to replace at least three characters\n        if (count < 3)\n            continue;\n        single.splice(start, count, single[start] + \"-\" + single[end]);\n    }\n    multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n    return new RegExp(multiple.join(\"|\"), \"g\");\n}\nvar reNonASCII = /(?:[\\x80-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g;\nfunction singleCharReplacer(c) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return \"&#x\" + c.codePointAt(0).toString(16).toUpperCase() + \";\";\n}\nfunction getInverse(inverse, re) {\n    return function (data) {\n        return data\n            .replace(re, function (name) { return inverse[name]; })\n            .replace(reNonASCII, singleCharReplacer);\n    };\n}\nvar reXmlChars = getInverseReplacer(inverseXML);\nfunction escape(data) {\n    return data\n        .replace(reXmlChars, singleCharReplacer)\n        .replace(reNonASCII, singleCharReplacer);\n}\nexports.escape = escape;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar decode_json_1 = __importDefault(require(\"./maps/decode.json\"));\n// modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119\nfunction decodeCodePoint(codePoint) {\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return \"\\uFFFD\";\n    }\n    if (codePoint in decode_json_1.default) {\n        codePoint = decode_json_1.default[codePoint];\n    }\n    var output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n}\nexports.default = decodeCodePoint;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"vue-component styled-description\",class:{compact: _vm.compact},domProps:{\"innerHTML\":_vm._s(_vm.markup(_vm.description))}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n\t<div class=\"vue-component styled-description\" :class=\"{compact: compact}\" v-html=\"markup(description)\"></div>\r\n</template>\r\n\r\n<script>\r\nimport * as commonmark from 'commonmark';\r\nimport Utils from '../utils';\r\n\r\nexport default {\r\n\tname: 'Description',\r\n\tprops: {\r\n\t\tdescription: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: ''\r\n\t\t},\r\n\t\tpreprocessor: {\r\n\t\t\ttype: Function,\r\n\t\t\tdefault: null\r\n\t\t},\r\n\t\tprocessor: {\r\n\t\t\ttype: Function,\r\n\t\t\tdefault: null\r\n\t\t},\r\n\t\tprocessUrl: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: null\r\n\t\t},\r\n\t\tcompact: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t},\r\n\t\tallowHTML: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t}\r\n\t},\r\n\tbeforeCreate() {\r\n\t\tUtils.enableHtmlProps(this);\r\n\t},\r\n\tmethods: {\r\n\t\tmarkup(text) {\r\n\t\t\tif (typeof text !== 'string') {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\r\n\t\t\t// Parse our extension to CommonMark, which allows linking to other processes with ``process()``\r\n\t\t\t// Temporarily replace with a non-commonmark and non-html string to avoid parsing/removal\r\n\t\t\tif (typeof this.processUrl === 'string') {\r\n\t\t\t\ttext = text.replace(/(^|[^\\w`])``(\\w+)\\(\\)``(?![\\w`])/g, (_, prefix, pid) => {\r\n\t\t\t\t\treturn `${prefix}@pid:${pid}@@`;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Parse CommonMark\r\n\t\t\tvar reader = new commonmark.Parser();\r\n\t\t\tvar writer = new commonmark.HtmlRenderer({safe: !this.allowHTML, smart: true});\r\n\t\t\tif (typeof this.preprocessor === 'function') {\r\n\t\t\t\ttext = this.preprocessor(text);\r\n\t\t\t}\r\n\t\t\tvar parsed = reader.parse(text);\r\n\t\t\tvar rendered = writer.render(parsed);\r\n\t\t\tif (typeof this.processor === 'function') {\r\n\t\t\t\trendered = this.processor(rendered);\r\n\t\t\t}\r\n\t\r\n\t\t\t// Replace temporary replacement code with process link\r\n\t\t\tif (typeof this.processUrl === 'string') {\r\n\t\t\t\trendered = rendered.replace(/@pid:(\\w+)@@/g, (_, pid) => this.linkToProcess(pid));\r\n\t\t\t}\r\n\r\n\t\t\treturn rendered;\r\n\t\t},\r\n\t\tlinkToProcess(processId) {\r\n\t\t\tlet url = this.processUrl.replace('${}', encodeURIComponent(processId));\r\n\t\t\tlet target = this.processUrl.startsWith('#') ? '_self' : '_blank';\r\n\t\t\treturn `<code><a href=\"${url}\" target=\"${target}\" class=\"process-link\">${processId}</a></code>`;\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import './base.scss';\r\n\r\n.vue-component.styled-description {\r\n\tline-height: 1.25em;\r\n\r\n\tcode {\r\n\t\tcolor: maroon;\r\n\t\tdisplay: inline-block;\r\n\t\tpadding: 0 0.1em;\r\n\t}\r\n\tpre {\r\n\t\tbackground-color: #eee;\r\n\t\twidth: 100%;\r\n\t\tborder: 1px solid #ccc;\r\n\t\tmax-height: 15em;\r\n\t\toverflow-y: auto;\r\n\t\t\r\n\t\tcode {\r\n\t\t\tbackground-color: transparent; \r\n\t\t\tdisplay: block;\r\n\t\t\tmargin: 0.5em;\r\n\t\t}\r\n\t}\r\n\t&.compact {\r\n\t\tpre {\r\n\t\t\tmax-height: 7em;\r\n\t\t\twidth: auto;\r\n\t\t\tmax-width: 100%;\r\n\t\t}\r\n\t\tp {\r\n\t\t\tmargin: 0.5em 0;\r\n\r\n\t\t\t&:first-child {\r\n\t\t\t\tmargin-top: 0;\r\n\t\t\t}\r\n\t\t\t&:last-child {\r\n\t\t\t\tmargin-bottom: 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n</style>\r\n","import mod from \"-!../../../cache-loader/dist/cjs.js??ref--13-0!../../../thread-loader/dist/cjs.js!../../../babel-loader/lib/index.js!../../../cache-loader/dist/cjs.js??ref--1-0!../../../vue-loader/lib/index.js??vue-loader-options!./Description.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../cache-loader/dist/cjs.js??ref--13-0!../../../thread-loader/dist/cjs.js!../../../babel-loader/lib/index.js!../../../cache-loader/dist/cjs.js??ref--1-0!../../../vue-loader/lib/index.js??vue-loader-options!./Description.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Description.vue?vue&type=template&id=06d88d67&\"\nimport script from \"./Description.vue?vue&type=script&lang=js&\"\nexport * from \"./Description.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Description.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.encode = exports.decodeStrict = exports.decode = void 0;\nvar decode_1 = require(\"./decode\");\nvar encode_1 = require(\"./encode\");\n/**\n * Decodes a string with entities.\n *\n * @param data String to decode.\n * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n */\nfunction decode(data, level) {\n    return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTML)(data);\n}\nexports.decode = decode;\n/**\n * Decodes a string with entities. Does not allow missing trailing semicolons for entities.\n *\n * @param data String to decode.\n * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n */\nfunction decodeStrict(data, level) {\n    return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTMLStrict)(data);\n}\nexports.decodeStrict = decodeStrict;\n/**\n * Encodes a string with entities.\n *\n * @param data String to encode.\n * @param level Optional level to encode at. 0 = XML, 1 = HTML. Default is 0.\n */\nfunction encode(data, level) {\n    return (!level || level <= 0 ? encode_1.encodeXML : encode_1.encodeHTML)(data);\n}\nexports.encode = encode;\nvar encode_2 = require(\"./encode\");\nObject.defineProperty(exports, \"encodeXML\", { enumerable: true, get: function () { return encode_2.encodeXML; } });\nObject.defineProperty(exports, \"encodeHTML\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nObject.defineProperty(exports, \"escape\", { enumerable: true, get: function () { return encode_2.escape; } });\n// Legacy aliases\nObject.defineProperty(exports, \"encodeHTML4\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nObject.defineProperty(exports, \"encodeHTML5\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nvar decode_2 = require(\"./decode\");\nObject.defineProperty(exports, \"decodeXML\", { enumerable: true, get: function () { return decode_2.decodeXML; } });\nObject.defineProperty(exports, \"decodeHTML\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTMLStrict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\n// Legacy aliases\nObject.defineProperty(exports, \"decodeHTML4\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTML5\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTML4Strict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\nObject.defineProperty(exports, \"decodeHTML5Strict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\nObject.defineProperty(exports, \"decodeXMLStrict\", { enumerable: true, get: function () { return decode_2.decodeXML; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeHTML = exports.decodeHTMLStrict = exports.decodeXML = void 0;\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar legacy_json_1 = __importDefault(require(\"./maps/legacy.json\"));\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar decode_codepoint_1 = __importDefault(require(\"./decode_codepoint\"));\nexports.decodeXML = getStrictDecoder(xml_json_1.default);\nexports.decodeHTMLStrict = getStrictDecoder(entities_json_1.default);\nfunction getStrictDecoder(map) {\n    var keys = Object.keys(map).join(\"|\");\n    var replace = getReplacer(map);\n    keys += \"|#[xX][\\\\da-fA-F]+|#\\\\d+\";\n    var re = new RegExp(\"&(?:\" + keys + \");\", \"g\");\n    return function (str) { return String(str).replace(re, replace); };\n}\nvar sorter = function (a, b) { return (a < b ? 1 : -1); };\nexports.decodeHTML = (function () {\n    var legacy = Object.keys(legacy_json_1.default).sort(sorter);\n    var keys = Object.keys(entities_json_1.default).sort(sorter);\n    for (var i = 0, j = 0; i < keys.length; i++) {\n        if (legacy[j] === keys[i]) {\n            keys[i] += \";?\";\n            j++;\n        }\n        else {\n            keys[i] += \";\";\n        }\n    }\n    var re = new RegExp(\"&(?:\" + keys.join(\"|\") + \"|#[xX][\\\\da-fA-F]+;?|#\\\\d+;?)\", \"g\");\n    var replace = getReplacer(entities_json_1.default);\n    function replacer(str) {\n        if (str.substr(-1) !== \";\")\n            str += \";\";\n        return replace(str);\n    }\n    //TODO consider creating a merged map\n    return function (str) { return String(str).replace(re, replacer); };\n})();\nfunction getReplacer(map) {\n    return function replace(str) {\n        if (str.charAt(1) === \"#\") {\n            var secondChar = str.charAt(2);\n            if (secondChar === \"X\" || secondChar === \"x\") {\n                return decode_codepoint_1.default(parseInt(str.substr(3), 16));\n            }\n            return decode_codepoint_1.default(parseInt(str.substr(2), 10));\n        }\n        return map[str.slice(1, -1)];\n    };\n}\n","export * from \"-!../../../mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../vue-loader/lib/loaders/stylePostLoader.js!../../../postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../cache-loader/dist/cjs.js??ref--1-0!../../../vue-loader/lib/index.js??vue-loader-options!./Description.vue?vue&type=style&index=0&lang=scss&\"","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\"use strict\";\n\nfunction isContainer(node) {\n    switch (node._type) {\n        case \"document\":\n        case \"block_quote\":\n        case \"list\":\n        case \"item\":\n        case \"paragraph\":\n        case \"heading\":\n        case \"emph\":\n        case \"strong\":\n        case \"link\":\n        case \"image\":\n        case \"custom_inline\":\n        case \"custom_block\":\n            return true;\n        default:\n            return false;\n    }\n}\n\nvar resumeAt = function(node, entering) {\n    this.current = node;\n    this.entering = entering === true;\n};\n\nvar next = function() {\n    var cur = this.current;\n    var entering = this.entering;\n\n    if (cur === null) {\n        return null;\n    }\n\n    var container = isContainer(cur);\n\n    if (entering && container) {\n        if (cur._firstChild) {\n            this.current = cur._firstChild;\n            this.entering = true;\n        } else {\n            // stay on node but exit\n            this.entering = false;\n        }\n    } else if (cur === this.root) {\n        this.current = null;\n    } else if (cur._next === null) {\n        this.current = cur._parent;\n        this.entering = false;\n    } else {\n        this.current = cur._next;\n        this.entering = true;\n    }\n\n    return { entering: entering, node: cur };\n};\n\nvar NodeWalker = function(root) {\n    return {\n        current: root,\n        root: root,\n        entering: true,\n        next: next,\n        resumeAt: resumeAt\n    };\n};\n\nvar Node = function(nodeType, sourcepos) {\n    this._type = nodeType;\n    this._parent = null;\n    this._firstChild = null;\n    this._lastChild = null;\n    this._prev = null;\n    this._next = null;\n    this._sourcepos = sourcepos;\n    this._lastLineBlank = false;\n    this._lastLineChecked = false;\n    this._open = true;\n    this._string_content = null;\n    this._literal = null;\n    this._listData = {};\n    this._info = null;\n    this._destination = null;\n    this._title = null;\n    this._isFenced = false;\n    this._fenceChar = null;\n    this._fenceLength = 0;\n    this._fenceOffset = null;\n    this._level = null;\n    this._onEnter = null;\n    this._onExit = null;\n};\n\nvar proto = Node.prototype;\n\nObject.defineProperty(proto, \"isContainer\", {\n    get: function() {\n        return isContainer(this);\n    }\n});\n\nObject.defineProperty(proto, \"type\", {\n    get: function() {\n        return this._type;\n    }\n});\n\nObject.defineProperty(proto, \"firstChild\", {\n    get: function() {\n        return this._firstChild;\n    }\n});\n\nObject.defineProperty(proto, \"lastChild\", {\n    get: function() {\n        return this._lastChild;\n    }\n});\n\nObject.defineProperty(proto, \"next\", {\n    get: function() {\n        return this._next;\n    }\n});\n\nObject.defineProperty(proto, \"prev\", {\n    get: function() {\n        return this._prev;\n    }\n});\n\nObject.defineProperty(proto, \"parent\", {\n    get: function() {\n        return this._parent;\n    }\n});\n\nObject.defineProperty(proto, \"sourcepos\", {\n    get: function() {\n        return this._sourcepos;\n    }\n});\n\nObject.defineProperty(proto, \"literal\", {\n    get: function() {\n        return this._literal;\n    },\n    set: function(s) {\n        this._literal = s;\n    }\n});\n\nObject.defineProperty(proto, \"destination\", {\n    get: function() {\n        return this._destination;\n    },\n    set: function(s) {\n        this._destination = s;\n    }\n});\n\nObject.defineProperty(proto, \"title\", {\n    get: function() {\n        return this._title;\n    },\n    set: function(s) {\n        this._title = s;\n    }\n});\n\nObject.defineProperty(proto, \"info\", {\n    get: function() {\n        return this._info;\n    },\n    set: function(s) {\n        this._info = s;\n    }\n});\n\nObject.defineProperty(proto, \"level\", {\n    get: function() {\n        return this._level;\n    },\n    set: function(s) {\n        this._level = s;\n    }\n});\n\nObject.defineProperty(proto, \"listType\", {\n    get: function() {\n        return this._listData.type;\n    },\n    set: function(t) {\n        this._listData.type = t;\n    }\n});\n\nObject.defineProperty(proto, \"listTight\", {\n    get: function() {\n        return this._listData.tight;\n    },\n    set: function(t) {\n        this._listData.tight = t;\n    }\n});\n\nObject.defineProperty(proto, \"listStart\", {\n    get: function() {\n        return this._listData.start;\n    },\n    set: function(n) {\n        this._listData.start = n;\n    }\n});\n\nObject.defineProperty(proto, \"listDelimiter\", {\n    get: function() {\n        return this._listData.delimiter;\n    },\n    set: function(delim) {\n        this._listData.delimiter = delim;\n    }\n});\n\nObject.defineProperty(proto, \"onEnter\", {\n    get: function() {\n        return this._onEnter;\n    },\n    set: function(s) {\n        this._onEnter = s;\n    }\n});\n\nObject.defineProperty(proto, \"onExit\", {\n    get: function() {\n        return this._onExit;\n    },\n    set: function(s) {\n        this._onExit = s;\n    }\n});\n\nNode.prototype.appendChild = function(child) {\n    child.unlink();\n    child._parent = this;\n    if (this._lastChild) {\n        this._lastChild._next = child;\n        child._prev = this._lastChild;\n        this._lastChild = child;\n    } else {\n        this._firstChild = child;\n        this._lastChild = child;\n    }\n};\n\nNode.prototype.prependChild = function(child) {\n    child.unlink();\n    child._parent = this;\n    if (this._firstChild) {\n        this._firstChild._prev = child;\n        child._next = this._firstChild;\n        this._firstChild = child;\n    } else {\n        this._firstChild = child;\n        this._lastChild = child;\n    }\n};\n\nNode.prototype.unlink = function() {\n    if (this._prev) {\n        this._prev._next = this._next;\n    } else if (this._parent) {\n        this._parent._firstChild = this._next;\n    }\n    if (this._next) {\n        this._next._prev = this._prev;\n    } else if (this._parent) {\n        this._parent._lastChild = this._prev;\n    }\n    this._parent = null;\n    this._next = null;\n    this._prev = null;\n};\n\nNode.prototype.insertAfter = function(sibling) {\n    sibling.unlink();\n    sibling._next = this._next;\n    if (sibling._next) {\n        sibling._next._prev = sibling;\n    }\n    sibling._prev = this;\n    this._next = sibling;\n    sibling._parent = this._parent;\n    if (!sibling._next) {\n        sibling._parent._lastChild = sibling;\n    }\n};\n\nNode.prototype.insertBefore = function(sibling) {\n    sibling.unlink();\n    sibling._prev = this._prev;\n    if (sibling._prev) {\n        sibling._prev._next = sibling;\n    }\n    sibling._next = this;\n    this._prev = sibling;\n    sibling._parent = this._parent;\n    if (!sibling._prev) {\n        sibling._parent._firstChild = sibling;\n    }\n};\n\nNode.prototype.walker = function() {\n    var walker = new NodeWalker(this);\n    return walker;\n};\n\nexport default Node;\n\n/* Example of use of walker:\n\n var walker = w.walker();\n var event;\n\n while (event = walker.next()) {\n console.log(event.entering, event.node.type);\n }\n\n */\n","\"use strict\";\n\n// derived from https://github.com/mathiasbynens/String.fromCodePoint\n/*! http://mths.be/fromcodepoint v0.2.1 by @mathias */\n\nvar _fromCodePoint;\n\nexport default function fromCodePoint(_) {\n    return _fromCodePoint(_);\n}\n\nif (String.fromCodePoint) {\n    _fromCodePoint = function(_) {\n        try {\n            return String.fromCodePoint(_);\n        } catch (e) {\n            if (e instanceof RangeError) {\n                return String.fromCharCode(0xfffd);\n            }\n            throw e;\n        }\n    };\n} else {\n    var stringFromCharCode = String.fromCharCode;\n    var floor = Math.floor;\n    _fromCodePoint = function() {\n        var MAX_SIZE = 0x4000;\n        var codeUnits = [];\n        var highSurrogate;\n        var lowSurrogate;\n        var index = -1;\n        var length = arguments.length;\n        if (!length) {\n            return \"\";\n        }\n        var result = \"\";\n        while (++index < length) {\n            var codePoint = Number(arguments[index]);\n            if (\n                !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n                codePoint < 0 || // not a valid Unicode code point\n                codePoint > 0x10ffff || // not a valid Unicode code point\n                floor(codePoint) !== codePoint // not an integer\n            ) {\n                return String.fromCharCode(0xfffd);\n            }\n            if (codePoint <= 0xffff) {\n                // BMP code point\n                codeUnits.push(codePoint);\n            } else {\n                // Astral code point; split in surrogate halves\n                // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n                codePoint -= 0x10000;\n                highSurrogate = (codePoint >> 10) + 0xd800;\n                lowSurrogate = (codePoint % 0x400) + 0xdc00;\n                codeUnits.push(highSurrogate, lowSurrogate);\n            }\n            if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n                result += stringFromCharCode.apply(null, codeUnits);\n                codeUnits.length = 0;\n            }\n        }\n        return result;\n    };\n}\n","\"use strict\";\n\nimport encode from \"mdurl/encode.js\";\nimport { decodeHTML } from \"entities\";\n\nvar C_BACKSLASH = 92;\n\nvar ENTITY = \"&(?:#x[a-f0-9]{1,6}|#[0-9]{1,7}|[a-z][a-z0-9]{1,31});\";\n\nvar TAGNAME = \"[A-Za-z][A-Za-z0-9-]*\";\nvar ATTRIBUTENAME = \"[a-zA-Z_:][a-zA-Z0-9:._-]*\";\nvar UNQUOTEDVALUE = \"[^\\\"'=<>`\\\\x00-\\\\x20]+\";\nvar SINGLEQUOTEDVALUE = \"'[^']*'\";\nvar DOUBLEQUOTEDVALUE = '\"[^\"]*\"';\nvar ATTRIBUTEVALUE =\n    \"(?:\" +\n    UNQUOTEDVALUE +\n    \"|\" +\n    SINGLEQUOTEDVALUE +\n    \"|\" +\n    DOUBLEQUOTEDVALUE +\n    \")\";\nvar ATTRIBUTEVALUESPEC = \"(?:\" + \"\\\\s*=\" + \"\\\\s*\" + ATTRIBUTEVALUE + \")\";\nvar ATTRIBUTE = \"(?:\" + \"\\\\s+\" + ATTRIBUTENAME + ATTRIBUTEVALUESPEC + \"?)\";\nvar OPENTAG = \"<\" + TAGNAME + ATTRIBUTE + \"*\" + \"\\\\s*/?>\";\nvar CLOSETAG = \"</\" + TAGNAME + \"\\\\s*[>]\";\nvar HTMLCOMMENT = \"<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->\";\nvar PROCESSINGINSTRUCTION = \"[<][?][\\\\s\\\\S]*?[?][>]\";\nvar DECLARATION = \"<![A-Z]+\" + \"\\\\s+[^>]*>\";\nvar CDATA = \"<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\";\nvar HTMLTAG =\n    \"(?:\" +\n    OPENTAG +\n    \"|\" +\n    CLOSETAG +\n    \"|\" +\n    HTMLCOMMENT +\n    \"|\" +\n    PROCESSINGINSTRUCTION +\n    \"|\" +\n    DECLARATION +\n    \"|\" +\n    CDATA +\n    \")\";\nvar reHtmlTag = new RegExp(\"^\" + HTMLTAG);\n\nvar reBackslashOrAmp = /[\\\\&]/;\n\nvar ESCAPABLE = \"[!\\\"#$%&'()*+,./:;<=>?@[\\\\\\\\\\\\]^_`{|}~-]\";\n\nvar reEntityOrEscapedChar = new RegExp(\"\\\\\\\\\" + ESCAPABLE + \"|\" + ENTITY, \"gi\");\n\nvar XMLSPECIAL = '[&<>\"]';\n\nvar reXmlSpecial = new RegExp(XMLSPECIAL, \"g\");\n\nvar unescapeChar = function(s) {\n    if (s.charCodeAt(0) === C_BACKSLASH) {\n        return s.charAt(1);\n    } else {\n        return decodeHTML(s);\n    }\n};\n\n// Replace entities and backslash escapes with literal characters.\nvar unescapeString = function(s) {\n    if (reBackslashOrAmp.test(s)) {\n        return s.replace(reEntityOrEscapedChar, unescapeChar);\n    } else {\n        return s;\n    }\n};\n\nvar normalizeURI = function(uri) {\n    try {\n        return encode(uri);\n    } catch (err) {\n        return uri;\n    }\n};\n\nvar replaceUnsafeChar = function(s) {\n    switch (s) {\n        case \"&\":\n            return \"&amp;\";\n        case \"<\":\n            return \"&lt;\";\n        case \">\":\n            return \"&gt;\";\n        case '\"':\n            return \"&quot;\";\n        default:\n            return s;\n    }\n};\n\nvar escapeXml = function(s) {\n    if (reXmlSpecial.test(s)) {\n        return s.replace(reXmlSpecial, replaceUnsafeChar);\n    } else {\n        return s;\n    }\n};\n\nexport {\n    unescapeString,\n    normalizeURI,\n    escapeXml,\n    reHtmlTag,\n    OPENTAG,\n    CLOSETAG,\n    ENTITY,\n    ESCAPABLE\n};\n","\"use strict\";\n\nimport Node from \"./node.js\";\nimport * as common from \"./common.js\";\nimport fromCodePoint from \"./from-code-point.js\";\nimport { decodeHTML } from \"entities\";\nimport \"string.prototype.repeat\"; // Polyfill for String.prototype.repeat\n\nvar normalizeURI = common.normalizeURI;\nvar unescapeString = common.unescapeString;\n\n// Constants for character codes:\n\nvar C_NEWLINE = 10;\nvar C_ASTERISK = 42;\nvar C_UNDERSCORE = 95;\nvar C_BACKTICK = 96;\nvar C_OPEN_BRACKET = 91;\nvar C_CLOSE_BRACKET = 93;\nvar C_LESSTHAN = 60;\nvar C_BANG = 33;\nvar C_BACKSLASH = 92;\nvar C_AMPERSAND = 38;\nvar C_OPEN_PAREN = 40;\nvar C_CLOSE_PAREN = 41;\nvar C_COLON = 58;\nvar C_SINGLEQUOTE = 39;\nvar C_DOUBLEQUOTE = 34;\n\n// Some regexps used in inline parser:\n\nvar ESCAPABLE = common.ESCAPABLE;\nvar ESCAPED_CHAR = \"\\\\\\\\\" + ESCAPABLE;\n\nvar ENTITY = common.ENTITY;\nvar reHtmlTag = common.reHtmlTag;\n\nvar rePunctuation = new RegExp(\n    /[!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E42\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC9\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDF3C-\\uDF3E]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]/\n);\n\nvar reLinkTitle = new RegExp(\n    '^(?:\"(' +\n        ESCAPED_CHAR +\n        '|[^\"\\\\x00])*\"' +\n        \"|\" +\n        \"'(\" +\n        ESCAPED_CHAR +\n        \"|[^'\\\\x00])*'\" +\n        \"|\" +\n        \"\\\\((\" +\n        ESCAPED_CHAR +\n        \"|[^()\\\\x00])*\\\\))\"\n);\n\nvar reLinkDestinationBraces = /^(?:<(?:[^<>\\n\\\\\\x00]|\\\\.)*>)/;\n\nvar reEscapable = new RegExp(\"^\" + ESCAPABLE);\n\nvar reEntityHere = new RegExp(\"^\" + ENTITY, \"i\");\n\nvar reTicks = /`+/;\n\nvar reTicksHere = /^`+/;\n\nvar reEllipses = /\\.\\.\\./g;\n\nvar reDash = /--+/g;\n\nvar reEmailAutolink = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\n\nvar reAutolink = /^<[A-Za-z][A-Za-z0-9.+-]{1,31}:[^<>\\x00-\\x20]*>/i;\n\nvar reSpnl = /^ *(?:\\n *)?/;\n\nvar reWhitespaceChar = /^[ \\t\\n\\x0b\\x0c\\x0d]/;\n\nvar reUnicodeWhitespaceChar = /^\\s/;\n\nvar reFinalSpace = / *$/;\n\nvar reInitialSpace = /^ */;\n\nvar reSpaceAtEndOfLine = /^ *(?:\\n|$)/;\n\nvar reLinkLabel = /^\\[(?:[^\\\\\\[\\]]|\\\\.){0,1000}\\]/;\n\n// Matches a string of non-special characters.\nvar reMain = /^[^\\n`\\[\\]\\\\!<&*_'\"]+/m;\n\nvar text = function(s) {\n    var node = new Node(\"text\");\n    node._literal = s;\n    return node;\n};\n\n// normalize a reference in reference link (remove []s, trim,\n// collapse internal space, unicode case fold.\n// See commonmark/commonmark.js#168.\nvar normalizeReference = function(string) {\n    return string\n        .slice(1, string.length - 1)\n        .trim()\n        .replace(/[ \\t\\r\\n]+/, \" \")\n        .toLowerCase()\n        .toUpperCase();\n};\n\n// INLINE PARSER\n\n// These are methods of an InlineParser object, defined below.\n// An InlineParser keeps track of a subject (a string to be\n// parsed) and a position in that subject.\n\n// If re matches at current position in the subject, advance\n// position in subject and return the match; otherwise return null.\nvar match = function(re) {\n    var m = re.exec(this.subject.slice(this.pos));\n    if (m === null) {\n        return null;\n    } else {\n        this.pos += m.index + m[0].length;\n        return m[0];\n    }\n};\n\n// Returns the code for the character at the current subject position, or -1\n// there are no more characters.\nvar peek = function() {\n    if (this.pos < this.subject.length) {\n        return this.subject.charCodeAt(this.pos);\n    } else {\n        return -1;\n    }\n};\n\n// Parse zero or more space characters, including at most one newline\nvar spnl = function() {\n    this.match(reSpnl);\n    return true;\n};\n\n// All of the parsers below try to match something at the current position\n// in the subject.  If they succeed in matching anything, they\n// return the inline matched, advancing the subject.\n\n// Attempt to parse backticks, adding either a backtick code span or a\n// literal sequence of backticks.\nvar parseBackticks = function(block) {\n    var ticks = this.match(reTicksHere);\n    if (ticks === null) {\n        return false;\n    }\n    var afterOpenTicks = this.pos;\n    var matched;\n    var node;\n    var contents;\n    while ((matched = this.match(reTicks)) !== null) {\n        if (matched === ticks) {\n            node = new Node(\"code\");\n            contents = this.subject\n                .slice(afterOpenTicks, this.pos - ticks.length)\n                .replace(/\\n/gm, \" \");\n            if (\n                contents.length > 0 &&\n                contents.match(/[^ ]/) !== null &&\n                contents[0] == \" \" &&\n                contents[contents.length - 1] == \" \"\n            ) {\n                node._literal = contents.slice(1, contents.length - 1);\n            } else {\n                node._literal = contents;\n            }\n            block.appendChild(node);\n            return true;\n        }\n    }\n    // If we got here, we didn't match a closing backtick sequence.\n    this.pos = afterOpenTicks;\n    block.appendChild(text(ticks));\n    return true;\n};\n\n// Parse a backslash-escaped special character, adding either the escaped\n// character, a hard line break (if the backslash is followed by a newline),\n// or a literal backslash to the block's children.  Assumes current character\n// is a backslash.\nvar parseBackslash = function(block) {\n    var subj = this.subject;\n    var node;\n    this.pos += 1;\n    if (this.peek() === C_NEWLINE) {\n        this.pos += 1;\n        node = new Node(\"linebreak\");\n        block.appendChild(node);\n    } else if (reEscapable.test(subj.charAt(this.pos))) {\n        block.appendChild(text(subj.charAt(this.pos)));\n        this.pos += 1;\n    } else {\n        block.appendChild(text(\"\\\\\"));\n    }\n    return true;\n};\n\n// Attempt to parse an autolink (URL or email in pointy brackets).\nvar parseAutolink = function(block) {\n    var m;\n    var dest;\n    var node;\n    if ((m = this.match(reEmailAutolink))) {\n        dest = m.slice(1, m.length - 1);\n        node = new Node(\"link\");\n        node._destination = normalizeURI(\"mailto:\" + dest);\n        node._title = \"\";\n        node.appendChild(text(dest));\n        block.appendChild(node);\n        return true;\n    } else if ((m = this.match(reAutolink))) {\n        dest = m.slice(1, m.length - 1);\n        node = new Node(\"link\");\n        node._destination = normalizeURI(dest);\n        node._title = \"\";\n        node.appendChild(text(dest));\n        block.appendChild(node);\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// Attempt to parse a raw HTML tag.\nvar parseHtmlTag = function(block) {\n    var m = this.match(reHtmlTag);\n    if (m === null) {\n        return false;\n    } else {\n        var node = new Node(\"html_inline\");\n        node._literal = m;\n        block.appendChild(node);\n        return true;\n    }\n};\n\n// Scan a sequence of characters with code cc, and return information about\n// the number of delimiters and whether they are positioned such that\n// they can open and/or close emphasis or strong emphasis.  A utility\n// function for strong/emph parsing.\nvar scanDelims = function(cc) {\n    var numdelims = 0;\n    var char_before, char_after, cc_after;\n    var startpos = this.pos;\n    var left_flanking, right_flanking, can_open, can_close;\n    var after_is_whitespace,\n        after_is_punctuation,\n        before_is_whitespace,\n        before_is_punctuation;\n\n    if (cc === C_SINGLEQUOTE || cc === C_DOUBLEQUOTE) {\n        numdelims++;\n        this.pos++;\n    } else {\n        while (this.peek() === cc) {\n            numdelims++;\n            this.pos++;\n        }\n    }\n\n    if (numdelims === 0) {\n        return null;\n    }\n\n    char_before = startpos === 0 ? \"\\n\" : this.subject.charAt(startpos - 1);\n\n    cc_after = this.peek();\n    if (cc_after === -1) {\n        char_after = \"\\n\";\n    } else {\n        char_after = fromCodePoint(cc_after);\n    }\n\n    after_is_whitespace = reUnicodeWhitespaceChar.test(char_after);\n    after_is_punctuation = rePunctuation.test(char_after);\n    before_is_whitespace = reUnicodeWhitespaceChar.test(char_before);\n    before_is_punctuation = rePunctuation.test(char_before);\n\n    left_flanking =\n        !after_is_whitespace &&\n        (!after_is_punctuation ||\n            before_is_whitespace ||\n            before_is_punctuation);\n    right_flanking =\n        !before_is_whitespace &&\n        (!before_is_punctuation || after_is_whitespace || after_is_punctuation);\n    if (cc === C_UNDERSCORE) {\n        can_open = left_flanking && (!right_flanking || before_is_punctuation);\n        can_close = right_flanking && (!left_flanking || after_is_punctuation);\n    } else if (cc === C_SINGLEQUOTE || cc === C_DOUBLEQUOTE) {\n        can_open = left_flanking && !right_flanking;\n        can_close = right_flanking;\n    } else {\n        can_open = left_flanking;\n        can_close = right_flanking;\n    }\n    this.pos = startpos;\n    return { numdelims: numdelims, can_open: can_open, can_close: can_close };\n};\n\n// Handle a delimiter marker for emphasis or a quote.\nvar handleDelim = function(cc, block) {\n    var res = this.scanDelims(cc);\n    if (!res) {\n        return false;\n    }\n    var numdelims = res.numdelims;\n    var startpos = this.pos;\n    var contents;\n\n    this.pos += numdelims;\n    if (cc === C_SINGLEQUOTE) {\n        contents = \"\\u2019\";\n    } else if (cc === C_DOUBLEQUOTE) {\n        contents = \"\\u201C\";\n    } else {\n        contents = this.subject.slice(startpos, this.pos);\n    }\n    var node = text(contents);\n    block.appendChild(node);\n\n    // Add entry to stack for this opener\n    if (\n        (res.can_open || res.can_close) &&\n        (this.options.smart || (cc !== C_SINGLEQUOTE && cc !== C_DOUBLEQUOTE))\n    ) {\n        this.delimiters = {\n            cc: cc,\n            numdelims: numdelims,\n            origdelims: numdelims,\n            node: node,\n            previous: this.delimiters,\n            next: null,\n            can_open: res.can_open,\n            can_close: res.can_close\n        };\n        if (this.delimiters.previous !== null) {\n            this.delimiters.previous.next = this.delimiters;\n        }\n    }\n\n    return true;\n};\n\nvar removeDelimiter = function(delim) {\n    if (delim.previous !== null) {\n        delim.previous.next = delim.next;\n    }\n    if (delim.next === null) {\n        // top of stack\n        this.delimiters = delim.previous;\n    } else {\n        delim.next.previous = delim.previous;\n    }\n};\n\nvar removeDelimitersBetween = function(bottom, top) {\n    if (bottom.next !== top) {\n        bottom.next = top;\n        top.previous = bottom;\n    }\n};\n\nvar processEmphasis = function(stack_bottom) {\n    var opener, closer, old_closer;\n    var opener_inl, closer_inl;\n    var tempstack;\n    var use_delims;\n    var tmp, next;\n    var opener_found;\n    var openers_bottom = [[], [], []];\n    var odd_match = false;\n\n    for (var i = 0; i < 3; i++) {\n        openers_bottom[i][C_UNDERSCORE] = stack_bottom;\n        openers_bottom[i][C_ASTERISK] = stack_bottom;\n        openers_bottom[i][C_SINGLEQUOTE] = stack_bottom;\n        openers_bottom[i][C_DOUBLEQUOTE] = stack_bottom;\n    }\n    // find first closer above stack_bottom:\n    closer = this.delimiters;\n    while (closer !== null && closer.previous !== stack_bottom) {\n        closer = closer.previous;\n    }\n    // move forward, looking for closers, and handling each\n    while (closer !== null) {\n        var closercc = closer.cc;\n        if (!closer.can_close) {\n            closer = closer.next;\n        } else {\n            // found emphasis closer. now look back for first matching opener:\n            opener = closer.previous;\n            opener_found = false;\n            while (\n                opener !== null &&\n                opener !== stack_bottom &&\n                opener !== openers_bottom[closer.origdelims % 3][closercc]\n            ) {\n                odd_match =\n                    (closer.can_open || opener.can_close) &&\n                    closer.origdelims % 3 !== 0 &&\n                    (opener.origdelims + closer.origdelims) % 3 === 0;\n                if (opener.cc === closer.cc && opener.can_open && !odd_match) {\n                    opener_found = true;\n                    break;\n                }\n                opener = opener.previous;\n            }\n            old_closer = closer;\n\n            if (closercc === C_ASTERISK || closercc === C_UNDERSCORE) {\n                if (!opener_found) {\n                    closer = closer.next;\n                } else {\n                    // calculate actual number of delimiters used from closer\n                    use_delims =\n                        closer.numdelims >= 2 && opener.numdelims >= 2 ? 2 : 1;\n\n                    opener_inl = opener.node;\n                    closer_inl = closer.node;\n\n                    // remove used delimiters from stack elts and inlines\n                    opener.numdelims -= use_delims;\n                    closer.numdelims -= use_delims;\n                    opener_inl._literal = opener_inl._literal.slice(\n                        0,\n                        opener_inl._literal.length - use_delims\n                    );\n                    closer_inl._literal = closer_inl._literal.slice(\n                        0,\n                        closer_inl._literal.length - use_delims\n                    );\n\n                    // build contents for new emph element\n                    var emph = new Node(use_delims === 1 ? \"emph\" : \"strong\");\n\n                    tmp = opener_inl._next;\n                    while (tmp && tmp !== closer_inl) {\n                        next = tmp._next;\n                        tmp.unlink();\n                        emph.appendChild(tmp);\n                        tmp = next;\n                    }\n\n                    opener_inl.insertAfter(emph);\n\n                    // remove elts between opener and closer in delimiters stack\n                    removeDelimitersBetween(opener, closer);\n\n                    // if opener has 0 delims, remove it and the inline\n                    if (opener.numdelims === 0) {\n                        opener_inl.unlink();\n                        this.removeDelimiter(opener);\n                    }\n\n                    if (closer.numdelims === 0) {\n                        closer_inl.unlink();\n                        tempstack = closer.next;\n                        this.removeDelimiter(closer);\n                        closer = tempstack;\n                    }\n                }\n            } else if (closercc === C_SINGLEQUOTE) {\n                closer.node._literal = \"\\u2019\";\n                if (opener_found) {\n                    opener.node._literal = \"\\u2018\";\n                }\n                closer = closer.next;\n            } else if (closercc === C_DOUBLEQUOTE) {\n                closer.node._literal = \"\\u201D\";\n                if (opener_found) {\n                    opener.node.literal = \"\\u201C\";\n                }\n                closer = closer.next;\n            }\n            if (!opener_found) {\n                // Set lower bound for future searches for openers:\n                openers_bottom[old_closer.origdelims % 3][closercc] =\n                    old_closer.previous;\n                if (!old_closer.can_open) {\n                    // We can remove a closer that can't be an opener,\n                    // once we've seen there's no matching opener:\n                    this.removeDelimiter(old_closer);\n                }\n            }\n        }\n    }\n\n    // remove all delimiters\n    while (this.delimiters !== null && this.delimiters !== stack_bottom) {\n        this.removeDelimiter(this.delimiters);\n    }\n};\n\n// Attempt to parse link title (sans quotes), returning the string\n// or null if no match.\nvar parseLinkTitle = function() {\n    var title = this.match(reLinkTitle);\n    if (title === null) {\n        return null;\n    } else {\n        // chop off quotes from title and unescape:\n        return unescapeString(title.substr(1, title.length - 2));\n    }\n};\n\n// Attempt to parse link destination, returning the string or\n// null if no match.\nvar parseLinkDestination = function() {\n    var res = this.match(reLinkDestinationBraces);\n    if (res === null) {\n        if (this.peek() === C_LESSTHAN) {\n            return null;\n        }\n        // TODO handrolled parser; res should be null or the string\n        var savepos = this.pos;\n        var openparens = 0;\n        var c;\n        while ((c = this.peek()) !== -1) {\n            if (\n                c === C_BACKSLASH &&\n                reEscapable.test(this.subject.charAt(this.pos + 1))\n            ) {\n                this.pos += 1;\n                if (this.peek() !== -1) {\n                    this.pos += 1;\n                }\n            } else if (c === C_OPEN_PAREN) {\n                this.pos += 1;\n                openparens += 1;\n            } else if (c === C_CLOSE_PAREN) {\n                if (openparens < 1) {\n                    break;\n                } else {\n                    this.pos += 1;\n                    openparens -= 1;\n                }\n            } else if (reWhitespaceChar.exec(fromCodePoint(c)) !== null) {\n                break;\n            } else {\n                this.pos += 1;\n            }\n        }\n        if (this.pos === savepos && c !== C_CLOSE_PAREN) {\n            return null;\n        }\n        if (openparens !== 0) {\n            return null;\n        }\n        res = this.subject.substr(savepos, this.pos - savepos);\n        return normalizeURI(unescapeString(res));\n    } else {\n        // chop off surrounding <..>:\n        return normalizeURI(unescapeString(res.substr(1, res.length - 2)));\n    }\n};\n\n// Attempt to parse a link label, returning number of characters parsed.\nvar parseLinkLabel = function() {\n    var m = this.match(reLinkLabel);\n    if (m === null || m.length > 1001) {\n        return 0;\n    } else {\n        return m.length;\n    }\n};\n\n// Add open bracket to delimiter stack and add a text node to block's children.\nvar parseOpenBracket = function(block) {\n    var startpos = this.pos;\n    this.pos += 1;\n\n    var node = text(\"[\");\n    block.appendChild(node);\n\n    // Add entry to stack for this opener\n    this.addBracket(node, startpos, false);\n    return true;\n};\n\n// IF next character is [, and ! delimiter to delimiter stack and\n// add a text node to block's children.  Otherwise just add a text node.\nvar parseBang = function(block) {\n    var startpos = this.pos;\n    this.pos += 1;\n    if (this.peek() === C_OPEN_BRACKET) {\n        this.pos += 1;\n\n        var node = text(\"![\");\n        block.appendChild(node);\n\n        // Add entry to stack for this opener\n        this.addBracket(node, startpos + 1, true);\n    } else {\n        block.appendChild(text(\"!\"));\n    }\n    return true;\n};\n\n// Try to match close bracket against an opening in the delimiter\n// stack.  Add either a link or image, or a plain [ character,\n// to block's children.  If there is a matching delimiter,\n// remove it from the delimiter stack.\nvar parseCloseBracket = function(block) {\n    var startpos;\n    var is_image;\n    var dest;\n    var title;\n    var matched = false;\n    var reflabel;\n    var opener;\n\n    this.pos += 1;\n    startpos = this.pos;\n\n    // get last [ or ![\n    opener = this.brackets;\n\n    if (opener === null) {\n        // no matched opener, just return a literal\n        block.appendChild(text(\"]\"));\n        return true;\n    }\n\n    if (!opener.active) {\n        // no matched opener, just return a literal\n        block.appendChild(text(\"]\"));\n        // take opener off brackets stack\n        this.removeBracket();\n        return true;\n    }\n\n    // If we got here, open is a potential opener\n    is_image = opener.image;\n\n    // Check to see if we have a link/image\n\n    var savepos = this.pos;\n\n    // Inline link?\n    if (this.peek() === C_OPEN_PAREN) {\n        this.pos++;\n        if (\n            this.spnl() &&\n            (dest = this.parseLinkDestination()) !== null &&\n            this.spnl() &&\n            // make sure there's a space before the title:\n            ((reWhitespaceChar.test(this.subject.charAt(this.pos - 1)) &&\n                (title = this.parseLinkTitle())) ||\n                true) &&\n            this.spnl() &&\n            this.peek() === C_CLOSE_PAREN\n        ) {\n            this.pos += 1;\n            matched = true;\n        } else {\n            this.pos = savepos;\n        }\n    }\n\n    if (!matched) {\n        // Next, see if there's a link label\n        var beforelabel = this.pos;\n        var n = this.parseLinkLabel();\n        if (n > 2) {\n            reflabel = this.subject.slice(beforelabel, beforelabel + n);\n        } else if (!opener.bracketAfter) {\n            // Empty or missing second label means to use the first label as the reference.\n            // The reference must not contain a bracket. If we know there's a bracket, we don't even bother checking it.\n            reflabel = this.subject.slice(opener.index, startpos);\n        }\n        if (n === 0) {\n            // If shortcut reference link, rewind before spaces we skipped.\n            this.pos = savepos;\n        }\n\n        if (reflabel) {\n            // lookup rawlabel in refmap\n            var link = this.refmap[normalizeReference(reflabel)];\n            if (link) {\n                dest = link.destination;\n                title = link.title;\n                matched = true;\n            }\n        }\n    }\n\n    if (matched) {\n        var node = new Node(is_image ? \"image\" : \"link\");\n        node._destination = dest;\n        node._title = title || \"\";\n\n        var tmp, next;\n        tmp = opener.node._next;\n        while (tmp) {\n            next = tmp._next;\n            tmp.unlink();\n            node.appendChild(tmp);\n            tmp = next;\n        }\n        block.appendChild(node);\n        this.processEmphasis(opener.previousDelimiter);\n        this.removeBracket();\n        opener.node.unlink();\n\n        // We remove this bracket and processEmphasis will remove later delimiters.\n        // Now, for a link, we also deactivate earlier link openers.\n        // (no links in links)\n        if (!is_image) {\n            opener = this.brackets;\n            while (opener !== null) {\n                if (!opener.image) {\n                    opener.active = false; // deactivate this opener\n                }\n                opener = opener.previous;\n            }\n        }\n\n        return true;\n    } else {\n        // no match\n\n        this.removeBracket(); // remove this opener from stack\n        this.pos = startpos;\n        block.appendChild(text(\"]\"));\n        return true;\n    }\n};\n\nvar addBracket = function(node, index, image) {\n    if (this.brackets !== null) {\n        this.brackets.bracketAfter = true;\n    }\n    this.brackets = {\n        node: node,\n        previous: this.brackets,\n        previousDelimiter: this.delimiters,\n        index: index,\n        image: image,\n        active: true\n    };\n};\n\nvar removeBracket = function() {\n    this.brackets = this.brackets.previous;\n};\n\n// Attempt to parse an entity.\nvar parseEntity = function(block) {\n    var m;\n    if ((m = this.match(reEntityHere))) {\n        block.appendChild(text(decodeHTML(m)));\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// Parse a run of ordinary characters, or a single character with\n// a special meaning in markdown, as a plain string.\nvar parseString = function(block) {\n    var m;\n    if ((m = this.match(reMain))) {\n        if (this.options.smart) {\n            block.appendChild(\n                text(\n                    m\n                        .replace(reEllipses, \"\\u2026\")\n                        .replace(reDash, function(chars) {\n                            var enCount = 0;\n                            var emCount = 0;\n                            if (chars.length % 3 === 0) {\n                                // If divisible by 3, use all em dashes\n                                emCount = chars.length / 3;\n                            } else if (chars.length % 2 === 0) {\n                                // If divisible by 2, use all en dashes\n                                enCount = chars.length / 2;\n                            } else if (chars.length % 3 === 2) {\n                                // If 2 extra dashes, use en dash for last 2; em dashes for rest\n                                enCount = 1;\n                                emCount = (chars.length - 2) / 3;\n                            } else {\n                                // Use en dashes for last 4 hyphens; em dashes for rest\n                                enCount = 2;\n                                emCount = (chars.length - 4) / 3;\n                            }\n                            return (\n                                \"\\u2014\".repeat(emCount) +\n                                \"\\u2013\".repeat(enCount)\n                            );\n                        })\n                )\n            );\n        } else {\n            block.appendChild(text(m));\n        }\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// Parse a newline.  If it was preceded by two spaces, return a hard\n// line break; otherwise a soft line break.\nvar parseNewline = function(block) {\n    this.pos += 1; // assume we're at a \\n\n    // check previous node for trailing spaces\n    var lastc = block._lastChild;\n    if (\n        lastc &&\n        lastc.type === \"text\" &&\n        lastc._literal[lastc._literal.length - 1] === \" \"\n    ) {\n        var hardbreak = lastc._literal[lastc._literal.length - 2] === \" \";\n        lastc._literal = lastc._literal.replace(reFinalSpace, \"\");\n        block.appendChild(new Node(hardbreak ? \"linebreak\" : \"softbreak\"));\n    } else {\n        block.appendChild(new Node(\"softbreak\"));\n    }\n    this.match(reInitialSpace); // gobble leading spaces in next line\n    return true;\n};\n\n// Attempt to parse a link reference, modifying refmap.\nvar parseReference = function(s, refmap) {\n    this.subject = s;\n    this.pos = 0;\n    var rawlabel;\n    var dest;\n    var title;\n    var matchChars;\n    var startpos = this.pos;\n\n    // label:\n    matchChars = this.parseLinkLabel();\n    if (matchChars === 0) {\n        return 0;\n    } else {\n        rawlabel = this.subject.substr(0, matchChars);\n    }\n\n    // colon:\n    if (this.peek() === C_COLON) {\n        this.pos++;\n    } else {\n        this.pos = startpos;\n        return 0;\n    }\n\n    //  link url\n    this.spnl();\n\n    dest = this.parseLinkDestination();\n    if (dest === null) {\n        this.pos = startpos;\n        return 0;\n    }\n\n    var beforetitle = this.pos;\n    this.spnl();\n    if (this.pos !== beforetitle) {\n        title = this.parseLinkTitle();\n    }\n    if (title === null) {\n        title = \"\";\n        // rewind before spaces\n        this.pos = beforetitle;\n    }\n\n    // make sure we're at line end:\n    var atLineEnd = true;\n    if (this.match(reSpaceAtEndOfLine) === null) {\n        if (title === \"\") {\n            atLineEnd = false;\n        } else {\n            // the potential title we found is not at the line end,\n            // but it could still be a legal link reference if we\n            // discard the title\n            title = \"\";\n            // rewind before spaces\n            this.pos = beforetitle;\n            // and instead check if the link URL is at the line end\n            atLineEnd = this.match(reSpaceAtEndOfLine) !== null;\n        }\n    }\n\n    if (!atLineEnd) {\n        this.pos = startpos;\n        return 0;\n    }\n\n    var normlabel = normalizeReference(rawlabel);\n    if (normlabel === \"\") {\n        // label must contain non-whitespace characters\n        this.pos = startpos;\n        return 0;\n    }\n\n    if (!refmap[normlabel]) {\n        refmap[normlabel] = { destination: dest, title: title };\n    }\n    return this.pos - startpos;\n};\n\n// Parse the next inline element in subject, advancing subject position.\n// On success, add the result to block's children and return true.\n// On failure, return false.\nvar parseInline = function(block) {\n    var res = false;\n    var c = this.peek();\n    if (c === -1) {\n        return false;\n    }\n    switch (c) {\n        case C_NEWLINE:\n            res = this.parseNewline(block);\n            break;\n        case C_BACKSLASH:\n            res = this.parseBackslash(block);\n            break;\n        case C_BACKTICK:\n            res = this.parseBackticks(block);\n            break;\n        case C_ASTERISK:\n        case C_UNDERSCORE:\n            res = this.handleDelim(c, block);\n            break;\n        case C_SINGLEQUOTE:\n        case C_DOUBLEQUOTE:\n            res = this.options.smart && this.handleDelim(c, block);\n            break;\n        case C_OPEN_BRACKET:\n            res = this.parseOpenBracket(block);\n            break;\n        case C_BANG:\n            res = this.parseBang(block);\n            break;\n        case C_CLOSE_BRACKET:\n            res = this.parseCloseBracket(block);\n            break;\n        case C_LESSTHAN:\n            res = this.parseAutolink(block) || this.parseHtmlTag(block);\n            break;\n        case C_AMPERSAND:\n            res = this.parseEntity(block);\n            break;\n        default:\n            res = this.parseString(block);\n            break;\n    }\n    if (!res) {\n        this.pos += 1;\n        block.appendChild(text(fromCodePoint(c)));\n    }\n\n    return true;\n};\n\n// Parse string content in block into inline children,\n// using refmap to resolve references.\nvar parseInlines = function(block) {\n    this.subject = block._string_content.trim();\n    this.pos = 0;\n    this.delimiters = null;\n    this.brackets = null;\n    while (this.parseInline(block)) {}\n    block._string_content = null; // allow raw string to be garbage collected\n    this.processEmphasis(null);\n};\n\n// The InlineParser object.\nfunction InlineParser(options) {\n    return {\n        subject: \"\",\n        delimiters: null, // used by handleDelim method\n        brackets: null,\n        pos: 0,\n        refmap: {},\n        match: match,\n        peek: peek,\n        spnl: spnl,\n        parseBackticks: parseBackticks,\n        parseBackslash: parseBackslash,\n        parseAutolink: parseAutolink,\n        parseHtmlTag: parseHtmlTag,\n        scanDelims: scanDelims,\n        handleDelim: handleDelim,\n        parseLinkTitle: parseLinkTitle,\n        parseLinkDestination: parseLinkDestination,\n        parseLinkLabel: parseLinkLabel,\n        parseOpenBracket: parseOpenBracket,\n        parseBang: parseBang,\n        parseCloseBracket: parseCloseBracket,\n        addBracket: addBracket,\n        removeBracket: removeBracket,\n        parseEntity: parseEntity,\n        parseString: parseString,\n        parseNewline: parseNewline,\n        parseReference: parseReference,\n        parseInline: parseInline,\n        processEmphasis: processEmphasis,\n        removeDelimiter: removeDelimiter,\n        options: options || {},\n        parse: parseInlines\n    };\n}\n\nexport default InlineParser;\n","\"use strict\";\n\nimport Node from \"./node.js\";\nimport { unescapeString, OPENTAG, CLOSETAG } from \"./common.js\";\nimport InlineParser from \"./inlines.js\";\n\nvar CODE_INDENT = 4;\n\nvar C_TAB = 9;\nvar C_NEWLINE = 10;\nvar C_GREATERTHAN = 62;\nvar C_LESSTHAN = 60;\nvar C_SPACE = 32;\nvar C_OPEN_BRACKET = 91;\n\nvar reHtmlBlockOpen = [\n    /./, // dummy for 0\n    /^<(?:script|pre|textarea|style)(?:\\s|>|$)/i,\n    /^<!--/,\n    /^<[?]/,\n    /^<![A-Z]/,\n    /^<!\\[CDATA\\[/,\n    /^<[/]?(?:address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[123456]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul)(?:\\s|[/]?[>]|$)/i,\n    new RegExp(\"^(?:\" + OPENTAG + \"|\" + CLOSETAG + \")\\\\s*$\", \"i\")\n];\n\nvar reHtmlBlockClose = [\n    /./, // dummy for 0\n    /<\\/(?:script|pre|textarea|style)>/i,\n    /-->/,\n    /\\?>/,\n    />/,\n    /\\]\\]>/\n];\n\nvar reThematicBreak = /^(?:(?:\\*[ \\t]*){3,}|(?:_[ \\t]*){3,}|(?:-[ \\t]*){3,})[ \\t]*$/;\n\nvar reMaybeSpecial = /^[#`~*+_=<>0-9-]/;\n\nvar reNonSpace = /[^ \\t\\f\\v\\r\\n]/;\n\nvar reBulletListMarker = /^[*+-]/;\n\nvar reOrderedListMarker = /^(\\d{1,9})([.)])/;\n\nvar reATXHeadingMarker = /^#{1,6}(?:[ \\t]+|$)/;\n\nvar reCodeFence = /^`{3,}(?!.*`)|^~{3,}/;\n\nvar reClosingCodeFence = /^(?:`{3,}|~{3,})(?= *$)/;\n\nvar reSetextHeadingLine = /^(?:=+|-+)[ \\t]*$/;\n\nvar reLineEnding = /\\r\\n|\\n|\\r/;\n\n// Returns true if string contains only space characters.\nvar isBlank = function(s) {\n    return !reNonSpace.test(s);\n};\n\nvar isSpaceOrTab = function(c) {\n    return c === C_SPACE || c === C_TAB;\n};\n\nvar peek = function(ln, pos) {\n    if (pos < ln.length) {\n        return ln.charCodeAt(pos);\n    } else {\n        return -1;\n    }\n};\n\n// DOC PARSER\n\n// These are methods of a Parser object, defined below.\n\n// Returns true if block ends with a blank line, descending if needed\n// into lists and sublists.\nvar endsWithBlankLine = function(block) {\n    while (block) {\n        if (block._lastLineBlank) {\n            return true;\n        }\n        var t = block.type;\n        if (!block._lastLineChecked && (t === \"list\" || t === \"item\")) {\n            block._lastLineChecked = true;\n            block = block._lastChild;\n        } else {\n            block._lastLineChecked = true;\n            break;\n        }\n    }\n    return false;\n};\n\n// Add a line to the block at the tip.  We assume the tip\n// can accept lines -- that check should be done before calling this.\nvar addLine = function() {\n    if (this.partiallyConsumedTab) {\n        this.offset += 1; // skip over tab\n        // add space characters:\n        var charsToTab = 4 - (this.column % 4);\n        this.tip._string_content += \" \".repeat(charsToTab);\n    }\n    this.tip._string_content += this.currentLine.slice(this.offset) + \"\\n\";\n};\n\n// Add block of type tag as a child of the tip.  If the tip can't\n// accept children, close and finalize it and try its parent,\n// and so on til we find a block that can accept children.\nvar addChild = function(tag, offset) {\n    while (!this.blocks[this.tip.type].canContain(tag)) {\n        this.finalize(this.tip, this.lineNumber - 1);\n    }\n\n    var column_number = offset + 1; // offset 0 = column 1\n    var newBlock = new Node(tag, [\n        [this.lineNumber, column_number],\n        [0, 0]\n    ]);\n    newBlock._string_content = \"\";\n    this.tip.appendChild(newBlock);\n    this.tip = newBlock;\n    return newBlock;\n};\n\n// Parse a list marker and return data on the marker (type,\n// start, delimiter, bullet character, padding) or null.\nvar parseListMarker = function(parser, container) {\n    var rest = parser.currentLine.slice(parser.nextNonspace);\n    var match;\n    var nextc;\n    var spacesStartCol;\n    var spacesStartOffset;\n    var data = {\n        type: null,\n        tight: true, // lists are tight by default\n        bulletChar: null,\n        start: null,\n        delimiter: null,\n        padding: null,\n        markerOffset: parser.indent\n    };\n    if (parser.indent >= 4) {\n        return null;\n    }\n    if ((match = rest.match(reBulletListMarker))) {\n        data.type = \"bullet\";\n        data.bulletChar = match[0][0];\n    } else if (\n        (match = rest.match(reOrderedListMarker)) &&\n        (container.type !== \"paragraph\" || match[1] === \"1\")\n    ) {\n        data.type = \"ordered\";\n        data.start = parseInt(match[1]);\n        data.delimiter = match[2];\n    } else {\n        return null;\n    }\n    // make sure we have spaces after\n    nextc = peek(parser.currentLine, parser.nextNonspace + match[0].length);\n    if (!(nextc === -1 || nextc === C_TAB || nextc === C_SPACE)) {\n        return null;\n    }\n\n    // if it interrupts paragraph, make sure first line isn't blank\n    if (\n        container.type === \"paragraph\" &&\n        !parser.currentLine\n            .slice(parser.nextNonspace + match[0].length)\n            .match(reNonSpace)\n    ) {\n        return null;\n    }\n\n    // we've got a match! advance offset and calculate padding\n    parser.advanceNextNonspace(); // to start of marker\n    parser.advanceOffset(match[0].length, true); // to end of marker\n    spacesStartCol = parser.column;\n    spacesStartOffset = parser.offset;\n    do {\n        parser.advanceOffset(1, true);\n        nextc = peek(parser.currentLine, parser.offset);\n    } while (parser.column - spacesStartCol < 5 && isSpaceOrTab(nextc));\n    var blank_item = peek(parser.currentLine, parser.offset) === -1;\n    var spaces_after_marker = parser.column - spacesStartCol;\n    if (spaces_after_marker >= 5 || spaces_after_marker < 1 || blank_item) {\n        data.padding = match[0].length + 1;\n        parser.column = spacesStartCol;\n        parser.offset = spacesStartOffset;\n        if (isSpaceOrTab(peek(parser.currentLine, parser.offset))) {\n            parser.advanceOffset(1, true);\n        }\n    } else {\n        data.padding = match[0].length + spaces_after_marker;\n    }\n    return data;\n};\n\n// Returns true if the two list items are of the same type,\n// with the same delimiter and bullet character.  This is used\n// in agglomerating list items into lists.\nvar listsMatch = function(list_data, item_data) {\n    return (\n        list_data.type === item_data.type &&\n        list_data.delimiter === item_data.delimiter &&\n        list_data.bulletChar === item_data.bulletChar\n    );\n};\n\n// Finalize and close any unmatched blocks.\nvar closeUnmatchedBlocks = function() {\n    if (!this.allClosed) {\n        // finalize any blocks not matched\n        while (this.oldtip !== this.lastMatchedContainer) {\n            var parent = this.oldtip._parent;\n            this.finalize(this.oldtip, this.lineNumber - 1);\n            this.oldtip = parent;\n        }\n        this.allClosed = true;\n    }\n};\n\n// 'finalize' is run when the block is closed.\n// 'continue' is run to check whether the block is continuing\n// at a certain line and offset (e.g. whether a block quote\n// contains a `>`.  It returns 0 for matched, 1 for not matched,\n// and 2 for \"we've dealt with this line completely, go to next.\"\nvar blocks = {\n    document: {\n        continue: function() {\n            return 0;\n        },\n        finalize: function() {\n            return;\n        },\n        canContain: function(t) {\n            return t !== \"item\";\n        },\n        acceptsLines: false\n    },\n    list: {\n        continue: function() {\n            return 0;\n        },\n        finalize: function(parser, block) {\n            var item = block._firstChild;\n            while (item) {\n                // check for non-final list item ending with blank line:\n                if (endsWithBlankLine(item) && item._next) {\n                    block._listData.tight = false;\n                    break;\n                }\n                // recurse into children of list item, to see if there are\n                // spaces between any of them:\n                var subitem = item._firstChild;\n                while (subitem) {\n                    if (\n                        endsWithBlankLine(subitem) &&\n                        (item._next || subitem._next)\n                    ) {\n                        block._listData.tight = false;\n                        break;\n                    }\n                    subitem = subitem._next;\n                }\n                item = item._next;\n            }\n        },\n        canContain: function(t) {\n            return t === \"item\";\n        },\n        acceptsLines: false\n    },\n    block_quote: {\n        continue: function(parser) {\n            var ln = parser.currentLine;\n            if (\n                !parser.indented &&\n                peek(ln, parser.nextNonspace) === C_GREATERTHAN\n            ) {\n                parser.advanceNextNonspace();\n                parser.advanceOffset(1, false);\n                if (isSpaceOrTab(peek(ln, parser.offset))) {\n                    parser.advanceOffset(1, true);\n                }\n            } else {\n                return 1;\n            }\n            return 0;\n        },\n        finalize: function() {\n            return;\n        },\n        canContain: function(t) {\n            return t !== \"item\";\n        },\n        acceptsLines: false\n    },\n    item: {\n        continue: function(parser, container) {\n            if (parser.blank) {\n                if (container._firstChild == null) {\n                    // Blank line after empty list item\n                    return 1;\n                } else {\n                    parser.advanceNextNonspace();\n                }\n            } else if (\n                parser.indent >=\n                container._listData.markerOffset + container._listData.padding\n            ) {\n                parser.advanceOffset(\n                    container._listData.markerOffset +\n                        container._listData.padding,\n                    true\n                );\n            } else {\n                return 1;\n            }\n            return 0;\n        },\n        finalize: function() {\n            return;\n        },\n        canContain: function(t) {\n            return t !== \"item\";\n        },\n        acceptsLines: false\n    },\n    heading: {\n        continue: function() {\n            // a heading can never container > 1 line, so fail to match:\n            return 1;\n        },\n        finalize: function() {\n            return;\n        },\n        canContain: function() {\n            return false;\n        },\n        acceptsLines: false\n    },\n    thematic_break: {\n        continue: function() {\n            // a thematic break can never container > 1 line, so fail to match:\n            return 1;\n        },\n        finalize: function() {\n            return;\n        },\n        canContain: function() {\n            return false;\n        },\n        acceptsLines: false\n    },\n    code_block: {\n        continue: function(parser, container) {\n            var ln = parser.currentLine;\n            var indent = parser.indent;\n            if (container._isFenced) {\n                // fenced\n                var match =\n                    indent <= 3 &&\n                    ln.charAt(parser.nextNonspace) === container._fenceChar &&\n                    ln.slice(parser.nextNonspace).match(reClosingCodeFence);\n                if (match && match[0].length >= container._fenceLength) {\n                    // closing fence - we're at end of line, so we can return\n                    parser.lastLineLength =\n                        parser.offset + indent + match[0].length;\n                    parser.finalize(container, parser.lineNumber);\n                    return 2;\n                } else {\n                    // skip optional spaces of fence offset\n                    var i = container._fenceOffset;\n                    while (i > 0 && isSpaceOrTab(peek(ln, parser.offset))) {\n                        parser.advanceOffset(1, true);\n                        i--;\n                    }\n                }\n            } else {\n                // indented\n                if (indent >= CODE_INDENT) {\n                    parser.advanceOffset(CODE_INDENT, true);\n                } else if (parser.blank) {\n                    parser.advanceNextNonspace();\n                } else {\n                    return 1;\n                }\n            }\n            return 0;\n        },\n        finalize: function(parser, block) {\n            if (block._isFenced) {\n                // fenced\n                // first line becomes info string\n                var content = block._string_content;\n                var newlinePos = content.indexOf(\"\\n\");\n                var firstLine = content.slice(0, newlinePos);\n                var rest = content.slice(newlinePos + 1);\n                block.info = unescapeString(firstLine.trim());\n                block._literal = rest;\n            } else {\n                // indented\n                block._literal = block._string_content.replace(\n                    /(\\n *)+$/,\n                    \"\\n\"\n                );\n            }\n            block._string_content = null; // allow GC\n        },\n        canContain: function() {\n            return false;\n        },\n        acceptsLines: true\n    },\n    html_block: {\n        continue: function(parser, container) {\n            return parser.blank &&\n                (container._htmlBlockType === 6 ||\n                    container._htmlBlockType === 7)\n                ? 1\n                : 0;\n        },\n        finalize: function(parser, block) {\n            block._literal = block._string_content.replace(/(\\n *)+$/, \"\");\n            block._string_content = null; // allow GC\n        },\n        canContain: function() {\n            return false;\n        },\n        acceptsLines: true\n    },\n    paragraph: {\n        continue: function(parser) {\n            return parser.blank ? 1 : 0;\n        },\n        finalize: function(parser, block) {\n            var pos;\n            var hasReferenceDefs = false;\n\n            // try parsing the beginning as link reference definitions:\n            while (\n                peek(block._string_content, 0) === C_OPEN_BRACKET &&\n                (pos = parser.inlineParser.parseReference(\n                    block._string_content,\n                    parser.refmap\n                ))\n            ) {\n                block._string_content = block._string_content.slice(pos);\n                hasReferenceDefs = true;\n            }\n            if (hasReferenceDefs && isBlank(block._string_content)) {\n                block.unlink();\n            }\n        },\n        canContain: function() {\n            return false;\n        },\n        acceptsLines: true\n    }\n};\n\n// block start functions.  Return values:\n// 0 = no match\n// 1 = matched container, keep going\n// 2 = matched leaf, no more block starts\nvar blockStarts = [\n    // block quote\n    function(parser) {\n        if (\n            !parser.indented &&\n            peek(parser.currentLine, parser.nextNonspace) === C_GREATERTHAN\n        ) {\n            parser.advanceNextNonspace();\n            parser.advanceOffset(1, false);\n            // optional following space\n            if (isSpaceOrTab(peek(parser.currentLine, parser.offset))) {\n                parser.advanceOffset(1, true);\n            }\n            parser.closeUnmatchedBlocks();\n            parser.addChild(\"block_quote\", parser.nextNonspace);\n            return 1;\n        } else {\n            return 0;\n        }\n    },\n\n    // ATX heading\n    function(parser) {\n        var match;\n        if (\n            !parser.indented &&\n            (match = parser.currentLine\n                .slice(parser.nextNonspace)\n                .match(reATXHeadingMarker))\n        ) {\n            parser.advanceNextNonspace();\n            parser.advanceOffset(match[0].length, false);\n            parser.closeUnmatchedBlocks();\n            var container = parser.addChild(\"heading\", parser.nextNonspace);\n            container.level = match[0].trim().length; // number of #s\n            // remove trailing ###s:\n            container._string_content = parser.currentLine\n                .slice(parser.offset)\n                .replace(/^[ \\t]*#+[ \\t]*$/, \"\")\n                .replace(/[ \\t]+#+[ \\t]*$/, \"\");\n            parser.advanceOffset(parser.currentLine.length - parser.offset);\n            return 2;\n        } else {\n            return 0;\n        }\n    },\n\n    // Fenced code block\n    function(parser) {\n        var match;\n        if (\n            !parser.indented &&\n            (match = parser.currentLine\n                .slice(parser.nextNonspace)\n                .match(reCodeFence))\n        ) {\n            var fenceLength = match[0].length;\n            parser.closeUnmatchedBlocks();\n            var container = parser.addChild(\"code_block\", parser.nextNonspace);\n            container._isFenced = true;\n            container._fenceLength = fenceLength;\n            container._fenceChar = match[0][0];\n            container._fenceOffset = parser.indent;\n            parser.advanceNextNonspace();\n            parser.advanceOffset(fenceLength, false);\n            return 2;\n        } else {\n            return 0;\n        }\n    },\n\n    // HTML block\n    function(parser, container) {\n        if (\n            !parser.indented &&\n            peek(parser.currentLine, parser.nextNonspace) === C_LESSTHAN\n        ) {\n            var s = parser.currentLine.slice(parser.nextNonspace);\n            var blockType;\n\n            for (blockType = 1; blockType <= 7; blockType++) {\n                if (\n                    reHtmlBlockOpen[blockType].test(s) &&\n                    (blockType < 7 || container.type !== \"paragraph\")\n                ) {\n                    parser.closeUnmatchedBlocks();\n                    // We don't adjust parser.offset;\n                    // spaces are part of the HTML block:\n                    var b = parser.addChild(\"html_block\", parser.offset);\n                    b._htmlBlockType = blockType;\n                    return 2;\n                }\n            }\n        }\n\n        return 0;\n    },\n\n    // Setext heading\n    function(parser, container) {\n        var match;\n        if (\n            !parser.indented &&\n            container.type === \"paragraph\" &&\n            (match = parser.currentLine\n                .slice(parser.nextNonspace)\n                .match(reSetextHeadingLine))\n        ) {\n            parser.closeUnmatchedBlocks();\n            // resolve reference link definitiosn\n            var pos;\n            while (\n                peek(container._string_content, 0) === C_OPEN_BRACKET &&\n                (pos = parser.inlineParser.parseReference(\n                    container._string_content,\n                    parser.refmap\n                ))\n            ) {\n                container._string_content = container._string_content.slice(\n                    pos\n                );\n            }\n            if (container._string_content.length > 0) {\n                var heading = new Node(\"heading\", container.sourcepos);\n                heading.level = match[0][0] === \"=\" ? 1 : 2;\n                heading._string_content = container._string_content;\n                container.insertAfter(heading);\n                container.unlink();\n                parser.tip = heading;\n                parser.advanceOffset(\n                    parser.currentLine.length - parser.offset,\n                    false\n                );\n                return 2;\n            } else {\n                return 0;\n            }\n        } else {\n            return 0;\n        }\n    },\n\n    // thematic break\n    function(parser) {\n        if (\n            !parser.indented &&\n            reThematicBreak.test(parser.currentLine.slice(parser.nextNonspace))\n        ) {\n            parser.closeUnmatchedBlocks();\n            parser.addChild(\"thematic_break\", parser.nextNonspace);\n            parser.advanceOffset(\n                parser.currentLine.length - parser.offset,\n                false\n            );\n            return 2;\n        } else {\n            return 0;\n        }\n    },\n\n    // list item\n    function(parser, container) {\n        var data;\n\n        if (\n            (!parser.indented || container.type === \"list\") &&\n            (data = parseListMarker(parser, container))\n        ) {\n            parser.closeUnmatchedBlocks();\n\n            // add the list if needed\n            if (\n                parser.tip.type !== \"list\" ||\n                !listsMatch(container._listData, data)\n            ) {\n                container = parser.addChild(\"list\", parser.nextNonspace);\n                container._listData = data;\n            }\n\n            // add the list item\n            container = parser.addChild(\"item\", parser.nextNonspace);\n            container._listData = data;\n            return 1;\n        } else {\n            return 0;\n        }\n    },\n\n    // indented code block\n    function(parser) {\n        if (\n            parser.indented &&\n            parser.tip.type !== \"paragraph\" &&\n            !parser.blank\n        ) {\n            // indented code\n            parser.advanceOffset(CODE_INDENT, true);\n            parser.closeUnmatchedBlocks();\n            parser.addChild(\"code_block\", parser.offset);\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n];\n\nvar advanceOffset = function(count, columns) {\n    var currentLine = this.currentLine;\n    var charsToTab, charsToAdvance;\n    var c;\n    while (count > 0 && (c = currentLine[this.offset])) {\n        if (c === \"\\t\") {\n            charsToTab = 4 - (this.column % 4);\n            if (columns) {\n                this.partiallyConsumedTab = charsToTab > count;\n                charsToAdvance = charsToTab > count ? count : charsToTab;\n                this.column += charsToAdvance;\n                this.offset += this.partiallyConsumedTab ? 0 : 1;\n                count -= charsToAdvance;\n            } else {\n                this.partiallyConsumedTab = false;\n                this.column += charsToTab;\n                this.offset += 1;\n                count -= 1;\n            }\n        } else {\n            this.partiallyConsumedTab = false;\n            this.offset += 1;\n            this.column += 1; // assume ascii; block starts are ascii\n            count -= 1;\n        }\n    }\n};\n\nvar advanceNextNonspace = function() {\n    this.offset = this.nextNonspace;\n    this.column = this.nextNonspaceColumn;\n    this.partiallyConsumedTab = false;\n};\n\nvar findNextNonspace = function() {\n    var currentLine = this.currentLine;\n    var i = this.offset;\n    var cols = this.column;\n    var c;\n\n    while ((c = currentLine.charAt(i)) !== \"\") {\n        if (c === \" \") {\n            i++;\n            cols++;\n        } else if (c === \"\\t\") {\n            i++;\n            cols += 4 - (cols % 4);\n        } else {\n            break;\n        }\n    }\n    this.blank = c === \"\\n\" || c === \"\\r\" || c === \"\";\n    this.nextNonspace = i;\n    this.nextNonspaceColumn = cols;\n    this.indent = this.nextNonspaceColumn - this.column;\n    this.indented = this.indent >= CODE_INDENT;\n};\n\n// Analyze a line of text and update the document appropriately.\n// We parse markdown text by calling this on each line of input,\n// then finalizing the document.\nvar incorporateLine = function(ln) {\n    var all_matched = true;\n    var t;\n\n    var container = this.doc;\n    this.oldtip = this.tip;\n    this.offset = 0;\n    this.column = 0;\n    this.blank = false;\n    this.partiallyConsumedTab = false;\n    this.lineNumber += 1;\n\n    // replace NUL characters for security\n    if (ln.indexOf(\"\\u0000\") !== -1) {\n        ln = ln.replace(/\\0/g, \"\\uFFFD\");\n    }\n\n    this.currentLine = ln;\n\n    // For each containing block, try to parse the associated line start.\n    // Bail out on failure: container will point to the last matching block.\n    // Set all_matched to false if not all containers match.\n    var lastChild;\n    while ((lastChild = container._lastChild) && lastChild._open) {\n        container = lastChild;\n\n        this.findNextNonspace();\n\n        switch (this.blocks[container.type].continue(this, container)) {\n            case 0: // we've matched, keep going\n                break;\n            case 1: // we've failed to match a block\n                all_matched = false;\n                break;\n            case 2: // we've hit end of line for fenced code close and can return\n                return;\n            default:\n                throw \"continue returned illegal value, must be 0, 1, or 2\";\n        }\n        if (!all_matched) {\n            container = container._parent; // back up to last matching block\n            break;\n        }\n    }\n\n    this.allClosed = container === this.oldtip;\n    this.lastMatchedContainer = container;\n\n    var matchedLeaf =\n        container.type !== \"paragraph\" && blocks[container.type].acceptsLines;\n    var starts = this.blockStarts;\n    var startsLen = starts.length;\n    // Unless last matched container is a code block, try new container starts,\n    // adding children to the last matched container:\n    while (!matchedLeaf) {\n        this.findNextNonspace();\n\n        // this is a little performance optimization:\n        if (\n            !this.indented &&\n            !reMaybeSpecial.test(ln.slice(this.nextNonspace))\n        ) {\n            this.advanceNextNonspace();\n            break;\n        }\n\n        var i = 0;\n        while (i < startsLen) {\n            var res = starts[i](this, container);\n            if (res === 1) {\n                container = this.tip;\n                break;\n            } else if (res === 2) {\n                container = this.tip;\n                matchedLeaf = true;\n                break;\n            } else {\n                i++;\n            }\n        }\n\n        if (i === startsLen) {\n            // nothing matched\n            this.advanceNextNonspace();\n            break;\n        }\n    }\n\n    // What remains at the offset is a text line.  Add the text to the\n    // appropriate container.\n\n    // First check for a lazy paragraph continuation:\n    if (!this.allClosed && !this.blank && this.tip.type === \"paragraph\") {\n        // lazy paragraph continuation\n        this.addLine();\n    } else {\n        // not a lazy continuation\n\n        // finalize any blocks not matched\n        this.closeUnmatchedBlocks();\n        if (this.blank && container.lastChild) {\n            container.lastChild._lastLineBlank = true;\n        }\n\n        t = container.type;\n\n        // Block quote lines are never blank as they start with >\n        // and we don't count blanks in fenced code for purposes of tight/loose\n        // lists or breaking out of lists.  We also don't set _lastLineBlank\n        // on an empty list item, or if we just closed a fenced block.\n        var lastLineBlank =\n            this.blank &&\n            !(\n                t === \"block_quote\" ||\n                (t === \"code_block\" && container._isFenced) ||\n                (t === \"item\" &&\n                    !container._firstChild &&\n                    container.sourcepos[0][0] === this.lineNumber)\n            );\n\n        // propagate lastLineBlank up through parents:\n        var cont = container;\n        while (cont) {\n            cont._lastLineBlank = lastLineBlank;\n            cont = cont._parent;\n        }\n\n        if (this.blocks[t].acceptsLines) {\n            this.addLine();\n            // if HtmlBlock, check for end condition\n            if (\n                t === \"html_block\" &&\n                container._htmlBlockType >= 1 &&\n                container._htmlBlockType <= 5 &&\n                reHtmlBlockClose[container._htmlBlockType].test(\n                    this.currentLine.slice(this.offset)\n                )\n            ) {\n                this.lastLineLength = ln.length;\n                this.finalize(container, this.lineNumber);\n            }\n        } else if (this.offset < ln.length && !this.blank) {\n            // create paragraph container for line\n            container = this.addChild(\"paragraph\", this.offset);\n            this.advanceNextNonspace();\n            this.addLine();\n        }\n    }\n    this.lastLineLength = ln.length;\n};\n\n// Finalize a block.  Close it and do any necessary postprocessing,\n// e.g. creating string_content from strings, setting the 'tight'\n// or 'loose' status of a list, and parsing the beginnings\n// of paragraphs for reference definitions.  Reset the tip to the\n// parent of the closed block.\nvar finalize = function(block, lineNumber) {\n    var above = block._parent;\n    block._open = false;\n    block.sourcepos[1] = [lineNumber, this.lastLineLength];\n\n    this.blocks[block.type].finalize(this, block);\n\n    this.tip = above;\n};\n\n// Walk through a block & children recursively, parsing string content\n// into inline content where appropriate.\nvar processInlines = function(block) {\n    var node, event, t;\n    var walker = block.walker();\n    this.inlineParser.refmap = this.refmap;\n    this.inlineParser.options = this.options;\n    while ((event = walker.next())) {\n        node = event.node;\n        t = node.type;\n        if (!event.entering && (t === \"paragraph\" || t === \"heading\")) {\n            this.inlineParser.parse(node);\n        }\n    }\n};\n\nvar Document = function() {\n    var doc = new Node(\"document\", [\n        [1, 1],\n        [0, 0]\n    ]);\n    return doc;\n};\n\n// The main parsing function.  Returns a parsed document AST.\nvar parse = function(input) {\n    this.doc = new Document();\n    this.tip = this.doc;\n    this.refmap = {};\n    this.lineNumber = 0;\n    this.lastLineLength = 0;\n    this.offset = 0;\n    this.column = 0;\n    this.lastMatchedContainer = this.doc;\n    this.currentLine = \"\";\n    if (this.options.time) {\n        console.time(\"preparing input\");\n    }\n    var lines = input.split(reLineEnding);\n    var len = lines.length;\n    if (input.charCodeAt(input.length - 1) === C_NEWLINE) {\n        // ignore last blank line created by final newline\n        len -= 1;\n    }\n    if (this.options.time) {\n        console.timeEnd(\"preparing input\");\n    }\n    if (this.options.time) {\n        console.time(\"block parsing\");\n    }\n    for (var i = 0; i < len; i++) {\n        this.incorporateLine(lines[i]);\n    }\n    while (this.tip) {\n        this.finalize(this.tip, len);\n    }\n    if (this.options.time) {\n        console.timeEnd(\"block parsing\");\n    }\n    if (this.options.time) {\n        console.time(\"inline parsing\");\n    }\n    this.processInlines(this.doc);\n    if (this.options.time) {\n        console.timeEnd(\"inline parsing\");\n    }\n    return this.doc;\n};\n\n// The Parser object.\nfunction Parser(options) {\n    return {\n        doc: new Document(),\n        blocks: blocks,\n        blockStarts: blockStarts,\n        tip: this.doc,\n        oldtip: this.doc,\n        currentLine: \"\",\n        lineNumber: 0,\n        offset: 0,\n        column: 0,\n        nextNonspace: 0,\n        nextNonspaceColumn: 0,\n        indent: 0,\n        indented: false,\n        blank: false,\n        partiallyConsumedTab: false,\n        allClosed: true,\n        lastMatchedContainer: this.doc,\n        refmap: {},\n        lastLineLength: 0,\n        inlineParser: new InlineParser(options),\n        findNextNonspace: findNextNonspace,\n        advanceOffset: advanceOffset,\n        advanceNextNonspace: advanceNextNonspace,\n        addLine: addLine,\n        addChild: addChild,\n        incorporateLine: incorporateLine,\n        finalize: finalize,\n        processInlines: processInlines,\n        closeUnmatchedBlocks: closeUnmatchedBlocks,\n        parse: parse,\n        options: options || {}\n    };\n}\n\nexport default Parser;\n","\"use strict\";\n\nfunction Renderer() {}\n\n/**\n *  Walks the AST and calls member methods for each Node type.\n *\n *  @param ast {Node} The root of the abstract syntax tree.\n */\nfunction render(ast) {\n    var walker = ast.walker(),\n        event,\n        type;\n\n    this.buffer = \"\";\n    this.lastOut = \"\\n\";\n\n    while ((event = walker.next())) {\n        type = event.node.type;\n        if (this[type]) {\n            this[type](event.node, event.entering);\n        }\n    }\n    return this.buffer;\n}\n\n/**\n *  Concatenate a literal string to the buffer.\n *\n *  @param str {String} The string to concatenate.\n */\nfunction lit(str) {\n    this.buffer += str;\n    this.lastOut = str;\n}\n\n/**\n *  Output a newline to the buffer.\n */\nfunction cr() {\n    if (this.lastOut !== \"\\n\") {\n        this.lit(\"\\n\");\n    }\n}\n\n/**\n *  Concatenate a string to the buffer possibly escaping the content.\n *\n *  Concrete renderer implementations should override this method.\n *\n *  @param str {String} The string to concatenate.\n */\nfunction out(str) {\n    this.lit(str);\n}\n\n/**\n *  Escape a string for the target renderer.\n *\n *  Abstract function that should be implemented by concrete\n *  renderer implementations.\n *\n *  @param str {String} The string to escape.\n */\nfunction esc(str) {\n    return str;\n}\n\nRenderer.prototype.render = render;\nRenderer.prototype.out = out;\nRenderer.prototype.lit = lit;\nRenderer.prototype.cr = cr;\nRenderer.prototype.esc = esc;\n\nexport default Renderer;\n","\"use strict\";\n\nimport { escapeXml } from \"../common.js\";\nimport Renderer from \"./renderer.js\";\n\nvar reUnsafeProtocol = /^javascript:|vbscript:|file:|data:/i;\nvar reSafeDataProtocol = /^data:image\\/(?:png|gif|jpeg|webp)/i;\n\nvar potentiallyUnsafe = function(url) {\n    return reUnsafeProtocol.test(url) && !reSafeDataProtocol.test(url);\n};\n\n// Helper function to produce an HTML tag.\nfunction tag(name, attrs, selfclosing) {\n    if (this.disableTags > 0) {\n        return;\n    }\n    this.buffer += \"<\" + name;\n    if (attrs && attrs.length > 0) {\n        var i = 0;\n        var attrib;\n        while ((attrib = attrs[i]) !== undefined) {\n            this.buffer += \" \" + attrib[0] + '=\"' + attrib[1] + '\"';\n            i++;\n        }\n    }\n    if (selfclosing) {\n        this.buffer += \" /\";\n    }\n    this.buffer += \">\";\n    this.lastOut = \">\";\n}\n\nfunction HtmlRenderer(options) {\n    options = options || {};\n    // by default, soft breaks are rendered as newlines in HTML\n    options.softbreak = options.softbreak || \"\\n\";\n    // set to \"<br />\" to make them hard breaks\n    // set to \" \" if you want to ignore line wrapping in source\n\n    this.disableTags = 0;\n    this.lastOut = \"\\n\";\n    this.options = options;\n}\n\n/* Node methods */\n\nfunction text(node) {\n    this.out(node.literal);\n}\n\nfunction softbreak() {\n    this.lit(this.options.softbreak);\n}\n\nfunction linebreak() {\n    this.tag(\"br\", [], true);\n    this.cr();\n}\n\nfunction link(node, entering) {\n    var attrs = this.attrs(node);\n    if (entering) {\n        if (!(this.options.safe && potentiallyUnsafe(node.destination))) {\n            attrs.push([\"href\", this.esc(node.destination)]);\n        }\n        if (node.title) {\n            attrs.push([\"title\", this.esc(node.title)]);\n        }\n        this.tag(\"a\", attrs);\n    } else {\n        this.tag(\"/a\");\n    }\n}\n\nfunction image(node, entering) {\n    if (entering) {\n        if (this.disableTags === 0) {\n            if (this.options.safe && potentiallyUnsafe(node.destination)) {\n                this.lit('<img src=\"\" alt=\"');\n            } else {\n                this.lit('<img src=\"' + this.esc(node.destination) + '\" alt=\"');\n            }\n        }\n        this.disableTags += 1;\n    } else {\n        this.disableTags -= 1;\n        if (this.disableTags === 0) {\n            if (node.title) {\n                this.lit('\" title=\"' + this.esc(node.title));\n            }\n            this.lit('\" />');\n        }\n    }\n}\n\nfunction emph(node, entering) {\n    this.tag(entering ? \"em\" : \"/em\");\n}\n\nfunction strong(node, entering) {\n    this.tag(entering ? \"strong\" : \"/strong\");\n}\n\nfunction paragraph(node, entering) {\n    var grandparent = node.parent.parent,\n        attrs = this.attrs(node);\n    if (grandparent !== null && grandparent.type === \"list\") {\n        if (grandparent.listTight) {\n            return;\n        }\n    }\n    if (entering) {\n        this.cr();\n        this.tag(\"p\", attrs);\n    } else {\n        this.tag(\"/p\");\n        this.cr();\n    }\n}\n\nfunction heading(node, entering) {\n    var tagname = \"h\" + node.level,\n        attrs = this.attrs(node);\n    if (entering) {\n        this.cr();\n        this.tag(tagname, attrs);\n    } else {\n        this.tag(\"/\" + tagname);\n        this.cr();\n    }\n}\n\nfunction code(node) {\n    this.tag(\"code\");\n    this.out(node.literal);\n    this.tag(\"/code\");\n}\n\nfunction code_block(node) {\n    var info_words = node.info ? node.info.split(/\\s+/) : [],\n        attrs = this.attrs(node);\n    if (info_words.length > 0 && info_words[0].length > 0) {\n        attrs.push([\"class\", \"language-\" + this.esc(info_words[0])]);\n    }\n    this.cr();\n    this.tag(\"pre\");\n    this.tag(\"code\", attrs);\n    this.out(node.literal);\n    this.tag(\"/code\");\n    this.tag(\"/pre\");\n    this.cr();\n}\n\nfunction thematic_break(node) {\n    var attrs = this.attrs(node);\n    this.cr();\n    this.tag(\"hr\", attrs, true);\n    this.cr();\n}\n\nfunction block_quote(node, entering) {\n    var attrs = this.attrs(node);\n    if (entering) {\n        this.cr();\n        this.tag(\"blockquote\", attrs);\n        this.cr();\n    } else {\n        this.cr();\n        this.tag(\"/blockquote\");\n        this.cr();\n    }\n}\n\nfunction list(node, entering) {\n    var tagname = node.listType === \"bullet\" ? \"ul\" : \"ol\",\n        attrs = this.attrs(node);\n\n    if (entering) {\n        var start = node.listStart;\n        if (start !== null && start !== 1) {\n            attrs.push([\"start\", start.toString()]);\n        }\n        this.cr();\n        this.tag(tagname, attrs);\n        this.cr();\n    } else {\n        this.cr();\n        this.tag(\"/\" + tagname);\n        this.cr();\n    }\n}\n\nfunction item(node, entering) {\n    var attrs = this.attrs(node);\n    if (entering) {\n        this.tag(\"li\", attrs);\n    } else {\n        this.tag(\"/li\");\n        this.cr();\n    }\n}\n\nfunction html_inline(node) {\n    if (this.options.safe) {\n        this.lit(\"<!-- raw HTML omitted -->\");\n    } else {\n        this.lit(node.literal);\n    }\n}\n\nfunction html_block(node) {\n    this.cr();\n    if (this.options.safe) {\n        this.lit(\"<!-- raw HTML omitted -->\");\n    } else {\n        this.lit(node.literal);\n    }\n    this.cr();\n}\n\nfunction custom_inline(node, entering) {\n    if (entering && node.onEnter) {\n        this.lit(node.onEnter);\n    } else if (!entering && node.onExit) {\n        this.lit(node.onExit);\n    }\n}\n\nfunction custom_block(node, entering) {\n    this.cr();\n    if (entering && node.onEnter) {\n        this.lit(node.onEnter);\n    } else if (!entering && node.onExit) {\n        this.lit(node.onExit);\n    }\n    this.cr();\n}\n\n/* Helper methods */\n\nfunction out(s) {\n    this.lit(this.esc(s));\n}\n\nfunction attrs(node) {\n    var att = [];\n    if (this.options.sourcepos) {\n        var pos = node.sourcepos;\n        if (pos) {\n            att.push([\n                \"data-sourcepos\",\n                String(pos[0][0]) +\n                    \":\" +\n                    String(pos[0][1]) +\n                    \"-\" +\n                    String(pos[1][0]) +\n                    \":\" +\n                    String(pos[1][1])\n            ]);\n        }\n    }\n    return att;\n}\n\n// quick browser-compatible inheritance\nHtmlRenderer.prototype = Object.create(Renderer.prototype);\n\nHtmlRenderer.prototype.text = text;\nHtmlRenderer.prototype.html_inline = html_inline;\nHtmlRenderer.prototype.html_block = html_block;\nHtmlRenderer.prototype.softbreak = softbreak;\nHtmlRenderer.prototype.linebreak = linebreak;\nHtmlRenderer.prototype.link = link;\nHtmlRenderer.prototype.image = image;\nHtmlRenderer.prototype.emph = emph;\nHtmlRenderer.prototype.strong = strong;\nHtmlRenderer.prototype.paragraph = paragraph;\nHtmlRenderer.prototype.heading = heading;\nHtmlRenderer.prototype.code = code;\nHtmlRenderer.prototype.code_block = code_block;\nHtmlRenderer.prototype.thematic_break = thematic_break;\nHtmlRenderer.prototype.block_quote = block_quote;\nHtmlRenderer.prototype.list = list;\nHtmlRenderer.prototype.item = item;\nHtmlRenderer.prototype.custom_inline = custom_inline;\nHtmlRenderer.prototype.custom_block = custom_block;\n\nHtmlRenderer.prototype.esc = escapeXml;\n\nHtmlRenderer.prototype.out = out;\nHtmlRenderer.prototype.tag = tag;\nHtmlRenderer.prototype.attrs = attrs;\n\nexport default HtmlRenderer;\n","\"use strict\";\n\nimport Renderer from \"./renderer.js\";\nimport { escapeXml } from \"../common.js\";\n\nvar reXMLTag = /\\<[^>]*\\>/;\n\nfunction toTagName(s) {\n    return s.replace(/([a-z])([A-Z])/g, \"$1_$2\").toLowerCase();\n}\n\nfunction XmlRenderer(options) {\n    options = options || {};\n\n    this.disableTags = 0;\n    this.lastOut = \"\\n\";\n\n    this.indentLevel = 0;\n    this.indent = \"  \";\n\n    this.options = options;\n}\n\nfunction render(ast) {\n    this.buffer = \"\";\n\n    var attrs;\n    var tagname;\n    var walker = ast.walker();\n    var event, node, entering;\n    var container;\n    var selfClosing;\n    var nodetype;\n\n    var options = this.options;\n\n    if (options.time) {\n        console.time(\"rendering\");\n    }\n\n    this.buffer += '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n';\n    this.buffer += '<!DOCTYPE document SYSTEM \"CommonMark.dtd\">\\n';\n\n    while ((event = walker.next())) {\n        entering = event.entering;\n        node = event.node;\n        nodetype = node.type;\n\n        container = node.isContainer;\n\n        selfClosing =\n            nodetype === \"thematic_break\" ||\n            nodetype === \"linebreak\" ||\n            nodetype === \"softbreak\";\n\n        tagname = toTagName(nodetype);\n\n        if (entering) {\n            attrs = [];\n\n            switch (nodetype) {\n                case \"document\":\n                    attrs.push([\"xmlns\", \"http://commonmark.org/xml/1.0\"]);\n                    break;\n                case \"list\":\n                    if (node.listType !== null) {\n                        attrs.push([\"type\", node.listType.toLowerCase()]);\n                    }\n                    if (node.listStart !== null) {\n                        attrs.push([\"start\", String(node.listStart)]);\n                    }\n                    if (node.listTight !== null) {\n                        attrs.push([\n                            \"tight\",\n                            node.listTight ? \"true\" : \"false\"\n                        ]);\n                    }\n                    var delim = node.listDelimiter;\n                    if (delim !== null) {\n                        var delimword = \"\";\n                        if (delim === \".\") {\n                            delimword = \"period\";\n                        } else {\n                            delimword = \"paren\";\n                        }\n                        attrs.push([\"delimiter\", delimword]);\n                    }\n                    break;\n                case \"code_block\":\n                    if (node.info) {\n                        attrs.push([\"info\", node.info]);\n                    }\n                    break;\n                case \"heading\":\n                    attrs.push([\"level\", String(node.level)]);\n                    break;\n                case \"link\":\n                case \"image\":\n                    attrs.push([\"destination\", node.destination]);\n                    attrs.push([\"title\", node.title]);\n                    break;\n                case \"custom_inline\":\n                case \"custom_block\":\n                    attrs.push([\"on_enter\", node.onEnter]);\n                    attrs.push([\"on_exit\", node.onExit]);\n                    break;\n                default:\n                    break;\n            }\n            if (options.sourcepos) {\n                var pos = node.sourcepos;\n                if (pos) {\n                    attrs.push([\n                        \"sourcepos\",\n                        String(pos[0][0]) +\n                            \":\" +\n                            String(pos[0][1]) +\n                            \"-\" +\n                            String(pos[1][0]) +\n                            \":\" +\n                            String(pos[1][1])\n                    ]);\n                }\n            }\n\n            this.cr();\n            this.out(this.tag(tagname, attrs, selfClosing));\n            if (container) {\n                this.indentLevel += 1;\n            } else if (!container && !selfClosing) {\n                var lit = node.literal;\n                if (lit) {\n                    this.out(this.esc(lit));\n                }\n                this.out(this.tag(\"/\" + tagname));\n            }\n        } else {\n            this.indentLevel -= 1;\n            this.cr();\n            this.out(this.tag(\"/\" + tagname));\n        }\n    }\n    if (options.time) {\n        console.timeEnd(\"rendering\");\n    }\n    this.buffer += \"\\n\";\n    return this.buffer;\n}\n\nfunction out(s) {\n    if (this.disableTags > 0) {\n        this.buffer += s.replace(reXMLTag, \"\");\n    } else {\n        this.buffer += s;\n    }\n    this.lastOut = s;\n}\n\nfunction cr() {\n    if (this.lastOut !== \"\\n\") {\n        this.buffer += \"\\n\";\n        this.lastOut = \"\\n\";\n        for (var i = this.indentLevel; i > 0; i--) {\n            this.buffer += this.indent;\n        }\n    }\n}\n\n// Helper function to produce an XML tag.\nfunction tag(name, attrs, selfclosing) {\n    var result = \"<\" + name;\n    if (attrs && attrs.length > 0) {\n        var i = 0;\n        var attrib;\n        while ((attrib = attrs[i]) !== undefined) {\n            result += \" \" + attrib[0] + '=\"' + this.esc(attrib[1]) + '\"';\n            i++;\n        }\n    }\n    if (selfclosing) {\n        result += \" /\";\n    }\n    result += \">\";\n    return result;\n}\n\n// quick browser-compatible inheritance\nXmlRenderer.prototype = Object.create(Renderer.prototype);\n\nXmlRenderer.prototype.render = render;\nXmlRenderer.prototype.out = out;\nXmlRenderer.prototype.cr = cr;\nXmlRenderer.prototype.tag = tag;\nXmlRenderer.prototype.esc = escapeXml;\n\nexport default XmlRenderer;\n","/*! http://mths.be/repeat v0.2.0 by @mathias */\nif (!String.prototype.repeat) {\n\t(function() {\n\t\t'use strict'; // needed to support `apply`/`call` with `undefined`/`null`\n\t\tvar defineProperty = (function() {\n\t\t\t// IE 8 only supports `Object.defineProperty` on DOM elements\n\t\t\ttry {\n\t\t\t\tvar object = {};\n\t\t\t\tvar $defineProperty = Object.defineProperty;\n\t\t\t\tvar result = $defineProperty(object, object, object) && $defineProperty;\n\t\t\t} catch(error) {}\n\t\t\treturn result;\n\t\t}());\n\t\tvar repeat = function(count) {\n\t\t\tif (this == null) {\n\t\t\t\tthrow TypeError();\n\t\t\t}\n\t\t\tvar string = String(this);\n\t\t\t// `ToInteger`\n\t\t\tvar n = count ? Number(count) : 0;\n\t\t\tif (n != n) { // better `isNaN`\n\t\t\t\tn = 0;\n\t\t\t}\n\t\t\t// Account for out-of-bounds indices\n\t\t\tif (n < 0 || n == Infinity) {\n\t\t\t\tthrow RangeError();\n\t\t\t}\n\t\t\tvar result = '';\n\t\t\twhile (n) {\n\t\t\t\tif (n % 2 == 1) {\n\t\t\t\t\tresult += string;\n\t\t\t\t}\n\t\t\t\tif (n > 1) {\n\t\t\t\t\tstring += string;\n\t\t\t\t}\n\t\t\t\tn >>= 1;\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\t\tif (defineProperty) {\n\t\t\tdefineProperty(String.prototype, 'repeat', {\n\t\t\t\t'value': repeat,\n\t\t\t\t'configurable': true,\n\t\t\t\t'writable': true\n\t\t\t});\n\t\t} else {\n\t\t\tString.prototype.repeat = repeat;\n\t\t}\n\t}());\n}\n"],"sourceRoot":""}