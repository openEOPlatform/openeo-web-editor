{"version":3,"sources":["webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/render/canvas/TextBuilder.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/render/canvas/BuilderType.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/render/canvas/hitdetect.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/proj4.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/render/canvas/ImageBuilder.js","webpack:///./node_modules/ol/render/canvas/LineStringBuilder.js","webpack:///./node_modules/ol/render/canvas/PolygonBuilder.js","webpack:///./node_modules/ol/render/canvas/BuilderGroup.js","webpack:///./node_modules/ol/render/canvas/Builder.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/render/canvas/Executor.js","webpack:///./node_modules/ol/render/canvas/ExecutorGroup.js","webpack:///./node_modules/ol/render/VectorContext.js"],"names":["PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","TEXT_ALIGN","CanvasTextBuilder","_super","tolerance","maxExtent","resolution","pixelRatio","_this","labels_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","undefined","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","declutterImageWithText_","finish","instructions","drawText","geometry","feature","fillState","strokeState","textState","coordinates","begin","length","geometryType","getType","flatCoordinates","stride","getStride","placement","LINE","LINE_STRING","MULTI_LINE_STRING","POLYGON","MULTI_POLYGON","geometryWidths","overflow","POINT","MULTI_POINT","getFlatCoordinates","getFlatMidpoint","CIRCLE","getCenter","getFlatMidpoints","getFlatInteriorPoint","push","interiorPoints","getFlatInteriorPoints","i","ii","end","appendFlatPointCoordinates","beg_1","filter","w","keep","saveTextStates_","backgroundFill","backgroundStroke","setFillStrokeStyle","updateFillStyle","state","createFill","hitDetectionInstructions","updateStrokeStyle","applyStroke","createStroke","beginGeometry","padding","scale","p0","p1","p2","p3","pixelRatio_1","DRAW_IMAGE","NaN","map","endGeometry","getBufferedMaxExtent","getExtent","ends","getEnds","slice","endss","getEndss","textAlign","flatOffset","flatEnd","o","oo","range","maxAngle","drawChars_","strokeKey","strokeStyle","lineCap","lineDashOffset","lineWidth","lineJoin","miterLimit","lineDash","textKey","font","textBaseline","fillKey","fillStyle","baseline","offsetY","text","strokeWidth","Math","abs","DRAW_CHARS","setTextStyle","textStyle","opt_sharedData","textFillStyle","getFill","getColor","textStrokeStyle","getStroke","getLineDash","getLineDashOffset","getWidth","getMiterLimit","getLineCap","getLineJoin","getFont","textScale","getScaleArray","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","getRotateWithView","textRotation","getRotation","getText","join","RenderEvent","type","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","frameState","context","DEFAULT","IMAGE","TEXT","CanvasImmediateRenderer","extent","transform","viewRotation","opt_squaredTolerance","opt_userTransform","context_","pixelRatio_","extent_","transform_","viewRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","pixelCoordinates_","tmpLocalTransform_","drawImages_","offset","pixelCoordinates","localTransform","alpha","globalAlpha","rotation","x","y","centerX","centerY","setTransform","apply","translate","drawImage","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","drawCircle","dx","dy","radius","sqrt","beginPath","arc","PI","fill","stroke","setStyle","style","setImageStyle","getImage","drawGeometry","GeometryType","drawPoint","drawLineString","drawPolygon","drawMultiPoint","drawMultiLineString","drawMultiPolygon","GEOMETRY_COLLECTION","drawGeometryCollection","drawFeature","getGeometryFunction","geometries","getGeometriesArray","simplifyTransformed","flatMidpoint","geometryExtent","flatMidpoints","getOrientedFlatCoordinates","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","setLineDash","contextTextState","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","n","imageStyle","imageSize","getSize","imageAnchor","getAnchor","imageOrigin","getOrigin","getOpacity","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","isArray","reduce","acc","t","VectorContext","HIT_DETECT_RESOLUTION","createHitDetectionImageData","size","transforms","features","styleFunction","width","height","imageSmoothingEnabled","canvas","renderer","featureCount","indexFactor","floor","featuresByZIndex","featureStyleFunction","getStyleFunction","styles","index","color","toString","j","jj","originalStyle","clone","setColor","setText","image","imgSize","getImageSize","imgContext","img","fillRect","setImage","Icon","anchor","anchorXUnits","IconAnchorUnits","PIXELS","anchorYUnits","opacity","getScale","rotateWithView","zIndex","getZIndex","byGeometryType","replace","zIndexKeys","keys","Number","sort","geomAndStyle","k","kk","getImageData","hitDetect","pixel","imageData","resultFeatures","round","r","data","g","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","RADIUS","EXTENT","METERS_PER_UNIT","EPSG4326Projection","code","opt_axisOrientation","units","DEGREES","axisOrientation","global","metersPerUnit","worldExtent","PROJECTIONS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","METERS","getPointResolution","point","fromEPSG4326","input","opt_output","opt_dimension","dimension","output","toEPSG4326","atan","exp","register","proj4","projCodes","defs","len","def","projName","axis","to_meter","code1","proj1","code2","proj2","forward","inverse","cache","clear","get","add","projection","source","destination","transformFn","sourceCode","getCode","destinationCode","RenderBox","className","geometry_","element_","document","createElement","position","pointerEvents","map_","startPixel_","endPixel_","disposeInternal","setMap","render_","startPixel","endPixel","px","left","min","top","getOverlayContainer","removeChild","appendChild","setPixels","createOrUpdateGeometry","pixels","getCoordinateFromPixelInternal","setCoordinates","getGeometry","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","rotation_","scale_","width_","pointGeometry","myBegin","myEnd","ceil","multiPointGeometry","reverseHitDetectionInstructions","hitDetectionImage","getHitDetectionImage","origin","getPixelRatio","CanvasLineStringBuilder","drawFlatCoordinates_","appendFlatLineCoordinates","moveToLineToInstruction","lineStringGeometry","multiLineStringGeometry","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","circleGeometry","setFillStrokeStyles_","circleInstruction","polygonGeometry","multiPolygonGeometry","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","tmpCoordinate_","applyPixelRatio","dashArray","dash","tmpCoord","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","INTERSECTING","drawCustomCoordinates_","builderEnds","builderEnd","drawCustom","hitDetectionRenderer","builderEndss","builderBegin","myEnds","reverse","instruction","currentFillStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","labelCache","setSize","console","warn","measureFont","measureContext","textHeights","registerFont","interval","referenceWidth","retries","referenceFonts","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","getKeys","split","set","clearInterval","fontSpec","families","family","key","weight","setInterval","measureTextHeight","measureElement","metrics","measureText","lineHeight","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","body","offsetHeight","measureAndCacheTextWidth","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","currentWidth","currentHeight","max","drawImageOrLabel","labelOrImage","originX","originY","h","save","contextInstructions","executeLabelInstructions","restore","label","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","RegExp","fromCharCode","horizontalTextAlign","align","test","createTextChunks","line","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","widths_","createLabel","textIsArray","_a","renderWidth","Context","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","previousFont","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","text_1","fillStrokeArgs","replayTextBackground_","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","anchorX","anchorY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","minX","minY","maxX","maxY","value","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","intersects","origin_1","repeatSize","rotate","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotationFromTransform","atan2","batchSize","x1","y1","x2","y2","fn","coords","declutterImageWithText","labelWithAnchor","widthIndex","args","imageArgs","imageDeclutterBox","collides","insert","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","startM","parts","drawChars","c","cc","chars","part","load","i_1","ii_1","result","execute","executeHitDetection","ORDER","BuilderType","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","renderBuffer_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","forEachFeatureAtCoordinate","coordinate","hitTolerance","callback","declutteredFeatures","contextSize","newContext","hitExtent","clearRect","indexes","getPixelIndexArray","featureCallback","indexOf","idx","result_1","executor","zs","isEmpty","opt_builderTypes","builderTypes","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","distance","pixelIndex","geometryCollectionGeometry","opt_declutterImageWithText"],"mappings":"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","file":"js/chunk-f4191c66.993e6a6d.js","sourcesContent":["/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n     * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n     * WebGL layers currently dispatch this event.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n     * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n     * WebGL layers currently dispatch this event.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete',\n};\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n//# sourceMappingURL=EventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultPadding, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, registerFont, } from '../canvas.js';\nimport { getUid } from '../../util.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {\n    'left': 0,\n    'end': 0,\n    'center': 0.5,\n    'right': 1,\n    'start': 1,\n    'top': 0,\n    'middle': 0.5,\n    'hanging': 0.2,\n    'alphabetic': 0.8,\n    'ideographic': 0.8,\n    'bottom': 1,\n};\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string|Array<string>}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        /**\n         * Data shared with an image builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var coordinates = this.coordinates;\n        var begin = coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var stride = geometry.getStride();\n        if (textState.placement === TextPlacement.LINE &&\n            (geometryType == GeometryType.LINE_STRING ||\n                geometryType == GeometryType.MULTI_LINE_STRING ||\n                geometryType == GeometryType.POLYGON ||\n                geometryType == GeometryType.MULTI_POLYGON)) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n                    .getEnds()\n                    .slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = \n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n                ends = [];\n                for (var i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (var i = flatOffset; i < flatEnd; i += stride) {\n                    coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                var end = coordinates.length;\n                flatOffset = ends[o];\n                this.drawChars_(begin, end);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = textState.overflow ? null : [];\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    stride = 2;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = \n                    /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (var i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    if (flatCoordinates.length === 0) {\n                        return;\n                    }\n                    stride = 2;\n                    break;\n                default:\n            }\n            var end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n            if (end === begin) {\n                return;\n            }\n            if (geometryWidths &&\n                (end - begin) / 2 !== flatCoordinates.length / stride) {\n                var beg_1 = begin / 2;\n                geometryWidths = geometryWidths.filter(function (w, i) {\n                    var keep = coordinates[(beg_1 + i) * 2] === flatCoordinates[i * stride] &&\n                        coordinates[(beg_1 + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n                    if (!keep) {\n                        --beg_1;\n                    }\n                    return keep;\n                });\n            }\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            // adjust padding for negative scale\n            var padding = textState.padding;\n            if (padding != defaultPadding &&\n                (textState.scale[0] < 0 || textState.scale[1] < 0)) {\n                var p0 = textState.padding[0];\n                var p1 = textState.padding[1];\n                var p2 = textState.padding[2];\n                var p3 = textState.padding[3];\n                if (textState.scale[0] < 0) {\n                    p1 = -p1;\n                    p3 = -p3;\n                }\n                if (textState.scale[1] < 0) {\n                    p0 = -p0;\n                    p2 = -p2;\n                }\n                padding = [p0, p1, p2, p3];\n            }\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [1, 1],\n                NaN,\n                this.declutterImageWithText_,\n                padding == defaultPadding\n                    ? defaultPadding\n                    : padding.map(function (p) {\n                        return p * pixelRatio_1;\n                    }),\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            var scale = 1 / pixelRatio_1;\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [scale, scale],\n                NaN,\n                this.declutterImageWithText_,\n                padding,\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash,\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale,\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle,\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var strokeWidth = strokeState\n            ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n            : 0;\n        this.instructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            pixelRatio,\n            offsetY,\n            strokeKey,\n            strokeWidth * pixelRatio,\n            text,\n            textKey,\n            1,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            1,\n            offsetY,\n            strokeKey,\n            strokeWidth,\n            text,\n            textKey,\n            1 / pixelRatio,\n        ]);\n    };\n    /**\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @param {Object} [opt_sharedData] Shared data.\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, opt_sharedData) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = null;\n                this.textFillState_ = fillState;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                    this.textFillState_ = fillState;\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = null;\n                this.textStrokeState_ = strokeState;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                    this.textStrokeState_ = strokeState;\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            registerFont(font);\n            var textScale = textStyle.getScaleArray();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline =\n                textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? [1, 1] : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ =\n                textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState\n                ? (typeof strokeState.strokeStyle == 'string'\n                    ? strokeState.strokeStyle\n                    : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap +\n                    strokeState.lineDashOffset +\n                    '|' +\n                    strokeState.lineWidth +\n                    strokeState.lineJoin +\n                    strokeState.miterLimit +\n                    '[' +\n                    strokeState.lineDash.join() +\n                    ']'\n                : '';\n            this.textKey_ =\n                textState.font +\n                    textState.scale +\n                    (textState.textAlign || '?') +\n                    (textState.textBaseline || '?');\n            this.fillKey_ = fillState\n                ? typeof fillState.fillStyle == 'string'\n                    ? fillState.fillStyle\n                    : '|' + getUid(fillState.fillStyle)\n                : '';\n        }\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n     * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [opt_context] Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n         * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n         * context.\n         * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text',\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, } from '../canvas.js';\nimport { equals } from '../../array.js';\nimport { intersects } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n     * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.squaredTolerance_ = opt_squaredTolerance;\n        /**\n         * @private\n         * @type {import(\"../../proj.js\").TransformFunction}\n         */\n        _this.userTransform_ = opt_userTransform;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.imageScale_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.textScale_ = [0, 0];\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 ||\n                this.imageScale_[0] != 1 ||\n                this.imageScale_[1] != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n                context.translate(centerX, centerY);\n                context.scale(this.imageScale_[0], this.imageScale_[1]);\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, -this.imageAnchorX_, -this.imageAnchorY_, this.imageWidth_, this.imageHeight_);\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n            }\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 ||\n                this.textScale_[0] != 1 ||\n                this.textScale_[1] != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, 1, 1, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n                context.translate(x, y);\n                context.scale(this.textScale_[0], this.textScale_[1]);\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, 0, 0);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, 0, 0);\n                }\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, x, y);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, x, y);\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    CanvasImmediateRenderer.prototype.setTransform = function (transform) {\n        this.transform_ = transform;\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case GeometryType.POINT:\n                this.drawPoint(\n                /** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case GeometryType.LINE_STRING:\n                this.drawLineString(\n                /** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.POLYGON:\n                this.drawPolygon(\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POINT:\n                this.drawMultiPoint(\n                /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_LINE_STRING:\n                this.drawMultiLineString(\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POLYGON:\n                this.drawMultiPolygon(\n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.GEOMETRY_COLLECTION:\n                this.drawGeometryCollection(\n                /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case GeometryType.CIRCLE:\n                this.drawCircle(\n                /** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry =\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, \n            /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle,\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = fillState.fillStyle;\n                context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = strokeState.lineCap;\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = strokeState.lineJoin;\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle,\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = strokeState.lineCap;\n                context.lineCap = strokeState.lineCap;\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash((contextStrokeState.lineDash = strokeState.lineDash));\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = strokeState.lineJoin;\n                context.lineJoin = strokeState.lineJoin;\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = strokeState.lineWidth;\n                context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = strokeState.miterLimit;\n                context.miterLimit = strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = strokeState.strokeStyle;\n                context.strokeStyle = strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign\n            ? textState.textAlign\n            : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline,\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = textState.font;\n                context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n                context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n                context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var _this = this;\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle),\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            var lineDash = strokeStyleLineDash\n                ? strokeStyleLineDash\n                : defaultLineDash;\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined\n                    ? strokeStyleLineCap\n                    : defaultLineCap,\n                lineDash: this.pixelRatio_ === 1\n                    ? lineDash\n                    : lineDash.map(function (n) { return n * _this.pixelRatio_; }),\n                lineDashOffset: (strokeStyleLineDashOffset\n                    ? strokeStyleLineDashOffset\n                    : defaultLineDashOffset) * this.pixelRatio_,\n                lineJoin: strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin,\n                lineWidth: (strokeStyleWidth !== undefined\n                    ? strokeStyleWidth\n                    : defaultLineWidth) * this.pixelRatio_,\n                miterLimit: strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle),\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        var imageSize;\n        if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n            this.image_ = null;\n            return;\n        }\n        var imageAnchor = imageStyle.getAnchor();\n        var imageOrigin = imageStyle.getOrigin();\n        this.image_ = imageStyle.getImage(this.pixelRatio_);\n        this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n        this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n        this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n        this.imageOpacity_ = imageStyle.getOpacity();\n        this.imageOriginX_ = imageOrigin[0];\n        this.imageOriginY_ = imageOrigin[1];\n        this.imageRotateWithView_ = imageStyle.getRotateWithView();\n        this.imageRotation_ = imageStyle.getRotation();\n        this.imageScale_ = imageStyle.getScaleArray();\n        this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ? textFillStyleColor : defaultFillStyle),\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined\n                        ? textStrokeStyleLineCap\n                        : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash\n                        ? textStrokeStyleLineDash\n                        : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset\n                        ? textStrokeStyleLineDashOffset\n                        : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined\n                        ? textStrokeStyleLineJoin\n                        : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined\n                        ? textStrokeStyleWidth\n                        : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined\n                        ? textStrokeStyleMiterLimit\n                        : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle),\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScaleArray();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ? textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined\n                    ? textTextBaseline\n                    : defaultTextBaseline,\n            };\n            this.text_ =\n                textText !== undefined\n                    ? Array.isArray(textText)\n                        ? textText.reduce(function (acc, t, i) { return (acc += i % 2 ? ' ' : t); }, '')\n                        : textText\n                    : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n            this.textRotateWithView_ =\n                textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = [\n                this.pixelRatio_ * textScale[0],\n                this.pixelRatio_ * textScale[1],\n            ];\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/render/canvas/hitdetect\n */\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport { Icon } from '../../style.js';\nimport { clamp } from '../../math.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { intersects } from '../../extent.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nexport var HIT_DETECT_RESOLUTION = 0.5;\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(size, transforms, features, styleFunction, extent, resolution, rotation) {\n    var width = size[0] * HIT_DETECT_RESOLUTION;\n    var height = size[1] * HIT_DETECT_RESOLUTION;\n    var context = createCanvasContext2D(width, height);\n    context.imageSmoothingEnabled = false;\n    var canvas = context.canvas;\n    var renderer = new CanvasImmediateRenderer(context, HIT_DETECT_RESOLUTION, extent, null, rotation);\n    var featureCount = features.length;\n    // Stretch hit detection index to use the whole available color range\n    var indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n    var featuresByZIndex = {};\n    for (var i = 1; i <= featureCount; ++i) {\n        var feature = features[i - 1];\n        var featureStyleFunction = feature.getStyleFunction() || styleFunction;\n        if (!styleFunction) {\n            continue;\n        }\n        var styles = featureStyleFunction(feature, resolution);\n        if (!styles) {\n            continue;\n        }\n        if (!Array.isArray(styles)) {\n            styles = [styles];\n        }\n        var index = i * indexFactor;\n        var color = '#' + ('000000' + index.toString(16)).slice(-6);\n        for (var j = 0, jj = styles.length; j < jj; ++j) {\n            var originalStyle = styles[j];\n            var geometry = originalStyle.getGeometryFunction()(feature);\n            if (!geometry || !intersects(extent, geometry.getExtent())) {\n                continue;\n            }\n            var style = originalStyle.clone();\n            var fill = style.getFill();\n            if (fill) {\n                fill.setColor(color);\n            }\n            var stroke = style.getStroke();\n            if (stroke) {\n                stroke.setColor(color);\n                stroke.setLineDash(null);\n            }\n            style.setText(undefined);\n            var image = originalStyle.getImage();\n            if (image && image.getOpacity() !== 0) {\n                var imgSize = image.getImageSize();\n                if (!imgSize) {\n                    continue;\n                }\n                var imgContext = createCanvasContext2D(imgSize[0], imgSize[1], undefined, { alpha: false });\n                var img = imgContext.canvas;\n                imgContext.fillStyle = color;\n                imgContext.fillRect(0, 0, img.width, img.height);\n                style.setImage(new Icon({\n                    img: img,\n                    imgSize: imgSize,\n                    anchor: image.getAnchor(),\n                    anchorXUnits: IconAnchorUnits.PIXELS,\n                    anchorYUnits: IconAnchorUnits.PIXELS,\n                    offset: image.getOrigin(),\n                    opacity: 1,\n                    size: image.getSize(),\n                    scale: image.getScale(),\n                    rotation: image.getRotation(),\n                    rotateWithView: image.getRotateWithView(),\n                }));\n            }\n            var zIndex = style.getZIndex() || 0;\n            var byGeometryType = featuresByZIndex[zIndex];\n            if (!byGeometryType) {\n                byGeometryType = {};\n                featuresByZIndex[zIndex] = byGeometryType;\n                byGeometryType[GeometryType.POLYGON] = [];\n                byGeometryType[GeometryType.CIRCLE] = [];\n                byGeometryType[GeometryType.LINE_STRING] = [];\n                byGeometryType[GeometryType.POINT] = [];\n            }\n            byGeometryType[geometry.getType().replace('Multi', '')].push(geometry, style);\n        }\n    }\n    var zIndexKeys = Object.keys(featuresByZIndex)\n        .map(Number)\n        .sort(numberSafeCompareFunction);\n    for (var i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n        var byGeometryType = featuresByZIndex[zIndexKeys[i]];\n        for (var type in byGeometryType) {\n            var geomAndStyle = byGeometryType[type];\n            for (var j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n                renderer.setStyle(geomAndStyle[j + 1]);\n                for (var k = 0, kk = transforms.length; k < kk; ++k) {\n                    renderer.setTransform(transforms[k]);\n                    renderer.drawGeometry(geomAndStyle[j]);\n                }\n            }\n        }\n    }\n    return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n    var resultFeatures = [];\n    if (imageData) {\n        var x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n        var y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n        // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n        // for browsers returning coordinates slightly larger than the actual canvas size\n        // due to a non-integer pixel ratio.\n        var index = (clamp(x, 0, imageData.width - 1) +\n            clamp(y, 0, imageData.height - 1) * imageData.width) *\n            4;\n        var r = imageData.data[index];\n        var g = imageData.data[index + 1];\n        var b = imageData.data[index + 2];\n        var i = b + 256 * (g + 256 * r);\n        var indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n        if (i && i % indexFactor === 0) {\n            resultFeatures.push(features[i / indexFactor - 1]);\n        }\n    }\n    return resultFeatures;\n}\n//# sourceMappingURL=hitdetect.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12,\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string} [opt_axisOrientation] Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT,\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n//# sourceMappingURL=epsg4326.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport { cosh } from '../math.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport var MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            },\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (HALF_SIZE * input[i]) / 180;\n        var y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n        if (y > MAX_SAFE_Y) {\n            y = MAX_SAFE_Y;\n        }\n        else if (y < -MAX_SAFE_Y) {\n            y = -MAX_SAFE_Y;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (180 * input[i]) / HALF_SIZE;\n        output[i + 1] =\n            (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/proj4\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport { addCoordinateTransforms, addEquivalentProjections, addProjection, createSafeCoordinateTransform, get, } from '../proj.js';\nimport { get as getTransform } from './transforms.js';\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n    var projCodes = Object.keys(proj4.defs);\n    var len = projCodes.length;\n    var i, j;\n    for (i = 0; i < len; ++i) {\n        var code = projCodes[i];\n        if (!get(code)) {\n            var def = proj4.defs(code);\n            var units = def.units;\n            if (!units && def.projName === 'longlat') {\n                units = Units.DEGREES;\n            }\n            addProjection(new Projection({\n                code: code,\n                axisOrientation: def.axis,\n                metersPerUnit: def.to_meter,\n                units: units,\n            }));\n        }\n    }\n    for (i = 0; i < len; ++i) {\n        var code1 = projCodes[i];\n        var proj1 = get(code1);\n        for (j = 0; j < len; ++j) {\n            var code2 = projCodes[j];\n            var proj2 = get(code2);\n            if (!getTransform(code1, code2)) {\n                if (proj4.defs[code1] === proj4.defs[code2]) {\n                    addEquivalentProjections([proj1, proj2]);\n                }\n                else {\n                    var transform = proj4(code1, code2);\n                    addCoordinateTransforms(proj1, proj2, createSafeCoordinateTransform(proj1, proj2, transform.forward), createSafeCoordinateTransform(proj2, proj1, transform.inverse));\n                }\n            }\n        }\n    }\n}\n//# sourceMappingURL=proj4.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return (cache[code] ||\n        cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n        null);\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.style.pointerEvents = 'auto';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default|null}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default|null} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = 'inherit';\n            style.top = 'inherit';\n            style.width = 'inherit';\n            style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]],\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.imagePixelRatio_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        /**\n         * Data shared with a text builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(pointGeometry, feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n            this.declutterImageWithText_,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n            this.declutterImageWithText_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(multiPointGeometry, feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n            this.declutterImageWithText_,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n            this.declutterImageWithText_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.imagePixelRatio_ = undefined;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     * @param {Object} [opt_sharedData] Shared data.\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, opt_sharedData) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage();\n        var image = imageStyle.getImage(this.pixelRatio);\n        var origin = imageStyle.getOrigin();\n        this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0] * this.imagePixelRatio_;\n        this.originY_ = origin[1] * this.imagePixelRatio_;\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScaleArray();\n        this.width_ = size[0];\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, strokeInstruction, } from './Instruction.js';\nimport { defaultLineDash, defaultLineDashOffset } from '../canvas.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [\n            CanvasInstruction.MOVE_TO_LINE_TO,\n            myBegin,\n            myEnd,\n        ];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(lineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            defaultLineDash,\n            defaultLineDashOffset,\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(multiLineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            state.lineDash,\n            state.lineDashOffset,\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, \n            /** @type {number} */ (ends[i]), stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, closePathInstruction, fillInstruction, strokeInstruction, } from './Instruction.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport { snap } from '../../geom/flat/simplify.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle !== undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [\n                CanvasInstruction.MOVE_TO_LINE_TO,\n                myBegin,\n                myEnd,\n            ];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(circleGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(polygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, \n        /** @type {Array<number>} */ (ends), stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(multiPolygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder,\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, containsCoordinate, coordinateRelationship, } from '../../extent.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../canvas.js';\nimport { equals, reverseSubArray } from '../../array.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray, } from '../../geom/flat/inflate.js';\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1\n            ? dashArray\n            : dashArray.map(function (dash) {\n                return dash * pixelRatio;\n            });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} stride Stride.\n     * @protected\n     * @return {number} My end\n     */\n    CanvasBuilder.prototype.appendFlatPointCoordinates = function (flatCoordinates, stride) {\n        var extent = this.getBufferedMaxExtent();\n        var tmpCoord = this.tmpCoordinate_;\n        var coordinates = this.coordinates;\n        var myEnd = coordinates.length;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            tmpCoord[0] = flatCoordinates[i];\n            tmpCoord[1] = flatCoordinates[i + 1];\n            if (containsCoordinate(extent, tmpCoord)) {\n                coordinates[myEnd++] = tmpCoord[0];\n                coordinates[myEnd++] = tmpCoord[1];\n            }\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatLineCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var coordinates = this.coordinates;\n        var myEnd = coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    coordinates[myEnd++] = lastXCoord;\n                    coordinates[myEnd++] = lastYCoord;\n                    skipped = false;\n                }\n                coordinates[myEnd++] = nextCoord[0];\n                coordinates[myEnd++] = nextCoord[1];\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                coordinates[myEnd++] = nextCoord[0];\n                coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            coordinates[myEnd++] = lastXCoord;\n            coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     * @param {Function} hitDetectionRenderer Renderer.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer, hitDetectionRenderer) {\n        this.beginGeometry(geometry, feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        switch (type) {\n            case GeometryType.MULTI_POLYGON:\n                flatCoordinates =\n                    /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n                builderEndss = [];\n                var endss = \n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n                offset = 0;\n                for (var i = 0, ii = endss.length; i < ii; ++i) {\n                    var myEnds = [];\n                    offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                    builderEndss.push(myEnds);\n                }\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEndss,\n                    geometry,\n                    renderer,\n                    inflateMultiCoordinatesArray,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEndss,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                    inflateMultiCoordinatesArray,\n                ]);\n                break;\n            case GeometryType.POLYGON:\n            case GeometryType.MULTI_LINE_STRING:\n                builderEnds = [];\n                flatCoordinates =\n                    type == GeometryType.POLYGON\n                        ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n                        : geometry.getFlatCoordinates();\n                offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n                /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnds,\n                    geometry,\n                    renderer,\n                    inflateCoordinatesArray,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnds,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                    inflateCoordinatesArray,\n                ]);\n                break;\n            case GeometryType.LINE_STRING:\n            case GeometryType.CIRCLE:\n                flatCoordinates = geometry.getFlatCoordinates();\n                builderEnd = this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    renderer,\n                    inflateCoordinates,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                    inflateCoordinates,\n                ]);\n                break;\n            case GeometryType.MULTI_POINT:\n                flatCoordinates = geometry.getFlatCoordinates();\n                builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n                if (builderEnd > builderBegin) {\n                    this.instructions.push([\n                        CanvasInstruction.CUSTOM,\n                        builderBegin,\n                        builderEnd,\n                        geometry,\n                        renderer,\n                        inflateCoordinates,\n                    ]);\n                    this.hitDetectionInstructions.push([\n                        CanvasInstruction.CUSTOM,\n                        builderBegin,\n                        builderEnd,\n                        geometry,\n                        hitDetectionRenderer || renderer,\n                        inflateCoordinates,\n                    ]);\n                }\n                break;\n            case GeometryType.POINT:\n                flatCoordinates = geometry.getFlatCoordinates();\n                this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n                builderEnd = this.coordinates.length;\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    renderer,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                ]);\n                break;\n            default:\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (geometry, feature) {\n        this.beginGeometryInstruction1_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            geometry,\n        ];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            geometry,\n        ];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates,\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap =\n                strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash\n                ? strokeStyleLineDash.slice()\n                : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset\n                ? strokeStyleLineDashOffset\n                : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin =\n                strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth =\n                strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit =\n                strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth * this.pixelRatio,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            this.applyPixelRatio(state.lineDash),\n            state.lineDashOffset * this.pixelRatio,\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash &&\n                !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n    console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = (function () {\n    var retries = 100;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n            if (fontFamily != referenceFont) {\n                var width = measureTextWidth(fontStyle +\n                    ' ' +\n                    fontWeight +\n                    ' ' +\n                    size +\n                    fontFamily +\n                    ',' +\n                    referenceFont, text);\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        var fonts = checkedFonts.getKeys();\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            if (checkedFonts.get(font) < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    checkedFonts.set(font, retries);\n                }\n                else {\n                    checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (checkedFonts.get(key) === undefined) {\n                checkedFonts.set(key, retries, true);\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checkedFonts.set(key, 0, true);\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    /**\n     * @type {HTMLDivElement}\n     */\n    var measureElement;\n    return function (fontSpec) {\n        var height = textHeights[fontSpec];\n        if (height == undefined) {\n            if (WORKER_OFFSCREEN_CANVAS) {\n                var font = getFontParameters(fontSpec);\n                var metrics = measureText(fontSpec, 'Žg');\n                var lineHeight = isNaN(Number(font.lineHeight))\n                    ? 1.2\n                    : Number(font.lineHeight);\n                height =\n                    lineHeight *\n                        (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n            }\n            else {\n                if (!measureElement) {\n                    measureElement = document.createElement('div');\n                    measureElement.innerHTML = 'M';\n                    measureElement.style.minHeight = '0';\n                    measureElement.style.maxHeight = 'none';\n                    measureElement.style.height = 'auto';\n                    measureElement.style.padding = '0';\n                    measureElement.style.border = 'none';\n                    measureElement.style.position = 'absolute';\n                    measureElement.style.display = 'block';\n                    measureElement.style.left = '-99999px';\n                }\n                measureElement.style.font = fontSpec;\n                document.body.appendChild(measureElement);\n                height = measureElement.offsetHeight;\n                document.body.removeChild(measureElement);\n            }\n            textHeights[fontSpec] = height;\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    if (font != measureFont) {\n        measureContext.font = font;\n        measureFont = measureContext.font;\n    }\n    return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = measureTextWidth(font, text);\n    cache[text] = width;\n    return width;\n}\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n    var widths = [];\n    var heights = [];\n    var lineWidths = [];\n    var width = 0;\n    var lineWidth = 0;\n    var height = 0;\n    var lineHeight = 0;\n    for (var i = 0, ii = chunks.length; i <= ii; i += 2) {\n        var text = chunks[i];\n        if (text === '\\n' || i === ii) {\n            width = Math.max(width, lineWidth);\n            lineWidths.push(lineWidth);\n            lineWidth = 0;\n            height += lineHeight;\n            continue;\n        }\n        var font = chunks[i + 1] || baseStyle.font;\n        var currentWidth = measureTextWidth(font, text);\n        widths.push(currentWidth);\n        lineWidth += currentWidth;\n        var currentHeight = measureTextHeight(font);\n        heights.push(currentHeight);\n        lineHeight = Math.max(lineHeight, currentHeight);\n    }\n    return { width: width, height: height, widths: widths, heights: heights, lineWidths: lineWidths };\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n    context.save();\n    if (opacity !== 1) {\n        context.globalAlpha *= opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    if ( /** @type {*} */(labelOrImage).contextInstructions) {\n        // label\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n    }\n    else if (scale[0] < 0 || scale[1] < 0) {\n        // flipped image\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, 0, 0, w, h);\n    }\n    else {\n        // if image not flipped translate and scale can be avoided\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n    }\n    context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n    var contextInstructions = label.contextInstructions;\n    for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n        if (Array.isArray(contextInstructions[i + 1])) {\n            context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n        }\n        else {\n            context[contextInstructions[i]] = contextInstructions[i + 1];\n        }\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../../has.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, setFromArray as transformSetFromArray, } from '../../transform.js';\nimport { createEmpty, createOrUpdate, intersects } from '../../extent.js';\nimport { defaultPadding, defaultTextAlign, defaultTextBaseline, drawImageOrLabel, getTextDimensions, measureAndCacheTextWidth, } from '../canvas.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { equals } from '../../array.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n    return replayImageOrLabelArgs[3].declutterBox;\n}\nvar rtlRegEx = new RegExp(\n/* eslint-disable prettier/prettier */\n'[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n    ']'\n/* eslint-enable prettier/prettier */\n);\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n    if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n        align = align === 'start' ? 'left' : 'right';\n    }\n    return TEXT_ALIGN[align];\n}\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n    if (i > 0) {\n        acc.push('\\n', '');\n    }\n    acc.push(line, '');\n    return acc;\n}\nvar Executor = /** @class */ (function () {\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n     */\n    function Executor(resolution, pixelRatio, overlaps, instructions) {\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.alignFill_;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        this.widths_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../canvas.js\").Label>}\n         */\n        this.labels_ = {};\n    }\n    /**\n     * @param {string|Array<string>} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {import(\"../canvas.js\").Label} Label.\n     */\n    Executor.prototype.createLabel = function (text, textKey, fillKey, strokeKey) {\n        var key = text + textKey + fillKey + strokeKey;\n        if (this.labels_[key]) {\n            return this.labels_[key];\n        }\n        var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n        var fillState = fillKey ? this.fillStates[fillKey] : null;\n        var textState = this.textStates[textKey];\n        var pixelRatio = this.pixelRatio;\n        var scale = [\n            textState.scale[0] * pixelRatio,\n            textState.scale[1] * pixelRatio,\n        ];\n        var textIsArray = Array.isArray(text);\n        var align = horizontalTextAlign(textIsArray ? text[0] : text, textState.textAlign || defaultTextAlign);\n        var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        var chunks = textIsArray\n            ? text\n            : text.split('\\n').reduce(createTextChunks, []);\n        var _a = getTextDimensions(textState, chunks), width = _a.width, height = _a.height, widths = _a.widths, heights = _a.heights, lineWidths = _a.lineWidths;\n        var renderWidth = width + strokeWidth;\n        var contextInstructions = [];\n        // make canvas 2 pixels wider to account for italic text width measurement errors\n        var w = (renderWidth + 2) * scale[0];\n        var h = (height + strokeWidth) * scale[1];\n        /** @type {import(\"../canvas.js\").Label} */\n        var label = {\n            width: w < 0 ? Math.floor(w) : Math.ceil(w),\n            height: h < 0 ? Math.floor(h) : Math.ceil(h),\n            contextInstructions: contextInstructions,\n        };\n        if (scale[0] != 1 || scale[1] != 1) {\n            contextInstructions.push('scale', scale);\n        }\n        if (strokeKey) {\n            contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n            contextInstructions.push('lineWidth', strokeWidth);\n            contextInstructions.push('lineCap', strokeState.lineCap);\n            contextInstructions.push('lineJoin', strokeState.lineJoin);\n            contextInstructions.push('miterLimit', strokeState.miterLimit);\n            // eslint-disable-next-line\n            var Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n            if (Context.prototype.setLineDash) {\n                contextInstructions.push('setLineDash', [strokeState.lineDash]);\n                contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n            }\n        }\n        if (fillKey) {\n            contextInstructions.push('fillStyle', fillState.fillStyle);\n        }\n        contextInstructions.push('textBaseline', 'middle');\n        contextInstructions.push('textAlign', 'center');\n        var leftRight = 0.5 - align;\n        var x = align * renderWidth + leftRight * strokeWidth;\n        var strokeInstructions = [];\n        var fillInstructions = [];\n        var lineHeight = 0;\n        var lineOffset = 0;\n        var widthHeightIndex = 0;\n        var lineWidthIndex = 0;\n        var previousFont;\n        for (var i = 0, ii = chunks.length; i < ii; i += 2) {\n            var text_1 = chunks[i];\n            if (text_1 === '\\n') {\n                lineOffset += lineHeight;\n                lineHeight = 0;\n                x = align * renderWidth + leftRight * strokeWidth;\n                ++lineWidthIndex;\n                continue;\n            }\n            var font = chunks[i + 1] || textState.font;\n            if (font !== previousFont) {\n                if (strokeKey) {\n                    strokeInstructions.push('font', font);\n                }\n                if (fillKey) {\n                    fillInstructions.push('font', font);\n                }\n                previousFont = font;\n            }\n            lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n            var fillStrokeArgs = [\n                text_1,\n                x +\n                    leftRight * widths[widthHeightIndex] +\n                    align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n                0.5 * (strokeWidth + lineHeight) + lineOffset,\n            ];\n            x += widths[widthHeightIndex];\n            if (strokeKey) {\n                strokeInstructions.push('strokeText', fillStrokeArgs);\n            }\n            if (fillKey) {\n                fillInstructions.push('fillText', fillStrokeArgs);\n            }\n            ++widthHeightIndex;\n        }\n        Array.prototype.push.apply(contextInstructions, strokeInstructions);\n        Array.prototype.push.apply(contextInstructions, fillInstructions);\n        this.labels_[key] = label;\n        return label;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, \n            /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @private\n     * @param {number} sheetWidth Width of the sprite sheet.\n     * @param {number} sheetHeight Height of the sprite sheet.\n     * @param {number} centerX X.\n     * @param {number} centerY Y.\n     * @param {number} width Width.\n     * @param {number} height Height.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {import(\"../../size.js\").Size} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {Array<number>} padding Padding.\n     * @param {boolean} fillStroke Background fill or stroke.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n     */\n    Executor.prototype.calculateImageOrLabelDimensions_ = function (sheetWidth, sheetHeight, centerX, centerY, width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, fillStroke, feature) {\n        anchorX *= scale[0];\n        anchorY *= scale[1];\n        var x = centerX - anchorX;\n        var y = centerY - anchorY;\n        var w = width + originX > sheetWidth ? sheetWidth - originX : width;\n        var h = height + originY > sheetHeight ? sheetHeight - originY : height;\n        var boxW = padding[3] + w * scale[0] + padding[1];\n        var boxH = padding[0] + h * scale[1] + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = boxX;\n            p4[0] = boxX;\n            p1[1] = boxY;\n            p2[1] = boxY;\n            p2[0] = boxX + boxW;\n            p3[0] = p2[0];\n            p3[1] = boxY + boxH;\n            p4[1] = p3[1];\n        }\n        var transform;\n        if (rotation !== 0) {\n            transform = composeTransform(createTransform(), centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(transform, p1);\n            applyTransform(transform, p2);\n            applyTransform(transform, p3);\n            applyTransform(transform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(Math.min(boxX, boxX + boxW), Math.min(boxY, boxY + boxH), Math.max(boxX, boxX + boxW), Math.max(boxY, boxY + boxH), tmpExtent);\n        }\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        return {\n            drawImageX: x,\n            drawImageY: y,\n            drawImageW: w,\n            drawImageH: h,\n            originX: originX,\n            originY: originY,\n            declutterBox: {\n                minX: tmpExtent[0],\n                minY: tmpExtent[1],\n                maxX: tmpExtent[2],\n                maxY: tmpExtent[3],\n                value: feature,\n            },\n            canvasTransform: transform,\n            scale: scale,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n     * @param {ImageOrLabelDimensions} dimensions Dimensions.\n     * @param {number} opacity Opacity.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     * @return {boolean} The image or label was rendered.\n     */\n    Executor.prototype.replayImageOrLabel_ = function (context, contextScale, imageOrLabel, dimensions, opacity, fillInstruction, strokeInstruction) {\n        var fillStroke = !!(fillInstruction || strokeInstruction);\n        var box = dimensions.declutterBox;\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction\n            ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n            : 0;\n        var intersects = box.minX - strokePadding <= canvas.width / contextScale &&\n            box.maxX + strokePadding >= 0 &&\n            box.minY - strokePadding <= canvas.height / contextScale &&\n            box.maxY + strokePadding >= 0;\n        if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImageOrLabel(context, dimensions.canvasTransform, opacity, imageOrLabel, dimensions.originX, dimensions.originY, dimensions.drawImageW, dimensions.drawImageH, dimensions.drawImageX, dimensions.drawImageY, dimensions.scale);\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context['strokeStyle'] =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @private\n     * @param {string|Array<string>} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawLabelWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.createLabel(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = horizontalTextAlign(Array.isArray(text) ? text[0] : text, textState.textAlign || defaultTextAlign);\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        // Remove the 2 pixels we added in createLabel() for the anchor\n        var width = label.width / pixelRatio - 2 * textState.scale[0];\n        var anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = (baseline * label.height) / pixelRatio +\n            2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n     * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n     *     features that intersect this extent.\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, contextScale, transform, instructions, snapToPixel, opt_featureCallback, opt_hitExtent, opt_declutterTree) {\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, image, text, textKey, strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var viewRotationFromTransform = Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation,\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y, currentGeometry;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    currentGeometry = instruction[3];\n                    if (!feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined &&\n                        !intersects(opt_hitExtent, currentGeometry.getExtent())) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = NaN;\n                        prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = \n                    /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image =\n                        /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    var height = /** @type {number} */ (instruction[6]);\n                    var opacity = /** @type {number} */ (instruction[7]);\n                    var originX = /** @type {number} */ (instruction[8]);\n                    var originY = /** @type {number} */ (instruction[9]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[10]);\n                    var rotation = /** @type {number} */ (instruction[11]);\n                    var scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n                    var width = /** @type {number} */ (instruction[13]);\n                    var declutterImageWithText = \n                    /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = labelWithAnchor.label;\n                        instruction[3] = image;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        instruction[4] = anchorX;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        instruction[5] = anchorY;\n                        height = image.height;\n                        instruction[6] = height;\n                        width = image.width;\n                        instruction[13] = width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = false;\n                        backgroundStroke = false;\n                    }\n                    if (rotateWithView && viewRotationFromTransform) {\n                        // Canvas is expected to be rotated to reverse view rotation.\n                        rotation += viewRotation;\n                    }\n                    else if (!rotateWithView && !viewRotationFromTransform) {\n                        // Canvas is not rotated, images need to be rotated back to be north-up.\n                        rotation -= viewRotation;\n                    }\n                    var widthIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths &&\n                            geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        var dimensions = this.calculateImageOrLabelDimensions_(image.width, image.height, pixelCoordinates[d], pixelCoordinates[d + 1], width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, backgroundFill || backgroundStroke, feature);\n                        /** @type {ReplayImageOrLabelArgs} */\n                        var args = [\n                            context,\n                            contextScale,\n                            image,\n                            dimensions,\n                            opacity,\n                            backgroundFill\n                                ? /** @type {Array<*>} */ (lastFillInstruction)\n                                : null,\n                            backgroundStroke\n                                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                                : null,\n                        ];\n                        var imageArgs = void 0;\n                        var imageDeclutterBox = void 0;\n                        if (opt_declutterTree && declutterImageWithText) {\n                            var index = dd - d;\n                            if (!declutterImageWithText[index]) {\n                                // We now have the image for an image+text combination.\n                                declutterImageWithText[index] = args;\n                                // Don't render anything for now, wait for the text.\n                                continue;\n                            }\n                            imageArgs = declutterImageWithText[index];\n                            delete declutterImageWithText[index];\n                            imageDeclutterBox = getDeclutterBox(imageArgs);\n                            if (opt_declutterTree.collides(imageDeclutterBox)) {\n                                continue;\n                            }\n                        }\n                        if (opt_declutterTree &&\n                            opt_declutterTree.collides(dimensions.declutterBox)) {\n                            continue;\n                        }\n                        if (imageArgs) {\n                            // We now have image and text for an image+text combination.\n                            if (opt_declutterTree) {\n                                opt_declutterTree.insert(imageDeclutterBox);\n                            }\n                            // Render the image before we render the text.\n                            this.replayImageOrLabel_.apply(this, imageArgs);\n                        }\n                        if (opt_declutterTree) {\n                            opt_declutterTree.insert(dimensions.declutterBox);\n                        }\n                        this.replayImageOrLabel_.apply(this, args);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    var overflow = /** @type {number} */ (instruction[4]);\n                    fillKey = /** @type {string} */ (instruction[5]);\n                    var maxAngle = /** @type {number} */ (instruction[6]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[7]);\n                    var offsetY = /** @type {number} */ (instruction[8]);\n                    strokeKey = /** @type {string} */ (instruction[9]);\n                    var strokeWidth = /** @type {number} */ (instruction[10]);\n                    text = /** @type {string} */ (instruction[11]);\n                    textKey = /** @type {string} */ (instruction[12]);\n                    var pixelRatioScale = [\n                        /** @type {number} */ (instruction[13]),\n                        /** @type {number} */ (instruction[13]),\n                    ];\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = [\n                        textState.scale[0] * measurePixelRatio,\n                        textState.scale[1] * measurePixelRatio,\n                    ];\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = {};\n                        this.widths_[font] = cachedWidths;\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = Math.abs(textScale[0]) *\n                        measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, Math.abs(textScale[0]), measureAndCacheTextWidth, font, cachedWidths, viewRotationFromTransform ? 0 : this.viewRotation_);\n                        drawChars: if (parts) {\n                            /** @type {Array<ReplayImageOrLabelArgs>} */\n                            var replayImageOrLabelArgs = [];\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, '', strokeKey);\n                                    anchorX =\n                                        /** @type {number} */ (part[2]) +\n                                            (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                                    anchorY =\n                                        baseline * label.height +\n                                            ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                                                textScale[0] -\n                                            offsetY;\n                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                    if (opt_declutterTree &&\n                                        opt_declutterTree.collides(dimensions.declutterBox)) {\n                                        break drawChars;\n                                    }\n                                    replayImageOrLabelArgs.push([\n                                        context,\n                                        contextScale,\n                                        label,\n                                        dimensions,\n                                        1,\n                                        null,\n                                        null,\n                                    ]);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                    if (opt_declutterTree &&\n                                        opt_declutterTree.collides(dimensions.declutterBox)) {\n                                        break drawChars;\n                                    }\n                                    replayImageOrLabelArgs.push([\n                                        context,\n                                        contextScale,\n                                        label,\n                                        dimensions,\n                                        1,\n                                        null,\n                                        null,\n                                    ]);\n                                }\n                            }\n                            if (opt_declutterTree) {\n                                opt_declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n                            }\n                            for (var i_1 = 0, ii_1 = replayImageOrLabelArgs.length; i_1 < ii_1; ++i_1) {\n                                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i_1]);\n                            }\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (opt_featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = opt_featureCallback(feature, currentGeometry);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle =\n                        /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     */\n    Executor.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, contextScale, transform, this.instructions, snapToPixel, undefined, undefined, opt_declutterTree);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n     * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n     *     features that intersect this extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, 1, transform, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}());\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { isEmpty } from '../../obj.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT,\n];\nvar ExecutorGroup = /** @class */ (function () {\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceed that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number} [opt_renderBuffer] Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n         */\n        this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        this.hitDetectionContext_ = null;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        this.hitDetectionTransform_ = createTransform();\n        this.createExecutors_(allInstructions);\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                executors = {};\n                this.executorsByZIndex_[zIndex] = executors;\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, instructions);\n            }\n        }\n    };\n    /**\n     * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, callback, declutteredFeatures) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        var newContext = !this.hitDetectionContext_;\n        if (newContext) {\n            this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n        }\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize ||\n            context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else if (!newContext) {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var indexes = getPixelIndexArray(hitTolerance);\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function featureCallback(feature, geometry) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n            for (var i_1 = 0, ii = indexes.length; i_1 < ii; i_1++) {\n                if (imageData[indexes[i_1]] > 0) {\n                    if (!declutteredFeatures ||\n                        (builderType !== BuilderType.IMAGE &&\n                            builderType !== BuilderType.TEXT) ||\n                        declutteredFeatures.indexOf(feature) !== -1) {\n                        var idx = (indexes[i_1] - 3) / 4;\n                        var x = hitTolerance - (idx % contextSize);\n                        var y = hitTolerance - ((idx / contextSize) | 0);\n                        var result_1 = callback(feature, geometry, x * x + y * y);\n                        if (result_1) {\n                            return result_1;\n                        }\n                    }\n                    context.clearRect(0, 0, contextSize, contextSize);\n                    break;\n                }\n            }\n            return undefined;\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    result = executor.executeHitDetection(context, transform, rotation, featureCallback, hitExtent);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     */\n    ExecutorGroup.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_builderTypes, opt_declutterTree) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        if (opt_declutterTree) {\n            zs.reverse();\n        }\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    replay.execute(context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree);\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}());\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nvar circlePixelIndexArrayCache = {};\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n    if (circlePixelIndexArrayCache[radius] !== undefined) {\n        return circlePixelIndexArrayCache[radius];\n    }\n    var size = radius * 2 + 1;\n    var maxDistanceSq = radius * radius;\n    var distances = new Array(maxDistanceSq + 1);\n    for (var i = 0; i <= radius; ++i) {\n        for (var j = 0; j <= radius; ++j) {\n            var distanceSq = i * i + j * j;\n            if (distanceSq > maxDistanceSq) {\n                break;\n            }\n            var distance = distances[distanceSq];\n            if (!distance) {\n                distance = [];\n                distances[distanceSq] = distance;\n            }\n            distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n            if (i > 0) {\n                distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n            }\n            if (j > 0) {\n                distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n                if (i > 0) {\n                    distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n                }\n            }\n        }\n    }\n    var pixelIndex = [];\n    for (var i = 0, ii = distances.length; i < ii; ++i) {\n        if (distances[i]) {\n            pixelIndex.push.apply(pixelIndex, distances[i]);\n        }\n    }\n    circlePixelIndexArrayCache[radius] = pixelIndex;\n    return pixelIndex;\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     * @param {Function} hitDetectionRenderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer, hitDetectionRenderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterImageWithText) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterImageWithText) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map"],"sourceRoot":""}