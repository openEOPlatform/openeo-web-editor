{"version":3,"sources":["webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/control.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/control/ScaleLine.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/control/FullScreen.js","webpack:///./node_modules/ol/colorlike.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","_super","Attribution","opt_options","_this","options","element","document","createElement","render","target","ulElement_","collapsed_","undefined","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","className","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","appendChild","addEventListener","EventType","CLICK","handleClick_","bind","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","frameState","lookup","visibleAttributions","layerStatesArray","i","ii","length","layerState","viewState","source","getSource","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","isArray","j","jj","push","setCollapsible","updateElement_","visible","style","display","innerHTML","event","preventDefault","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","mapEvent","Control","Rotate","compassClassName","add","button","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","resetNorth_","map","getMap","view","getView","rotation","getRotation","Math","PI","animate","easing","setRotation","transform","contains","remove","Zoom","delta","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","zoom","setZoom","defaults","controls","Collection","zoomControl","zoomOptions","rotateControl","rotate","rotateOptions","attributionControl","attribution","attributionOptions","pointerEvents","target_","map_","listenerKeys","setTarget","disposeInternal","setMap","getOverlayContainerStopEvent","POSTRENDER","getElementById","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","toString","fromNamed","el","body","rgb","getComputedStyle","removeChild","fromString","MAX_CACHE_SIZE","cache","cacheSize","s","key","fromStringInternal_","asArray","r","g","a","exec","n","hasAlpha","parseInt","substr","indexOf","slice","split","Number","normalize","createExtent","extent","onlyCenter","smooth","center","resolution","size","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","minX","maxX","minY","maxY","x","y","ratio","log","max","none","assert","assertion","errorCode","UNITS_PROP","Units","DEGREES","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","DEFAULT_DPI","ScaleLine","bar","on","once","un","innerElement_","viewState_","minWidth_","minWidth","renderedWidth_","renderedHTML_","addChangeListener","handleUnitsChanged_","setUnits","units","scaleBar_","scaleBarSteps_","steps","scaleBarText_","text","dpi_","dpi","getUnits","get","set","setDpi","projection","pointResolutionUnits","METERS","pointResolution","nominalCount","suffix","metersPerDegree","count","width","decimalCount","html","floor","decimal","pow","round","isNaN","createScaleBar","toFixed","scale","scaleBarText","mapScale","getScaleForResolution","toLocaleString","scaleSteps","stepWidth","backgroundColor","createMarker","createStepText","container","join","position","top","isLast","lengthString","margin","mpu","getMetersPerUnit","inchesPerMeter","parseFloat","binarySearch","haystack","needle","opt_comparator","mid","cmp","comparator","numberSafeCompareFunction","low","high","found","includes","arr","obj","linearFindNearest","direction","reverseSubArray","begin","end","tmp","extend","data","extension","find","func","value","equals","arr1","arr2","len1","findIndex","index","every","idx","isSorted","opt_func","opt_strict","compare","currentVal","res","coordinate","closestOnCircle","circle","getRadius","getCenter","x0","y0","x1","y1","dx","dy","sqrt","closestOnSegment","segment","start","x2","y2","along","coordinate1","coordinate2","angle","cosAngle","cos","sinAngle","sin","squaredDistance","coord1","coord2","distance","squaredDistanceToSegment","wrapX","canWrapX","worldWidth","getExtent","worldsAway","getWorldsAway","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","events","FullScreenEventType","ENTERFULLSCREEN","LEAVEFULLSCREEN","FullScreen","cssClassName_","activeClassName_","activeClassName","inactiveClassName_","inactiveClassName","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","isFullScreen","isFullScreenSupported","keys_","keys","source_","handleFullScreen_","exitFullScreen","getTargetElement","requestFullScreenWithKeys","requestFullScreen","handleFullScreenChange_","dispatchEvent","updateSize","fullscreen","_a","_b","_c","nextClassName","apply","requestFullscreen","fullscreenEnabled","fullscreenElement","exitFullscreen","asColorLike"],"mappings":"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","file":"js/chunk-7b577692.4628ad2a.js","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { equals } from '../array.js';\nimport { inView } from '../layer/Layer.js';\nimport { removeChildren, replaceNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options} [opt_options] Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ =\n            options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.userCollapsed_ = _this.collapsed_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ =\n            options.collapsible !== undefined ? options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var expandClassName = options.expandClassName !== undefined\n            ? options.expandClassName\n            : className + '-expand';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        var collapseClassName = options.collapseClassName !== undefined\n            ? options.collapseClassName\n            : className + '-collpase';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n            _this.collapseLabel_.className = collapseClassName;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n            _this.label_.className = expandClassName;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = _this.collapsible_ && !_this.collapsed_ ? _this.collapseLabel_ : _this.label_;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.toggleButton_ = document.createElement('button');\n        _this.toggleButton_.setAttribute('type', 'button');\n        _this.toggleButton_.setAttribute('aria-expanded', String(!_this.collapsed_));\n        _this.toggleButton_.title = tipLabel;\n        _this.toggleButton_.appendChild(activeLabel);\n        _this.toggleButton_.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className +\n            ' ' +\n            CLASS_UNSELECTABLE +\n            ' ' +\n            CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.toggleButton_);\n        element.appendChild(_this.ulElement_);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var collapsible = true;\n        var layerStatesArray = frameState.layerStatesArray;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!inView(layerState, frameState.viewState)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            collapsible =\n                collapsible && source.getAttributionsCollapsible() !== false;\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        if (!this.overrideCollapsible_) {\n            this.setCollapsible(collapsible);\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n        this.userCollapsed_ = this.collapsed_;\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n        this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (this.userCollapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        this.userCollapsed_ = collapsed;\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    /**\n     * Update the attribution element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Attribution.prototype.render = function (mapEvent) {\n        this.updateElement_(mapEvent.frameState);\n    };\n    return Attribution;\n}(Control));\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options} [opt_options] Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        var compassClassName = options.compassClassName !== undefined\n            ? options.compassClassName\n            : 'ol-compass';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = compassClassName;\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add(compassClassName);\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var rotation = view.getRotation();\n        if (rotation !== undefined) {\n            if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    /**\n     * Update the rotate control element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Rotate.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            return;\n        }\n        var rotation = frameState.viewState.rotation;\n        if (rotation != this.rotation_) {\n            var transform = 'rotate(' + rotation + 'rad)';\n            if (this.autoHide_) {\n                var contains = this.element.classList.contains(CLASS_HIDDEN);\n                if (!contains && rotation === 0) {\n                    this.element.classList.add(CLASS_HIDDEN);\n                }\n                else if (contains && rotation !== 0) {\n                    this.element.classList.remove(CLASS_HIDDEN);\n                }\n            }\n            this.label_.style.transform = transform;\n        }\n        this.rotation_ = rotation;\n    };\n    return Rotate;\n}(Control));\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options} [opt_options] Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInClassName = options.zoomInClassName !== undefined\n            ? options.zoomInClassName\n            : className + '-in';\n        var zoomOutClassName = options.zoomOutClassName !== undefined\n            ? options.zoomOutClassName\n            : className + '-out';\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined\n            ? options.zoomOutTipLabel\n            : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = zoomInClassName;\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string'\n            ? document.createTextNode(zoomInLabel)\n            : zoomInLabel);\n        inElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, delta), false);\n        var outElement = document.createElement('button');\n        outElement.className = zoomOutClassName;\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string'\n            ? document.createTextNode(zoomOutLabel)\n            : zoomOutLabel);\n        outElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, -delta), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\nexport { default as Attribution } from './control/Attribution.js';\nexport { default as Control } from './control/Control.js';\nexport { default as FullScreen } from './control/FullScreen.js';\nexport { default as MousePosition } from './control/MousePosition.js';\nexport { default as OverviewMap } from './control/OverviewMap.js';\nexport { default as Rotate } from './control/Rotate.js';\nexport { default as ScaleLine } from './control/ScaleLine.js';\nexport { default as Zoom } from './control/Zoom.js';\nexport { default as ZoomSlider } from './control/ZoomSlider.js';\nexport { default as ZoomToExtent } from './control/ZoomToExtent.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ? options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=control.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport { VOID } from '../functions.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { removeNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        var element = options.element;\n        if (element && !options.target && !element.style.pointerEvents) {\n            element.style.pointerEvents = 'auto';\n        }\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = element ? element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_\n                ? this.target_\n                : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * Renders the control.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @api\n     */\n    Control.prototype.render = function (mapEvent) { };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ =\n            typeof target === 'string' ? document.getElementById(target) : target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) {\n        // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) {\n        // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) {\n        // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n    if (NAMED_COLOR_RE_.test(s)) {\n        s = fromNamed(s);\n    }\n    return (HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0);\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n            var shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n            var minX = extent[0] + viewWidth / 2 + shiftX;\n            var maxX = extent[2] - viewWidth / 2 + shiftX;\n            var minY = extent[1] + viewHeight / 2 + shiftY;\n            var maxY = extent[3] - viewHeight / 2 + shiftY;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = (maxX + minX) / 2;\n                maxX = minX;\n            }\n            if (minY > maxY) {\n                minY = (maxY + minY) / 2;\n                maxY = minY;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x +=\n                    -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y +=\n                    -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport ProjUnits from '../proj/Units.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { METERS_PER_UNIT, getPointResolution } from '../proj.js';\nimport { assert } from '../asserts.js';\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n    DEGREES: 'degrees',\n    IMPERIAL: 'imperial',\n    NAUTICAL: 'nautical',\n    METRIC: 'metric',\n    US: 'us',\n};\n/**\n * @const\n * @type {Array<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n/**\n * @const\n * @type {number}\n */\nvar DEFAULT_DPI = 25.4 / 0.28;\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {import(\"./ScaleLine.js\").Units|string} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nvar ScaleLine = /** @class */ (function (_super) {\n    __extends(ScaleLine, _super);\n    /**\n     * @param {Options} [opt_options] Scale line options.\n     */\n    function ScaleLine(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var className = options.className !== undefined\n            ? options.className\n            : options.bar\n                ? 'ol-scale-bar'\n                : 'ol-scale-line';\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        /***\n         * @type {ScaleLineOnSignature<import(\"../Observable.js\").OnReturn>}\n         */\n        _this.on;\n        /***\n         * @type {ScaleLineOnSignature<import(\"../Observable.js\").OnReturn>}\n         */\n        _this.once;\n        /***\n         * @type {ScaleLineOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.innerElement_ = document.createElement('div');\n        _this.innerElement_.className = className + '-inner';\n        _this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n        _this.element.appendChild(_this.innerElement_);\n        /**\n         * @private\n         * @type {?import(\"../View.js\").State}\n         */\n        _this.viewState_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = false;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.renderedWidth_ = undefined;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.renderedHTML_ = '';\n        _this.addChangeListener(UNITS_PROP, _this.handleUnitsChanged_);\n        _this.setUnits(options.units || Units.METRIC);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.scaleBar_ = options.bar || false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.scaleBarSteps_ = options.steps || 4;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.scaleBarText_ = options.text || false;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.dpi_ = options.dpi || undefined;\n        return _this;\n    }\n    /**\n     * Return the units to use in the scale line.\n     * @return {import(\"./ScaleLine.js\").Units} The units\n     * to use in the scale line.\n     * @observable\n     * @api\n     */\n    ScaleLine.prototype.getUnits = function () {\n        return this.get(UNITS_PROP);\n    };\n    /**\n     * @private\n     */\n    ScaleLine.prototype.handleUnitsChanged_ = function () {\n        this.updateElement_();\n    };\n    /**\n     * Set the units to use in the scale line.\n     * @param {import(\"./ScaleLine.js\").Units} units The units to use in the scale line.\n     * @observable\n     * @api\n     */\n    ScaleLine.prototype.setUnits = function (units) {\n        this.set(UNITS_PROP, units);\n    };\n    /**\n     * Specify the dpi of output device such as printer.\n     * @param {number|undefined} dpi The dpi of output device.\n     * @api\n     */\n    ScaleLine.prototype.setDpi = function (dpi) {\n        this.dpi_ = dpi;\n    };\n    /**\n     * @private\n     */\n    ScaleLine.prototype.updateElement_ = function () {\n        var viewState = this.viewState_;\n        if (!viewState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var center = viewState.center;\n        var projection = viewState.projection;\n        var units = this.getUnits();\n        var pointResolutionUnits = units == Units.DEGREES ? ProjUnits.DEGREES : ProjUnits.METERS;\n        var pointResolution = getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n        var minWidth = (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n        var nominalCount = minWidth * pointResolution;\n        var suffix = '';\n        if (units == Units.DEGREES) {\n            var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n            nominalCount *= metersPerDegree;\n            if (nominalCount < metersPerDegree / 60) {\n                suffix = '\\u2033'; // seconds\n                pointResolution *= 3600;\n            }\n            else if (nominalCount < metersPerDegree) {\n                suffix = '\\u2032'; // minutes\n                pointResolution *= 60;\n            }\n            else {\n                suffix = '\\u00b0'; // degrees\n            }\n        }\n        else if (units == Units.IMPERIAL) {\n            if (nominalCount < 0.9144) {\n                suffix = 'in';\n                pointResolution /= 0.0254;\n            }\n            else if (nominalCount < 1609.344) {\n                suffix = 'ft';\n                pointResolution /= 0.3048;\n            }\n            else {\n                suffix = 'mi';\n                pointResolution /= 1609.344;\n            }\n        }\n        else if (units == Units.NAUTICAL) {\n            pointResolution /= 1852;\n            suffix = 'nm';\n        }\n        else if (units == Units.METRIC) {\n            if (nominalCount < 0.001) {\n                suffix = 'μm';\n                pointResolution *= 1000000;\n            }\n            else if (nominalCount < 1) {\n                suffix = 'mm';\n                pointResolution *= 1000;\n            }\n            else if (nominalCount < 1000) {\n                suffix = 'm';\n            }\n            else {\n                suffix = 'km';\n                pointResolution /= 1000;\n            }\n        }\n        else if (units == Units.US) {\n            if (nominalCount < 0.9144) {\n                suffix = 'in';\n                pointResolution *= 39.37;\n            }\n            else if (nominalCount < 1609.344) {\n                suffix = 'ft';\n                pointResolution /= 0.30480061;\n            }\n            else {\n                suffix = 'mi';\n                pointResolution /= 1609.3472;\n            }\n        }\n        else {\n            assert(false, 33); // Invalid units\n        }\n        var i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n        var count, width, decimalCount;\n        while (true) {\n            decimalCount = Math.floor(i / 3);\n            var decimal = Math.pow(10, decimalCount);\n            count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n            width = Math.round(count / pointResolution);\n            if (isNaN(width)) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n                return;\n            }\n            else if (width >= minWidth) {\n                break;\n            }\n            ++i;\n        }\n        var html;\n        if (this.scaleBar_) {\n            html = this.createScaleBar(width, count, suffix);\n        }\n        else {\n            html = count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n        }\n        if (this.renderedHTML_ != html) {\n            this.innerElement_.innerHTML = html;\n            this.renderedHTML_ = html;\n        }\n        if (this.renderedWidth_ != width) {\n            this.innerElement_.style.width = width + 'px';\n            this.renderedWidth_ = width;\n        }\n        if (!this.renderedVisible_) {\n            this.element.style.display = '';\n            this.renderedVisible_ = true;\n        }\n    };\n    /**\n     * @private\n     * @param {number} width The current width of the scalebar.\n     * @param {number} scale The current scale.\n     * @param {string} suffix The suffix to append to the scale text.\n     * @return {string} The stringified HTML of the scalebar.\n     */\n    ScaleLine.prototype.createScaleBar = function (width, scale, suffix) {\n        var mapScale = '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();\n        var scaleSteps = [];\n        var stepWidth = width / this.scaleBarSteps_;\n        var backgroundColor = '#ffffff';\n        for (var i = 0; i < this.scaleBarSteps_; i++) {\n            if (i === 0) {\n                // create the first marker at position 0\n                scaleSteps.push(this.createMarker('absolute', i));\n            }\n            scaleSteps.push('<div>' +\n                '<div ' +\n                'class=\"ol-scale-singlebar\" ' +\n                'style=' +\n                '\"width: ' +\n                stepWidth +\n                'px;' +\n                'background-color: ' +\n                backgroundColor +\n                ';\"' +\n                '>' +\n                '</div>' +\n                this.createMarker('relative', i) +\n                /*render text every second step, except when only 2 steps */\n                (i % 2 === 0 || this.scaleBarSteps_ === 2\n                    ? this.createStepText(i, width, false, scale, suffix)\n                    : '') +\n                '</div>');\n            if (i === this.scaleBarSteps_ - 1) {\n                {\n                    /*render text at the end */\n                }\n                scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));\n            }\n            // switch colors of steps between black and white\n            if (backgroundColor === '#ffffff') {\n                backgroundColor = '#000000';\n            }\n            else {\n                backgroundColor = '#ffffff';\n            }\n        }\n        var scaleBarText;\n        if (this.scaleBarText_) {\n            scaleBarText =\n                '<div ' +\n                    'class=\"ol-scale-text\" ' +\n                    'style=\"width: ' +\n                    width +\n                    'px;\">' +\n                    mapScale +\n                    '</div>';\n        }\n        else {\n            scaleBarText = '';\n        }\n        var container = '<div ' +\n            'style=\"display: flex;\">' +\n            scaleBarText +\n            scaleSteps.join('') +\n            '</div>';\n        return container;\n    };\n    /**\n     * Creates a marker at given position\n     * @param {string} position The position, absolute or relative\n     * @param {number} i The iterator\n     * @return {string} The stringified div containing the marker\n     */\n    ScaleLine.prototype.createMarker = function (position, i) {\n        var top = position === 'absolute' ? 3 : -10;\n        return ('<div ' +\n            'class=\"ol-scale-step-marker\" ' +\n            'style=\"position: ' +\n            position +\n            ';' +\n            'top: ' +\n            top +\n            'px;\"' +\n            '></div>');\n    };\n    /**\n     * Creates the label for a marker marker at given position\n     * @param {number} i The iterator\n     * @param {number} width The width the scalebar will currently use\n     * @param {boolean} isLast Flag indicating if we add the last step text\n     * @param {number} scale The current scale for the whole scalebar\n     * @param {string} suffix The suffix for the scale\n     * @return {string} The stringified div containing the step text\n     */\n    ScaleLine.prototype.createStepText = function (i, width, isLast, scale, suffix) {\n        var length = i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n        var lengthString = length + (i === 0 ? '' : ' ' + suffix);\n        var margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n        var minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n        return ('<div ' +\n            'class=\"ol-scale-step-text\" ' +\n            'style=\"' +\n            'margin-left: ' +\n            margin +\n            'px;' +\n            'text-align: ' +\n            (i === 0 ? 'left' : 'center') +\n            '; ' +\n            'min-width: ' +\n            minWidth +\n            'px;' +\n            'left: ' +\n            (isLast ? width + 'px' : 'unset') +\n            ';\"' +\n            '>' +\n            lengthString +\n            '</div>');\n    };\n    /**\n     * Returns the appropriate scale for the given resolution and units.\n     * @return {number} The appropriate scale.\n     */\n    ScaleLine.prototype.getScaleForResolution = function () {\n        var resolution = getPointResolution(this.viewState_.projection, this.viewState_.resolution, this.viewState_.center);\n        var dpi = this.dpi_ || DEFAULT_DPI;\n        var mpu = this.viewState_.projection.getMetersPerUnit();\n        var inchesPerMeter = 1000 / 25.4;\n        return parseFloat(resolution.toString()) * mpu * inchesPerMeter * dpi;\n    };\n    /**\n     * Update the scale line element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    ScaleLine.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            this.viewState_ = null;\n        }\n        else {\n            this.viewState_ = frameState.viewState;\n        }\n        this.updateElement_();\n    };\n    return ScaleLine;\n}(Control));\nexport default ScaleLine;\n//# sourceMappingURL=ScaleLine.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + ((high - low) >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) {\n            /* Too low. */\n            low = mid + 1;\n        }\n        else {\n            /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n/**\n * @param {Array<number>} arr Array in desccending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (typeof direction === 'function') {\n                        if (direction(target, arr[i - 1], arr[i]) > 0) {\n                            return i - 1;\n                        }\n                        else {\n                            return i;\n                        }\n                    }\n                    else if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || (opt_strict && res === 0));\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/coordinate\n */\nimport { getWidth } from './extent.js';\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + (r * dx) / d;\n    var y = y0 + (r * dy) / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = dx === 0 && dy === 0\n        ? 0\n        : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - deg * 3600 - min * 60;\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return (deg +\n        '\\u00b0 ' +\n        padNumber(min, 2) +\n        '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) +\n        '\\u2033' +\n        (normalizedDegrees == 0\n            ? ''\n            : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return (degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n            ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n    if (projection.canWrapX()) {\n        var worldWidth = getWidth(projection.getExtent());\n        var worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n        if (worldsAway) {\n            coordinate[0] -= worldsAway * worldWidth;\n        }\n    }\n    return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n    var projectionExtent = projection.getExtent();\n    var worldsAway = 0;\n    if (projection.canWrapX() &&\n        (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])) {\n        var sourceExtentWidth = opt_sourceExtentWidth || getWidth(projectionExtent);\n        worldsAway = Math.floor((coordinate[0] - projectionExtent[0]) / sourceExtentWidth);\n    }\n    return worldsAway;\n}\n//# sourceMappingURL=coordinate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED } from '../css.js';\nimport { listen } from '../events.js';\nimport { replaceNode } from '../dom.js';\nvar events = [\n    'fullscreenchange',\n    'webkitfullscreenchange',\n    'MSFullscreenChange',\n];\n/**\n * @enum {string}\n */\nvar FullScreenEventType = {\n    /**\n     * Triggered after the map entered fullscreen.\n     * @event FullScreenEventType#enterfullscreen\n     * @api\n     */\n    ENTERFULLSCREEN: 'enterfullscreen',\n    /**\n     * Triggered after the map leave fullscreen.\n     * @event FullScreenEventType#leavefullscreen\n     * @api\n     */\n    LEAVEFULLSCREEN: 'leavefullscreen',\n};\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nvar FullScreen = /** @class */ (function (_super) {\n    __extends(FullScreen, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function FullScreen(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        /***\n         * @type {FullScreenOnSignature<import(\"../Observable.js\").OnReturn>}\n         */\n        _this.on;\n        /***\n         * @type {FullScreenOnSignature<import(\"../Observable.js\").OnReturn>}\n         */\n        _this.once;\n        /***\n         * @type {FullScreenOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.cssClassName_ =\n            options.className !== undefined ? options.className : 'ol-full-screen';\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.activeClassName_ =\n            options.activeClassName !== undefined\n                ? options.activeClassName.split(' ')\n                : [_this.cssClassName_ + '-true'];\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.inactiveClassName_ =\n            options.inactiveClassName !== undefined\n                ? options.inactiveClassName.split(' ')\n                : [_this.cssClassName_ + '-false'];\n        var label = options.label !== undefined ? options.label : '\\u2922';\n        /**\n         * @private\n         * @type {Text}\n         */\n        _this.labelNode_ =\n            typeof label === 'string' ? document.createTextNode(label) : label;\n        var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n        /**\n         * @private\n         * @type {Text}\n         */\n        _this.labelActiveNode_ =\n            typeof labelActive === 'string'\n                ? document.createTextNode(labelActive)\n                : labelActive;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.button_ = document.createElement('button');\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n        _this.setClassName_(_this.button_, isFullScreen());\n        _this.button_.setAttribute('type', 'button');\n        _this.button_.title = tipLabel;\n        _this.button_.appendChild(_this.labelNode_);\n        _this.button_.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = _this.cssClassName_ +\n            ' ' +\n            CLASS_UNSELECTABLE +\n            ' ' +\n            CLASS_CONTROL +\n            ' ' +\n            (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.button_);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.keys_ = options.keys !== undefined ? options.keys : false;\n        /**\n         * @private\n         * @type {HTMLElement|string|undefined}\n         */\n        _this.source_ = options.source;\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    FullScreen.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleFullScreen_();\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreen_ = function () {\n        if (!isFullScreenSupported()) {\n            return;\n        }\n        var map = this.getMap();\n        if (!map) {\n            return;\n        }\n        if (isFullScreen()) {\n            exitFullScreen();\n        }\n        else {\n            var element = void 0;\n            if (this.source_) {\n                element =\n                    typeof this.source_ === 'string'\n                        ? document.getElementById(this.source_)\n                        : this.source_;\n            }\n            else {\n                element = map.getTargetElement();\n            }\n            if (this.keys_) {\n                requestFullScreenWithKeys(element);\n            }\n            else {\n                requestFullScreen(element);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreenChange_ = function () {\n        var map = this.getMap();\n        if (isFullScreen()) {\n            this.setClassName_(this.button_, true);\n            replaceNode(this.labelActiveNode_, this.labelNode_);\n            this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n        }\n        else {\n            this.setClassName_(this.button_, false);\n            replaceNode(this.labelNode_, this.labelActiveNode_);\n            this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n        }\n        if (map) {\n            map.updateSize();\n        }\n    };\n    /**\n     * @param {HTMLElement} element Target element\n     * @param {boolean} fullscreen True if fullscreen class name should be active\n     * @private\n     */\n    FullScreen.prototype.setClassName_ = function (element, fullscreen) {\n        var _a, _b, _c;\n        var activeClassName = this.activeClassName_;\n        var inactiveClassName = this.inactiveClassName_;\n        var nextClassName = fullscreen ? activeClassName : inactiveClassName;\n        (_a = element.classList).remove.apply(_a, activeClassName);\n        (_b = element.classList).remove.apply(_b, inactiveClassName);\n        (_c = element.classList).add.apply(_c, nextClassName);\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    FullScreen.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            for (var i = 0, ii = events.length; i < ii; ++i) {\n                this.listenerKeys.push(listen(document, events[i], this.handleFullScreenChange_, this));\n            }\n        }\n    };\n    return FullScreen;\n}(Control));\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n    var body = document.body;\n    return !!(body['webkitRequestFullscreen'] ||\n        (body['msRequestFullscreen'] && document['msFullscreenEnabled']) ||\n        (body.requestFullscreen && document.fullscreenEnabled));\n}\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n    return !!(document['webkitIsFullScreen'] ||\n        document['msFullscreenElement'] ||\n        document.fullscreenElement);\n}\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n    if (element.requestFullscreen) {\n        element.requestFullscreen();\n    }\n    else if (element['msRequestFullscreen']) {\n        element['msRequestFullscreen']();\n    }\n    else if (element['webkitRequestFullscreen']) {\n        element['webkitRequestFullscreen']();\n    }\n}\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n    if (element['webkitRequestFullscreen']) {\n        element['webkitRequestFullscreen']();\n    }\n    else {\n        requestFullScreen(element);\n    }\n}\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n    if (document.exitFullscreen) {\n        document.exitFullscreen();\n    }\n    else if (document['msExitFullscreen']) {\n        document['msExitFullscreen']();\n    }\n    else if (document['webkitExitFullscreen']) {\n        document['webkitExitFullscreen']();\n    }\n}\nexport default FullScreen;\n//# sourceMappingURL=FullScreen.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map"],"sourceRoot":""}