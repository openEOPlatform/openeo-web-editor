{"version":3,"sources":["webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/control.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/Feature.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/Image.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/control/ScaleLine.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/control/FullScreen.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/colorlike.js"],"names":["createCanvasContext2D","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","length","shift","OffscreenCanvas","document","createElement","width","height","getContext","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","i","oldChild","newChild","insertBefore","appendChild","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","ADD","REMOVE","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","_super","Attribution","opt_options","_this","options","element","render","target","ulElement_","collapsed_","undefined","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","className","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","addEventListener","EventType","handleClick_","bind","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","frameState","lookup","visibleAttributions","layerStatesArray","ii","layerState","viewState","source","getSource","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","isArray","j","jj","push","setCollapsible","updateElement_","visible","style","display","innerHTML","event","preventDefault","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","mapEvent","Control","Rotate","compassClassName","add","button","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","resetNorth_","map","getMap","view","getView","rotation","getRotation","Math","PI","animate","easing","setRotation","transform","contains","remove","Zoom","delta","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","zoom","setZoom","defaults","controls","Collection","zoomControl","zoomOptions","rotateControl","rotate","rotateOptions","attributionControl","attribution","attributionOptions","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","begin","update","x","y","Date","now","end","lastIndex","firstIndex","dx","dy","atan2","sqrt","getDistance","getAngle","pointerEvents","target_","map_","listenerKeys","setTarget","disposeInternal","setMap","getOverlayContainerStopEvent","POSTRENDER","getElementById","ANIMATING","INTERACTING","Feature","opt_geometryOrProperties","on","once","un","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","addChangeListener","handleGeometryChanged_","geometry","setGeometry","properties","setProperties","clone","hasProperties","getProperties","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","get","getId","getStyleFunction","handleGeometryChange_","changed","CHANGE","set","opt_style","createStyleFunction","setId","id","name","removeChangeListener","obj","styles_1","MapBrowserEvent","type","originalEvent","opt_dragging","opt_frameState","pixel_","coordinate_","dragging","defineProperty","getEventPixel","pixel","enumerable","configurable","getCoordinateFromPixel","coordinate","stopPropagation","TileQueue","tilePriorityFunction","tileChangeCallback","apply","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","enqueue","added","tile","getTilesLoading","state","getState","LOADED","ERROR","EMPTY","removeEventListener","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getCount","dequeue","IDLE","load","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","center","deltaX","deltaY","log","MOVESTART","MOVEEND","LOADSTART","LOADEND","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","toString","fromNamed","el","body","rgb","getComputedStyle","fromString","MAX_CACHE_SIZE","cache","cacheSize","s","key","fromStringInternal_","asArray","r","g","a","exec","n","hasAlpha","parseInt","substr","indexOf","slice","split","Number","normalize","round","isStringColor","test","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","element_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","TOUCHMOVE","passive","emulateClick_","pointerEvent","newEvent","MapBrowserEventType","dispatchEvent","clearTimeout","setTimeout","updateActivePointers_","pointerId","keys","handlePointerUp_","defaultPrevented","isMouseActionButton_","forEach","property","value","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","Target","removeLayerMapProperty","layer","Layer","setMapInternal","getLayers","setLayerMapProperty","layers","getArray","PluggableMap","optionsInternal","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","position","overflow","overlayContainer_","zIndex","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","targetChangeHandlerKeys_","interactions","overlays_","overlays","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","LAYERGROUP","handleLayerGroupChanged_","VIEW","handleViewChanged_","SIZE","handleSizeChanged_","TARGET","handleTargetChanged_","values","View","then","viewOptions","setView","CollectionEventType","addOverlayInternal_","overlay","control","interaction","createRenderer","Error","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","getOverlays","forEachFeatureAtPixel","callback","getCoordinateFromPixelInternal","hitTolerance","layerFilter","checkWrapped","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","getAllLayers","addLayersFrom","layerGroup","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","left","top","getTarget","getTargetElement","getProjection","pixelToCoordinateTransform","getOverlayById","setLayers","group","collection","clear","extend","getLoadingOrNotReady","getLayerStatesArray","renderer","getRenderer","ready","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","coordinateToPixelTransform","getSize","getOverlayContainer","targetElement","ownerDocument","browserEvent","opt_type","mapBrowserEvent","handleMapBrowserEvent","eventType","WHEEL","KEYDOWN","rootNode","documentElement","interactionsArray","getActive","cont","handleEvent","propagationStopped","handlePostRender","tileQueue","isEmpty","hints","viewHints","ViewHint","lowOnFrameBudget","time","reprioritize","hasListener","RENDERCOMPLETE","dispatchRenderEvent","MapEvent","MapEventType","postRenderFunctions","resolveConstraints","CONTEXTMENU","dispose","defaultView","KEYPRESS","RESIZE","updateSize","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","ObjectEventType","PROPERTYCHANGE","Group","handleLayerRemove_","isRendered","renderSync","redrawText","layerStates","hasRenderer","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","size","previousFrameState","isDef","getHints","declutterTree","extent","resolution","index","layerIndex","usedTiles","mapId","renderTargets","nextCenter","nextResolution","isNaN","nextRotation","nextExtent","renderFrame","moveStart","idle","setLayerGroup","oldLayerGroup","setSize","computedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","console","warn","setViewportSize","Map","onFocusOnly","Composite","ImageBase","getExtent","getImage","getPixelRatio","getResolution","ImageWrapper","src","crossOrigin","imageLoadFunction","ImageState","src_","image_","Image","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","LOADING","listenImage","setImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","LOAD","decode","catch","error","createExtent","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","minX","maxX","minY","maxY","ratio","max","none","ImageTile","tileCoord","tileLoadFunction","crossOrigin_","tileLoadFunction_","getBlankImage","naturalWidth","naturalHeight","ctx","fillStyle","fillRect","UNITS_PROP","Units","DEGREES","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","DEFAULT_DPI","ScaleLine","bar","innerElement_","viewState_","minWidth_","minWidth","renderedWidth_","renderedHTML_","handleUnitsChanged_","setUnits","units","scaleBar_","scaleBarSteps_","steps","scaleBarText_","text","dpi_","dpi","getUnits","setDpi","projection","pointResolutionUnits","METERS","pointResolution","nominalCount","suffix","metersPerDegree","count","decimalCount","html","floor","decimal","pow","createScaleBar","toFixed","scale","scaleBarText","mapScale","getScaleForResolution","toLocaleString","scaleSteps","stepWidth","backgroundColor","createMarker","createStepText","container","join","isLast","lengthString","margin","inchesPerMeter","CENTER","RESOLUTION","ROTATION","DEFAULT_MIN_ZOOM","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","maxResolution","minResolution_","minResolution","zoomFactor_","zoomFactor","resolutions_","resolutions","padding_","padding","minZoom_","minZoom","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setCenterInternal","setResolution","oldPadding","getCenter","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","getCenterInternal","var_args","args","arguments","anchor","animateInternal","animationCount","start","series","animation","complete","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","updateAnimations_","animationCallback","getInteracting","NaN","more","seriesComplete","elapsed","fraction","progress","x0","y0","x1","y1","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","currentCenter","currentResolution","opt_rotation","w","h","cos","sin","opt_size","getConstraints","getConstrainResolution","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","maxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","constrainResolution","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","xResolution","yResolution","getResolutionForValueFunction","opt_power","power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","offset","nearest","baseLevel","fit","geometryOrExtent","getType","GeometryType","CIRCLE","userProjection","fitInternal","rotatedExtentForGeometry","cosAngle","sinAngle","coords","getFlatCoordinates","stride","getStride","minRotX","Infinity","minRotY","maxRotX","maxRotY","rotX","rotY","min","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","opt_anchor","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","direction","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","targetZoom","opt_direction","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","isGlobal","defaultMaxZoom","defaultZoomFactor","smoothResolutionConstraint","showFullExtent","projExtent","getMetersPerUnit","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","events","FullScreenEventType","ENTERFULLSCREEN","LEAVEFULLSCREEN","FullScreen","keys_","source_","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","cssClassName_","documentListeners_","activeClassName_","activeClassName","inactiveClassName_","inactiveClassName","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","concat","handleFullScreen_","isFullScreenSupported","isFullScreen","exitFullScreen","requestFullScreenWithKeys","requestFullScreen","handleFullScreenChange_","wasInFullscreen","fullscreen","_a","_b","_c","_d","oldMap","listeners","requestFullscreen","fullscreenEnabled","fullscreenElement","exitFullscreen","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","cssOpacity","opacity","Property","LENGTH","CollectionEvent","opt_element","opt_index","opt_array","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","arr","f","array","item","insertAt","elem","splice","removeAt","prev","setAt","opt_except","asColorLike"],"mappings":"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","file":"js/chunk-a7a6feee.2411d33d.js","sourcesContent":["import { WORKER_OFFSCREEN_CANVAS } from './has.js';\n/**\n * @module ol/dom\n */\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool, opt_Context2DSettings) {\n    /** @type {HTMLCanvasElement|OffscreenCanvas} */\n    var canvas;\n    if (opt_canvasPool && opt_canvasPool.length) {\n        canvas = opt_canvasPool.shift();\n    }\n    else if (WORKER_OFFSCREEN_CANVAS) {\n        canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n    }\n    else {\n        canvas = document.createElement('canvas');\n    }\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n    return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d', opt_Context2DSettings));\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove',\n};\n//# sourceMappingURL=CollectionEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { equals } from '../array.js';\nimport { inView } from '../layer/Layer.js';\nimport { removeChildren, replaceNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options} [opt_options] Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ =\n            options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.userCollapsed_ = _this.collapsed_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ =\n            options.collapsible !== undefined ? options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var expandClassName = options.expandClassName !== undefined\n            ? options.expandClassName\n            : className + '-expand';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n        var collapseClassName = options.collapseClassName !== undefined\n            ? options.collapseClassName\n            : className + '-collapse';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n            _this.collapseLabel_.className = collapseClassName;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n            _this.label_.className = expandClassName;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = _this.collapsible_ && !_this.collapsed_ ? _this.collapseLabel_ : _this.label_;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.toggleButton_ = document.createElement('button');\n        _this.toggleButton_.setAttribute('type', 'button');\n        _this.toggleButton_.setAttribute('aria-expanded', String(!_this.collapsed_));\n        _this.toggleButton_.title = tipLabel;\n        _this.toggleButton_.appendChild(activeLabel);\n        _this.toggleButton_.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className +\n            ' ' +\n            CLASS_UNSELECTABLE +\n            ' ' +\n            CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.toggleButton_);\n        element.appendChild(_this.ulElement_);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var collapsible = true;\n        var layerStatesArray = frameState.layerStatesArray;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!inView(layerState, frameState.viewState)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            collapsible =\n                collapsible && source.getAttributionsCollapsible() !== false;\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        if (!this.overrideCollapsible_) {\n            this.setCollapsible(collapsible);\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n        this.userCollapsed_ = this.collapsed_;\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n        this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (this.userCollapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        this.userCollapsed_ = collapsed;\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    /**\n     * Update the attribution element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Attribution.prototype.render = function (mapEvent) {\n        this.updateElement_(mapEvent.frameState);\n    };\n    return Attribution;\n}(Control));\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options} [opt_options] Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        var compassClassName = options.compassClassName !== undefined\n            ? options.compassClassName\n            : 'ol-compass';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = compassClassName;\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add(compassClassName);\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var rotation = view.getRotation();\n        if (rotation !== undefined) {\n            if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    /**\n     * Update the rotate control element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Rotate.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            return;\n        }\n        var rotation = frameState.viewState.rotation;\n        if (rotation != this.rotation_) {\n            var transform = 'rotate(' + rotation + 'rad)';\n            if (this.autoHide_) {\n                var contains = this.element.classList.contains(CLASS_HIDDEN);\n                if (!contains && rotation === 0) {\n                    this.element.classList.add(CLASS_HIDDEN);\n                }\n                else if (contains && rotation !== 0) {\n                    this.element.classList.remove(CLASS_HIDDEN);\n                }\n            }\n            this.label_.style.transform = transform;\n        }\n        this.rotation_ = rotation;\n    };\n    return Rotate;\n}(Control));\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options} [opt_options] Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInClassName = options.zoomInClassName !== undefined\n            ? options.zoomInClassName\n            : className + '-in';\n        var zoomOutClassName = options.zoomOutClassName !== undefined\n            ? options.zoomOutClassName\n            : className + '-out';\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined\n            ? options.zoomOutTipLabel\n            : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = zoomInClassName;\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string'\n            ? document.createTextNode(zoomInLabel)\n            : zoomInLabel);\n        inElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, delta), false);\n        var outElement = document.createElement('button');\n        outElement.className = zoomOutClassName;\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string'\n            ? document.createTextNode(zoomOutLabel)\n            : zoomOutLabel);\n        outElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, -delta), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\nexport { default as Attribution } from './control/Attribution.js';\nexport { default as Control } from './control/Control.js';\nexport { default as FullScreen } from './control/FullScreen.js';\nexport { default as MousePosition } from './control/MousePosition.js';\nexport { default as OverviewMap } from './control/OverviewMap.js';\nexport { default as Rotate } from './control/Rotate.js';\nexport { default as ScaleLine } from './control/ScaleLine.js';\nexport { default as Zoom } from './control/Zoom.js';\nexport { default as ZoomSlider } from './control/ZoomSlider.js';\nexport { default as ZoomToExtent } from './control/ZoomToExtent.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ? options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=control.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport { VOID } from '../functions.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { removeNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        var element = options.element;\n        if (element && !options.target && !element.style.pointerEvents) {\n            element.style.pointerEvents = 'auto';\n        }\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = element ? element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default|null}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default|null} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Pass `null` to just remove the control from the current map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default|null} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (map) {\n            var target = this.target_\n                ? this.target_\n                : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * Renders the control.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @api\n     */\n    Control.prototype.render = function (mapEvent) { };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ =\n            typeof target === 'string' ? document.getElementById(target) : target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1,\n};\n//# sourceMappingURL=ViewHint.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport { assert } from './asserts.js';\nimport { listen, unlistenByKey } from './events.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {Geometry|ObjectWithGeometry<Geometry>} [opt_geometryOrProperties]\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {FeatureOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        _this.addChangeListener(_this.geometryName_, _this.handleGeometryChanged_);\n        if (opt_geometryOrProperties) {\n            if (typeof (\n            /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry) === 'function') {\n                var geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature<Geometry>} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = /** @type {Feature<Geometry>} */ (new Feature(this.hasProperties() ? this.getProperties() : null));\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {Geometry|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {Geometry|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature to override the layer style.  This can be a\n     * single style object, an array of styles, or a function that takes a\n     * resolution and returns an array of styles. To unset the feature style, call\n     * `setStyle()` without arguments or a falsey value.\n     * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setStyle = function (opt_style) {\n        this.style_ = opt_style;\n        this.styleFunction_ = !opt_style\n            ? undefined\n            : createStyleFunction(opt_style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n        this.geometryName_ = name;\n        this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {EVENT} originalEvent Original event.\n     * @param {boolean} [opt_dragging] Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n     */\n    function MapBrowserEvent(type, map, originalEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {EVENT}\n         * @api\n         */\n        _this.originalEvent = originalEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {?import(\"./pixel.js\").Pixel}\n         */\n        _this.pixel_ = null;\n        /**\n         * The coordinate in the user projection corresponding to the original browser event.\n         * @type {?import(\"./coordinate.js\").Coordinate}\n         */\n        _this.coordinate_ = null;\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n        /**\n         * The map pixel relative to the viewport corresponding to the original event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        get: function () {\n            if (!this.pixel_) {\n                this.pixel_ = this.map.getEventPixel(this.originalEvent);\n            }\n            return this.pixel_;\n        },\n        set: function (pixel) {\n            this.pixel_ = pixel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n        /**\n         * The coordinate corresponding to the original browser event.  This will be in the user\n         * projection if one is set.  Otherwise it will be in the view projection.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        get: function () {\n            if (!this.coordinate_) {\n                this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n            }\n            return this.coordinate_;\n        },\n        set: function (coordinate) {\n            this.coordinate_ = coordinate;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        if ('preventDefault' in this.originalEvent) {\n            /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n        }\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        if ('stopPropagation' in this.originalEvent) {\n            /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n        }\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, { DROP } from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n        }) || this;\n        /** @private */\n        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @param {Array} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if (state === TileState.LOADED ||\n            state === TileState.ERROR ||\n            state === TileState.EMPTY) {\n            tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading &&\n            newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n        return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n        return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels between\n    // the center of the tile and the center of the viewport.  The factor of 65536\n    // means that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var center = frameState.viewState.center;\n    var deltaX = tileCenter[0] - center[0];\n    var deltaY = tileCenter[1] - center[1];\n    return (65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution);\n}\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend',\n    /**\n     * Triggered when loading of additional map data (tiles, images, features) starts.\n     * @event module:ol/render/Event~RenderEvent#loadstart\n     * @api\n     */\n    LOADSTART: 'loadstart',\n    /**\n     * Triggered when loading of additional map data has completed.\n     * @event module:ol/render/Event~RenderEvent#loadend\n     * @api\n     */\n    LOADEND: 'loadend',\n};\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) {\n        // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) {\n        // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) {\n        // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n    if (NAMED_COLOR_RE_.test(s)) {\n        s = fromNamed(s);\n    }\n    return (HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0);\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport { PASSIVE_EVENT_LISTENERS } from './has.js';\nimport { VOID } from './functions.js';\nimport { listen, unlistenByKey } from './events.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n         * @type {boolean}\n         */\n        _this.emulateClicks_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {PointerEvent|null}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        _this.element_ = element;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(element, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.originalPointerMoveEvent_;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(element, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        /**\n         * @private\n         */\n        _this.boundHandleTouchMove_ = _this.handleTouchMove_.bind(_this);\n        _this.element_.addEventListener(EventType.TOUCHMOVE, _this.boundHandleTouchMove_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n        return _this;\n    }\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(\n            /** @this {MapBrowserEventHandler} */\n            function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.preventDefault().\n        if (this.emulateClicks_ &&\n            !newEvent.defaultPrevented &&\n            !this.dragging_ &&\n            this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.emulateClicks_ = this.activePointers_ === 0;\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // Store a copy of the down event\n        this.down_ = /** @type {PointerEvent} */ ({});\n        for (var property in pointerEvent) {\n            var value = pointerEvent[property];\n            this.down_[property] = typeof value === 'function' ? VOID : value;\n        }\n        if (this.dragListenerKeys_.length === 0) {\n            var doc = this.map_.getOwnerDocument();\n            this.dragListenerKeys_.push(listen(doc, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.element_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n            if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n                this.dragListenerKeys_.push(listen(this.element_.getRootNode(), MapBrowserEventType.POINTERUP, this.handlePointerUp_, this));\n            }\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserEvent matches the PointerEvent type.\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        this.originalPointerMoveEvent_ = pointerEvent;\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * Flexible handling of a `touch-action: none` css equivalent: because calling\n     * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n     * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n     * when an interaction (currently `DragPan` handles the event.\n     * @param {TouchEvent} event Event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handleTouchMove_ = function (event) {\n        // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n        // may not be initialized yet when we get here on a platform without native pointer events.\n        var originalEvent = this.originalPointerMoveEvent_;\n        if ((!originalEvent || originalEvent.defaultPrevented) &&\n            (typeof event.cancelable !== 'boolean' || event.cancelable === true)) {\n            event.preventDefault();\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return (this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) >\n                this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_);\n    };\n    /**\n     * Clean up.\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        this.element_.removeEventListener(EventType.TOUCHMOVE, this.boundHandleTouchMove_);\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        this.element_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(Target));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, { GroupEvent } from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, { getTilePriority } from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS } from './has.js';\nimport { TRUE } from './functions.js';\nimport { apply as applyTransform, create as createTransform, } from './transform.js';\nimport { assert } from './asserts.js';\nimport { clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty, } from './extent.js';\nimport { fromUserCoordinate, toUserCoordinate } from './proj.js';\nimport { getUid } from './util.js';\nimport { hasArea } from './size.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { removeNode } from './dom.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n    if (layer instanceof Layer) {\n        layer.setMapInternal(null);\n        return;\n    }\n    if (layer instanceof LayerGroup) {\n        layer.getLayers().forEach(removeLayerMapProperty);\n    }\n}\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {PluggableMap} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n    if (layer instanceof Layer) {\n        layer.setMapInternal(map);\n        return;\n    }\n    if (layer instanceof LayerGroup) {\n        var layers = layer.getLayers().getArray();\n        for (var i = 0, ii = layers.length; i < ii; ++i) {\n            setLayerMapProperty(layers[i], map);\n        }\n    }\n}\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {PluggableMapOnSignature<void>}\n         */\n        _this.un;\n        var optionsInternal = createOptionsInternal(options);\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.renderComplete_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.loaded_ = true;\n        /** @private */\n        _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ =\n            options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ =\n            options.pixelRatio !== undefined\n                ? options.pixelRatio\n                : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.postRenderTimeoutHandle_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = /** @this {PluggableMap} */ function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className =\n            'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.style.pointerEvents = 'none';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.moveTolerance_ = options.moveTolerance;\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.targetChangeHandlerKeys_ = null;\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default|null}\n         * @private\n         */\n        _this.renderer_ = null;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        _this.addChangeListener(MapProperty.LAYERGROUP, _this.handleLayerGroupChanged_);\n        _this.addChangeListener(MapProperty.VIEW, _this.handleViewChanged_);\n        _this.addChangeListener(MapProperty.SIZE, _this.handleSizeChanged_);\n        _this.addChangeListener(MapProperty.TARGET, _this.handleTargetChanged_);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        var map = _this;\n        if (options.view && !(options.view instanceof View)) {\n            options.view.then(function (viewOptions) {\n                map.setView(new View(viewOptions));\n            });\n        }\n        _this.controls.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(\n            /** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        function (control) {\n            control.setMap(this);\n        }.bind(_this));\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        function (interaction) {\n            interaction.setMap(this);\n        }.bind(_this));\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n     * @private\n     */\n    PluggableMap.prototype.handleLayerAdd_ = function (event) {\n        setLayerMapProperty(event.layer, this);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * Clean up.\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature~Feature feature} or\n     *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions} [opt_options] Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_ || !this.renderer_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions} [opt_options] Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * an empty array if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = [];\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Get all layers from all layer groups.\n     * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getAllLayers = function () {\n        var layers = [];\n        function addLayersFrom(layerGroup) {\n            layerGroup.forEach(function (layer) {\n                if (layer instanceof LayerGroup) {\n                    addLayersFrom(layer.getLayers());\n                }\n                else {\n                    layers.push(layer);\n                }\n            });\n        }\n        addLayersFrom(this.getLayers());\n        return layers;\n    };\n    /**\n     * Please the `layer.getData()` method for {@link module:ol/layer/Tile~TileLayer#getData tile layers} or\n     * {@link module:ol/layer/Image~ImageLayer#getData image layers} instead of using this method.\n     *\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     *\n     * Note: In maps with more than one layer, this method will typically return pixel data\n     * representing the composed image of all layers visible at the given pixel – because layers\n     * will generally share the same rendering context.  To force layers to render separately, and\n     * to get pixel data representing only one layer at a time, you can assign each layer a unique\n     * `className` in its constructor.\n     *\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer~Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions} [opt_options] Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     * @deprecated\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_ || !this.renderer_) {\n            return;\n        }\n        var options = opt_options || {};\n        var hitTolerance = options.hitTolerance !== undefined ? options.hitTolerance : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions} [opt_options] Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_ || !this.renderer_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in user projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     */\n    PluggableMap.prototype.getEventCoordinateInternal = function (event) {\n        return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {UIEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = \n        //FIXME Are we really calling this with a TouchEvent anywhere?\n        'changedTouches' in event\n            ? /** @type {TouchEvent} */ (event).changedTouches[0]\n            : /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top,\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string'\n                ? document.getElementById(target)\n                : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * user projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     */\n    PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n    };\n    /**\n     * Clear any existing layers and add layers to the map.\n     * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n     * @api\n     */\n    PluggableMap.prototype.setLayers = function (layers) {\n        var group = this.getLayerGroup();\n        if (layers instanceof Collection) {\n            group.setLayers(layers);\n            return;\n        }\n        var collection = group.getLayers();\n        collection.clear();\n        collection.extend(layers);\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * @return {boolean} Layers have sources that are still loading.\n     */\n    PluggableMap.prototype.getLoadingOrNotReady = function () {\n        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var state = layerStatesArray[i];\n            if (!state.visible) {\n                continue;\n            }\n            var renderer = state.layer.getRenderer();\n            if (renderer && !renderer.ready) {\n                return true;\n            }\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (state.layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the user\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n        return this.getPixelFromCoordinateInternal(viewCoordinate);\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     */\n    PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default|null} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return /** @type {View} */ (this.get(MapProperty.VIEW));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @return {!Document} The document where the map is displayed.\n     */\n    PluggableMap.prototype.getOwnerDocument = function () {\n        var targetElement = this.getTargetElement();\n        return targetElement ? targetElement.ownerDocument : document;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        return getTilePriority(this.frameState_, tile, tileSourceKey, tileCenter, tileResolution);\n    };\n    /**\n     * @param {UIEvent} browserEvent Browser event.\n     * @param {string} [opt_type] Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n        var eventType = originalEvent.type;\n        if (eventType === PointerEventType.POINTERDOWN ||\n            eventType === EventType.WHEEL ||\n            eventType === EventType.KEYDOWN) {\n            var doc = this.getOwnerDocument();\n            var rootNode = this.viewport_.getRootNode\n                ? this.viewport_.getRootNode()\n                : doc;\n            var target = /** @type {Node} */ (originalEvent.target);\n            if (\n            // Abort if the target is a child of the container for elements whose events are not meant\n            // to be handled by map interactions.\n            this.overlayContainerStopEvent_.contains(target) ||\n                // Abort if the event target is a child of the container that is no longer in the page.\n                // It's possible for the target to no longer be in the page if it has been removed in an\n                // event listener, this might happen in a Control that recreates it's content based on\n                // user interaction either manually or via a render in something like https://reactjs.org/\n                !(rootNode === doc ? doc.documentElement : rootNode).contains(target)) {\n                return;\n            }\n        }\n        mapBrowserEvent.frameState = this.frameState_;\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            var interactionsArray = this.getInteractions().getArray().slice();\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (interaction.getMap() !== this ||\n                    !interaction.getActive() ||\n                    !this.getTargetElement()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont || mapBrowserEvent.propagationStopped) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState && this.renderer_ && !frameState.animate) {\n            if (this.renderComplete_ === true) {\n                if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n                    this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n                }\n                if (this.loaded_ === false) {\n                    this.loaded_ = true;\n                    this.dispatchEvent(new MapEvent(MapEventType.LOADEND, this, frameState));\n                }\n            }\n            else if (this.loaded_ === true) {\n                this.loaded_ = false;\n                this.dispatchEvent(new MapEvent(MapEventType.LOADSTART, this, frameState));\n            }\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView() && !this.getView().getAnimating()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        if (this.mapBrowserEventHandler_) {\n            for (var i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.targetChangeHandlerKeys_[i]);\n            }\n            this.targetChangeHandlerKeys_ = null;\n            this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n            this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n            this.mapBrowserEventHandler_.dispose();\n            this.mapBrowserEventHandler_ = null;\n            removeNode(this.viewport_);\n        }\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            if (this.renderer_) {\n                clearTimeout(this.postRenderTimeoutHandle_);\n                this.postRenderTimeoutHandle_ = undefined;\n                this.postRenderFunctions_.length = 0;\n                this.renderer_.dispose();\n                this.renderer_ = null;\n            }\n            if (this.animationDelayKey_) {\n                cancelAnimationFrame(this.animationDelayKey_);\n                this.animationDelayKey_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            if (!this.renderer_) {\n                this.renderer_ = this.createRenderer();\n            }\n            this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, this.moveTolerance_);\n            for (var key in MapBrowserEventType) {\n                this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], this.handleMapBrowserEvent.bind(this));\n            }\n            this.viewport_.addEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_, false);\n            this.viewport_.addEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n            var defaultView = this.getOwnerDocument().defaultView;\n            var keyboardEventTarget = !this.keyboardEventTarget_\n                ? targetElement\n                : this.keyboardEventTarget_;\n            this.targetChangeHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this),\n                listen(defaultView, EventType.RESIZE, this.updateSize, this),\n            ];\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.updateViewportSize_();\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this),\n                listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n                listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Redraws all text after new fonts have loaded\n     */\n    PluggableMap.prototype.redrawText = function () {\n        var layerStates = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n            var layer = layerStates[i].layer;\n            if (layer.hasRenderer()) {\n                layer.getRenderer().handleFontsChanged();\n            }\n        }\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.renderer_ && this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n     * @private\n     */\n    PluggableMap.prototype.handleLayerRemove_ = function (event) {\n        removeLayerMapProperty(event.layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var _this = this;\n        var size = this.getSize();\n        var view = this.getView();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            var viewState = view.getState();\n            frameState = {\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterTree: null,\n                extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n                index: this.frameIndex_++,\n                layerIndex: 0,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {},\n                mapId: getUid(this),\n                renderTargets: {},\n            };\n            if (viewState.nextCenter && viewState.nextResolution) {\n                var rotation = isNaN(viewState.nextRotation)\n                    ? viewState.rotation\n                    : viewState.nextRotation;\n                frameState.nextExtent = getForViewAndSize(viewState.nextCenter, viewState.nextResolution, rotation, size);\n            }\n        }\n        this.frameState_ = frameState;\n        /** @type {import(\"./renderer/Map.js\").default} */ (this.renderer_).renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        this.renderComplete_ =\n            this.hasListener(MapEventType.LOADSTART) ||\n                this.hasListener(MapEventType.LOADEND) ||\n                this.hasListener(RenderEventType.RENDERCOMPLETE)\n                ? !this.tileQueue_.getTilesLoading() &&\n                    !this.tileQueue_.getCount() &&\n                    !this.getLoadingOrNotReady()\n                : undefined;\n        if (!this.postRenderTimeoutHandle_) {\n            this.postRenderTimeoutHandle_ = setTimeout(function () {\n                _this.postRenderTimeoutHandle_ = undefined;\n                _this.handlePostRender();\n            }, 0);\n        }\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        var oldLayerGroup = this.getLayerGroup();\n        if (oldLayerGroup) {\n            this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n        }\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string} [target] The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n     * It is also possible to pass a promise that resolves to options for constructing a view.  This\n     * alternative allows view properties to be resolved by sources or other components that load\n     * view-related metadata.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        if (!view || view instanceof View) {\n            this.set(MapProperty.VIEW, view);\n            return;\n        }\n        this.set(MapProperty.VIEW, new View());\n        var map = this;\n        view.then(function (viewOptions) {\n            map.setView(new View(viewOptions));\n        });\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        var size = undefined;\n        if (targetElement) {\n            var computedStyle = getComputedStyle(targetElement);\n            var width = targetElement.offsetWidth -\n                parseFloat(computedStyle['borderLeftWidth']) -\n                parseFloat(computedStyle['paddingLeft']) -\n                parseFloat(computedStyle['paddingRight']) -\n                parseFloat(computedStyle['borderRightWidth']);\n            var height = targetElement.offsetHeight -\n                parseFloat(computedStyle['borderTopWidth']) -\n                parseFloat(computedStyle['paddingTop']) -\n                parseFloat(computedStyle['paddingBottom']) -\n                parseFloat(computedStyle['borderBottomWidth']);\n            if (!isNaN(width) && !isNaN(height)) {\n                size = [width, height];\n                if (!hasArea(size) &&\n                    !!(targetElement.offsetWidth ||\n                        targetElement.offsetHeight ||\n                        targetElement.getClientRects().length)) {\n                    // eslint-disable-next-line\n                    console.warn(\"No map visible because the map container's width or height are 0.\");\n                }\n            }\n        }\n        this.setSize(size);\n        this.updateViewportSize_();\n    };\n    /**\n     * Recomputes the viewport size and save it on the view object (if any)\n     * @private\n     */\n    PluggableMap.prototype.updateViewportSize_ = function () {\n        var view = this.getView();\n        if (view) {\n            var size = undefined;\n            var computedStyle = getComputedStyle(this.viewport_);\n            if (computedStyle.width && computedStyle.height) {\n                size = [\n                    parseInt(computedStyle.width, 10),\n                    parseInt(computedStyle.height, 10),\n                ];\n            }\n            view.setViewportSize(size);\n        }\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget =\n            typeof options.keyboardEventTarget === 'string'\n                ? document.getElementById(options.keyboardEventTarget)\n                : options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers &&\n        typeof ( /** @type {?} */(options.layers).getLayers) === 'function'\n        ? /** @type {LayerGroup} */ (options.layers)\n        : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] =\n        options.view instanceof View ? options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.controls).getArray) === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.interactions).getArray) ===\n                'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.overlays).getArray) === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values,\n    };\n}\nexport default PluggableMap;\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport { assign } from './obj.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions({\n                onFocusOnly: true,\n            });\n        }\n        return _super.call(this, options) || this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { IMAGE_DECODE } from './has.js';\nimport { getHeight } from './extent.js';\nimport { listenOnce, unlistenByKey } from './events.js';\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n        this.resolution = getHeight(this.extent) / this.image_.height;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    var listening = true;\n    var decoding = false;\n    var loaded = false;\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, function () {\n            loaded = true;\n            if (!decoding) {\n                loadHandler();\n            }\n        }),\n    ];\n    if (img.src && IMAGE_DECODE) {\n        decoding = true;\n        img\n            .decode()\n            .then(function () {\n            if (listening) {\n                loadHandler();\n            }\n        })\n            .catch(function (error) {\n            if (listening) {\n                if (loaded) {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n    }\n    else {\n        listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n    }\n    return function unlisten() {\n        listening = false;\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n        if (!center) {\n            return undefined;\n        }\n        if (!resolution && !onlyCenter) {\n            return center;\n        }\n        var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        var shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        var shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        var minX = extent[0] + viewWidth / 2 + shiftX;\n        var maxX = extent[2] - viewWidth / 2 + shiftX;\n        var minY = extent[1] + viewHeight / 2 + shiftY;\n        var maxY = extent[3] - viewHeight / 2 + shiftY;\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n            minX = (maxX + minX) / 2;\n            maxX = minX;\n        }\n        if (minY > maxY) {\n            minY = (maxY + minY) / 2;\n            maxY = minY;\n        }\n        var x = clamp(center[0], minX, maxX);\n        var y = clamp(center[1], minY, maxY);\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth && resolution) {\n            var ratio = 30 * resolution;\n            x +=\n                -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n            y +=\n                -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n        return [x, y];\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        _this.key = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n     * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n     */\n    ImageTile.prototype.setImage = function (element) {\n        this.image_ = element;\n        this.state = TileState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.tileLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=ImageState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport ProjUnits from '../proj/Units.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { METERS_PER_UNIT, getPointResolution } from '../proj.js';\nimport { assert } from '../asserts.js';\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n    DEGREES: 'degrees',\n    IMPERIAL: 'imperial',\n    NAUTICAL: 'nautical',\n    METRIC: 'metric',\n    US: 'us',\n};\n/**\n * @const\n * @type {Array<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n/**\n * @const\n * @type {number}\n */\nvar DEFAULT_DPI = 25.4 / 0.28;\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {import(\"./ScaleLine.js\").Units|string} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nvar ScaleLine = /** @class */ (function (_super) {\n    __extends(ScaleLine, _super);\n    /**\n     * @param {Options} [opt_options] Scale line options.\n     */\n    function ScaleLine(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var className = options.className !== undefined\n            ? options.className\n            : options.bar\n                ? 'ol-scale-bar'\n                : 'ol-scale-line';\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        /***\n         * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {ScaleLineOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.innerElement_ = document.createElement('div');\n        _this.innerElement_.className = className + '-inner';\n        _this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n        _this.element.appendChild(_this.innerElement_);\n        /**\n         * @private\n         * @type {?import(\"../View.js\").State}\n         */\n        _this.viewState_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = false;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.renderedWidth_ = undefined;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.renderedHTML_ = '';\n        _this.addChangeListener(UNITS_PROP, _this.handleUnitsChanged_);\n        _this.setUnits(options.units || Units.METRIC);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.scaleBar_ = options.bar || false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.scaleBarSteps_ = options.steps || 4;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.scaleBarText_ = options.text || false;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.dpi_ = options.dpi || undefined;\n        return _this;\n    }\n    /**\n     * Return the units to use in the scale line.\n     * @return {import(\"./ScaleLine.js\").Units} The units\n     * to use in the scale line.\n     * @observable\n     * @api\n     */\n    ScaleLine.prototype.getUnits = function () {\n        return this.get(UNITS_PROP);\n    };\n    /**\n     * @private\n     */\n    ScaleLine.prototype.handleUnitsChanged_ = function () {\n        this.updateElement_();\n    };\n    /**\n     * Set the units to use in the scale line.\n     * @param {import(\"./ScaleLine.js\").Units} units The units to use in the scale line.\n     * @observable\n     * @api\n     */\n    ScaleLine.prototype.setUnits = function (units) {\n        this.set(UNITS_PROP, units);\n    };\n    /**\n     * Specify the dpi of output device such as printer.\n     * @param {number|undefined} dpi The dpi of output device.\n     * @api\n     */\n    ScaleLine.prototype.setDpi = function (dpi) {\n        this.dpi_ = dpi;\n    };\n    /**\n     * @private\n     */\n    ScaleLine.prototype.updateElement_ = function () {\n        var viewState = this.viewState_;\n        if (!viewState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var center = viewState.center;\n        var projection = viewState.projection;\n        var units = this.getUnits();\n        var pointResolutionUnits = units == Units.DEGREES ? ProjUnits.DEGREES : ProjUnits.METERS;\n        var pointResolution = getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n        var minWidth = (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n        var nominalCount = minWidth * pointResolution;\n        var suffix = '';\n        if (units == Units.DEGREES) {\n            var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n            nominalCount *= metersPerDegree;\n            if (nominalCount < metersPerDegree / 60) {\n                suffix = '\\u2033'; // seconds\n                pointResolution *= 3600;\n            }\n            else if (nominalCount < metersPerDegree) {\n                suffix = '\\u2032'; // minutes\n                pointResolution *= 60;\n            }\n            else {\n                suffix = '\\u00b0'; // degrees\n            }\n        }\n        else if (units == Units.IMPERIAL) {\n            if (nominalCount < 0.9144) {\n                suffix = 'in';\n                pointResolution /= 0.0254;\n            }\n            else if (nominalCount < 1609.344) {\n                suffix = 'ft';\n                pointResolution /= 0.3048;\n            }\n            else {\n                suffix = 'mi';\n                pointResolution /= 1609.344;\n            }\n        }\n        else if (units == Units.NAUTICAL) {\n            pointResolution /= 1852;\n            suffix = 'nm';\n        }\n        else if (units == Units.METRIC) {\n            if (nominalCount < 0.001) {\n                suffix = 'μm';\n                pointResolution *= 1000000;\n            }\n            else if (nominalCount < 1) {\n                suffix = 'mm';\n                pointResolution *= 1000;\n            }\n            else if (nominalCount < 1000) {\n                suffix = 'm';\n            }\n            else {\n                suffix = 'km';\n                pointResolution /= 1000;\n            }\n        }\n        else if (units == Units.US) {\n            if (nominalCount < 0.9144) {\n                suffix = 'in';\n                pointResolution *= 39.37;\n            }\n            else if (nominalCount < 1609.344) {\n                suffix = 'ft';\n                pointResolution /= 0.30480061;\n            }\n            else {\n                suffix = 'mi';\n                pointResolution /= 1609.3472;\n            }\n        }\n        else {\n            assert(false, 33); // Invalid units\n        }\n        var i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n        var count, width, decimalCount;\n        while (true) {\n            decimalCount = Math.floor(i / 3);\n            var decimal = Math.pow(10, decimalCount);\n            count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n            width = Math.round(count / pointResolution);\n            if (isNaN(width)) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n                return;\n            }\n            else if (width >= minWidth) {\n                break;\n            }\n            ++i;\n        }\n        var html;\n        if (this.scaleBar_) {\n            html = this.createScaleBar(width, count, suffix);\n        }\n        else {\n            html = count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n        }\n        if (this.renderedHTML_ != html) {\n            this.innerElement_.innerHTML = html;\n            this.renderedHTML_ = html;\n        }\n        if (this.renderedWidth_ != width) {\n            this.innerElement_.style.width = width + 'px';\n            this.renderedWidth_ = width;\n        }\n        if (!this.renderedVisible_) {\n            this.element.style.display = '';\n            this.renderedVisible_ = true;\n        }\n    };\n    /**\n     * @private\n     * @param {number} width The current width of the scalebar.\n     * @param {number} scale The current scale.\n     * @param {string} suffix The suffix to append to the scale text.\n     * @return {string} The stringified HTML of the scalebar.\n     */\n    ScaleLine.prototype.createScaleBar = function (width, scale, suffix) {\n        var mapScale = '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();\n        var scaleSteps = [];\n        var stepWidth = width / this.scaleBarSteps_;\n        var backgroundColor = '#ffffff';\n        for (var i = 0; i < this.scaleBarSteps_; i++) {\n            if (i === 0) {\n                // create the first marker at position 0\n                scaleSteps.push(this.createMarker('absolute', i));\n            }\n            scaleSteps.push('<div>' +\n                '<div ' +\n                'class=\"ol-scale-singlebar\" ' +\n                'style=' +\n                '\"width: ' +\n                stepWidth +\n                'px;' +\n                'background-color: ' +\n                backgroundColor +\n                ';\"' +\n                '>' +\n                '</div>' +\n                this.createMarker('relative', i) +\n                /*render text every second step, except when only 2 steps */\n                (i % 2 === 0 || this.scaleBarSteps_ === 2\n                    ? this.createStepText(i, width, false, scale, suffix)\n                    : '') +\n                '</div>');\n            if (i === this.scaleBarSteps_ - 1) {\n                {\n                    /*render text at the end */\n                }\n                scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));\n            }\n            // switch colors of steps between black and white\n            if (backgroundColor === '#ffffff') {\n                backgroundColor = '#000000';\n            }\n            else {\n                backgroundColor = '#ffffff';\n            }\n        }\n        var scaleBarText;\n        if (this.scaleBarText_) {\n            scaleBarText =\n                '<div ' +\n                    'class=\"ol-scale-text\" ' +\n                    'style=\"width: ' +\n                    width +\n                    'px;\">' +\n                    mapScale +\n                    '</div>';\n        }\n        else {\n            scaleBarText = '';\n        }\n        var container = '<div ' +\n            'style=\"display: flex;\">' +\n            scaleBarText +\n            scaleSteps.join('') +\n            '</div>';\n        return container;\n    };\n    /**\n     * Creates a marker at given position\n     * @param {string} position The position, absolute or relative\n     * @param {number} i The iterator\n     * @return {string} The stringified div containing the marker\n     */\n    ScaleLine.prototype.createMarker = function (position, i) {\n        var top = position === 'absolute' ? 3 : -10;\n        return ('<div ' +\n            'class=\"ol-scale-step-marker\" ' +\n            'style=\"position: ' +\n            position +\n            ';' +\n            'top: ' +\n            top +\n            'px;\"' +\n            '></div>');\n    };\n    /**\n     * Creates the label for a marker marker at given position\n     * @param {number} i The iterator\n     * @param {number} width The width the scalebar will currently use\n     * @param {boolean} isLast Flag indicating if we add the last step text\n     * @param {number} scale The current scale for the whole scalebar\n     * @param {string} suffix The suffix for the scale\n     * @return {string} The stringified div containing the step text\n     */\n    ScaleLine.prototype.createStepText = function (i, width, isLast, scale, suffix) {\n        var length = i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n        var lengthString = length + (i === 0 ? '' : ' ' + suffix);\n        var margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n        var minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n        return ('<div ' +\n            'class=\"ol-scale-step-text\" ' +\n            'style=\"' +\n            'margin-left: ' +\n            margin +\n            'px;' +\n            'text-align: ' +\n            (i === 0 ? 'left' : 'center') +\n            '; ' +\n            'min-width: ' +\n            minWidth +\n            'px;' +\n            'left: ' +\n            (isLast ? width + 'px' : 'unset') +\n            ';\"' +\n            '>' +\n            lengthString +\n            '</div>');\n    };\n    /**\n     * Returns the appropriate scale for the given resolution and units.\n     * @return {number} The appropriate scale.\n     */\n    ScaleLine.prototype.getScaleForResolution = function () {\n        var resolution = getPointResolution(this.viewState_.projection, this.viewState_.resolution, this.viewState_.center, ProjUnits.METERS);\n        var dpi = this.dpi_ || DEFAULT_DPI;\n        var inchesPerMeter = 1000 / 25.4;\n        return parseFloat(resolution.toString()) * inchesPerMeter * dpi;\n    };\n    /**\n     * Update the scale line element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    ScaleLine.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            this.viewState_ = null;\n        }\n        else {\n            this.viewState_ = frameState.viewState;\n        }\n        this.updateElement_();\n    };\n    return ScaleLine;\n}(Control));\nexport default ScaleLine;\n//# sourceMappingURL=ScaleLine.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation',\n};\n//# sourceMappingURL=ViewProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, createProjection, disableCoordinateWarning, fromUserCoordinate, fromUserExtent, getUserProjection, toUserCoordinate, toUserExtent, } from './proj.js';\nimport { VOID } from './functions.js';\nimport { add as addCoordinate, equals as coordinatesEqual, equals, rotate as rotateCoordinate, } from './coordinate.js';\nimport { assert } from './asserts.js';\nimport { assign } from './obj.js';\nimport { none as centerNone, createExtent } from './centerconstraint.js';\nimport { clamp, modulo } from './math.js';\nimport { createMinMaxResolution, createSnapToPower, createSnapToResolutions, } from './resolutionconstraint.js';\nimport { createSnapToN, createSnapToZero, disable, none as rotationNone, } from './rotationconstraint.js';\nimport { easeOut, inAndOut } from './easing.js';\nimport { getCenter, getForViewAndSize, getHeight, getWidth, isEmpty, } from './extent.js';\nimport { linearFindNearest } from './array.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions} [opt_options] View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {ViewOnSignature<void>}\n         */\n        _this.un;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./size.js\").Size}\n         */\n        _this.viewportSize_ = [100, 100];\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate}\n         */\n        _this.nextCenter_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.nextResolution_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.nextRotation_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.cancelAnchor_ = undefined;\n        if (options.projection) {\n            disableCoordinateWarning();\n        }\n        if (options.center) {\n            options.center = fromUserCoordinate(options.center, _this.projection_);\n        }\n        if (options.extent) {\n            options.extent = fromUserExtent(options.extent, _this.projection_);\n        }\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        var properties = assign({}, options);\n        for (var key in ViewProperty) {\n            delete properties[key];\n        }\n        this.setProperties(properties, true);\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * @type {Array<number>|undefined}\n         * @private\n         */\n        this.padding_ = options.padding;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint,\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenterInternal(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n    };\n    Object.defineProperty(View.prototype, \"padding\", {\n        /**\n         * Padding (in css pixels).\n         * If the map viewport is partially covered with other content (overlays) along\n         * its edges, this setting allows to shift the center of the viewport away from that\n         * content. The order of the values in the array is top, right, bottom, left.\n         * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n         * @type {Array<number>|undefined}\n         * @api\n         */\n        get: function () {\n            return this.padding_;\n        },\n        set: function (padding) {\n            var oldPadding = this.padding_;\n            this.padding_ = padding;\n            var center = this.getCenter();\n            if (center) {\n                var newPadding = padding || [0, 0, 0, 0];\n                oldPadding = oldPadding || [0, 0, 0, 0];\n                var resolution = this.getResolution();\n                var offsetX = (resolution / 2) *\n                    (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n                var offsetY = (resolution / 2) *\n                    (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n                this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = this.getProperties();\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenterInternal();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n            var options = arguments[i];\n            if (options.center) {\n                options = assign({}, options);\n                options.center = fromUserCoordinate(options.center, this.getProjection());\n            }\n            if (options.anchor) {\n                options = assign({}, options);\n                options.anchor = fromUserCoordinate(options.anchor, this.getProjection());\n            }\n            args[i] = options;\n        }\n        this.animateInternal.apply(this, args);\n    };\n    /**\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animateInternal = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 &&\n            typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        var i = 0;\n        for (; i < animationCount && !this.isDef(); ++i) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[i];\n            if (state.center) {\n                this.setCenterInternal(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            else if (state.resolution) {\n                this.setResolution(state.resolution);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n        }\n        if (i === animationCount) {\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback,\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        var anchor;\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n            if (!anchor) {\n                for (var j = 0, jj = series.length; j < jj; ++j) {\n                    var animation = series[j];\n                    if (!animation.complete) {\n                        anchor = animation.anchor;\n                        break;\n                    }\n                }\n            }\n        }\n        this.animations_.length = 0;\n        this.cancelAnchor_ = anchor;\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    this.nextCenter_ = animation.targetCenter;\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1\n                        ? animation.targetResolution\n                        : animation.sourceResolution +\n                            progress *\n                                (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getViewportSize_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.nextResolution_ = animation.targetResolution;\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined &&\n                    animation.targetRotation !== undefined) {\n                    var rotation = progress === 1\n                        ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                            Math.PI\n                        : animation.sourceRotation +\n                            progress *\n                                (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.nextRotation_ = animation.targetRotation;\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                this.nextCenter_ = null;\n                this.nextResolution_ = NaN;\n                this.nextRotation_ = NaN;\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] -\n                (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n            var y = anchor[1] -\n                (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * Returns the current viewport size.\n     * @private\n     * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getViewportSize_ = function (opt_rotation) {\n        var size = this.viewportSize_;\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            return [\n                Math.abs(w * Math.cos(opt_rotation)) +\n                    Math.abs(h * Math.sin(opt_rotation)),\n                Math.abs(w * Math.sin(opt_rotation)) +\n                    Math.abs(h * Math.cos(opt_rotation)),\n            ];\n        }\n        else {\n            return size;\n        }\n    };\n    /**\n     * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n     * to avoid performance hit and layout reflow.\n     * This should be done on map size change.\n     * Note: the constraints are not resolved during an animation to avoid stopping it\n     * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n     */\n    View.prototype.setViewportSize = function (opt_size) {\n        this.viewportSize_ = Array.isArray(opt_size)\n            ? opt_size.slice()\n            : [100, 100];\n        if (!this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        var center = this.getCenterInternal();\n        if (!center) {\n            return center;\n        }\n        return toUserCoordinate(center, this.getProjection());\n    };\n    /**\n     * Get the view center without transforming to user projection.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     */\n    View.prototype.getCenterInternal = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @return {boolean} Resolution constraint is set\n     */\n    View.prototype.getConstrainResolution = function () {\n        return this.get('constrainResolution');\n    };\n    /**\n     * @param {Array<number>} [opt_hints] Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n     * of the map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var extent = this.calculateExtentInternal(opt_size);\n        return toUserExtent(extent, this.getProjection());\n    };\n    /**\n     * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n     * the map's last known viewport size will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    View.prototype.calculateExtentInternal = function (opt_size) {\n        var size = opt_size || this.getViewportSizeMinusPadding_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view should allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        return this.getResolutionForExtentInternal(fromUserExtent(extent, this.getProjection()), opt_size);\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     */\n    View.prototype.getResolutionForExtentInternal = function (extent, opt_size) {\n        var size = opt_size || this.getViewportSizeMinusPadding_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number} [opt_power] Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number} [opt_power] Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var logPower = Math.log(opt_power || 2);\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / logPower;\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = Math.log(maxResolution / resolution) / logPower / max;\n            return value;\n        });\n    };\n    /**\n     * Returns the size of the viewport minus padding.\n     * @private\n     * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n     */\n    View.prototype.getViewportSizeMinusPadding_ = function (opt_rotation) {\n        var size = this.getViewportSize_(opt_rotation);\n        var padding = this.padding_;\n        if (padding) {\n            size = [\n                size[0] - padding[1] - padding[3],\n                size[1] - padding[0] - padding[2],\n            ];\n        }\n        return size;\n    };\n    /**\n     * @return {State} View state.\n     */\n    View.prototype.getState = function () {\n        var projection = this.getProjection();\n        var resolution = this.getResolution();\n        var rotation = this.getRotation();\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        var padding = this.padding_;\n        if (padding) {\n            var reducedSize = this.getViewportSizeMinusPadding_();\n            center = calculateCenterOn(center, this.getViewportSize_(), [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n        }\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            nextCenter: this.nextCenter_,\n            nextResolution: this.nextResolution_,\n            nextRotation: this.nextRotation_,\n            rotation: rotation,\n            zoom: this.getZoom(),\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return (this.resolutions_[baseLevel] /\n                Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1)));\n        }\n        else {\n            return (this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_));\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions} [opt_options] Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) ||\n            typeof ( /** @type {?} */(geometryOrExtent).getSimplifiedGeometry) ===\n                'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            var extent = fromUserExtent(geometryOrExtent, this.getProjection());\n            geometry = polygonFromExtent(extent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            var extent = fromUserExtent(geometryOrExtent.getExtent(), this.getProjection());\n            geometry = polygonFromExtent(extent);\n            geometry.rotate(this.getRotation(), getCenter(extent));\n        }\n        else {\n            var userProjection = getUserProjection();\n            if (userProjection) {\n                geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n                    .clone()\n                    .transform(userProjection, this.getProjection()));\n            }\n            else {\n                geometry = geometryOrExtent;\n            }\n        }\n        this.fitInternal(geometry, opt_options);\n    };\n    /**\n     * Calculate rotated extent\n     * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n     * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n     */\n    View.prototype.rotatedExtentForGeometry = function (geometry) {\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(rotation);\n        var sinAngle = Math.sin(-rotation);\n        var coords = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        return [minRotX, minRotY, maxRotX, maxRotY];\n    };\n    /**\n     * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n     * @param {FitOptions} [opt_options] Options.\n     */\n    View.prototype.fitInternal = function (geometry, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getViewportSizeMinusPadding_();\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var rotatedExtent = this.rotatedExtentForGeometry(geometry);\n        // calculate resolution\n        var resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n            size[0] - padding[1] - padding[3],\n            size[1] - padding[0] - padding[2],\n        ]);\n        resolution = isNaN(resolution)\n            ? minResolution\n            : Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        var rotation = this.getRotation();\n        var sinAngle = Math.sin(rotation);\n        var cosAngle = Math.cos(rotation);\n        var centerRot = getCenter(rotatedExtent);\n        centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n        centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n        var centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n        var centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n        var center = this.getConstrainedCenter([centerX, centerY], resolution);\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animateInternal({\n                resolution: resolution,\n                center: center,\n                duration: options.duration,\n                easing: options.easing,\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        this.centerOnInternal(fromUserCoordinate(coordinate, this.getProjection()), size, position);\n    };\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     */\n    View.prototype.centerOnInternal = function (coordinate, size, position) {\n        this.setCenterInternal(calculateCenterOn(coordinate, size, position, this.getResolution(), this.getRotation()));\n    };\n    /**\n     * Calculates the shift between map and viewport center.\n     * @param {import(\"./coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {import(\"./size.js\").Size} size Size.\n     * @return {Array<number>|undefined} Center shift.\n     */\n    View.prototype.calculateCenterShift = function (center, resolution, rotation, size) {\n        var centerShift;\n        var padding = this.padding_;\n        if (padding && center) {\n            var reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n            var shiftedCenter = calculateCenterOn(center, size, [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n            centerShift = [\n                center[0] - shiftedCenter[0],\n                center[1] - shiftedCenter[1],\n            ];\n        }\n        return centerShift;\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenterInternal() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = toUserCoordinate(this.targetCenter_, this.getProjection());\n        this.setCenter([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     */\n    View.prototype.adjustCenterInternal = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenterInternal([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.adjustResolutionInternal(ratio, anchor);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n     */\n    View.prototype.adjustResolutionInternal = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getViewportSize_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        if (opt_anchor) {\n            opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n        }\n        this.adjustRotationInternal(delta, opt_anchor);\n    };\n    /**\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n     */\n    View.prototype.adjustRotationInternal = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.setCenterInternal(center ? fromUserCoordinate(center, this.getProjection()) : center);\n    };\n    /**\n     * Set the center using the view projection (not the user projection).\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     */\n    View.prototype.setCenterInternal = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {import(\"./ViewHint.js\").default} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n     * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n            this.set('zoom', this.getZoom(), true);\n        }\n        if (!newCenter ||\n            !this.get(ViewProperty.CENTER) ||\n            !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n        this.cancelAnchor_ = undefined;\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number} [opt_duration] The animation duration in ms.\n     * @param {number} [opt_resolutionDirection] Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, false, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (duration === 0 && !this.cancelAnchor_) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        var anchor = opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n        this.cancelAnchor_ = undefined;\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenterInternal() ||\n            !equals(this.getCenterInternal(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animateInternal({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: anchor,\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number} [opt_duration] Animation duration in ms.\n     * @param {number} [opt_resolutionDirection] Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number} [opt_duration] Animation duration in ms.\n     * @param {number} [opt_resolutionDirection] Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n     */\n    View.prototype.endInteractionInternal = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        var smooth = options.smoothExtentConstraint !== undefined\n            ? options.smoothExtentConstraint\n            : true;\n        return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n    }\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    if (options.multiWorld !== true && projection.isGlobal()) {\n        var extent = projection.getExtent().slice();\n        extent[0] = -Infinity;\n        extent[2] = Infinity;\n        return createExtent(extent, false, false);\n    }\n    return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ? options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined\n        ? options.smoothResolutionConstraint\n        : true;\n    var showFullExtent = options.showFullExtent !== undefined ? options.showFullExtent : false;\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var projExtent = projection.getExtent();\n    var constrainOnlyCenter = options.constrainOnlyCenter;\n    var extent = options.extent;\n    if (!multiWorld && !extent && projection.isGlobal()) {\n        constrainOnlyCenter = false;\n        extent = projExtent;\n    }\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution =\n            resolutions[maxZoom] !== undefined\n                ? resolutions[maxZoom]\n                : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var size = !projExtent\n            ? // use an extent that can fit the whole world if need be\n                (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n            : Math.max(getWidth(projExtent), getHeight(projExtent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution /\n            Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom =\n            minZoom +\n                Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    return {\n        constraint: resolutionConstraint,\n        maxResolution: maxResolution,\n        minResolution: minResolution,\n        minZoom: minZoom,\n        zoomFactor: zoomFactor,\n    };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ? options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n    // calculate rotated position\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n    return [centerX, centerY];\n}\nexport default View;\n//# sourceMappingURL=View.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED } from '../css.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceNode } from '../dom.js';\nvar events = [\n    'fullscreenchange',\n    'webkitfullscreenchange',\n    'MSFullscreenChange',\n];\n/**\n * @enum {string}\n */\nvar FullScreenEventType = {\n    /**\n     * Triggered after the map entered fullscreen.\n     * @event FullScreenEventType#enterfullscreen\n     * @api\n     */\n    ENTERFULLSCREEN: 'enterfullscreen',\n    /**\n     * Triggered after the map leave fullscreen.\n     * @event FullScreenEventType#leavefullscreen\n     * @api\n     */\n    LEAVEFULLSCREEN: 'leavefullscreen',\n};\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nvar FullScreen = /** @class */ (function (_super) {\n    __extends(FullScreen, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function FullScreen(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        /***\n         * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {FullScreenOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.keys_ = options.keys !== undefined ? options.keys : false;\n        /**\n         * @private\n         * @type {HTMLElement|string|undefined}\n         */\n        _this.source_ = options.source;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.isInFullscreen_ = false;\n        /**\n         * @private\n         */\n        _this.boundHandleMapTargetChange_ = _this.handleMapTargetChange_.bind(_this);\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.cssClassName_ =\n            options.className !== undefined ? options.className : 'ol-full-screen';\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.documentListeners_ = [];\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.activeClassName_ =\n            options.activeClassName !== undefined\n                ? options.activeClassName.split(' ')\n                : [_this.cssClassName_ + '-true'];\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.inactiveClassName_ =\n            options.inactiveClassName !== undefined\n                ? options.inactiveClassName.split(' ')\n                : [_this.cssClassName_ + '-false'];\n        var label = options.label !== undefined ? options.label : '\\u2922';\n        /**\n         * @private\n         * @type {Text|HTMLElement}\n         */\n        _this.labelNode_ =\n            typeof label === 'string' ? document.createTextNode(label) : label;\n        var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n        /**\n         * @private\n         * @type {Text|HTMLElement}\n         */\n        _this.labelActiveNode_ =\n            typeof labelActive === 'string'\n                ? document.createTextNode(labelActive)\n                : labelActive;\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.button_ = document.createElement('button');\n        _this.button_.title = tipLabel;\n        _this.button_.setAttribute('type', 'button');\n        _this.button_.appendChild(_this.labelNode_);\n        _this.button_.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        _this.setClassName_(_this.button_, _this.isInFullscreen_);\n        _this.element.className = \"\".concat(_this.cssClassName_, \" \").concat(CLASS_UNSELECTABLE, \" \").concat(CLASS_CONTROL);\n        _this.element.appendChild(_this.button_);\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    FullScreen.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleFullScreen_();\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreen_ = function () {\n        var map = this.getMap();\n        if (!map) {\n            return;\n        }\n        var doc = map.getOwnerDocument();\n        if (!isFullScreenSupported(doc)) {\n            return;\n        }\n        if (isFullScreen(doc)) {\n            exitFullScreen(doc);\n        }\n        else {\n            var element = void 0;\n            if (this.source_) {\n                element =\n                    typeof this.source_ === 'string'\n                        ? doc.getElementById(this.source_)\n                        : this.source_;\n            }\n            else {\n                element = map.getTargetElement();\n            }\n            if (this.keys_) {\n                requestFullScreenWithKeys(element);\n            }\n            else {\n                requestFullScreen(element);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreenChange_ = function () {\n        var map = this.getMap();\n        if (!map) {\n            return;\n        }\n        var wasInFullscreen = this.isInFullscreen_;\n        this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n        if (wasInFullscreen !== this.isInFullscreen_) {\n            this.setClassName_(this.button_, this.isInFullscreen_);\n            if (this.isInFullscreen_) {\n                replaceNode(this.labelActiveNode_, this.labelNode_);\n                this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n            }\n            else {\n                replaceNode(this.labelNode_, this.labelActiveNode_);\n                this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n            }\n            map.updateSize();\n        }\n    };\n    /**\n     * @param {HTMLElement} element Target element\n     * @param {boolean} fullscreen True if fullscreen class name should be active\n     * @private\n     */\n    FullScreen.prototype.setClassName_ = function (element, fullscreen) {\n        var _a, _b, _c, _d;\n        if (fullscreen) {\n            (_a = element.classList).remove.apply(_a, this.inactiveClassName_);\n            (_b = element.classList).add.apply(_b, this.activeClassName_);\n        }\n        else {\n            (_c = element.classList).remove.apply(_c, this.activeClassName_);\n            (_d = element.classList).add.apply(_d, this.inactiveClassName_);\n        }\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Pass `null` to just remove the control from the current map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default|null} map Map.\n     * @api\n     */\n    FullScreen.prototype.setMap = function (map) {\n        var oldMap = this.getMap();\n        if (oldMap) {\n            oldMap.removeChangeListener(MapProperty.TARGET, this.boundHandleMapTargetChange_);\n        }\n        _super.prototype.setMap.call(this, map);\n        this.handleMapTargetChange_();\n        if (map) {\n            map.addChangeListener(MapProperty.TARGET, this.boundHandleMapTargetChange_);\n        }\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleMapTargetChange_ = function () {\n        var listeners = this.documentListeners_;\n        for (var i = 0, ii = listeners.length; i < ii; ++i) {\n            unlistenByKey(listeners[i]);\n        }\n        listeners.length = 0;\n        var map = this.getMap();\n        if (map) {\n            var doc = map.getOwnerDocument();\n            if (isFullScreenSupported(doc)) {\n                this.element.classList.remove(CLASS_UNSUPPORTED);\n            }\n            else {\n                this.element.classList.add(CLASS_UNSUPPORTED);\n            }\n            for (var i = 0, ii = events.length; i < ii; ++i) {\n                listeners.push(listen(doc, events[i], this.handleFullScreenChange_, this));\n            }\n            this.handleFullScreenChange_();\n        }\n    };\n    return FullScreen;\n}(Control));\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n    var body = doc.body;\n    return !!(body['webkitRequestFullscreen'] ||\n        (body['msRequestFullscreen'] && doc['msFullscreenEnabled']) ||\n        (body.requestFullscreen && doc.fullscreenEnabled));\n}\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n    return !!(doc['webkitIsFullScreen'] ||\n        doc['msFullscreenElement'] ||\n        doc.fullscreenElement);\n}\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n    if (element.requestFullscreen) {\n        element.requestFullscreen();\n    }\n    else if (element['msRequestFullscreen']) {\n        element['msRequestFullscreen']();\n    }\n    else if (element['webkitRequestFullscreen']) {\n        element['webkitRequestFullscreen']();\n    }\n}\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n    if (element['webkitRequestFullscreen']) {\n        element['webkitRequestFullscreen']();\n    }\n    else {\n        requestFullScreen(element);\n    }\n}\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n    if (doc.exitFullscreen) {\n        doc.exitFullscreen();\n    }\n    else if (doc['msExitFullscreen']) {\n        doc['msExitFullscreen']();\n    }\n    else if (doc['webkitExitFullscreen']) {\n        doc['webkitExitFullscreen']();\n    }\n}\nexport default FullScreen;\n//# sourceMappingURL=FullScreen.js.map","/**\n * @module ol/css\n */\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nvar fontRegEx = new RegExp([\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n].join(''), 'i');\nvar fontRegExMatchIndex = [\n    'style',\n    'variant',\n    'weight',\n    'size',\n    'lineHeight',\n    'family',\n];\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport var getFontParameters = function (fontSpec) {\n    var match = fontSpec.match(fontRegEx);\n    if (!match) {\n        return null;\n    }\n    var style = /** @type {FontParameters} */ ({\n        lineHeight: 'normal',\n        size: '1.2em',\n        style: 'normal',\n        weight: 'normal',\n        variant: 'normal',\n    });\n    for (var i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n        var value = match[i + 1];\n        if (value !== undefined) {\n            style[fontRegExMatchIndex[i]] = value;\n        }\n    }\n    style.families = style.family.split(/,\\s?/);\n    return style;\n};\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n    return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n//# sourceMappingURL=css.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {import(\"./CollectionEventType.js\").default} type Type.\n     * @param {*} [opt_element] Element.\n     * @param {number} [opt_index] The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>} [opt_array] Array.\n     * @param {Options} [opt_options] Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {CollectionOnSignature<void>}\n         */\n        _this.un;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number} [opt_except] Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view',\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map"],"sourceRoot":""}