{"version":3,"sources":["webpack:///./node_modules/ol/interaction/Select.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/interaction/Draw.js","webpack:///./node_modules/ol/interaction/Snap.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/interaction/Extent.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","SelectEventType","SELECT","SelectEvent","_super","type","selected","deselected","mapBrowserEvent","_this","originalFeatureStyles","Select","opt_options","on","once","un","layerFilter","options","boundAddFeature_","addFeature_","bind","boundRemoveFeature_","removeFeature_","condition_","condition","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","filter","hitTolerance_","hitTolerance","style_","undefined","style","getDefaultStyleFunction","features_","features","layers","layers_1","layer","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","feature","getFeatures","getHitTolerance","getLayer","setHitTolerance","setMap","map","currentMap","getMap","forEach","restorePreviousStyle_","addEventListener","ADD","REMOVE","applySelectedStyle_","removeEventListener","evt","element","getAllLayers","find","getSource","hasFeature","getStyle","key","setStyle","interactions","getInteractions","getArray","i","length","interaction","lastIndexOf","removeFeatureLayerAssociation_","handleEvent","add","remove","toggle","set","forEachFeatureAtPixel","pixel","push","getLength","item","index","indexOf","splice","extend","j","dispatchEvent","styles","POLYGON","LINE_STRING","GEOMETRY_COLLECTION","getGeometry","getType","DoubleClickZoom","delta_","delta","duration_","duration","stopEvent","MapBrowserEventType","DBLCLICK","browserEvent","anchor","coordinate","shiftKey","view","getView","preventDefault","Interaction","DragPan","stopDown","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","onFocusOnly","noKinetic_","handleDragEvent","beginInteraction","targetPointers","centroid","update","getResolution","getRotation","adjustCenterInternal","begin","originalEvent","handleUpEvent","end","distance","getDistance","angle","getAngle","center","getCenterInternal","centerpx","getPixelFromCoordinateInternal","dest","getCoordinateFromPixelInternal","Math","cos","sin","animateInternal","getConstrainedCenter","easing","endInteraction","handleDownEvent","getAnimating","cancelAnimations","Pointer","DragRotate","lastAngle_","getConstraints","rotation","size","getSize","offset","theta","atan2","adjustRotationInternal","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","BOXCANCEL","DragBoxEvent","Event","DragBox","box_","className","minArea_","minArea","onBoxEnd","startPixel_","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","startPixel","endPixel","width","height","setPixels","completeBox","event","DragZoom","out_","out","geometry","rotatedExtent","rotatedExtentForGeometry","resolution","getResolutionForExtentInternal","factor","clone","scale","fitInternal","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","EventType","KEYDOWN","keyEvent","keyCode","KeyCode","DOWN","LEFT","RIGHT","UP","mapUnitsDelta","deltaX","deltaY","KeyboardZoom","KEYPRESS","charCode","charCodeAt","Mode","TRACKPAD","WHEEL","MouseWheelZoom","totalDelta_","lastDelta_","maxDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","now","Date","abs","getConstrainResolution","clearTimeout","setTimeout","adjustZoom","timeLeft","max","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","clientY","clientX","viewportPosition","getViewport","getBoundingClientRect","left","top","render","handlingDownUpSequence","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","dx","dy","sqrt","adjustResolutionInternal","direction","defaults","Collection","Kinetic","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","PointerInteraction","handleMoveEvent","trackedPointers_","getPointerCount","updateTrackedPointers_","POINTERDRAG","POINTERUP","handledUp","POINTERDOWN","handled","POINTERMOVE","isPointerDraggingEvent","event_1","id","pointerId","toString","pointerEvents","map_","setActive","getActive","get","ACTIVE","active","pan","opt_duration","currentCenter","zoomByDelta","opt_anchor","currentZoom","getZoom","newZoom","getConstrainedZoom","newResolution","getResolutionForZoom","animate","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","SAFARI_BUG_237906","match","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","error","POINT","CIRCLE","DrawEventType","DRAWSTART","DRAWEND","DRAWABORT","DrawEvent","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","source_","source","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","Infinity","finishCondition_","finishCondition","geometryFunction","Constructor_1","mode_1","coordinates","projection","circle","NaN","squaredLength","setCenterAndRadius","userProjection","transform","setCoordinates","concat","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","useSpatialIndex","wrapX","updateWhileInteracting","geometryName_","geometryName","freehandCondition_","freehand","freehandCondition","addChangeListener","updateState_","getOverlay","CONTEXTMENU","move","pass","addToDrawing_","handlePointerMove_","pointerType","startDrawing_","frameState","startingToDraw","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","squaredDistance","modifyDrawing_","createOrUpdateSketchPoint_","slice","at","potentiallyDone","potentiallyFinishCoordinates","mode","sketchCoords","ii","finishCoordinate","finishPixel","getPixelFromCoordinate","sketchPointGeom","updateSketchFeatures_","createOrUpdateCustomSketchLine_","ring","getLinearRing","sketchLineGeom","setFlatCoordinates","getLayout","getFlatCoordinates","changed","setGeometry","start","getProjection","setGeometryName","last","done","pop","removeLastPoint","sketchFeature","abortDrawing_","getCoordinates","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","addFeature","clear","appendCoordinates","newDrawing","shift","ending","lineString","sketchFeatures","overlaySource","addFeatures","Error","getFeatureFromEvent","tempSegment","Snap","vertex_","vertex","edge_","edge","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelTolerance_","pixelTolerance","rBush_","GEOMETRY_SEGMENTERS_","segmentPointGemetry_","segmentLineStringGemetry_","segmentPolygonGemetry_","segmentMultiPointGemetry_","segmentMultiLineStringGemetry_","segmentMultiPolygonGemetry_","segmentGeometryCollectionGemetry_","segmentCircleGemetry_","opt_listen","register","feature_uid","segmenter","getExtent","segments","insert","segment","extents","s","segmentsData","load","CHANGE","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","removeFeature","getFeatures_","result","snapTo","vertexPixel","handleFeatureAdd_","handleFeatureRemove_","uid","updateFeature_","featuresToUpdate","opt_unlisten","unregister","extent","rBush","nodesToRemove_1","forEachInExtent","node","keys","ADDFEATURE","REMOVEFEATURE","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","getInExtent","segmentsLength","closestVertex","projectedCoordinate","minSquaredDistance","squaredPixelTolerance","getResult","squaredPixelDistance","round","segmentData","tempVertexCoord","circleGeometry","_a","segmentStart","segmentEnd","polygon","geometries","getGeometriesArray","lines","jj","point","polygons","k","kk","rings","ExtentEventType","EXTENTCHANGED","ExtentEvent","Extent","extent_","pointerHandler_","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","getDefaultExtentStyleFunction","updateWhileAnimating","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","setExtent","snapToVertex_","sortByDistance","a","getExtentInternal","getSegments","sort","closestSegment","pixel1","pixel2","squaredDist1","squaredDist2","dist","min","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","x","y","getPointHandler","getEdgeHandler","fixedPoint","fixedP1","fixedP2"],"mappings":"kHAAA,oJAAIA,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GAiCxCI,EAAkB,CAMlBC,OAAQ,UAqERC,EAA6B,SAAUC,GASvC,SAASD,EAAYE,EAAMC,EAAUC,EAAYC,GAC7C,IAAIC,EAAQL,EAAOV,KAAKI,KAAMO,IAASP,KAmBvC,OAbAW,EAAMH,SAAWA,EAMjBG,EAAMF,WAAaA,EAMnBE,EAAMD,gBAAkBA,EACjBC,EAEX,OA9BA1B,EAAUoB,EAAaC,GA8BhBD,EA/BqB,CAgC9B,QAMEO,EAAwB,GAuBxBC,EAAwB,SAAUP,GAKlC,SAASO,EAAOC,GACZ,IAAIH,EAAQL,EAAOV,KAAKI,OAASA,KAIjCW,EAAMI,GAINJ,EAAMK,KAINL,EAAMM,GACN,IA4DIC,EA5DAC,EAAUL,GAA4B,GA6D1C,GAzDAH,EAAMS,iBAAmBT,EAAMU,YAAYC,KAAKX,GAIhDA,EAAMY,oBAAsBZ,EAAMa,eAAeF,KAAKX,GAKtDA,EAAMc,WAAaN,EAAQO,UAAYP,EAAQO,UAAY,OAK3Df,EAAMgB,cAAgBR,EAAQS,aAAeT,EAAQS,aAAe,OAKpEjB,EAAMkB,iBAAmBV,EAAQW,gBAC3BX,EAAQW,gBACR,OAKNnB,EAAMoB,iBAAmBZ,EAAQa,gBAC3Bb,EAAQa,gBACR,OAKNrB,EAAMsB,SAASd,EAAQe,OAAQf,EAAQe,MAKvCvB,EAAMwB,QAAUhB,EAAQiB,OAASjB,EAAQiB,OAAS,OAKlDzB,EAAM0B,cAAgBlB,EAAQmB,aAAenB,EAAQmB,aAAe,EAKpE3B,EAAM4B,YACgBC,IAAlBrB,EAAQsB,MAAsBtB,EAAQsB,MAAQC,IAKlD/B,EAAMgC,UAAYxB,EAAQyB,UAAY,IAAI,OAGtCzB,EAAQ0B,OACR,GAA8B,oBAAnB1B,EAAQ0B,OACf3B,EAAcC,EAAQ0B,WAErB,CACD,IAAIC,EAAW3B,EAAQ0B,OACvB3B,EAAc,SAAU6B,GACpB,OAAO,eAASD,EAAUC,SAKlC7B,EAAc,OAclB,OARAP,EAAMqC,aAAe9B,EAOrBP,EAAMsC,yBAA2B,GAC1BtC,EA8OX,OAvVA1B,EAAU4B,EAAQP,GAgHlBO,EAAOnB,UAAUwD,4BAA8B,SAAUC,EAASJ,GAC9D/C,KAAKiD,yBAAyB,eAAOE,IAAYJ,GAOrDlC,EAAOnB,UAAU0D,YAAc,WAC3B,OAAOpD,KAAK2C,WAOhB9B,EAAOnB,UAAU2D,gBAAkB,WAC/B,OAAOrD,KAAKqC,eAShBxB,EAAOnB,UAAU4D,SAAW,SAAUH,GAClC,OAA4DnD,KAAKiD,yBAAyB,eAAOE,KAQrGtC,EAAOnB,UAAU6D,gBAAkB,SAAUjB,GACzCtC,KAAKqC,cAAgBC,GAQzBzB,EAAOnB,UAAU8D,OAAS,SAAUC,GAChC,IAAIC,EAAa1D,KAAK2D,SAClBD,GAAc1D,KAAKuC,QACnBvC,KAAK2C,UAAUiB,QAAQ5D,KAAK6D,sBAAsBvC,KAAKtB,OAE3DM,EAAOZ,UAAU8D,OAAO5D,KAAKI,KAAMyD,GAC/BA,GACAzD,KAAK2C,UAAUmB,iBAAiB,OAAoBC,IAAK/D,KAAKoB,kBAC9DpB,KAAK2C,UAAUmB,iBAAiB,OAAoBE,OAAQhE,KAAKuB,qBAC7DvB,KAAKuC,QACLvC,KAAK2C,UAAUiB,QAAQ5D,KAAKiE,oBAAoB3C,KAAKtB,SAIzDA,KAAK2C,UAAUuB,oBAAoB,OAAoBH,IAAK/D,KAAKoB,kBACjEpB,KAAK2C,UAAUuB,oBAAoB,OAAoBF,OAAQhE,KAAKuB,uBAO5EV,EAAOnB,UAAU2B,YAAc,SAAU8C,GACrC,IAAIhB,EAAUgB,EAAIC,QAIlB,GAHIpE,KAAKuC,QACLvC,KAAKiE,oBAAoBd,IAExBnD,KAAKsD,SAASH,GAAU,CACzB,IAAIJ,EAAoC/C,KAAK2D,SACxCU,eACAC,MAAK,SAAUvB,GAChB,GAAIA,aAAiB,QACjBA,EAAMwB,aACNxB,EAAMwB,YAAYC,WAAWrB,GAC7B,OAAOJ,KAGXA,GACA/C,KAAKkD,4BAA4BC,EAASJ,KAQtDlC,EAAOnB,UAAU8B,eAAiB,SAAU2C,GACxC,IAAIhB,EAAUgB,EAAIC,QACdpE,KAAKuC,QACLvC,KAAK6D,sBAAsBV,IAMnCtC,EAAOnB,UAAU+E,SAAW,WACxB,OAAOzE,KAAKuC,QAMhB1B,EAAOnB,UAAUuE,oBAAsB,SAAUd,GAC7C,IAAIuB,EAAM,eAAOvB,GACXuB,KAAO9D,IACTA,EAAsB8D,GAAOvB,EAAQsB,YAEzCtB,EAAQwB,SAAS3E,KAAKuC,SAM1B1B,EAAOnB,UAAUmE,sBAAwB,SAAUV,GAE/C,IADA,IAAIyB,EAAe5E,KAAK2D,SAASkB,kBAAkBC,WAC1CC,EAAIH,EAAaI,OAAS,EAAGD,GAAK,IAAKA,EAAG,CAC/C,IAAIE,EAAcL,EAAaG,GAC/B,GAAIE,IAAgBjF,MAChBiF,aAAuBpE,GACvBoE,EAAYR,aACmD,IAA/DQ,EAAY7B,cAAc0B,WAAWI,YAAY/B,GAEjD,YADAA,EAAQwB,SAASM,EAAYR,YAIrC,IAAIC,EAAM,eAAOvB,GACjBA,EAAQwB,SAAS/D,EAAsB8D,WAChC9D,EAAsB8D,IAMjC7D,EAAOnB,UAAUyF,+BAAiC,SAAUhC,UACjDnD,KAAKiD,yBAAyB,eAAOE,KAShDtC,EAAOnB,UAAU0F,YAAc,SAAU1E,GACrC,IAAKV,KAAKyB,WAAWf,GACjB,OAAO,EAEX,IAAI2E,EAAMrF,KAAK2B,cAAcjB,GACzB4E,EAAStF,KAAK6B,iBAAiBnB,GAC/B6E,EAASvF,KAAK+B,iBAAiBrB,GAC/B8E,GAAOH,IAAQC,IAAWC,EAC1B9B,EAAM/C,EAAgB+C,IACtBb,EAAW5C,KAAKoD,cAChB3C,EAAa,GACbD,EAAW,GACf,GAAIgF,EAAK,CAIL,eAAMxF,KAAKiD,0BACXQ,EAAIgC,sBAAsB/E,EAAgBgF,MAM1C,SAAUvC,EAASJ,GACf,GAAI/C,KAAKmC,QAAQgB,EAASJ,GAGtB,OAFA/C,KAAKkD,4BAA4BC,EAASJ,GAC1CvC,EAASmF,KAAKxC,IACNnD,KAAKiC,QAEnBX,KAAKtB,MAAO,CACVkB,YAAalB,KAAKgD,aAClBV,aAActC,KAAKqC,gBAEvB,IAAK,IAAI0C,EAAInC,EAASgD,YAAc,EAAGb,GAAK,IAAKA,EAAG,CAChD,IAAI5B,EAAUP,EAASiD,KAAKd,GACxBe,EAAQtF,EAASuF,QAAQ5C,GACzB2C,GAAS,EAETtF,EAASwF,OAAOF,EAAO,IAGvBlD,EAAS0C,OAAOnC,GAChB1C,EAAWkF,KAAKxC,IAGA,IAApB3C,EAASwE,QACTpC,EAASqD,OAAOzF,OAGnB,CAEDiD,EAAIgC,sBAAsB/E,EAAgBgF,MAM1C,SAAUvC,EAASJ,GACf,GAAI/C,KAAKmC,QAAQgB,EAASJ,GAUtB,OATKsC,IAAOE,GAAY,eAAS3C,EAASkC,WAAY3B,IAI5CmC,GAAUC,IAChB,eAAS3C,EAASkC,WAAY3B,KAC9B1C,EAAWkF,KAAKxC,GAChBnD,KAAKmF,+BAA+BhC,KANpCnD,KAAKkD,4BAA4BC,EAASJ,GAC1CvC,EAASmF,KAAKxC,KAOVnD,KAAKiC,QAEnBX,KAAKtB,MAAO,CACVkB,YAAalB,KAAKgD,aAClBV,aAActC,KAAKqC,gBAEvB,IAAK,IAAI6D,EAAIzF,EAAWuE,OAAS,EAAGkB,GAAK,IAAKA,EAC1CtD,EAAS0C,OAAO7E,EAAWyF,IAE/BtD,EAASqD,OAAOzF,GAKpB,OAHIA,EAASwE,OAAS,GAAKvE,EAAWuE,OAAS,IAC3ChF,KAAKmG,cAAc,IAAI9F,EAAYF,EAAgBC,OAAQI,EAAUC,EAAYC,KAE9E,GAEJG,EAxVgB,CAyVzB,QAIF,SAAS6B,IACL,IAAI0D,EAAS,iBAGb,OAFA,eAAOA,EAAO,OAAaC,SAAUD,EAAO,OAAaE,cACzD,eAAOF,EAAO,OAAaG,qBAAsBH,EAAO,OAAaE,cAC9D,SAAUnD,GACb,OAAKA,EAAQqD,cAGNJ,EAAOjD,EAAQqD,cAAcC,WAFzB,MAKJ,U,8GCjhBXxH,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GA8BxC,EAAiC,SAAUO,GAK3C,SAASoG,EAAgB5F,GACrB,IAAIH,EAAQL,EAAOV,KAAKI,OAASA,KAC7BmB,EAAUL,GAA4B,GAW1C,OANAH,EAAMgG,OAASxF,EAAQyF,MAAQzF,EAAQyF,MAAQ,EAK/CjG,EAAMkG,eAAiCrE,IAArBrB,EAAQ2F,SAAyB3F,EAAQ2F,SAAW,IAC/DnG,EAsBX,OAvCA1B,EAAUyH,EAAiBpG,GAyB3BoG,EAAgBhH,UAAU0F,YAAc,SAAU1E,GAC9C,IAAIqG,GAAY,EAChB,GAAIrG,EAAgBH,MAAQyG,EAAA,KAAoBC,SAAU,CACtD,IAAIC,EAA0CxG,EAA6B,cACvE+C,EAAM/C,EAAgB+C,IACtB0D,EAASzG,EAAgB0G,WACzBR,EAAQM,EAAaG,UAAYrH,KAAK2G,OAAS3G,KAAK2G,OACpDW,EAAO7D,EAAI8D,UACf,eAAYD,EAAMV,EAAOO,EAAQnH,KAAK6G,WACtCK,EAAaM,iBACbT,GAAY,EAEhB,OAAQA,GAELL,EAxCyB,CAyClCe,EAAA,MACa,I,4DCxEX,EAAwC,WACxC,IAAIvI,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GAqCxC,EAAyB,SAAUO,GAKnC,SAASoH,EAAQ5G,GACb,IAAIH,EAAQL,EAAOV,KAAKI,KAAM,CAC1B2H,SAAU,UACR3H,KACFmB,EAAUL,GAA4B,GAK1CH,EAAMiH,SAAWzG,EAAQ0G,QAIzBlH,EAAMmH,aAAe,KAIrBnH,EAAMoH,mBAINpH,EAAMqH,UAAW,EACjB,IAAItG,EAAYP,EAAQO,UAClBP,EAAQO,UACR,eAAI,OAAgB,QAa1B,OARAf,EAAMc,WAAaN,EAAQ8G,YACrB,eAAI,OAAmBvG,GACvBA,EAKNf,EAAMuH,YAAa,EACZvH,EAwGX,OAjJA,EAAU+G,EAASpH,GA+CnBoH,EAAQhI,UAAUyI,gBAAkB,SAAUzH,GACrCV,KAAKgI,WACNhI,KAAKgI,UAAW,EAChBhI,KAAK2D,SAAS4D,UAAUa,oBAE5B,IAAIC,EAAiBrI,KAAKqI,eACtBC,EAAW,eAAqBD,GACpC,GAAIA,EAAerD,QAAUhF,KAAK+H,oBAI9B,GAHI/H,KAAK4H,UACL5H,KAAK4H,SAASW,OAAOD,EAAS,GAAIA,EAAS,IAE3CtI,KAAK8H,aAAc,CACnB,IAAIlB,EAAQ,CACR5G,KAAK8H,aAAa,GAAKQ,EAAS,GAChCA,EAAS,GAAKtI,KAAK8H,aAAa,IAEhCrE,EAAM/C,EAAgB+C,IACtB6D,EAAO7D,EAAI8D,UACf,eAAgBX,EAAOU,EAAKkB,iBAC5B,eAAiB5B,EAAOU,EAAKmB,eAC7BnB,EAAKoB,qBAAqB9B,SAGzB5G,KAAK4H,UAGV5H,KAAK4H,SAASe,QAElB3I,KAAK8H,aAAeQ,EACpBtI,KAAK+H,mBAAqBM,EAAerD,OACzCtE,EAAgBkI,cAAcpB,kBAOlCE,EAAQhI,UAAUmJ,cAAgB,SAAUnI,GACxC,IAAI+C,EAAM/C,EAAgB+C,IACtB6D,EAAO7D,EAAI8D,UACf,GAAmC,IAA/BvH,KAAKqI,eAAerD,OAAc,CAClC,IAAKhF,KAAKkI,YAAclI,KAAK4H,UAAY5H,KAAK4H,SAASkB,MAAO,CAC1D,IAAIC,EAAW/I,KAAK4H,SAASoB,cACzBC,EAAQjJ,KAAK4H,SAASsB,WACtBC,EAAS7B,EAAK8B,oBACdC,EAAW5F,EAAI6F,+BAA+BH,GAC9CI,EAAO9F,EAAI+F,+BAA+B,CAC1CH,EAAS,GAAKN,EAAWU,KAAKC,IAAIT,GAClCI,EAAS,GAAKN,EAAWU,KAAKE,IAAIV,KAEtC3B,EAAKsC,gBAAgB,CACjBT,OAAQ7B,EAAKuC,qBAAqBN,GAClCzC,SAAU,IACVgD,OAAQ,SAOhB,OAJI9J,KAAKgI,WACLhI,KAAKgI,UAAW,EAChBV,EAAKyC,mBAEF,EASP,OANI/J,KAAK4H,UAGL5H,KAAK4H,SAASe,QAElB3I,KAAK8H,aAAe,MACb,GAQfJ,EAAQhI,UAAUsK,gBAAkB,SAAUtJ,GAC1C,GAAIV,KAAKqI,eAAerD,OAAS,GAAKhF,KAAKyB,WAAWf,GAAkB,CACpE,IAAI+C,EAAM/C,EAAgB+C,IACtB6D,EAAO7D,EAAI8D,UAYf,OAXAvH,KAAK8H,aAAe,KAEhBR,EAAK2C,gBACL3C,EAAK4C,mBAELlK,KAAK4H,UACL5H,KAAK4H,SAASe,QAIlB3I,KAAKkI,WAAalI,KAAKqI,eAAerD,OAAS,GACxC,EAGP,OAAO,GAGR0C,EAlJiB,CAmJ1ByC,EAAA,MACa,I,YCzLX,EAAwC,WACxC,IAAIjL,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GAuCxC,EAA4B,SAAUO,GAKtC,SAAS8J,EAAWtJ,GAChB,IAAIH,EAAQX,KACRmB,EAAUL,GAA4B,GAmB1C,OAlBAH,EAAQL,EAAOV,KAAKI,KAAM,CACtB2H,SAAU,UACR3H,KAKNW,EAAMc,WAAaN,EAAQO,UAAYP,EAAQO,UAAY,OAK3Df,EAAM0J,gBAAa7H,EAKnB7B,EAAMkG,eAAiCrE,IAArBrB,EAAQ2F,SAAyB3F,EAAQ2F,SAAW,IAC/DnG,EA0DX,OAnFA,EAAUyJ,EAAY9J,GA+BtB8J,EAAW1K,UAAUyI,gBAAkB,SAAUzH,GAC7C,GAAK,eAAUA,GAAf,CAGA,IAAI+C,EAAM/C,EAAgB+C,IACtB6D,EAAO7D,EAAI8D,UACf,GAAID,EAAKgD,iBAAiBC,WAAa,OAAvC,CAGA,IAAIC,EAAO/G,EAAIgH,UACXC,EAAShK,EAAgBgF,MACzBiF,EAAQlB,KAAKmB,MAAMJ,EAAK,GAAK,EAAIE,EAAO,GAAIA,EAAO,GAAKF,EAAK,GAAK,GACtE,QAAwBhI,IAApBxC,KAAKqK,WAA0B,CAC/B,IAAIzD,EAAQ+D,EAAQ3K,KAAKqK,WACzB/C,EAAKuD,wBAAwBjE,GAEjC5G,KAAKqK,WAAaM,KAOtBP,EAAW1K,UAAUmJ,cAAgB,SAAUnI,GAC3C,IAAK,eAAUA,GACX,OAAO,EAEX,IAAI+C,EAAM/C,EAAgB+C,IACtB6D,EAAO7D,EAAI8D,UAEf,OADAD,EAAKyC,eAAe/J,KAAK6G,YAClB,GAOXuD,EAAW1K,UAAUsK,gBAAkB,SAAUtJ,GAC7C,IAAK,eAAUA,GACX,OAAO,EAEX,GAAI,eAAkBA,IAClBV,KAAKyB,WAAWf,GAAkB,CAClC,IAAI+C,EAAM/C,EAAgB+C,IAG1B,OAFAA,EAAI8D,UAAUa,mBACdpI,KAAKqK,gBAAa7H,GACX,EAGP,OAAO,GAGR4H,EApFoB,CAqF7BD,EAAA,MACa,I,wBC7HX,EAAwC,WACxC,IAAIjL,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GA8CxC+K,EAAmB,CAMnBC,SAAU,WAMVC,QAAS,UAMTC,OAAQ,SAMRC,UAAW,aAOXC,EAA8B,SAAU7K,GAOxC,SAAS6K,EAAa5K,EAAM6G,EAAY1G,GACpC,IAAIC,EAAQL,EAAOV,KAAKI,KAAMO,IAASP,KAcvC,OAPAW,EAAMyG,WAAaA,EAMnBzG,EAAMD,gBAAkBA,EACjBC,EAEX,OAvBA,EAAUwK,EAAc7K,GAuBjB6K,EAxBsB,CAyB/BC,EAAA,MAuBE,EAAyB,SAAU9K,GAKnC,SAAS+K,EAAQvK,GACb,IAAIH,EAAQL,EAAOV,KAAKI,OAASA,KAIjCW,EAAMI,GAINJ,EAAMK,KAINL,EAAMM,GACN,IAAIE,EAAUL,GAA4B,GA+B1C,OA1BAH,EAAM2K,KAAO,IAAI,OAAUnK,EAAQoK,WAAa,cAKhD5K,EAAM6K,cAA+BhJ,IAApBrB,EAAQsK,QAAwBtK,EAAQsK,QAAU,GAC/DtK,EAAQuK,WACR/K,EAAM+K,SAAWvK,EAAQuK,UAM7B/K,EAAMgL,YAAc,KAKpBhL,EAAMc,WAAaN,EAAQO,UAAYP,EAAQO,UAAY,OAK3Df,EAAMiL,iBAAmBzK,EAAQ0K,gBAC3B1K,EAAQ0K,gBACRlL,EAAMmL,uBACLnL,EAoEX,OArHA,EAAU0K,EAAS/K,GA4DnB+K,EAAQ3L,UAAUoM,uBAAyB,SAAUpL,EAAiBqL,EAAYC,GAC9E,IAAIC,EAAQD,EAAS,GAAKD,EAAW,GACjCG,EAASF,EAAS,GAAKD,EAAW,GACtC,OAAOE,EAAQA,EAAQC,EAASA,GAAUlM,KAAKwL,UAOnDH,EAAQ3L,UAAU8G,YAAc,WAC5B,OAAOxG,KAAKsL,KAAK9E,eAMrB6E,EAAQ3L,UAAUyI,gBAAkB,SAAUzH,GAC1CV,KAAKsL,KAAKa,UAAUnM,KAAK2L,YAAajL,EAAgBgF,OACtD1F,KAAKmG,cAAc,IAAIgF,EAAaL,EAAiBE,QAAStK,EAAgB0G,WAAY1G,KAO9F2K,EAAQ3L,UAAUmJ,cAAgB,SAAUnI,GACxCV,KAAKsL,KAAK9H,OAAO,MACjB,IAAI4I,EAAcpM,KAAK4L,iBAAiBlL,EAAiBV,KAAK2L,YAAajL,EAAgBgF,OAK3F,OAJI0G,GACApM,KAAK0L,SAAShL,GAElBV,KAAKmG,cAAc,IAAIgF,EAAaiB,EAActB,EAAiBG,OAASH,EAAiBI,UAAWxK,EAAgB0G,WAAY1G,KAC7H,GAOX2K,EAAQ3L,UAAUsK,gBAAkB,SAAUtJ,GAC1C,QAAIV,KAAKyB,WAAWf,KAChBV,KAAK2L,YAAcjL,EAAgBgF,MACnC1F,KAAKsL,KAAK9H,OAAO9C,EAAgB+C,KACjCzD,KAAKsL,KAAKa,UAAUnM,KAAK2L,YAAa3L,KAAK2L,aAC3C3L,KAAKmG,cAAc,IAAIgF,EAAaL,EAAiBC,SAAUrK,EAAgB0G,WAAY1G,KACpF,IAUf2K,EAAQ3L,UAAUgM,SAAW,SAAUW,KAChChB,EAtHiB,CAuH1BlB,EAAA,MACa,ICrPX,EAAwC,WACxC,IAAIjL,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GA4CxC,EAA0B,SAAUO,GAKpC,SAASgM,EAASxL,GACd,IAAIH,EAAQX,KACRmB,EAAUL,GAA4B,GACtCY,EAAYP,EAAQO,UAAYP,EAAQO,UAAY,OAgBxD,OAfAf,EAAQL,EAAOV,KAAKI,KAAM,CACtB0B,UAAWA,EACX6J,UAAWpK,EAAQoK,WAAa,cAChCE,QAAStK,EAAQsK,WACfzL,KAKNW,EAAMkG,eAAiCrE,IAArBrB,EAAQ2F,SAAyB3F,EAAQ2F,SAAW,IAKtEnG,EAAM4L,UAAuB/J,IAAhBrB,EAAQqL,KAAoBrL,EAAQqL,IAC1C7L,EAsBX,OA7CA,EAAU2L,EAAUhM,GA6BpBgM,EAAS5M,UAAUgM,SAAW,SAAUW,GACpC,IAAI5I,EAAMzD,KAAK2D,SACX2D,EAAqD7D,EAAI8D,UACzDkF,EAAWzM,KAAKwG,cACpB,GAAIxG,KAAKuM,KAAM,CACX,IAAIG,EAAgBpF,EAAKqF,yBAAyBF,GAC9CG,EAAatF,EAAKuF,+BAA+BH,GACjDI,EAASxF,EAAKkB,gBAAkBoE,EACpCH,EAAWA,EAASM,QACpBN,EAASO,MAAMF,EAASA,GAE5BxF,EAAK2F,YAAYR,EAAU,CACvB3F,SAAU9G,KAAK6G,UACfiD,OAAQ,UAGTwC,EA9CkB,CA+C3B,GACa,I,wBC5FX,EAAwC,WACxC,IAAIpN,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GA+CxC,EAA6B,SAAUO,GAKvC,SAAS4M,EAAYpM,GACjB,IAAIH,EAAQL,EAAOV,KAAKI,OAASA,KAC7BmB,EAAUL,GAAe,GA4B7B,OAtBAH,EAAMwM,kBAAoB,SAAUzM,GAChC,OAAQ,eAAeA,IAAoB,eAAkBA,IAMjEC,EAAMc,gBACoBe,IAAtBrB,EAAQO,UACFP,EAAQO,UACRf,EAAMwM,kBAKhBxM,EAAMkG,eAAiCrE,IAArBrB,EAAQ2F,SAAyB3F,EAAQ2F,SAAW,IAKtEnG,EAAMyM,iBACqB5K,IAAvBrB,EAAQkM,WAA2BlM,EAAQkM,WAAa,IACrD1M,EA6CX,OA/EA,EAAUuM,EAAa5M,GA4CvB4M,EAAYxN,UAAU0F,YAAc,SAAU1E,GAC1C,IAAIqG,GAAY,EAChB,GAAIrG,EAAgBH,MAAQ+M,EAAA,KAAUC,QAAS,CAC3C,IAAIC,EAAyC9M,EAA6B,cACtE+M,EAAUD,EAASC,QACvB,GAAIzN,KAAKyB,WAAWf,KACf+M,GAAWC,EAAA,KAAQC,MAChBF,GAAWC,EAAA,KAAQE,MACnBH,GAAWC,EAAA,KAAQG,OACnBJ,GAAWC,EAAA,KAAQI,IAAK,CAC5B,IAAIrK,EAAM/C,EAAgB+C,IACtB6D,EAAO7D,EAAI8D,UACXwG,EAAgBzG,EAAKkB,gBAAkBxI,KAAKoN,YAC5CY,EAAS,EAAGC,EAAS,EACrBR,GAAWC,EAAA,KAAQC,KACnBM,GAAUF,EAELN,GAAWC,EAAA,KAAQE,KACxBI,GAAUD,EAELN,GAAWC,EAAA,KAAQG,MACxBG,EAASD,EAGTE,EAASF,EAEb,IAAInH,EAAQ,CAACoH,EAAQC,GACrB,eAAiBrH,EAAOU,EAAKmB,eAC7B,eAAInB,EAAMV,EAAO5G,KAAK6G,WACtB2G,EAAShG,iBACTT,GAAY,GAGpB,OAAQA,GAELmG,EAhFqB,CAiF9BzF,EAAA,MACa,ICjIX,EAAwC,WACxC,IAAIvI,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GA2CxC,EAA8B,SAAUO,GAKxC,SAAS4N,EAAapN,GAClB,IAAIH,EAAQL,EAAOV,KAAKI,OAASA,KAC7BmB,EAAUL,GAA4B,GAgB1C,OAXAH,EAAMc,WAAaN,EAAQO,UAAYP,EAAQO,UAAY,OAK3Df,EAAMgG,OAASxF,EAAQyF,MAAQzF,EAAQyF,MAAQ,EAK/CjG,EAAMkG,eAAiCrE,IAArBrB,EAAQ2F,SAAyB3F,EAAQ2F,SAAW,IAC/DnG,EA4BX,OAlDA,EAAUuN,EAAc5N,GAgCxB4N,EAAaxO,UAAU0F,YAAc,SAAU1E,GAC3C,IAAIqG,GAAY,EAChB,GAAIrG,EAAgBH,MAAQ+M,EAAA,KAAUC,SAClC7M,EAAgBH,MAAQ+M,EAAA,KAAUa,SAAU,CAC5C,IAAIX,EAAyC9M,EAA6B,cACtE0N,EAAWZ,EAASY,SACxB,GAAIpO,KAAKyB,WAAWf,KACf0N,GAAY,IAAIC,WAAW,IAAMD,GAAY,IAAIC,WAAW,IAAK,CAClE,IAAI5K,EAAM/C,EAAgB+C,IACtBmD,EAAQwH,GAAY,IAAIC,WAAW,GAAKrO,KAAK2G,QAAU3G,KAAK2G,OAC5DW,EAAO7D,EAAI8D,UACf,eAAYD,EAAMV,OAAOpE,EAAWxC,KAAK6G,WACzC2G,EAAShG,iBACTT,GAAY,GAGpB,OAAQA,GAELmH,EAnDsB,CAoD/BzG,EAAA,MACa,I,oCChGX,EAAwC,WACxC,IAAIvI,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GA0BjCuO,EAAO,CACdC,SAAU,WACVC,MAAO,SAyBP,EAAgC,SAAUlO,GAK1C,SAASmO,EAAe3N,GACpB,IAAIH,EAAQX,KACRmB,EAAUL,GAA4B,GAC1CH,EAAQL,EAAOV,KAAKI,KACyC,IAAcA,KAK3EW,EAAM+N,YAAc,EAKpB/N,EAAMgO,WAAa,EAKnBhO,EAAMiO,eAAiCpM,IAArBrB,EAAQ0N,SAAyB1N,EAAQ0N,SAAW,EAKtElO,EAAMkG,eAAiCrE,IAArBrB,EAAQ2F,SAAyB3F,EAAQ2F,SAAW,IAKtEnG,EAAMmO,cAA+BtM,IAApBrB,EAAQ4N,QAAwB5N,EAAQ4N,QAAU,GAKnEpO,EAAMqO,gBACoBxM,IAAtBrB,EAAQ8N,WAA0B9N,EAAQ8N,UAK9CtO,EAAMuO,0BAC8B1M,IAAhCrB,EAAQgO,qBACFhO,EAAQgO,oBAElB,IAAIzN,EAAYP,EAAQO,UAAYP,EAAQO,UAAY,OA4CxD,OAvCAf,EAAMc,WAAaN,EAAQ8G,YACrB,eAAI,OAAmBvG,GACvBA,EAKNf,EAAMyO,YAAc,KAKpBzO,EAAM0O,gBAAa7M,EAKnB7B,EAAM2O,WAKN3O,EAAM4O,WAAQ/M,EAMd7B,EAAM6O,kBAAoB,IAI1B7O,EAAM8O,mBAMN9O,EAAM+O,cAAgB,IACf/O,EA+GX,OA3MA,EAAU8N,EAAgBnO,GAiG1BmO,EAAe/O,UAAUiQ,gBAAkB,WACvC3P,KAAKyP,wBAAqBjN,EAC1B,IAAI8E,EAAOtH,KAAK2D,SAAS4D,UACzBD,EAAKyC,oBAAevH,EAAWxC,KAAK2O,WAAc3O,KAAK2O,WAAa,EAAI,GAAK,EAAK,EAAG3O,KAAKoP,cAQ9FX,EAAe/O,UAAU0F,YAAc,SAAU1E,GAC7C,IAAKV,KAAKyB,WAAWf,GACjB,OAAO,EAEX,IAAIH,EAAOG,EAAgBH,KAC3B,GAAIA,IAAS+M,EAAA,KAAUkB,MACnB,OAAO,EAEX,IAQI5H,EARAnD,EAAM/C,EAAgB+C,IACtBmM,EAAwClP,EAA6B,cAiBzE,GAhBAkP,EAAWpI,iBACPxH,KAAKgP,aACLhP,KAAKoP,YAAc1O,EAAgB0G,YAKnC1G,EAAgBH,MAAQ+M,EAAA,KAAUkB,QAClC5H,EAAQgJ,EAAW3B,OACf,QAAW2B,EAAWC,YAAcC,WAAWC,kBAC/CnJ,GAAS,QAETgJ,EAAWC,YAAcC,WAAWE,iBACpCpJ,GAAS,KAGH,IAAVA,EACA,OAAO,EAGP5G,KAAK2O,WAAa/H,EAEtB,IAAIqJ,EAAMC,KAAKD,WACSzN,IAApBxC,KAAKqP,aACLrP,KAAKqP,WAAaY,KAEjBjQ,KAAKuP,OAASU,EAAMjQ,KAAKqP,WAAarP,KAAKwP,qBAC5CxP,KAAKuP,MAAQ9F,KAAK0G,IAAIvJ,GAAS,EAAI0H,EAAKC,SAAWD,EAAKE,OAE5D,IAAIlH,EAAO7D,EAAI8D,UACf,GAAIvH,KAAKuP,QAAUjB,EAAKC,WAClBjH,EAAK8I,2BAA4BpQ,KAAKkP,qBAaxC,OAZIlP,KAAKyP,mBACLY,aAAarQ,KAAKyP,qBAGdnI,EAAK2C,gBACL3C,EAAK4C,mBAET5C,EAAKc,oBAETpI,KAAKyP,mBAAqBa,WAAWtQ,KAAK2P,gBAAgBrO,KAAKtB,MAAOA,KAAK8O,UAC3ExH,EAAKiJ,YAAY3J,EAAQ5G,KAAK0P,cAAe1P,KAAKoP,aAClDpP,KAAKqP,WAAaY,GACX,EAEXjQ,KAAK0O,aAAe9H,EACpB,IAAI4J,EAAW/G,KAAKgH,IAAIzQ,KAAK8O,UAAYmB,EAAMjQ,KAAKqP,YAAa,GAGjE,OAFAgB,aAAarQ,KAAKsP,YAClBtP,KAAKsP,WAAagB,WAAWtQ,KAAK0Q,iBAAiBpP,KAAKtB,KAAMyD,GAAM+M,IAC7D,GAMX/B,EAAe/O,UAAUgR,iBAAmB,SAAUjN,GAClD,IAAI6D,EAAO7D,EAAI8D,UACXD,EAAK2C,gBACL3C,EAAK4C,mBAET,IAAItD,GAAS,eAAM5G,KAAK0O,aAAc1O,KAAK4O,UAAY5O,KAAK0P,cAAe1P,KAAK4O,UAAY5O,KAAK0P,eAAiB1P,KAAK0P,eACnHpI,EAAK8I,0BAA4BpQ,KAAKkP,wBAEtCtI,EAAQA,EAASA,EAAQ,EAAI,GAAK,EAAK,GAE3C,eAAYU,EAAMV,EAAO5G,KAAKoP,YAAapP,KAAK6G,WAChD7G,KAAKuP,WAAQ/M,EACbxC,KAAK0O,YAAc,EACnB1O,KAAKoP,YAAc,KACnBpP,KAAKqP,gBAAa7M,EAClBxC,KAAKsP,gBAAa9M,GAQtBiM,EAAe/O,UAAUiR,eAAiB,SAAU1B,GAChDjP,KAAKgP,WAAaC,EACbA,IACDjP,KAAKoP,YAAc,OAGpBX,EA5MwB,CA6MjChH,EAAA,MACa,ICnQX,EAAwC,WACxC,IAAIvI,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GAiCxC,EAA6B,SAAUO,GAKvC,SAASsQ,EAAY9P,GACjB,IAAIH,EAAQX,KACRmB,EAAUL,GAA4B,GACtC+P,EAA+D,EAmCnE,OAlCKA,EAAelJ,WAChBkJ,EAAelJ,SAAW,QAE9BhH,EAAQL,EAAOV,KAAKI,KAAM6Q,IAAmB7Q,KAK7CW,EAAMmQ,QAAU,KAKhBnQ,EAAM0J,gBAAa7H,EAKnB7B,EAAMoQ,WAAY,EAKlBpQ,EAAMqQ,eAAiB,EAKvBrQ,EAAMsQ,gBAAmCzO,IAAtBrB,EAAQ+P,UAA0B/P,EAAQ+P,UAAY,GAKzEvQ,EAAMkG,eAAiCrE,IAArBrB,EAAQ2F,SAAyB3F,EAAQ2F,SAAW,IAC/DnG,EA6EX,OAvHA,EAAUiQ,EAAatQ,GAgDvBsQ,EAAYlR,UAAUyI,gBAAkB,SAAUzH,GAC9C,IAAIyQ,EAAgB,EAChBC,EAASpR,KAAKqI,eAAe,GAC7BgJ,EAASrR,KAAKqI,eAAe,GAE7BY,EAAQQ,KAAKmB,MAAMyG,EAAOC,QAAUF,EAAOE,QAASD,EAAOE,QAAUH,EAAOG,SAChF,QAAwB/O,IAApBxC,KAAKqK,WAA0B,CAC/B,IAAIzD,EAAQqC,EAAQjJ,KAAKqK,WACzBrK,KAAKgR,gBAAkBpK,GAClB5G,KAAK+Q,WAAatH,KAAK0G,IAAInQ,KAAKgR,gBAAkBhR,KAAKiR,aACxDjR,KAAK+Q,WAAY,GAErBI,EAAgBvK,EAEpB5G,KAAKqK,WAAapB,EAClB,IAAIxF,EAAM/C,EAAgB+C,IACtB6D,EAAO7D,EAAI8D,UACf,GAAID,EAAKgD,iBAAiBC,WAAa,OAAvC,CAMA,IAAIiH,EAAmB/N,EAAIgO,cAAcC,wBACrCpJ,EAAW,eAAqBtI,KAAKqI,gBACzCC,EAAS,IAAMkJ,EAAiBG,KAChCrJ,EAAS,IAAMkJ,EAAiBI,IAChC5R,KAAK8Q,QAAUrN,EAAI+F,+BAA+BlB,GAE9CtI,KAAK+Q,YACLtN,EAAIoO,SACJvK,EAAKuD,uBAAuBsG,EAAenR,KAAK8Q,YAQxDF,EAAYlR,UAAUmJ,cAAgB,SAAUnI,GAC5C,GAAIV,KAAKqI,eAAerD,OAAS,EAAG,CAChC,IAAIvB,EAAM/C,EAAgB+C,IACtB6D,EAAO7D,EAAI8D,UAEf,OADAD,EAAKyC,eAAe/J,KAAK6G,YAClB,EAGP,OAAO,GAQf+J,EAAYlR,UAAUsK,gBAAkB,SAAUtJ,GAC9C,GAAIV,KAAKqI,eAAerD,QAAU,EAAG,CACjC,IAAIvB,EAAM/C,EAAgB+C,IAQ1B,OAPAzD,KAAK8Q,QAAU,KACf9Q,KAAKqK,gBAAa7H,EAClBxC,KAAK+Q,WAAY,EACjB/Q,KAAKgR,eAAiB,EACjBhR,KAAK8R,wBACNrO,EAAI8D,UAAUa,oBAEX,EAGP,OAAO,GAGRwI,EAxHqB,CAyH9BzG,EAAA,MACa,IC3JX,EAAwC,WACxC,IAAIjL,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GA8BxC,EAA2B,SAAUO,GAKrC,SAASyR,EAAUjR,GACf,IAAIH,EAAQX,KACRmB,EAAUL,GAA4B,GACtC+P,EAA+D,EAyBnE,OAxBKA,EAAelJ,WAChBkJ,EAAelJ,SAAW,QAE9BhH,EAAQL,EAAOV,KAAKI,KAAM6Q,IAAmB7Q,KAK7CW,EAAMmQ,QAAU,KAKhBnQ,EAAMkG,eAAiCrE,IAArBrB,EAAQ2F,SAAyB3F,EAAQ2F,SAAW,IAKtEnG,EAAMqR,mBAAgBxP,EAKtB7B,EAAMsR,gBAAkB,EACjBtR,EAsEX,OAtGA,EAAUoR,EAAWzR,GAsCrByR,EAAUrS,UAAUyI,gBAAkB,SAAUzH,GAC5C,IAAIwR,EAAa,EACbd,EAASpR,KAAKqI,eAAe,GAC7BgJ,EAASrR,KAAKqI,eAAe,GAC7B8J,EAAKf,EAAOG,QAAUF,EAAOE,QAC7Ba,EAAKhB,EAAOE,QAAUD,EAAOC,QAE7BvI,EAAWU,KAAK4I,KAAKF,EAAKA,EAAKC,EAAKA,QACb5P,IAAvBxC,KAAKgS,gBACLE,EAAalS,KAAKgS,cAAgBjJ,GAEtC/I,KAAKgS,cAAgBjJ,EACrB,IAAItF,EAAM/C,EAAgB+C,IACtB6D,EAAO7D,EAAI8D,UACG,GAAd2K,IACAlS,KAAKiS,gBAAkBC,GAG3B,IAAIV,EAAmB/N,EAAIgO,cAAcC,wBACrCpJ,EAAW,eAAqBtI,KAAKqI,gBACzCC,EAAS,IAAMkJ,EAAiBG,KAChCrJ,EAAS,IAAMkJ,EAAiBI,IAChC5R,KAAK8Q,QAAUrN,EAAI+F,+BAA+BlB,GAElD7E,EAAIoO,SACJvK,EAAKgL,yBAAyBJ,EAAYlS,KAAK8Q,UAOnDiB,EAAUrS,UAAUmJ,cAAgB,SAAUnI,GAC1C,GAAIV,KAAKqI,eAAerD,OAAS,EAAG,CAChC,IAAIvB,EAAM/C,EAAgB+C,IACtB6D,EAAO7D,EAAI8D,UACXgL,EAAYvS,KAAKiS,gBAAkB,EAAI,GAAK,EAEhD,OADA3K,EAAKyC,eAAe/J,KAAK6G,UAAW0L,IAC7B,EAGP,OAAO,GAQfR,EAAUrS,UAAUsK,gBAAkB,SAAUtJ,GAC5C,GAAIV,KAAKqI,eAAerD,QAAU,EAAG,CACjC,IAAIvB,EAAM/C,EAAgB+C,IAO1B,OANAzD,KAAK8Q,QAAU,KACf9Q,KAAKgS,mBAAgBxP,EACrBxC,KAAKiS,gBAAkB,EAClBjS,KAAK8R,wBACNrO,EAAI8D,UAAUa,oBAEX,EAGP,OAAO,GAGR2J,EAvGmB,CAwG5B5H,EAAA,MACa,ICvDR,SAASqI,EAAS1R,GACrB,IAAIK,EAAUL,GAA4B,GACtC8D,EAAe,IAAI6N,EAAA,KACnB5K,EAAU,IAAI6K,EAAA,MAAS,KAAO,IAAM,KACpCC,OAAoDnQ,IAA/BrB,EAAQwR,oBAC3BxR,EAAQwR,mBAEVA,GACA/N,EAAae,KAAK,IAAI,GAE1B,IAAIiN,OAA8CpQ,IAA5BrB,EAAQyR,iBAAgCzR,EAAQyR,gBAClEA,GACAhO,EAAae,KAAK,IAAI,EAAgB,CAClCiB,MAAOzF,EAAQ0R,UACf/L,SAAU3F,EAAQ2R,gBAG1B,IAAIC,OAA8BvQ,IAApBrB,EAAQ4R,SAAwB5R,EAAQ4R,QAClDA,GACAnO,EAAae,KAAK,IAAI,EAAQ,CAC1BsC,YAAa9G,EAAQ8G,YACrBJ,QAASA,KAGjB,IAAImL,OAAsCxQ,IAAxBrB,EAAQ6R,aAA4B7R,EAAQ6R,YAC1DA,GACApO,EAAae,KAAK,IAAI,GAE1B,IAAIsN,OAAkCzQ,IAAtBrB,EAAQ8R,WAA0B9R,EAAQ8R,UACtDA,GACArO,EAAae,KAAK,IAAI,EAAU,CAC5BmB,SAAU3F,EAAQ2R,gBAG1B,IAAII,OAAgC1Q,IAArBrB,EAAQ+R,UAAyB/R,EAAQ+R,SACpDA,IACAtO,EAAae,KAAK,IAAI,GACtBf,EAAae,KAAK,IAAI,EAAa,CAC/BiB,MAAOzF,EAAQ0R,UACf/L,SAAU3F,EAAQ2R,iBAG1B,IAAIK,OAA4C3Q,IAA3BrB,EAAQgS,gBAA+BhS,EAAQgS,eAChEA,GACAvO,EAAae,KAAK,IAAI,EAAe,CACjCsC,YAAa9G,EAAQ8G,YACrBnB,SAAU3F,EAAQ2R,gBAG1B,IAAIM,OAA0C5Q,IAA1BrB,EAAQiS,eAA8BjS,EAAQiS,cAMlE,OALIA,GACAxO,EAAae,KAAK,IAAI,EAAS,CAC3BmB,SAAU3F,EAAQ2R,gBAGnBlO,I,kCCvIX,0EAAI3F,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GA0DxCsT,EAAoC,SAAU/S,GAK9C,SAAS+S,EAAmBvS,GACxB,IAAIH,EAAQX,KACRmB,EAAUL,GAA4B,GAiC1C,OAhCAH,EAAQL,EAAOV,KAAKI,KACyC,IAAcA,KACvEmB,EAAQ6I,kBACRrJ,EAAMqJ,gBAAkB7I,EAAQ6I,iBAEhC7I,EAAQgH,kBACRxH,EAAMwH,gBAAkBhH,EAAQgH,iBAEhChH,EAAQmS,kBACR3S,EAAM2S,gBAAkBnS,EAAQmS,iBAEhCnS,EAAQ0H,gBACRlI,EAAMkI,cAAgB1H,EAAQ0H,eAE9B1H,EAAQwG,WACRhH,EAAMgH,SAAWxG,EAAQwG,UAM7BhH,EAAMmR,wBAAyB,EAK/BnR,EAAM4S,iBAAmB,GAKzB5S,EAAM0H,eAAiB,GAChB1H,EA6GX,OApJA1B,EAAUoU,EAAoB/S,GA+C9B+S,EAAmB3T,UAAU8T,gBAAkB,WAC3C,OAAOxT,KAAKqI,eAAerD,QAQ/BqO,EAAmB3T,UAAUsK,gBAAkB,SAAUtJ,GACrD,OAAO,GAOX2S,EAAmB3T,UAAUyI,gBAAkB,SAAUzH,KASzD2S,EAAmB3T,UAAU0F,YAAc,SAAU1E,GACjD,IAAKA,EAAgBkI,cACjB,OAAO,EAEX,IAAI7B,GAAY,EAEhB,GADA/G,KAAKyT,uBAAuB/S,GACxBV,KAAK8R,wBACL,GAAIpR,EAAgBH,MAAQ,OAAoBmT,YAC5C1T,KAAKmI,gBAAgBzH,GAErBA,EAAgBkI,cAAcpB,sBAE7B,GAAI9G,EAAgBH,MAAQ,OAAoBoT,UAAW,CAC5D,IAAIC,EAAY5T,KAAK6I,cAAcnI,GACnCV,KAAK8R,uBACD8B,GAAa5T,KAAKqI,eAAerD,OAAS,QAIlD,GAAItE,EAAgBH,MAAQ,OAAoBsT,YAAa,CACzD,IAAIC,EAAU9T,KAAKgK,gBAAgBtJ,GACnCV,KAAK8R,uBAAyBgC,EAC9B/M,EAAY/G,KAAK2H,SAASmM,QAErBpT,EAAgBH,MAAQ,OAAoBwT,aACjD/T,KAAKsT,gBAAgB5S,GAG7B,OAAQqG,GAOZsM,EAAmB3T,UAAU4T,gBAAkB,SAAU5S,KAOzD2S,EAAmB3T,UAAUmJ,cAAgB,SAAUnI,GACnD,OAAO,GAQX2S,EAAmB3T,UAAUiI,SAAW,SAAUmM,GAC9C,OAAOA,GAMXT,EAAmB3T,UAAU+T,uBAAyB,SAAU/S,GAC5D,GAAIsT,EAAuBtT,GAAkB,CACzC,IAAIuT,EAAUvT,EAAgBkI,cAC1BsL,EAAKD,EAAQE,UAAUC,WACvB1T,EAAgBH,MAAQ,OAAoBoT,iBACrC3T,KAAKuT,iBAAiBW,IAExBxT,EAAgBH,MAAQ,OAAoBsT,aAG5CK,KAAMlU,KAAKuT,oBAFhBvT,KAAKuT,iBAAiBW,GAAMD,GAMhCjU,KAAKqI,eAAiB,eAAUrI,KAAKuT,oBAGtCF,EArJ4B,CAsJrC,QAKK,SAAS/K,EAAS+L,GAIrB,IAHA,IAAIrP,EAASqP,EAAcrP,OACvBuM,EAAU,EACVD,EAAU,EACLvM,EAAI,EAAGA,EAAIC,EAAQD,IACxBwM,GAAW8C,EAActP,GAAGwM,QAC5BD,GAAW+C,EAActP,GAAGuM,QAEhC,MAAO,CAACC,EAAUvM,EAAQsM,EAAUtM,GAOxC,SAASgP,EAAuBtT,GAC5B,IAAIH,EAAOG,EAAgBH,KAC3B,OAAQA,IAAS,OAAoBsT,aACjCtT,IAAS,OAAoBmT,aAC7BnT,IAAS,OAAoBoT,UAEtB,U,kCC1Of,4GAAI1U,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GAoDxC0H,EAA6B,SAAUnH,GAKvC,SAASmH,EAAY3G,GACjB,IAAIH,EAAQL,EAAOV,KAAKI,OAASA,KAsBjC,OAlBAW,EAAMI,GAINJ,EAAMK,KAINL,EAAMM,GACFH,GAAeA,EAAYsE,cAC3BzE,EAAMyE,YAActE,EAAYsE,aAMpCzE,EAAM2T,KAAO,KACb3T,EAAM4T,WAAU,GACT5T,EA8CX,OAzEA1B,EAAUwI,EAAanH,GAmCvBmH,EAAY/H,UAAU8U,UAAY,WAC9B,OAA+BxU,KAAKyU,IAAI,OAAoBC,SAOhEjN,EAAY/H,UAAUiE,OAAS,WAC3B,OAAO3D,KAAKsU,MAQhB7M,EAAY/H,UAAU0F,YAAc,SAAU1E,GAC1C,OAAO,GAQX+G,EAAY/H,UAAU6U,UAAY,SAAUI,GACxC3U,KAAKwF,IAAI,OAAoBkP,OAAQC,IAQzClN,EAAY/H,UAAU8D,OAAS,SAAUC,GACrCzD,KAAKsU,KAAO7Q,GAETgE,EA1EqB,CA2E9B,QAMK,SAASmN,EAAItN,EAAMV,EAAOiO,GAC7B,IAAIC,EAAgBxN,EAAK8B,oBACzB,GAAI0L,EAAe,CACf,IAAI3L,EAAS,CAAC2L,EAAc,GAAKlO,EAAM,GAAIkO,EAAc,GAAKlO,EAAM,IACpEU,EAAKsC,gBAAgB,CACjB9C,cAA2BtE,IAAjBqS,EAA6BA,EAAe,IACtD/K,OAAQ,OACRX,OAAQ7B,EAAKuC,qBAAqBV,MAUvC,SAAS4L,EAAYzN,EAAMV,EAAOoO,EAAYH,GACjD,IAAII,EAAc3N,EAAK4N,UACvB,QAAoB1S,IAAhByS,EAAJ,CAGA,IAAIE,EAAU7N,EAAK8N,mBAAmBH,EAAcrO,GAChDyO,EAAgB/N,EAAKgO,qBAAqBH,GAC1C7N,EAAK2C,gBACL3C,EAAK4C,mBAET5C,EAAKiO,QAAQ,CACT3I,WAAYyI,EACZlO,OAAQ6N,EACRlO,cAA2BtE,IAAjBqS,EAA6BA,EAAe,IACtD/K,OAAQ,UAGD,U,oCCvKf,gRAGA,IAAI0L,EAA0B,qBAAdC,WAA4D,qBAAxBA,UAAUC,UACxDD,UAAUC,UAAUC,cACpB,GAKKC,GAAqC,IAA3BJ,EAAGzP,QAAQ,WAKrB8P,GAAmC,IAA1BL,EAAGzP,QAAQ,YAA4C,GAAxByP,EAAGzP,QAAQ,SAKnD+P,EAAoBD,MACxBL,EAAGzP,QAAQ,iBAAmB,GAC7ByP,EAAGO,MAAM,0CAKNC,GAAmC,IAA1BR,EAAGzP,QAAQ,YAA2C,GAAvByP,EAAGzP,QAAQ,QAKnDkQ,GAAmC,IAA7BT,EAAGzP,QAAQ,aAQjBmQ,EAAiD,qBAArBC,iBAAmCA,iBAAmB,EAMlFC,EAAuD,qBAAtBC,mBACb,qBAApBC,iBACPC,gBAAgBF,kBAKTG,EAAgC,qBAAVC,OAAyBA,MAAM/W,UAAUgX,OAI/DC,EAA0B,WACjC,IAAIC,GAAU,EACd,IACI,IAAIzV,EAAU9B,OAAOwX,eAAe,GAAI,UAAW,CAC/CpC,IAAK,WACDmC,GAAU,KAGlBE,OAAOhT,iBAAiB,IAAK,KAAM3C,GACnC2V,OAAO5S,oBAAoB,IAAK,KAAM/C,GAE1C,MAAO4V,IAGP,OAAOH,EAd0B,I,kCCzDrC,yRAAI3X,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GA2HxCuO,EAAO,CACP0I,MAAO,QACP1Q,YAAa,aACbD,QAAS,UACT4Q,OAAQ,UAKRC,EAAgB,CAMhBC,UAAW,YAMXC,QAAS,UAMTC,UAAW,aAOXC,EAA2B,SAAUhX,GAMrC,SAASgX,EAAU/W,EAAM4C,GACrB,IAAIxC,EAAQL,EAAOV,KAAKI,KAAMO,IAASP,KAOvC,OADAW,EAAMwC,QAAUA,EACTxC,EAEX,OAfA1B,EAAUqY,EAAWhX,GAedgX,EAhBmB,CAiB5B,QAkBEC,EAAsB,SAAUjX,GAKhC,SAASiX,EAAKpW,GACV,IAAIR,EAAQX,KACR6Q,EAA+D,EAC9DA,EAAelJ,WAChBkJ,EAAelJ,SAAW,QAE9BhH,EAAQL,EAAOV,KAAKI,KAAM6Q,IAAmB7Q,KAI7CW,EAAMI,GAINJ,EAAMK,KAINL,EAAMM,GAKNN,EAAM6W,eAAgB,EAKtB7W,EAAM8W,QAAU,KAKhB9W,EAAM+W,aAKN/W,EAAMgX,cAMNhX,EAAMiX,aAKNjX,EAAMkX,WAAY,EAMlBlX,EAAMmX,QAAU3W,EAAQ4W,OAAS5W,EAAQ4W,OAAS,KAMlDpX,EAAMgC,UAAYxB,EAAQyB,SAAWzB,EAAQyB,SAAW,KAMxDjC,EAAMqX,eAAiB7W,EAAQ8W,cAAgB9W,EAAQ8W,cAAgB,GAMvEtX,EAAMuX,MAAkE/W,EAAY,KAMpFR,EAAM4O,MAAQ4I,EAAQxX,EAAMuX,OAO5BvX,EAAMyX,aAAejX,EAAQkX,UAQ7B1X,EAAM2X,WAAanX,EAAQoX,UACrBpX,EAAQoX,UACR5X,EAAM4O,QAAUjB,EAAKjI,QACjB,EACA,EAOV1F,EAAM6X,WACF7X,EAAM4O,QAAUjB,EAAK2I,OACf,EACA9V,EAAQsX,UACJtX,EAAQsX,UACRC,IAMd/X,EAAMgY,iBAAmBxX,EAAQyX,gBAC3BzX,EAAQyX,gBACR,OACN,IAAIC,EAAmB1X,EAAQ0X,iBAC/B,IAAKA,EAAkB,CACnB,IAuBQC,EAvBJC,EAASpY,EAAM4O,MACnB,GAAIwJ,IAAWzK,EAAK2I,OAOhB4B,EAAmB,SAAUG,EAAavM,EAAUwM,GAChD,IAAIC,EAASzM,GAEP,IAAI,OAAO,CAAC0M,IAAKA,MACnBhQ,EAAS,eAAmB6P,EAAY,GAAIC,GAC5CG,EAAgB,eAA0BjQ,EAAQ,eAAmB6P,EAAYA,EAAYhU,OAAS,GAAIiU,IAC9GC,EAAOG,mBAAmBlQ,EAAQM,KAAK4I,KAAK+G,IAC5C,IAAIE,EAAiB,iBAIrB,OAHIA,GACAJ,EAAOK,UAAUN,EAAYK,GAE1BJ,QAKPH,IAAWzK,EAAK0I,MAChB8B,EAAgB,OAEXC,IAAWzK,EAAKhI,YACrBwS,EAAgB,OAEXC,IAAWzK,EAAKjI,UACrByS,EAAgB,QAQpBD,EAAmB,SAAUG,EAAavM,EAAUwM,GAoBhD,OAnBIxM,EACIsM,IAAWzK,EAAKjI,QACZ2S,EAAY,GAAGhU,OAEfyH,EAAS+M,eAAe,CACpBR,EAAY,GAAGS,OAAO,CAACT,EAAY,GAAG,OAI1CvM,EAAS+M,eAAe,IAI5B/M,EAAS+M,eAAeR,GAI5BvM,EAAW,IAAIqM,EAAcE,GAE1BvM,GAoGnB,OA5FA9L,EAAM+Y,kBAAoBb,EAK1BlY,EAAMgZ,sBAC0BnX,IAA5BrB,EAAQyY,gBAAgCzY,EAAQyY,gBAAkB,IAOtEjZ,EAAMkZ,kBAAoB,KAM1BlZ,EAAMmZ,eAAiB,KAMvBnZ,EAAMoZ,aAAe,KAMrBpZ,EAAMqZ,cAAgB,KAMtBrZ,EAAMsZ,YAAc,KAMpBtZ,EAAMuZ,kBAAoB,KAQ1BvZ,EAAMwZ,uBAAyBhZ,EAAQiZ,eACjCjZ,EAAQiZ,eAAiBjZ,EAAQiZ,eACjC,GAMNzZ,EAAM0Z,SAAW,IAAI,OAAY,CAC7BtC,OAAQ,IAAI,OAAa,CACrBuC,iBAAiB,EACjBC,QAAOpZ,EAAQoZ,OAAQpZ,EAAQoZ,QAEnC9X,MAAOtB,EAAQsB,MAAQtB,EAAQsB,MAAQC,IACvC8X,wBAAwB,IAO5B7Z,EAAM8Z,cAAgBtZ,EAAQuZ,aAK9B/Z,EAAMc,WAAaN,EAAQO,UAAYP,EAAQO,UAAY,OAK3Df,EAAMga,mBACFxZ,EAAQyZ,SACRja,EAAMga,mBAAqB,OAG3Bha,EAAMga,mBAAqBxZ,EAAQ0Z,kBAC7B1Z,EAAQ0Z,kBACR,OAEVla,EAAMma,kBAAkB,OAAoBpG,OAAQ/T,EAAMoa,cACnDpa,EA+kBX,OA32BA1B,EAAUsY,EAAMjX,GAoShBiX,EAAK7X,UAAU8D,OAAS,SAAUC,GAC9BnD,EAAOZ,UAAU8D,OAAO5D,KAAKI,KAAMyD,GACnCzD,KAAK+a,gBAOTxD,EAAK7X,UAAUsb,WAAa,WACxB,OAAOhb,KAAKqa,UAQhB9C,EAAK7X,UAAU0F,YAAc,SAAUiH,GAC/BA,EAAMzD,cAAcrI,OAAS,OAAU0a,aAEvC5O,EAAMzD,cAAcpB,iBAExBxH,KAAK6X,UACD7X,KAAKuP,QAAUjB,EAAK0I,OAAShX,KAAK2a,mBAAmBtO,GACzD,IAAI6O,EAAO7O,EAAM9L,OAAS,OAAoBwT,YAC1CoH,GAAO,EACX,IAAKnb,KAAK6X,WACN7X,KAAK2X,eACLtL,EAAM9L,OAAS,OAAoBmT,YAAa,CAChD,IAAIzD,EAAMC,KAAKD,MACXA,EAAMjQ,KAAK2X,eAAiB3X,KAAK2Z,kBACjC3Z,KAAKyX,QAAUpL,EAAM3G,MACrB1F,KAAKwX,eAAiBxX,KAAK6X,UAC3BqD,GAAO,GAGPlb,KAAK2X,mBAAgBnV,EAErBxC,KAAKwX,oBAAuChV,IAAtBxC,KAAK0X,eAC3BrH,aAAarQ,KAAK0X,cAClB1X,KAAK0X,kBAAelV,GA+B5B,OA5BIxC,KAAK6X,WACLxL,EAAM9L,OAAS,OAAoBmT,aACX,OAAxB1T,KAAK8Z,gBACL9Z,KAAKob,cAAc/O,EAAMjF,YACzB+T,GAAO,GAEFnb,KAAK6X,WACVxL,EAAM9L,OAAS,OAAoBsT,YACnCsH,GAAO,EAEFD,GAAQlb,KAAKwT,kBAAoB,GACtC2H,EAAO9O,EAAM9L,OAAS,OAAoBwT,YACtCoH,GAAQnb,KAAK6X,WACb7X,KAAKqb,mBAAmBhP,GACpBrM,KAAKwX,eAELnL,EAAMzD,cAAcpB,mBAGiB,UAApC6E,EAAMzD,cAAc0S,aACxBjP,EAAM9L,OAAS,OAAoBmT,kBACVlR,IAAtBxC,KAAK0X,eACT1X,KAAKqb,mBAAmBhP,IAGvBA,EAAM9L,OAAS,OAAoB0G,WACxCkU,GAAO,GAEJ7a,EAAOZ,UAAU0F,YAAYxF,KAAKI,KAAMqM,IAAU8O,GAO7D5D,EAAK7X,UAAUsK,gBAAkB,SAAUqC,GAEvC,OADArM,KAAKwX,eAAiBxX,KAAK6X,UACvB7X,KAAK6X,WACL7X,KAAKyX,QAAUpL,EAAM3G,MAChB1F,KAAK6Z,mBACN7Z,KAAKub,cAAclP,EAAMjF,aAEtB,GAEFpH,KAAKyB,WAAW4K,IACrBrM,KAAK2X,cAAgBzH,KAAKD,MAC1BjQ,KAAK0X,aAAepH,WAAW,WAC3BtQ,KAAKqb,mBAAmB,IAAI,OAAgB,OAAoBtH,YAAa1H,EAAM5I,IAAK4I,EAAMzD,eAAe,EAAOyD,EAAMmP,cAC5Hla,KAAKtB,MAAOA,KAAK2Z,kBACnB3Z,KAAKyX,QAAUpL,EAAM3G,OACd,IAGP1F,KAAK2X,mBAAgBnV,GACd,IAQf+U,EAAK7X,UAAUmJ,cAAgB,SAAUwD,GACrC,IAAI8O,GAAO,EACX,GAA+B,IAA3Bnb,KAAKwT,kBAML,GALIxT,KAAK0X,eACLrH,aAAarQ,KAAK0X,cAClB1X,KAAK0X,kBAAelV,GAExBxC,KAAKqb,mBAAmBhP,GACpBrM,KAAKwX,cAAe,CACpB,IAAIiE,GAAkBzb,KAAK6Z,kBACvB4B,GACAzb,KAAKub,cAAclP,EAAMjF,aAExBqU,GAAkBzb,KAAK6X,UACxB7X,KAAK0b,gBAEC1b,KAAK6X,WACT4D,GAAkBzb,KAAKuP,QAAUjB,EAAK0I,QACpChX,KAAK2b,UAAUtP,EAAM3G,OACjB1F,KAAK2Y,iBAAiBtM,IACtBrM,KAAK0b,gBAIT1b,KAAKob,cAAc/O,EAAMjF,aAGjC+T,GAAO,OAEFnb,KAAK6X,WACV7X,KAAK4b,eAMb,OAHKT,GAAQnb,KAAKoY,YACd/L,EAAM7E,iBAEH2T,GAOX5D,EAAK7X,UAAU2b,mBAAqB,SAAUhP,GAE1C,GADArM,KAAK4X,aAAevL,EAAMzD,cAAc0S,YACpCtb,KAAKyX,WACFzX,KAAK6X,WAAa7X,KAAKwX,eACrBxX,KAAK6X,YAAc7X,KAAKwX,eAAiB,CAC9C,IAAIqE,EAAS7b,KAAKyX,QACdqE,EAAUzP,EAAM3G,MAChByM,EAAK0J,EAAO,GAAKC,EAAQ,GACzB1J,EAAKyJ,EAAO,GAAKC,EAAQ,GACzBC,EAAkB5J,EAAKA,EAAKC,EAAKA,EAIrC,GAHApS,KAAKwX,cAAgBxX,KAAK6X,UACpBkE,EAAkB/b,KAAKma,uBACvB4B,GAAmB/b,KAAKma,wBACzBna,KAAKwX,cACN,OAGJxX,KAAK6Z,kBACL7Z,KAAKgc,eAAe3P,EAAMjF,YAG1BpH,KAAKic,2BAA2B5P,EAAMjF,WAAW8U,UASzD3E,EAAK7X,UAAUic,UAAY,SAAUjW,GACjC,IAAIyW,GAAK,EACT,GAAInc,KAAK8Z,eAAgB,CACrB,IAAIsC,GAAkB,EAClBC,EAA+B,CAACrc,KAAK6Z,mBACrCyC,EAAOtc,KAAKuP,MAChB,GAAI+M,IAAShO,EAAK0I,MACdmF,GAAK,OAEJ,GAAIG,IAAShO,EAAK2I,OACnBkF,EAAmC,IAA9Bnc,KAAKga,cAAchV,YAEvB,GAAIsX,IAAShO,EAAKhI,YACnB8V,EAAkBpc,KAAKga,cAAchV,OAAShF,KAAKsY,gBAElD,GAAIgE,IAAShO,EAAKjI,QAAS,CAC5B,IAAIkW,EAA6Cvc,KAAkB,cACnEoc,EAAkBG,EAAa,GAAGvX,OAAShF,KAAKsY,WAChD+D,EAA+B,CAC3BE,EAAa,GAAG,GAChBA,EAAa,GAAGA,EAAa,GAAGvX,OAAS,IAGjD,GAAIoX,EAEA,IADA,IAAI3Y,EAAMzD,KAAK2D,SACNoB,EAAI,EAAGyX,EAAKH,EAA6BrX,OAAQD,EAAIyX,EAAIzX,IAAK,CACnE,IAAI0X,EAAmBJ,EAA6BtX,GAChD2X,EAAcjZ,EAAIkZ,uBAAuBF,GACzCtK,EAAKzM,EAAM,GAAKgX,EAAY,GAC5BtK,EAAK1M,EAAM,GAAKgX,EAAY,GAC5BzE,EAAgBjY,KAAK6X,UAAY,EAAI7X,KAAKgY,eAE9C,GADAmE,EAAK1S,KAAK4I,KAAKF,EAAKA,EAAKC,EAAKA,IAAO6F,EACjCkE,EAAI,CACJnc,KAAK6Z,kBAAoB4C,EACzB,QAKhB,OAAON,GAMX5E,EAAK7X,UAAUuc,2BAA6B,SAAUjD,GAClD,GAAKhZ,KAAK+Z,aAIL,CACD,IAAI6C,EAAkB5c,KAAK+Z,aAAavT,cACxCoW,EAAgBpD,eAAeR,QAL/BhZ,KAAK+Z,aAAe,IAAI,OAAQ,IAAI,OAAMf,IAC1ChZ,KAAK6c,yBAWbtF,EAAK7X,UAAUod,gCAAkC,SAAUrQ,GAClDzM,KAAKia,cACNja,KAAKia,YAAc,IAAI,QAE3B,IAAI8C,EAAOtQ,EAASuQ,cAAc,GAC9BC,EAAiBjd,KAAKia,YAAYzT,cACjCyW,GAKDA,EAAeC,mBAAmBH,EAAKI,YAAaJ,EAAKK,sBACzDH,EAAeI,YALfJ,EAAiB,IAAI,OAAWF,EAAKK,qBAAsBL,EAAKI,aAChEnd,KAAKia,YAAYqD,YAAYL,KAYrC1F,EAAK7X,UAAU6b,cAAgB,SAAUgC,GACrC,IAAItE,EAAajZ,KAAK2D,SAAS4D,UAAUiW,gBACzCxd,KAAK6Z,kBAAoB0D,EACrBvd,KAAKuP,QAAUjB,EAAK0I,MACpBhX,KAAKga,cAAgBuD,EAAMrB,QAEtBlc,KAAKuP,QAAUjB,EAAKjI,SACzBrG,KAAKga,cAAgB,CAAC,CAACuD,EAAMrB,QAASqB,EAAMrB,UAC5Clc,KAAKka,kBAAoBla,KAAKga,cAAc,IAG5Cha,KAAKga,cAAgB,CAACuD,EAAMrB,QAASqB,EAAMrB,SAE3Clc,KAAKka,oBACLla,KAAKia,YAAc,IAAI,OAAQ,IAAI,OAAWja,KAAKka,qBAEvD,IAAIzN,EAAWzM,KAAK0Z,kBAAkB1Z,KAAKga,mBAAexX,EAAWyW,GACrEjZ,KAAK8Z,eAAiB,IAAI,OACtB9Z,KAAKya,eACLza,KAAK8Z,eAAe2D,gBAAgBzd,KAAKya,eAE7Cza,KAAK8Z,eAAewD,YAAY7Q,GAChCzM,KAAK6c,wBACL7c,KAAKmG,cAAc,IAAImR,EAAUJ,EAAcC,UAAWnX,KAAK8Z,kBAOnEvC,EAAK7X,UAAUsc,eAAiB,SAAU5U,GACtC,IAGI4R,EAAa0E,EAHbja,EAAMzD,KAAK2D,SACX8I,EAAWzM,KAAK8Z,eAAetT,cAC/ByS,EAAaxV,EAAI8D,UAAUiW,gBAqB/B,GAnBIxd,KAAKuP,QAAUjB,EAAK0I,MACpB0G,EAAO1d,KAAKga,cAEPha,KAAKuP,QAAUjB,EAAKjI,SACzB2S,EAA4ChZ,KAAkB,cAAE,GAChE0d,EAAO1E,EAAYA,EAAYhU,OAAS,GACpChF,KAAK2b,UAAUlY,EAAIkZ,uBAAuBvV,MAE1CA,EAAapH,KAAK6Z,kBAAkBqC,WAIxClD,EAAchZ,KAAKga,cACnB0D,EAAO1E,EAAYA,EAAYhU,OAAS,IAE5C0Y,EAAK,GAAKtW,EAAW,GACrBsW,EAAK,GAAKtW,EAAW,GACrBpH,KAAK0Z,kBAC0B1Z,KAAkB,cAAGyM,EAAUwM,GAC1DjZ,KAAK+Z,aAAc,CACnB,IAAI6C,EAAkB5c,KAAK+Z,aAAavT,cACxCoW,EAAgBpD,eAAepS,GAEnC,GAAIqF,EAAShG,YAAc,OAAaJ,SACpCrG,KAAKuP,QAAUjB,EAAKjI,QACpBrG,KAAK8c,gCAAuD,QAE3D,GAAI9c,KAAKka,kBAAmB,CAC7B,IAAI+C,EAAiBjd,KAAKia,YAAYzT,cACtCyW,EAAezD,eAAexZ,KAAKka,mBAEvCla,KAAK6c,yBAOTtF,EAAK7X,UAAU0b,cAAgB,SAAUhU,GACrC,IAEIuW,EACA3E,EAHAvM,EAAWzM,KAAK8Z,eAAetT,cAC/ByS,EAAajZ,KAAK2D,SAAS4D,UAAUiW,gBAGrClB,EAAOtc,KAAKuP,MACZ+M,IAAShO,EAAKhI,aAAegW,IAAShO,EAAK2I,QAC3CjX,KAAK6Z,kBAAoBzS,EAAW8U,QACpClD,EAA4ChZ,KAAkB,cAC1DgZ,EAAYhU,QAAUhF,KAAKwY,aACvBxY,KAAK6X,UACLmB,EAAY4E,MAGZD,GAAO,GAGf3E,EAAYrT,KAAKyB,EAAW8U,SAC5Blc,KAAK0Z,kBAAkBV,EAAavM,EAAUwM,IAEzCqD,IAAShO,EAAKjI,UACnB2S,EAA4ChZ,KAAkB,cAAE,GAC5DgZ,EAAYhU,QAAUhF,KAAKwY,aACvBxY,KAAK6X,UACLmB,EAAY4E,MAGZD,GAAO,GAGf3E,EAAYrT,KAAKyB,EAAW8U,SACxByB,IACA3d,KAAK6Z,kBAAoBb,EAAY,IAEzChZ,KAAK0Z,kBAAkB1Z,KAAKga,cAAevN,EAAUwM,IAEzDjZ,KAAKic,2BAA2B7U,EAAW8U,SAC3Clc,KAAK6c,wBACDc,GACA3d,KAAK0b,iBAQbnE,EAAK7X,UAAUme,gBAAkB,WAC7B,GAAK7d,KAAK8Z,eAAV,CAGA,IAEId,EAFAvM,EAAWzM,KAAK8Z,eAAetT,cAC/ByS,EAAajZ,KAAK2D,SAAS4D,UAAUiW,gBAErClB,EAAOtc,KAAKuP,MAChB,GAAI+M,IAAShO,EAAKhI,aAAegW,IAAShO,EAAK2I,OAAQ,CAGnD,GAFA+B,EAA4ChZ,KAAkB,cAC9DgZ,EAAYhT,QAAQ,EAAG,GACnBgT,EAAYhU,QAAU,EAAG,CACzBhF,KAAK6Z,kBAAoBb,EAAYA,EAAYhU,OAAS,GAAGkX,QAC7D,IAAIO,EAAmBzc,KAAK6Z,kBAAkBqC,QAC9ClD,EAAYA,EAAYhU,OAAS,GAAKyX,EACtCzc,KAAKic,2BAA2BQ,GAEpCzc,KAAK0Z,kBAAkBV,EAAavM,EAAUwM,GAC1CxM,EAAShG,YAAc,OAAaJ,SAAWrG,KAAKia,aACpDja,KAAK8c,gCAAuD,QAG/D,GAAIR,IAAShO,EAAKjI,QAAS,CAC5B2S,EAA4ChZ,KAAkB,cAAE,GAChEgZ,EAAYhT,QAAQ,EAAG,GACvB,IAAIiX,EAAiBjd,KAAKia,YAAYzT,cACtC,GAAIwS,EAAYhU,QAAU,EAAG,CACrByX,EAAmBzD,EAAYA,EAAYhU,OAAS,GAAGkX,QAC3DlD,EAAYA,EAAYhU,OAAS,GAAKyX,EACtCzc,KAAKic,2BAA2BQ,GAEpCQ,EAAezD,eAAeR,GAC9BhZ,KAAK0Z,kBAAkB1Z,KAAKga,cAAevN,EAAUwM,GAE9B,IAAvBD,EAAYhU,QACZhF,KAAK4b,eAET5b,KAAK6c,0BAQTtF,EAAK7X,UAAUgc,cAAgB,WAC3B,IAAIoC,EAAgB9d,KAAK+d,gBACzB,GAAKD,EAAL,CAGA,IAAI9E,EAAchZ,KAAKga,cACnBvN,EAAWqR,EAActX,cACzByS,EAAajZ,KAAK2D,SAAS4D,UAAUiW,gBACrCxd,KAAKuP,QAAUjB,EAAKhI,aAEpB0S,EAAY4E,MACZ5d,KAAK0Z,kBAAkBV,EAAavM,EAAUwM,IAEzCjZ,KAAKuP,QAAUjB,EAAKjI,UAEI,EAAc,GAAGuX,MAC9C5d,KAAK0Z,kBAAkBV,EAAavM,EAAUwM,GAC9CD,EAAcvM,EAASuR,kBAGvBhe,KAAKkY,QAAU,OAAa+F,YAC5BH,EAAcR,YAAY,IAAI,OAAW,CAA+B,KAEnEtd,KAAKkY,QAAU,OAAagG,kBACjCJ,EAAcR,YAAY,IAAI,OAAgB,CAA8B,KAEvEtd,KAAKkY,QAAU,OAAaiG,eACjCL,EAAcR,YAAY,IAAI,OAAa,CAA8B,KAG7Etd,KAAKmG,cAAc,IAAImR,EAAUJ,EAAcE,QAAS0G,IAEpD9d,KAAK2C,WACL3C,KAAK2C,UAAUgD,KAAKmY,GAEpB9d,KAAK8X,SACL9X,KAAK8X,QAAQsG,WAAWN,KAQhCvG,EAAK7X,UAAUqe,cAAgB,WAC3B/d,KAAK6Z,kBAAoB,KACzB,IAAIiE,EAAgB9d,KAAK8Z,eAKzB,OAJA9Z,KAAK8Z,eAAiB,KACtB9Z,KAAK+Z,aAAe,KACpB/Z,KAAKia,YAAc,KACnBja,KAAKqa,SAAS9V,YAAY8Z,OAAM,GACzBP,GAMXvG,EAAK7X,UAAUkc,aAAe,WAC1B,IAAIkC,EAAgB9d,KAAK+d,gBACrBD,GACA9d,KAAKmG,cAAc,IAAImR,EAAUJ,EAAcG,UAAWyG,KAYlEvG,EAAK7X,UAAU4e,kBAAoB,SAAUtF,GACzC,IAMIuD,EANAD,EAAOtc,KAAKuP,MACZgP,GAAcve,KAAK8Z,eAMvB,GALIyE,GACAve,KAAKub,cAAcvC,EAAY,IAI/BsD,IAAShO,EAAKhI,aAAegW,IAAShO,EAAK2I,OAC3CsF,EAA6Cvc,KAAkB,kBAE9D,IAAIsc,IAAShO,EAAKjI,QAOnB,OANAkW,EACIvc,KAAKga,eAAiBha,KAAKga,cAAchV,OACLhF,KAAkB,cAAE,GAClD,GAKVue,GACAhC,EAAaiC,QAGjBjC,EAAaqB,MAEb,IAAK,IAAI7Y,EAAI,EAAGA,EAAIiU,EAAYhU,OAAQD,IACpC/E,KAAKob,cAAcpC,EAAYjU,IAEnC,IAAI0Z,EAASzF,EAAYA,EAAYhU,OAAS,GAE9ChF,KAAKob,cAAcqD,GACnBze,KAAKgc,eAAeyC,IAcxBlH,EAAK7X,UAAUuG,OAAS,SAAU9C,GAC9B,IAAIsJ,EAAWtJ,EAAQqD,cACnBkY,EAAajS,EACjBzM,KAAK8Z,eAAiB3W,EACtBnD,KAAKga,cAAgB0E,EAAWV,iBAChC,IAAIN,EAAO1d,KAAKga,cAAcha,KAAKga,cAAchV,OAAS,GAC1DhF,KAAK6Z,kBAAoB6D,EAAKxB,QAC9Blc,KAAKga,cAAcrU,KAAK+X,EAAKxB,SAC7Blc,KAAK+Z,aAAe,IAAI,OAAQ,IAAI,OAAM2D,IAC1C1d,KAAK6c,wBACL7c,KAAKmG,cAAc,IAAImR,EAAUJ,EAAcC,UAAWnX,KAAK8Z,kBAMnEvC,EAAK7X,UAAUmd,sBAAwB,WACnC,IAAI8B,EAAiB,GACjB3e,KAAK8Z,gBACL6E,EAAehZ,KAAK3F,KAAK8Z,gBAEzB9Z,KAAKia,aACL0E,EAAehZ,KAAK3F,KAAKia,aAEzBja,KAAK+Z,cACL4E,EAAehZ,KAAK3F,KAAK+Z,cAE7B,IAAI6E,EAAgB5e,KAAKqa,SAAS9V,YAClCqa,EAAcP,OAAM,GACpBO,EAAcC,YAAYF,IAK9BpH,EAAK7X,UAAUqb,aAAe,WAC1B,IAAItX,EAAMzD,KAAK2D,SACXgR,EAAS3U,KAAKwU,YACb/Q,GAAQkR,GACT3U,KAAK4b,eAET5b,KAAKqa,SAAS7W,OAAOmR,EAASlR,EAAM,OAEjC8T,EA52Bc,CA62BvB,QAIF,SAAS7U,IACL,IAAI0D,EAAS,iBACb,OAAO,SAAUjD,EAASyJ,GACtB,OAAOxG,EAAOjD,EAAQqD,cAAcC,YAqF5C,SAAS0R,EAAQ5X,GACb,OAAQA,GACJ,KAAK,OAAayW,MAClB,KAAK,OAAaiH,YACd,OAAO3P,EAAK0I,MAChB,KAAK,OAAa1Q,YAClB,KAAK,OAAa4X,kBACd,OAAO5P,EAAKhI,YAChB,KAAK,OAAaD,QAClB,KAAK,OAAa8X,cACd,OAAO7P,EAAKjI,QAChB,KAAK,OAAa4Q,OACd,OAAO3I,EAAK2I,OAChB,QACI,MAAM,IAAI6H,MAAM,iBAAmBve,IAGhC,U,kCC1pCf,4KAAItB,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GAuD5C,SAASgf,EAAoB5a,GACzB,OAC+D,EAAMhB,QACK,EACjEA,QAGiD,EAAMiB,QAEF,EAAa,aAHtE,EAMT,IAAI4a,EAAc,GAwBdC,EAAsB,SAAU3e,GAKhC,SAAS2e,EAAKne,GACV,IAAIH,EAAQX,KACRmB,EAAUL,GAA4B,GACtC+P,EAA+D,EAiFnE,OAhFKA,EAAe7G,kBAChB6G,EAAe7G,gBAAkB,QAEhC6G,EAAelJ,WAChBkJ,EAAelJ,SAAW,QAE9BhH,EAAQL,EAAOV,KAAKI,KAAM6Q,IAAmB7Q,KAK7CW,EAAMmX,QAAU3W,EAAQ4W,OAAS5W,EAAQ4W,OAAS,KAKlDpX,EAAMue,aAA6B1c,IAAnBrB,EAAQge,QAAuBhe,EAAQge,OAKvDxe,EAAMye,WAAyB5c,IAAjBrB,EAAQke,MAAqBle,EAAQke,KAKnD1e,EAAMgC,UAAYxB,EAAQyB,SAAWzB,EAAQyB,SAAW,KAKxDjC,EAAM2e,sBAAwB,GAK9B3e,EAAM4e,2BAA6B,GAOnC5e,EAAM6e,wBAA0B,GAQhC7e,EAAM8e,iBAAmB,GAKzB9e,EAAM+e,qBACyBld,IAA3BrB,EAAQwe,eAA+Bxe,EAAQwe,eAAiB,GAMpEhf,EAAMif,OAAS,IAAI,OAMnBjf,EAAMkf,qBAAuB,CACzB,MAASlf,EAAMmf,qBAAqBxe,KAAKX,GACzC,WAAcA,EAAMof,0BAA0Bze,KAAKX,GACnD,WAAcA,EAAMof,0BAA0Bze,KAAKX,GACnD,QAAWA,EAAMqf,uBAAuB1e,KAAKX,GAC7C,WAAcA,EAAMsf,0BAA0B3e,KAAKX,GACnD,gBAAmBA,EAAMuf,+BAA+B5e,KAAKX,GAC7D,aAAgBA,EAAMwf,4BAA4B7e,KAAKX,GACvD,mBAAsBA,EAAMyf,kCAAkC9e,KAAKX,GACnE,OAAUA,EAAM0f,sBAAsB/e,KAAKX,IAExCA,EA4YX,OApeA1B,EAAUggB,EAAM3e,GAiGhB2e,EAAKvf,UAAU0e,WAAa,SAAUjb,EAASmd,GAC3C,IAAIC,OAA0B/d,IAAf8d,GAA2BA,EACtCE,EAAc,eAAOrd,GACrBsJ,EAAWtJ,EAAQqD,cACvB,GAAIiG,EAAU,CACV,IAAIgU,EAAYzgB,KAAK6f,qBAAqBpT,EAAShG,WACnD,GAAIga,EAAW,CACXzgB,KAAKwf,wBAAwBgB,GAAe/T,EAASiU,UAAU,kBAC/D,IAAIC,EAC+D,GAEnE,GADAF,EAAUE,EAAUlU,GACI,IAApBkU,EAAS3b,OACThF,KAAK4f,OAAOgB,OAAO,eAAeD,EAAS,IAAK,CAC5Cxd,QAASA,EACT0d,QAASF,EAAS,UAGrB,GAAIA,EAAS3b,OAAS,EAAG,CAC1B,IAAI8b,EAAUH,EAASld,KAAI,SAAUsd,GAAK,OAAO,eAAeA,MAC5DC,EAAeL,EAASld,KAAI,SAAUod,GAAW,MAAO,CACxD1d,QAASA,EACT0d,QAASA,MAEb7gB,KAAK4f,OAAOqB,KAAKH,EAASE,KAIlCT,IACAvgB,KAAKuf,2BAA2BiB,GAAe,eAAOrd,EAAS,OAAU+d,OAAQlhB,KAAKmhB,qBAAsBnhB,QAOpHif,EAAKvf,UAAU0hB,mBAAqB,SAAUje,GAC1CnD,KAAKoe,WAAWjb,IAMpB8b,EAAKvf,UAAU2hB,sBAAwB,SAAUle,GAC7CnD,KAAKshB,cAAcne,IAMvB8b,EAAKvf,UAAU6hB,aAAe,WAC1B,IAAI3e,EAOJ,OANI5C,KAAK2C,UACLC,EAAW5C,KAAK2C,UAEX3C,KAAK8X,UACVlV,EAAW5C,KAAK8X,QAAQ1U,eAErBR,GAMXqc,EAAKvf,UAAU0F,YAAc,SAAUjB,GACnC,IAAIqd,EAASxhB,KAAKyhB,OAAOtd,EAAIuB,MAAOvB,EAAIiD,WAAYjD,EAAIV,KAKxD,OAJI+d,IACArd,EAAIiD,WAAaoa,EAAOrC,OAAOjD,MAAM,EAAG,GACxC/X,EAAIuB,MAAQ8b,EAAOE,aAEhBphB,EAAOZ,UAAU0F,YAAYxF,KAAKI,KAAMmE,IAMnD8a,EAAKvf,UAAUiiB,kBAAoB,SAAUxd,GACzC,IAAIhB,EAAU4b,EAAoB5a,GAClCnE,KAAKoe,WAAWjb,IAMpB8b,EAAKvf,UAAUkiB,qBAAuB,SAAUzd,GAC5C,IAAIhB,EAAU4b,EAAoB5a,GAClCnE,KAAKshB,cAAcne,IAMvB8b,EAAKvf,UAAUyhB,qBAAuB,SAAUhd,GAC5C,IAAIhB,EAA0DgB,EAAU,OACxE,GAAInE,KAAK8R,uBAAwB,CAC7B,IAAI+P,EAAM,eAAO1e,GACX0e,KAAO7hB,KAAKyf,mBACdzf,KAAKyf,iBAAiBoC,GAAO1e,QAIjCnD,KAAK8hB,eAAe3e,IAQ5B8b,EAAKvf,UAAUmJ,cAAgB,SAAU1E,GACrC,IAAI4d,EAAmB,eAAU/hB,KAAKyf,kBAKtC,OAJIsC,EAAiB/c,SACjB+c,EAAiBne,QAAQ5D,KAAK8hB,eAAexgB,KAAKtB,OAClDA,KAAKyf,iBAAmB,KAErB,GASXR,EAAKvf,UAAU4hB,cAAgB,SAAUne,EAAS6e,GAC9C,IAAIC,OAA8Bzf,IAAjBwf,GAA6BA,EAC1CxB,EAAc,eAAOrd,GACrB+e,EAASliB,KAAKwf,wBAAwBgB,GAC1C,GAAI0B,EAAQ,CACR,IAAIC,EAAQniB,KAAK4f,OACbwC,EAAkB,GACtBD,EAAME,gBAAgBH,GAAQ,SAAUI,GAChCnf,IAAYmf,EAAKnf,SACjBif,EAAgBzc,KAAK2c,MAG7B,IAAK,IAAIvd,EAAIqd,EAAgBpd,OAAS,EAAGD,GAAK,IAAKA,EAC/Cod,EAAM7c,OAAO8c,EAAgBrd,IAGjCkd,IACA,eAAcjiB,KAAKuf,2BAA2BiB,WACvCxgB,KAAKuf,2BAA2BiB,KAS/CvB,EAAKvf,UAAU8D,OAAS,SAAUC,GAC9B,IAAIC,EAAa1D,KAAK2D,SAClB4e,EAAOviB,KAAKsf,sBACZ1c,EAAkE5C,KAAKuhB,eACvE7d,IACA6e,EAAK3e,QAAQ,QACb2e,EAAKvd,OAAS,EACdpC,EAASgB,QAAQ5D,KAAKqhB,sBAAsB/f,KAAKtB,QAErDM,EAAOZ,UAAU8D,OAAO5D,KAAKI,KAAMyD,GAC/BA,IACIzD,KAAK2C,UACL4f,EAAK5c,KAAK,eAAO3F,KAAK2C,UAAW,OAAoBoB,IAAK/D,KAAK2hB,kBAAmB3hB,MAAO,eAAOA,KAAK2C,UAAW,OAAoBqB,OAAQhE,KAAK4hB,qBAAsB5hB,OAElKA,KAAK8X,SACVyK,EAAK5c,KAAK,eAAO3F,KAAK8X,QAAS,OAAgB0K,WAAYxiB,KAAK2hB,kBAAmB3hB,MAAO,eAAOA,KAAK8X,QAAS,OAAgB2K,cAAeziB,KAAK4hB,qBAAsB5hB,OAE7K4C,EAASgB,QAAQ5D,KAAKohB,mBAAmB9f,KAAKtB,SAStDif,EAAKvf,UAAU+hB,OAAS,SAAU/b,EAAOgd,EAAiBjf,GACtD,IAAIkf,EAAYlf,EAAImf,uBAAuB,CACvCld,EAAM,GAAK1F,KAAK0f,gBAChBha,EAAM,GAAK1F,KAAK0f,kBAEhBmD,EAAapf,EAAImf,uBAAuB,CACxCld,EAAM,GAAK1F,KAAK0f,gBAChBha,EAAM,GAAK1F,KAAK0f,kBAEhBoD,EAAM,eAAe,CAACH,EAAWE,IACjClC,EAAW3gB,KAAK4f,OAAOmD,YAAYD,GACnCE,EAAiBrC,EAAS3b,OAC9B,GAAuB,IAAnBge,EACA,OAAO,KAEX,IAEIC,EAFAhK,EAAaxV,EAAI8D,UAAUiW,gBAC3B0F,EAAsB,eAAmBR,EAAiBzJ,GAE1DkK,EAAqBzK,IACrB0K,EAAwBpjB,KAAK0f,gBAAkB1f,KAAK0f,gBACpD2D,EAAY,WACZ,GAAIJ,EAAe,CACf,IAAIvB,EAAcje,EAAIkZ,uBAAuBsG,GACzCK,EAAuB,eAAgB5d,EAAOgc,GAClD,GAAI4B,GAAwBF,EACxB,MAAO,CACHjE,OAAQ8D,EACRvB,YAAa,CACTjY,KAAK8Z,MAAM7B,EAAY,IACvBjY,KAAK8Z,MAAM7B,EAAY,MAKvC,OAAO,MAEX,GAAI1hB,KAAKkf,QAAS,CACd,IAAK,IAAIna,EAAI,EAAGA,EAAIie,IAAkBje,EAAG,CACrC,IAAIye,EAAc7C,EAAS5b,GACvBye,EAAYrgB,QAAQqD,cAAcC,YAAc,OAAawQ,QAC7DuM,EAAY3C,QAAQjd,SAAQ,SAAUub,GAClC,IAAIsE,EAAkB,eAAmBtE,EAAQlG,GAC7CrS,EAAQ,eAAgBsc,EAAqBO,GAC7C7c,EAAQuc,IACRF,EAAgB9D,EAChBgE,EAAqBvc,MAKrC,IAAI4a,EAAS6B,IACb,GAAI7B,EACA,OAAOA,EAGf,GAAIxhB,KAAKof,MAAO,CACZ,IAASra,EAAI,EAAGA,EAAIie,IAAkBje,EAAG,CACrC,IAAIoa,EAAS,KACTqE,EAAc7C,EAAS5b,GAC3B,GAAIye,EAAYrgB,QAAQqD,cAAcC,YAAc,OAAawQ,OAAQ,CACrE,IAAIyM,EAAiBF,EAAYrgB,QAAQqD,cACrC8S,EAAiB,iBACjBA,IACAoK,EAAiBA,EACZ3W,QACAwM,UAAUD,EAAgBL,IAEnCkG,EAAS,eAAiB,eAAgB+D,EACS,GAAmBjK,OAErE,CACD,IAAI0K,EAAKH,EAAY3C,QAAS+C,EAAeD,EAAG,GAAIE,EAAaF,EAAG,GAEhEE,IACA7E,EAAY,GAAK,eAAmB4E,EAAc3K,GAClD+F,EAAY,GAAK,eAAmB6E,EAAY5K,GAChDkG,EAAS,eAAiB+D,EAAqBlE,IAGvD,GAAIG,EAAQ,CACR,IAAIvY,EAAQ,eAAgBsc,EAAqB/D,GAC7CvY,EAAQuc,IACRF,EAAgB9D,EAChBgE,EAAqBvc,IAI7B4a,EAAS6B,IACb,GAAI7B,EACA,OAAOA,EAGf,OAAO,MAMXvC,EAAKvf,UAAUoiB,eAAiB,SAAU3e,GACtCnD,KAAKshB,cAAcne,GAAS,GAC5BnD,KAAKoe,WAAWjb,GAAS,IAO7B8b,EAAKvf,UAAU2gB,sBAAwB,SAAUM,EAAUlU,GACvD,IAAIwM,EAAajZ,KAAK2D,SAAS4D,UAAUiW,gBACrCkG,EAAiBjX,EACjB6M,EAAiB,iBACjBA,IACAoK,EAAqEA,EAAe3W,QAAQwM,UAAUD,EAAgBL,IAE1H,IAAI6K,EAAU,eAAWJ,GACrBpK,GACAwK,EAAQvK,UAAUN,EAAYK,GAGlC,IADA,IAAIN,EAAc8K,EAAQ9F,iBAAiB,GAClCjZ,EAAI,EAAGyX,EAAKxD,EAAYhU,OAAS,EAAGD,EAAIyX,IAAMzX,EACnD4b,EAAShb,KAAKqT,EAAYkD,MAAMnX,EAAGA,EAAI,KAQ/Cka,EAAKvf,UAAU0gB,kCAAoC,SAAUO,EAAUlU,GAEnE,IADA,IAAIsX,EAAatX,EAASuX,qBACjBjf,EAAI,EAAGA,EAAIgf,EAAW/e,SAAUD,EAAG,CACxC,IAAI0b,EAAYzgB,KAAK6f,qBAAqBkE,EAAWhf,GAAG0B,WACpDga,GACAA,EAAUE,EAAUoD,EAAWhf,MAS3Cka,EAAKvf,UAAUqgB,0BAA4B,SAAUY,EAAUlU,GAE3D,IADA,IAAIuM,EAAcvM,EAASuR,iBAClBjZ,EAAI,EAAGyX,EAAKxD,EAAYhU,OAAS,EAAGD,EAAIyX,IAAMzX,EACnD4b,EAAShb,KAAKqT,EAAYkD,MAAMnX,EAAGA,EAAI,KAQ/Cka,EAAKvf,UAAUwgB,+BAAiC,SAAUS,EAAUlU,GAEhE,IADA,IAAIwX,EAAQxX,EAASuR,iBACZ9X,EAAI,EAAGge,EAAKD,EAAMjf,OAAQkB,EAAIge,IAAMhe,EAEzC,IADA,IAAI8S,EAAciL,EAAM/d,GACfnB,EAAI,EAAGyX,EAAKxD,EAAYhU,OAAS,EAAGD,EAAIyX,IAAMzX,EACnD4b,EAAShb,KAAKqT,EAAYkD,MAAMnX,EAAGA,EAAI,KASnDka,EAAKvf,UAAUugB,0BAA4B,SAAUU,EAAUlU,GAC3DA,EAASuR,iBAAiBpa,SAAQ,SAAUugB,GACxCxD,EAAShb,KAAK,CAACwe,QAQvBlF,EAAKvf,UAAUygB,4BAA8B,SAAUQ,EAAUlU,GAE7D,IADA,IAAI2X,EAAW3X,EAASuR,iBACfqG,EAAI,EAAGC,EAAKF,EAASpf,OAAQqf,EAAIC,IAAMD,EAE5C,IADA,IAAIE,EAAQH,EAASC,GACZne,EAAI,EAAGge,EAAKK,EAAMvf,OAAQkB,EAAIge,IAAMhe,EAEzC,IADA,IAAI8S,EAAcuL,EAAMre,GACfnB,EAAI,EAAGyX,EAAKxD,EAAYhU,OAAS,EAAGD,EAAIyX,IAAMzX,EACnD4b,EAAShb,KAAKqT,EAAYkD,MAAMnX,EAAGA,EAAI,KAUvDka,EAAKvf,UAAUogB,qBAAuB,SAAUa,EAAUlU,GACtDkU,EAAShb,KAAK,CAAC8G,EAASuR,oBAO5BiB,EAAKvf,UAAUsgB,uBAAyB,SAAUW,EAAUlU,GAExD,IADA,IAAI8X,EAAQ9X,EAASuR,iBACZ9X,EAAI,EAAGge,EAAKK,EAAMvf,OAAQkB,EAAIge,IAAMhe,EAEzC,IADA,IAAI8S,EAAcuL,EAAMre,GACfnB,EAAI,EAAGyX,EAAKxD,EAAYhU,OAAS,EAAGD,EAAIyX,IAAMzX,EACnD4b,EAAShb,KAAKqT,EAAYkD,MAAMnX,EAAGA,EAAI,KAI5Cka,EArec,CAsevB,QACa,U,kCC5jBA,QACXvK,OAAQ,W,kCCPZ,4KAAIzV,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,KACzFP,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,IAZ3C,GAsDxCykB,EAAkB,CAMlBC,cAAe,iBAOfC,EAA6B,SAAUpkB,GAKvC,SAASokB,EAAYxC,GACjB,IAAIvhB,EAAQL,EAAOV,KAAKI,KAAMwkB,EAAgBC,gBAAkBzkB,KAOhE,OADAW,EAAMuhB,OAASA,EACRvhB,EAEX,OAdA1B,EAAUylB,EAAapkB,GAchBokB,EAfqB,CAgB9B,QAoBEC,EAAwB,SAAUrkB,GAKlC,SAASqkB,EAAO7jB,GACZ,IAAIH,EAAQX,KACRmB,EAAUL,GAAe,GA+F7B,OA9FAH,EAAQL,EAAOV,KAAKI,KAAoD,IAAcA,KAItFW,EAAMI,GAINJ,EAAMK,KAINL,EAAMM,GAMNN,EAAMc,WAAaN,EAAQO,UAAYP,EAAQO,UAAY,OAM3Df,EAAMikB,QAAU,KAMhBjkB,EAAMkkB,gBAAkB,KAMxBlkB,EAAM+e,qBACyBld,IAA3BrB,EAAQwe,eAA+Bxe,EAAQwe,eAAiB,GAMpEhf,EAAMmkB,kBAAmB,EAMzBnkB,EAAMokB,eAAiB,KAMvBpkB,EAAMqkB,eAAiB,KAClBlkB,IACDA,EAAc,IAOlBH,EAAMskB,eAAiB,IAAI,OAAY,CACnClN,OAAQ,IAAI,OAAa,CACrBuC,iBAAiB,EACjBC,QAASzZ,EAAYyZ,QAEzB9X,MAAO3B,EAAYokB,SACbpkB,EAAYokB,SACZC,IACNC,sBAAsB,EACtB5K,wBAAwB,IAO5B7Z,EAAM0kB,eAAiB,IAAI,OAAY,CACnCtN,OAAQ,IAAI,OAAa,CACrBuC,iBAAiB,EACjBC,QAASzZ,EAAYyZ,QAEzB9X,MAAO3B,EAAYwkB,aACbxkB,EAAYwkB,aACZC,IACNH,sBAAsB,EACtB5K,wBAAwB,IAExB1Z,EAAYohB,QACZvhB,EAAM6kB,UAAU1kB,EAAYohB,QAEzBvhB,EA4OX,OAjVA1B,EAAU0lB,EAAQrkB,GA6GlBqkB,EAAOjlB,UAAU+lB,cAAgB,SAAU/f,EAAOjC,GAC9C,IAAIif,EAAkBjf,EAAI+F,+BAA+B9D,GACrDggB,EAAiB,SAAUC,EAAGvmB,GAC9B,OAAQ,eAAyBsjB,EAAiBiD,GAC9C,eAAyBjD,EAAiBtjB,IAE9C8iB,EAASliB,KAAK4lB,oBAClB,GAAI1D,EAAQ,CAER,IAAIvB,EAAWkF,EAAY3D,GAC3BvB,EAASmF,KAAKJ,GACd,IAAIK,EAAiBpF,EAAS,GAC1BxB,EAAS,eAAiBuD,EAAiBqD,GAC3CrE,EAAcje,EAAI6F,+BAA+B6V,GAErD,GAAI,eAAmBzZ,EAAOgc,IAAgB1hB,KAAK0f,gBAAiB,CAEhE,IAAIsG,EAASviB,EAAI6F,+BAA+Byc,EAAe,IAC3DE,EAASxiB,EAAI6F,+BAA+Byc,EAAe,IAC3DG,EAAe,eAA0BxE,EAAasE,GACtDG,EAAe,eAA0BzE,EAAauE,GACtDG,EAAO3c,KAAK4I,KAAK5I,KAAK4c,IAAIH,EAAcC,IAM5C,OALAnmB,KAAK8kB,iBAAmBsB,GAAQpmB,KAAK0f,gBACjC1f,KAAK8kB,mBACL3F,EACI+G,EAAeC,EAAeJ,EAAe,GAAKA,EAAe,IAElE5G,GAGf,OAAO,MAMXwF,EAAOjlB,UAAU2b,mBAAqB,SAAU3a,GAC5C,IAAIgF,EAAQhF,EAAgBgF,MACxBjC,EAAM/C,EAAgB+C,IACtB0b,EAASnf,KAAKylB,cAAc/f,EAAOjC,GAClC0b,IACDA,EAAS1b,EAAI+F,+BAA+B9D,IAEhD1F,KAAKsmB,8BAA8BnH,IAOvCwF,EAAOjlB,UAAU6mB,6BAA+B,SAAUrE,GACtD,IAAIsE,EAAgBxmB,KAAK+kB,eAmBzB,OAlBKyB,EAWItE,EAIDsE,EAAclJ,YAAY,eAAkB4E,IAH5CsE,EAAclJ,iBAAY9a,IAP1BgkB,EAJCtE,EAIe,IAAI,OAAQ,eAAkBA,IAH9B,IAAI,OAAQ,IAKhCliB,KAAK+kB,eAAiByB,EACtBxmB,KAAKilB,eAAe1gB,YAAY6Z,WAAWoI,IAUxCA,GAOX7B,EAAOjlB,UAAU4mB,8BAAgC,SAAUnH,GACvD,IAAIsH,EAAgBzmB,KAAKglB,eACzB,GAAKyB,EAKA,CACD,IAAIha,EAAWga,EAAcjgB,cAC7BiG,EAAS+M,eAAe2F,QANxBsH,EAAgB,IAAI,OAAQ,IAAI,OAAMtH,IACtCnf,KAAKglB,eAAiByB,EACtBzmB,KAAKqlB,eAAe9gB,YAAY6Z,WAAWqI,GAM/C,OAAOA,GAMX9B,EAAOjlB,UAAU0F,YAAc,SAAU1E,GACrC,OAAKA,EAAgBkI,gBAAkB5I,KAAKyB,WAAWf,KAInDA,EAAgBH,MAAQ,OAAoBwT,aAC3C/T,KAAK8R,wBACN9R,KAAKqb,mBAAmB3a,GAG5BJ,EAAOZ,UAAU0F,YAAYxF,KAAKI,KAAMU,IAEjC,IAOXikB,EAAOjlB,UAAUsK,gBAAkB,SAAUtJ,GACzC,IAAIgF,EAAQhF,EAAgBgF,MACxBjC,EAAM/C,EAAgB+C,IACtBye,EAASliB,KAAK4lB,oBACdzG,EAASnf,KAAKylB,cAAc/f,EAAOjC,GAEnCijB,EAAmB,SAAUvC,GAC7B,IAAIwC,EAAK,KACLC,EAAK,KAaT,OAZIzC,EAAM,IAAMjC,EAAO,GACnByE,EAAKzE,EAAO,GAEPiC,EAAM,IAAMjC,EAAO,KACxByE,EAAKzE,EAAO,IAEZiC,EAAM,IAAMjC,EAAO,GACnB0E,EAAK1E,EAAO,GAEPiC,EAAM,IAAMjC,EAAO,KACxB0E,EAAK1E,EAAO,IAEL,OAAPyE,GAAsB,OAAPC,EACR,CAACD,EAAIC,GAET,MAEX,GAAIzH,GAAU+C,EAAQ,CAClB,IAAI2E,EAAI1H,EAAO,IAAM+C,EAAO,IAAM/C,EAAO,IAAM+C,EAAO,GAAK/C,EAAO,GAAK,KACnE2H,EAAI3H,EAAO,IAAM+C,EAAO,IAAM/C,EAAO,IAAM+C,EAAO,GAAK/C,EAAO,GAAK,KAE7D,OAAN0H,GAAoB,OAANC,EACd9mB,KAAK6kB,gBAAkBkC,EAAgBL,EAAiBvH,IAG7C,OAAN0H,EACL7mB,KAAK6kB,gBAAkBmC,EAAeN,EAAiB,CAACG,EAAG3E,EAAO,KAAMwE,EAAiB,CAACG,EAAG3E,EAAO,MAEzF,OAAN4E,IACL9mB,KAAK6kB,gBAAkBmC,EAAeN,EAAiB,CAACxE,EAAO,GAAI4E,IAAKJ,EAAiB,CAACxE,EAAO,GAAI4E,WAKzG3H,EAAS1b,EAAI+F,+BAA+B9D,GAC5C1F,KAAKwlB,UAAU,CAACrG,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,KACxDnf,KAAK6kB,gBAAkBkC,EAAgB5H,GAE3C,OAAO,GAMXwF,EAAOjlB,UAAUyI,gBAAkB,SAAUzH,GACzC,GAAIV,KAAK6kB,gBAAiB,CACtB,IAAInC,EAAkBhiB,EAAgB0G,WACtCpH,KAAKwlB,UAAUxlB,KAAK6kB,gBAAgBnC,IACpC1iB,KAAKsmB,8BAA8B5D,KAQ3CiC,EAAOjlB,UAAUmJ,cAAgB,SAAUnI,GACvCV,KAAK6kB,gBAAkB,KAEvB,IAAI3C,EAASliB,KAAK4lB,oBAIlB,OAHK1D,GAA8B,IAApB,eAAQA,IACnBliB,KAAKwlB,UAAU,OAEZ,GAQXb,EAAOjlB,UAAU8D,OAAS,SAAUC,GAChCzD,KAAKilB,eAAezhB,OAAOC,GAC3BzD,KAAKqlB,eAAe7hB,OAAOC,GAC3BnD,EAAOZ,UAAU8D,OAAO5D,KAAKI,KAAMyD,IAQvCkhB,EAAOjlB,UAAUghB,UAAY,WACzB,OAAO,eAAa1gB,KAAK4lB,oBAAqB5lB,KAAK2D,SAAS4D,UAAUiW,kBAQ1EmH,EAAOjlB,UAAUkmB,kBAAoB,WACjC,OAAO5lB,KAAK4kB,SAQhBD,EAAOjlB,UAAU8lB,UAAY,SAAUtD,GAEnCliB,KAAK4kB,QAAU1C,GAAkB,KACjCliB,KAAKumB,6BAA6BrE,GAClCliB,KAAKmG,cAAc,IAAIue,EAAY1kB,KAAK4kB,WAErCD,EAlVgB,CAmVzB,QAMF,SAASQ,IACL,IAAI1iB,EAAQ,iBACZ,OAAO,SAAUU,EAASyJ,GACtB,OAAOnK,EAAM,OAAa4D,UAQlC,SAASkf,IACL,IAAI9iB,EAAQ,iBACZ,OAAO,SAAUU,EAASyJ,GACtB,OAAOnK,EAAM,OAAauU,QAOlC,SAAS+P,EAAgBE,GACrB,OAAO,SAAU9C,GACb,OAAO,eAAe,CAAC8C,EAAY9C,KAQ3C,SAAS6C,EAAeE,EAASC,GAC7B,OAAID,EAAQ,IAAMC,EAAQ,GACf,SAAUhD,GACb,OAAO,eAAe,CAAC+C,EAAS,CAAC/C,EAAM,GAAIgD,EAAQ,OAGlDD,EAAQ,IAAMC,EAAQ,GACpB,SAAUhD,GACb,OAAO,eAAe,CAAC+C,EAAS,CAACC,EAAQ,GAAIhD,EAAM,OAIhD,KAOf,SAAS0B,EAAY3D,GACjB,MAAO,CACH,CACI,CAACA,EAAO,GAAIA,EAAO,IACnB,CAACA,EAAO,GAAIA,EAAO,KAEvB,CACI,CAACA,EAAO,GAAIA,EAAO,IACnB,CAACA,EAAO,GAAIA,EAAO,KAEvB,CACI,CAACA,EAAO,GAAIA,EAAO,IACnB,CAACA,EAAO,GAAIA,EAAO,KAEvB,CACI,CAACA,EAAO,GAAIA,EAAO,IACnB,CAACA,EAAO,GAAIA,EAAO,MAIhB","file":"js/chunk-1c882902.3cb7f362.js","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport { TRUE } from '../functions.js';\nimport { clear } from '../obj.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { extend, includes } from '../array.js';\nimport { getUid } from '../util.js';\nimport { never, shiftKeyOnly, singleClick } from '../events/condition.js';\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n    /**\n     * Triggered when feature(s) has been (de)selected.\n     * @event SelectEvent#select\n     * @api\n     */\n    SELECT: 'select',\n};\n/**\n * A function that takes an {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = /** @class */ (function (_super) {\n    __extends(SelectEvent, _super);\n    /**\n     * @param {SelectEventType} type The event type.\n     * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n     * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n     *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     */\n    function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Selected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.selected = selected;\n        /**\n         * Deselected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.deselected = deselected;\n        /**\n         * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return SelectEvent;\n}(Event));\nexport { SelectEvent };\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nvar originalFeatureStyles = {};\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = /** @class */ (function (_super) {\n    __extends(Select, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Select(opt_options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {SelectOnSignature<void>}\n         */\n        _this.un;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         */\n        _this.boundAddFeature_ = _this.addFeature_.bind(_this);\n        /**\n         * @private\n         */\n        _this.boundRemoveFeature_ = _this.removeFeature_.bind(_this);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : singleClick;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.addCondition_ = options.addCondition ? options.addCondition : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.removeCondition_ = options.removeCondition\n            ? options.removeCondition\n            : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.toggleCondition_ = options.toggleCondition\n            ? options.toggleCondition\n            : shiftKeyOnly;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.multi_ = options.multi ? options.multi : false;\n        /**\n         * @private\n         * @type {FilterFunction}\n         */\n        _this.filter_ = options.filter ? options.filter : TRUE;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n        /**\n         * @private\n         * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n         */\n        _this.style_ =\n            options.style !== undefined ? options.style : getDefaultStyleFunction();\n        /**\n         * @private\n         * @type {import(\"../Collection.js\").default}\n         */\n        _this.features_ = options.features || new Collection();\n        /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n        var layerFilter;\n        if (options.layers) {\n            if (typeof options.layers === 'function') {\n                layerFilter = options.layers;\n            }\n            else {\n                var layers_1 = options.layers;\n                layerFilter = function (layer) {\n                    return includes(layers_1, layer);\n                };\n            }\n        }\n        else {\n            layerFilter = TRUE;\n        }\n        /**\n         * @private\n         * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n         */\n        _this.layerFilter_ = layerFilter;\n        /**\n         * An association between selected feature (key)\n         * and layer (value)\n         * @private\n         * @type {Object<string, import(\"../layer/Layer.js\").default>}\n         */\n        _this.featureLayerAssociation_ = {};\n        return _this;\n    }\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @private\n     */\n    Select.prototype.addFeatureLayerAssociation_ = function (feature, layer) {\n        this.featureLayerAssociation_[getUid(feature)] = layer;\n    };\n    /**\n     * Get the selected features.\n     * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n     * @api\n     */\n    Select.prototype.getFeatures = function () {\n        return this.features_;\n    };\n    /**\n     * Returns the Hit-detection tolerance.\n     * @return {number} Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.getHitTolerance = function () {\n        return this.hitTolerance_;\n    };\n    /**\n     * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n     * a selected feature.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n     * @return {import('../layer/Vector.js').default} Layer.\n     * @api\n     */\n    Select.prototype.getLayer = function (feature) {\n        return /** @type {import('../layer/Vector.js').default} */ (this.featureLayerAssociation_[getUid(feature)]);\n    };\n    /**\n     * Hit-detection tolerance. Pixels inside the radius around the given position\n     * will be checked for features.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.setHitTolerance = function (hitTolerance) {\n        this.hitTolerance_ = hitTolerance;\n    };\n    /**\n     * Remove the interaction from its current map, if any,  and attach it to a new\n     * map, if any. Pass `null` to just remove the interaction from the current map.\n     * @param {import(\"../PluggableMap.js\").default|null} map Map.\n     * @api\n     */\n    Select.prototype.setMap = function (map) {\n        var currentMap = this.getMap();\n        if (currentMap && this.style_) {\n            this.features_.forEach(this.restorePreviousStyle_.bind(this));\n        }\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            this.features_.addEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n            this.features_.addEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n            if (this.style_) {\n                this.features_.forEach(this.applySelectedStyle_.bind(this));\n            }\n        }\n        else {\n            this.features_.removeEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n            this.features_.removeEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.addFeature_ = function (evt) {\n        var feature = evt.element;\n        if (this.style_) {\n            this.applySelectedStyle_(feature);\n        }\n        if (!this.getLayer(feature)) {\n            var layer = /** @type {VectorLayer} */ (this.getMap()\n                .getAllLayers()\n                .find(function (layer) {\n                if (layer instanceof VectorLayer &&\n                    layer.getSource() &&\n                    layer.getSource().hasFeature(feature)) {\n                    return layer;\n                }\n            }));\n            if (layer) {\n                this.addFeatureLayerAssociation_(feature, layer);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.removeFeature_ = function (evt) {\n        var feature = evt.element;\n        if (this.style_) {\n            this.restorePreviousStyle_(feature);\n        }\n    };\n    /**\n     * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n     */\n    Select.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Select.prototype.applySelectedStyle_ = function (feature) {\n        var key = getUid(feature);\n        if (!(key in originalFeatureStyles)) {\n            originalFeatureStyles[key] = feature.getStyle();\n        }\n        feature.setStyle(this.style_);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Select.prototype.restorePreviousStyle_ = function (feature) {\n        var interactions = this.getMap().getInteractions().getArray();\n        for (var i = interactions.length - 1; i >= 0; --i) {\n            var interaction = interactions[i];\n            if (interaction !== this &&\n                interaction instanceof Select &&\n                interaction.getStyle() &&\n                interaction.getFeatures().getArray().lastIndexOf(feature) !== -1) {\n                feature.setStyle(interaction.getStyle());\n                return;\n            }\n        }\n        var key = getUid(feature);\n        feature.setStyle(originalFeatureStyles[key]);\n        delete originalFeatureStyles[key];\n    };\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @private\n     */\n    Select.prototype.removeFeatureLayerAssociation_ = function (feature) {\n        delete this.featureLayerAssociation_[getUid(feature)];\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n     * selected state of features.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {Select}\n     */\n    Select.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var add = this.addCondition_(mapBrowserEvent);\n        var remove = this.removeCondition_(mapBrowserEvent);\n        var toggle = this.toggleCondition_(mapBrowserEvent);\n        var set = !add && !remove && !toggle;\n        var map = mapBrowserEvent.map;\n        var features = this.getFeatures();\n        var deselected = [];\n        var selected = [];\n        if (set) {\n            // Replace the currently selected feature(s) with the feature(s) at the\n            // pixel, or clear the selected feature(s) if there is no feature at\n            // the pixel.\n            clear(this.featureLayerAssociation_);\n            map.forEachFeatureAtPixel(mapBrowserEvent.pixel, \n            /**\n             * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n             * @param {import(\"../layer/Layer.js\").default} layer Layer.\n             * @return {boolean|undefined} Continue to iterate over the features.\n             */\n            function (feature, layer) {\n                if (this.filter_(feature, layer)) {\n                    this.addFeatureLayerAssociation_(feature, layer);\n                    selected.push(feature);\n                    return !this.multi_;\n                }\n            }.bind(this), {\n                layerFilter: this.layerFilter_,\n                hitTolerance: this.hitTolerance_,\n            });\n            for (var i = features.getLength() - 1; i >= 0; --i) {\n                var feature = features.item(i);\n                var index = selected.indexOf(feature);\n                if (index > -1) {\n                    // feature is already selected\n                    selected.splice(index, 1);\n                }\n                else {\n                    features.remove(feature);\n                    deselected.push(feature);\n                }\n            }\n            if (selected.length !== 0) {\n                features.extend(selected);\n            }\n        }\n        else {\n            // Modify the currently selected feature(s).\n            map.forEachFeatureAtPixel(mapBrowserEvent.pixel, \n            /**\n             * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n             * @param {import(\"../layer/Layer.js\").default} layer Layer.\n             * @return {boolean|undefined} Continue to iterate over the features.\n             */\n            function (feature, layer) {\n                if (this.filter_(feature, layer)) {\n                    if ((add || toggle) && !includes(features.getArray(), feature)) {\n                        this.addFeatureLayerAssociation_(feature, layer);\n                        selected.push(feature);\n                    }\n                    else if ((remove || toggle) &&\n                        includes(features.getArray(), feature)) {\n                        deselected.push(feature);\n                        this.removeFeatureLayerAssociation_(feature);\n                    }\n                    return !this.multi_;\n                }\n            }.bind(this), {\n                layerFilter: this.layerFilter_,\n                hitTolerance: this.hitTolerance_,\n            });\n            for (var j = deselected.length - 1; j >= 0; --j) {\n                features.remove(deselected[j]);\n            }\n            features.extend(selected);\n        }\n        if (selected.length > 0 || deselected.length > 0) {\n            this.dispatchEvent(new SelectEvent(SelectEventType.SELECT, selected, deselected, mapBrowserEvent));\n        }\n        return true;\n    };\n    return Select;\n}(Interaction));\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n    extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n    return function (feature) {\n        if (!feature.getGeometry()) {\n            return null;\n        }\n        return styles[feature.getGeometry().getType()];\n    };\n}\nexport default Select;\n//# sourceMappingURL=Select.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n     * doubleclick) and eventually zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    DoubleClickZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n            var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n            var map = mapBrowserEvent.map;\n            var anchor = mapBrowserEvent.coordinate;\n            var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, anchor, this.duration_);\n            browserEvent.preventDefault();\n            stopEvent = true;\n        }\n        return !stopEvent;\n    };\n    return DoubleClickZoom;\n}(Interaction));\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { all, focusWithTabindex, noModifierKeys, primaryAction, } from '../events/condition.js';\nimport { easeOut } from '../easing.js';\nimport { rotate as rotateCoordinate, scale as scaleCoordinate, } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        var condition = options.condition\n            ? options.condition\n            : all(noModifierKeys, primaryAction);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!this.panning_) {\n            this.panning_ = true;\n            this.getMap().getView().beginInteraction();\n        }\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1],\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenterInternal(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n        mapBrowserEvent.originalEvent.preventDefault();\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = view.getCenterInternal();\n                var centerpx = map.getPixelFromCoordinateInternal(center);\n                var dest = map.getCoordinateFromPixelInternal([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle),\n                ]);\n                view.animateInternal({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut,\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { altShiftKeysOnly, mouseActionButton, mouseOnly, } from '../events/condition.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotationInternal(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport { mouseActionButton } from '../events/condition.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend',\n    /**\n     * Triggered upon drag box canceled.\n     * @event DragBoxEvent#boxcancel\n     * @api\n     */\n    BOXCANCEL: 'boxcancel',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\nexport { DragBoxEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {DragBoxOnSignature<void>}\n         */\n        _this.un;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        if (options.onBoxEnd) {\n            _this.onBoxEnd = options.onBoxEnd;\n        }\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : mouseActionButton;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition\n            ? options.boxEndCondition\n            : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.box_.setMap(null);\n        var completeBox = this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel);\n        if (completeBox) {\n            this.onBoxEnd(mapBrowserEvent);\n        }\n        this.dispatchEvent(new DragBoxEvent(completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL, mapBrowserEvent.coordinate, mapBrowserEvent));\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragBox.prototype.onBoxEnd = function (event) { };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            minArea: options.minArea,\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragZoom.prototype.onBoxEnd = function (event) {\n        var map = this.getMap();\n        var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n        var geometry = this.getGeometry();\n        if (this.out_) {\n            var rotatedExtent = view.rotatedExtentForGeometry(geometry);\n            var resolution = view.getResolutionForExtentInternal(rotatedExtent);\n            var factor = view.getResolution() / resolution;\n            geometry = geometry.clone();\n            geometry.scale(factor * factor);\n        }\n        view.fitInternal(geometry, {\n            duration: this.duration_,\n            easing: easeOut,\n        });\n    };\n    return DragZoom;\n}(DragBox));\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { pan } from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport { rotate as rotateCoordinate } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return (noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent));\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ =\n            options.condition !== undefined\n                ? options.condition\n                : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ =\n            options.pixelDelta !== undefined ? options.pixelDelta : 128;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n     * pressed).\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardPan}\n     */\n    KeyboardPan.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var keyCode = keyEvent.keyCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (keyCode == KeyCode.DOWN ||\n                    keyCode == KeyCode.LEFT ||\n                    keyCode == KeyCode.RIGHT ||\n                    keyCode == KeyCode.UP)) {\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n                var deltaX = 0, deltaY = 0;\n                if (keyCode == KeyCode.DOWN) {\n                    deltaY = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.LEFT) {\n                    deltaX = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.RIGHT) {\n                    deltaX = mapUnitsDelta;\n                }\n                else {\n                    deltaY = mapUnitsDelta;\n                }\n                var delta = [deltaX, deltaY];\n                rotateCoordinate(delta, view.getRotation());\n                pan(view, delta, this.duration_);\n                keyEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardPan;\n}(Interaction));\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { targetNotEditable } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n     * key pressed was '+' or '-').\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardZoom}\n     */\n    KeyboardZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN ||\n            mapBrowserEvent.type == EventType.KEYPRESS) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var charCode = keyEvent.charCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n                var map = mapBrowserEvent.map;\n                var delta = charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n                var view = map.getView();\n                zoomByDelta(view, delta, undefined, this.duration_);\n                keyEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardZoom;\n}(Interaction));\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX } from '../has.js';\nimport { all, always, focusWithTabindex } from '../events/condition.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel',\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ =\n            options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.constrainResolution_ =\n            options.constrainResolution !== undefined\n                ? options.constrainResolution\n                : false;\n        var condition = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.deltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0, this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        wheelEvent.preventDefault();\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n        }\n        var view = map.getView();\n        if (this.mode_ === Mode.TRACKPAD &&\n            !(view.getConstrainResolution() || this.constrainResolution_)) {\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.timeout_);\n            view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = -clamp(this.totalDelta_, -this.maxDelta_ * this.deltaPerZoom_, this.maxDelta_ * this.deltaPerZoom_) / this.deltaPerZoom_;\n        if (view.getConstrainResolution() || this.constrainResolution_) {\n            // view has a zoom constraint, zoom by 1\n            delta = delta ? (delta > 0 ? 1 : -1) : 0;\n        }\n        zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotationInternal(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolutionInternal(scaleDelta, this.anchor_);\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined\n        ? options.altShiftDragRotate\n        : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            onFocusOnly: options.onFocusOnly,\n            kinetic: kinetic,\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate : true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            onFocusOnly: options.onFocusOnly,\n            duration: options.zoomDuration,\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, PointerEvent>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<PointerEvent>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Returns the current number of pointers involved in the interaction,\n     * e.g. `2` when two fingers are used.\n     * @return {number} The number of pointers.\n     * @api\n     */\n    PointerInteraction.prototype.getPointerCount = function () {\n        return this.targetPointers.length;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!mapBrowserEvent.originalEvent) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n                // prevent page scrolling during dragging\n                mapBrowserEvent.originalEvent.preventDefault();\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence =\n                    handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.originalEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return (type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP);\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport { easeOut, linear } from '../easing.js';\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions} [opt_options] Options.\n     */\n    function Interaction(opt_options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {InteractionOnSignature<void>}\n         */\n        _this.un;\n        if (opt_options && opt_options.handleEvent) {\n            _this.handleEvent = opt_options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default|null}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default|null} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default|null} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenterInternal();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animateInternal({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center),\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut,\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport var SAFARI_BUG_237906 = SAFARI &&\n    !!(ua.indexOf('version/15.4') >= 0 ||\n        ua.match(/cpu (os|iphone os) 15_4 like mac os x/));\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' &&\n    typeof OffscreenCanvas !== 'undefined' &&\n    self instanceof WorkerGlobalScope; //eslint-disable-line\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n/**\n * @type {boolean}\n */\nexport var PASSIVE_EVENT_LISTENERS = (function () {\n    var passive = false;\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passive = true;\n            },\n        });\n        window.addEventListener('_', null, options);\n        window.removeEventListener('_', null, options);\n    }\n    catch (error) {\n        // passive not supported\n    }\n    return passive;\n})();\n//# sourceMappingURL=has.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, { fromCircle, makeRegular } from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { always, noModifierKeys, shiftKeyOnly } from '../events/condition.js';\nimport { boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, } from '../extent.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { fromUserCoordinate, getUserProjection } from '../proj.js';\nimport { squaredDistance as squaredCoordinateDistance } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/GeometryType.js\").default} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    CIRCLE: 'Circle',\n};\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n    /**\n     * Triggered upon feature draw start\n     * @event DrawEvent#drawstart\n     * @api\n     */\n    DRAWSTART: 'drawstart',\n    /**\n     * Triggered upon feature draw end\n     * @event DrawEvent#drawend\n     * @api\n     */\n    DRAWEND: 'drawend',\n    /**\n     * Triggered upon feature draw abortion\n     * @event DrawEvent#drawabort\n     * @api\n     */\n    DRAWABORT: 'drawabort',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = /** @class */ (function (_super) {\n    __extends(DrawEvent, _super);\n    /**\n     * @param {DrawEventType} type Type.\n     * @param {Feature} feature The feature drawn.\n     */\n    function DrawEvent(type, feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being drawn.\n         * @type {Feature}\n         * @api\n         */\n        _this.feature = feature;\n        return _this;\n    }\n    return DrawEvent;\n}(Event));\nexport { DrawEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nvar Draw = /** @class */ (function (_super) {\n    __extends(Draw, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function Draw(options) {\n        var _this = this;\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /***\n         * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {DrawOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.shouldHandle_ = false;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.downPx_ = null;\n        /**\n         * @type {?}\n         * @private\n         */\n        _this.downTimeout_;\n        /**\n         * @type {number|undefined}\n         * @private\n         */\n        _this.lastDragTime_;\n        /**\n         * Pointer type of the last pointermove event\n         * @type {string}\n         * @private\n         */\n        _this.pointerType_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.freehand_ = false;\n        /**\n         * Target source for drawn features.\n         * @type {VectorSource|null}\n         * @private\n         */\n        _this.source_ = options.source ? options.source : null;\n        /**\n         * Target collection for drawn features.\n         * @type {import(\"../Collection.js\").default<Feature>|null}\n         * @private\n         */\n        _this.features_ = options.features ? options.features : null;\n        /**\n         * Pixel distance for snapping.\n         * @type {number}\n         * @private\n         */\n        _this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n        /**\n         * Geometry type.\n         * @type {import(\"../geom/GeometryType.js\").default}\n         * @private\n         */\n        _this.type_ = /** @type {import(\"../geom/GeometryType.js\").default} */ (options.type);\n        /**\n         * Drawing mode (derived from geometry type.\n         * @type {Mode}\n         * @private\n         */\n        _this.mode_ = getMode(_this.type_);\n        /**\n         * Stop click, singleclick, and doubleclick events from firing during drawing.\n         * Default is `false`.\n         * @type {boolean}\n         * @private\n         */\n        _this.stopClick_ = !!options.stopClick;\n        /**\n         * The number of points that must be drawn before a polygon ring or line\n         * string can be finished.  The default is 3 for polygon rings and 2 for\n         * line strings.\n         * @type {number}\n         * @private\n         */\n        _this.minPoints_ = options.minPoints\n            ? options.minPoints\n            : _this.mode_ === Mode.POLYGON\n                ? 3\n                : 2;\n        /**\n         * The number of points that can be drawn before a polygon ring or line string\n         * is finished. The default is no restriction.\n         * @type {number}\n         * @private\n         */\n        _this.maxPoints_ =\n            _this.mode_ === Mode.CIRCLE\n                ? 2\n                : options.maxPoints\n                    ? options.maxPoints\n                    : Infinity;\n        /**\n         * A function to decide if a potential finish coordinate is permissible\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.finishCondition_ = options.finishCondition\n            ? options.finishCondition\n            : TRUE;\n        var geometryFunction = options.geometryFunction;\n        if (!geometryFunction) {\n            var mode_1 = _this.mode_;\n            if (mode_1 === Mode.CIRCLE) {\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n                 * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, geometry, projection) {\n                    var circle = geometry\n                        ? /** @type {Circle} */ (geometry)\n                        : new Circle([NaN, NaN]);\n                    var center = fromUserCoordinate(coordinates[0], projection);\n                    var squaredLength = squaredCoordinateDistance(center, fromUserCoordinate(coordinates[coordinates.length - 1], projection));\n                    circle.setCenterAndRadius(center, Math.sqrt(squaredLength));\n                    var userProjection = getUserProjection();\n                    if (userProjection) {\n                        circle.transform(projection, userProjection);\n                    }\n                    return circle;\n                };\n            }\n            else {\n                var Constructor_1;\n                if (mode_1 === Mode.POINT) {\n                    Constructor_1 = Point;\n                }\n                else if (mode_1 === Mode.LINE_STRING) {\n                    Constructor_1 = LineString;\n                }\n                else if (mode_1 === Mode.POLYGON) {\n                    Constructor_1 = Polygon;\n                }\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n                 * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, geometry, projection) {\n                    if (geometry) {\n                        if (mode_1 === Mode.POLYGON) {\n                            if (coordinates[0].length) {\n                                // Add a closing coordinate to match the first\n                                geometry.setCoordinates([\n                                    coordinates[0].concat([coordinates[0][0]]),\n                                ]);\n                            }\n                            else {\n                                geometry.setCoordinates([]);\n                            }\n                        }\n                        else {\n                            geometry.setCoordinates(coordinates);\n                        }\n                    }\n                    else {\n                        geometry = new Constructor_1(coordinates);\n                    }\n                    return geometry;\n                };\n            }\n        }\n        /**\n         * @type {GeometryFunction}\n         * @private\n         */\n        _this.geometryFunction_ = geometryFunction;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.dragVertexDelay_ =\n            options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n        /**\n         * Finish coordinate for the feature (first point for polygons, last point for\n         * linestrings).\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.finishCoordinate_ = null;\n        /**\n         * Sketch feature.\n         * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n         * @private\n         */\n        _this.sketchFeature_ = null;\n        /**\n         * Sketch point.\n         * @type {Feature<Point>}\n         * @private\n         */\n        _this.sketchPoint_ = null;\n        /**\n         * Sketch coordinates. Used when drawing a line or polygon.\n         * @type {SketchCoordType}\n         * @private\n         */\n        _this.sketchCoords_ = null;\n        /**\n         * Sketch line. Used when drawing polygon.\n         * @type {Feature<LineString>}\n         * @private\n         */\n        _this.sketchLine_ = null;\n        /**\n         * Sketch line coordinates. Used when drawing a polygon or circle.\n         * @type {LineCoordType}\n         * @private\n         */\n        _this.sketchLineCoords_ = null;\n        /**\n         * Squared tolerance for handling up events.  If the squared distance\n         * between a down and up event is greater than this tolerance, up events\n         * will not be handled.\n         * @type {number}\n         * @private\n         */\n        _this.squaredClickTolerance_ = options.clickTolerance\n            ? options.clickTolerance * options.clickTolerance\n            : 36;\n        /**\n         * Draw overlay where our sketch features are drawn.\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.overlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: options.wrapX ? options.wrapX : false,\n            }),\n            style: options.style ? options.style : getDefaultStyleFunction(),\n            updateWhileInteracting: true,\n        });\n        /**\n         * Name of the geometry attribute for newly created features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.freehandCondition_;\n        if (options.freehand) {\n            _this.freehandCondition_ = always;\n        }\n        else {\n            _this.freehandCondition_ = options.freehandCondition\n                ? options.freehandCondition\n                : shiftKeyOnly;\n        }\n        _this.addChangeListener(InteractionProperty.ACTIVE, _this.updateState_);\n        return _this;\n    }\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Draw.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        this.updateState_();\n    };\n    /**\n     * Get the overlay layer that this interaction renders sketch features to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Draw.prototype.getOverlay = function () {\n        return this.overlay_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Draw.prototype.handleEvent = function (event) {\n        if (event.originalEvent.type === EventType.CONTEXTMENU) {\n            // Avoid context menu for long taps when drawing on mobile\n            event.originalEvent.preventDefault();\n        }\n        this.freehand_ =\n            this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n        var move = event.type === MapBrowserEventType.POINTERMOVE;\n        var pass = true;\n        if (!this.freehand_ &&\n            this.lastDragTime_ &&\n            event.type === MapBrowserEventType.POINTERDRAG) {\n            var now = Date.now();\n            if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n                this.downPx_ = event.pixel;\n                this.shouldHandle_ = !this.freehand_;\n                move = true;\n            }\n            else {\n                this.lastDragTime_ = undefined;\n            }\n            if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n                clearTimeout(this.downTimeout_);\n                this.downTimeout_ = undefined;\n            }\n        }\n        if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDRAG &&\n            this.sketchFeature_ !== null) {\n            this.addToDrawing_(event.coordinate);\n            pass = false;\n        }\n        else if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDOWN) {\n            pass = false;\n        }\n        else if (move && this.getPointerCount() < 2) {\n            pass = event.type === MapBrowserEventType.POINTERMOVE;\n            if (pass && this.freehand_) {\n                this.handlePointerMove_(event);\n                if (this.shouldHandle_) {\n                    // Avoid page scrolling when freehand drawing on mobile\n                    event.originalEvent.preventDefault();\n                }\n            }\n            else if (event.originalEvent.pointerType === 'mouse' ||\n                (event.type === MapBrowserEventType.POINTERDRAG &&\n                    this.downTimeout_ === undefined)) {\n                this.handlePointerMove_(event);\n            }\n        }\n        else if (event.type === MapBrowserEventType.DBLCLICK) {\n            pass = false;\n        }\n        return _super.prototype.handleEvent.call(this, event) && pass;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Draw.prototype.handleDownEvent = function (event) {\n        this.shouldHandle_ = !this.freehand_;\n        if (this.freehand_) {\n            this.downPx_ = event.pixel;\n            if (!this.finishCoordinate_) {\n                this.startDrawing_(event.coordinate);\n            }\n            return true;\n        }\n        else if (this.condition_(event)) {\n            this.lastDragTime_ = Date.now();\n            this.downTimeout_ = setTimeout(function () {\n                this.handlePointerMove_(new MapBrowserEvent(MapBrowserEventType.POINTERMOVE, event.map, event.originalEvent, false, event.frameState));\n            }.bind(this), this.dragVertexDelay_);\n            this.downPx_ = event.pixel;\n            return true;\n        }\n        else {\n            this.lastDragTime_ = undefined;\n            return false;\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Draw.prototype.handleUpEvent = function (event) {\n        var pass = true;\n        if (this.getPointerCount() === 0) {\n            if (this.downTimeout_) {\n                clearTimeout(this.downTimeout_);\n                this.downTimeout_ = undefined;\n            }\n            this.handlePointerMove_(event);\n            if (this.shouldHandle_) {\n                var startingToDraw = !this.finishCoordinate_;\n                if (startingToDraw) {\n                    this.startDrawing_(event.coordinate);\n                }\n                if (!startingToDraw && this.freehand_) {\n                    this.finishDrawing();\n                }\n                else if (!this.freehand_ &&\n                    (!startingToDraw || this.mode_ === Mode.POINT)) {\n                    if (this.atFinish_(event.pixel)) {\n                        if (this.finishCondition_(event)) {\n                            this.finishDrawing();\n                        }\n                    }\n                    else {\n                        this.addToDrawing_(event.coordinate);\n                    }\n                }\n                pass = false;\n            }\n            else if (this.freehand_) {\n                this.abortDrawing();\n            }\n        }\n        if (!pass && this.stopClick_) {\n            event.preventDefault();\n        }\n        return pass;\n    };\n    /**\n     * Handle move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n     * @private\n     */\n    Draw.prototype.handlePointerMove_ = function (event) {\n        this.pointerType_ = event.originalEvent.pointerType;\n        if (this.downPx_ &&\n            ((!this.freehand_ && this.shouldHandle_) ||\n                (this.freehand_ && !this.shouldHandle_))) {\n            var downPx = this.downPx_;\n            var clickPx = event.pixel;\n            var dx = downPx[0] - clickPx[0];\n            var dy = downPx[1] - clickPx[1];\n            var squaredDistance = dx * dx + dy * dy;\n            this.shouldHandle_ = this.freehand_\n                ? squaredDistance > this.squaredClickTolerance_\n                : squaredDistance <= this.squaredClickTolerance_;\n            if (!this.shouldHandle_) {\n                return;\n            }\n        }\n        if (this.finishCoordinate_) {\n            this.modifyDrawing_(event.coordinate);\n        }\n        else {\n            this.createOrUpdateSketchPoint_(event.coordinate.slice());\n        }\n    };\n    /**\n     * Determine if an event is within the snapping tolerance of the start coord.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {boolean} The event is within the snapping tolerance of the start.\n     * @private\n     */\n    Draw.prototype.atFinish_ = function (pixel) {\n        var at = false;\n        if (this.sketchFeature_) {\n            var potentiallyDone = false;\n            var potentiallyFinishCoordinates = [this.finishCoordinate_];\n            var mode = this.mode_;\n            if (mode === Mode.POINT) {\n                at = true;\n            }\n            else if (mode === Mode.CIRCLE) {\n                at = this.sketchCoords_.length === 2;\n            }\n            else if (mode === Mode.LINE_STRING) {\n                potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n            }\n            else if (mode === Mode.POLYGON) {\n                var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n                potentiallyDone = sketchCoords[0].length > this.minPoints_;\n                potentiallyFinishCoordinates = [\n                    sketchCoords[0][0],\n                    sketchCoords[0][sketchCoords[0].length - 2],\n                ];\n            }\n            if (potentiallyDone) {\n                var map = this.getMap();\n                for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n                    var finishCoordinate = potentiallyFinishCoordinates[i];\n                    var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n                    var dx = pixel[0] - finishPixel[0];\n                    var dy = pixel[1] - finishPixel[1];\n                    var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n                    at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n                    if (at) {\n                        this.finishCoordinate_ = finishCoordinate;\n                        break;\n                    }\n                }\n            }\n        }\n        return at;\n    };\n    /**\n     * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n     * @private\n     */\n    Draw.prototype.createOrUpdateSketchPoint_ = function (coordinates) {\n        if (!this.sketchPoint_) {\n            this.sketchPoint_ = new Feature(new Point(coordinates));\n            this.updateSketchFeatures_();\n        }\n        else {\n            var sketchPointGeom = this.sketchPoint_.getGeometry();\n            sketchPointGeom.setCoordinates(coordinates);\n        }\n    };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n     * @private\n     */\n    Draw.prototype.createOrUpdateCustomSketchLine_ = function (geometry) {\n        if (!this.sketchLine_) {\n            this.sketchLine_ = new Feature();\n        }\n        var ring = geometry.getLinearRing(0);\n        var sketchLineGeom = this.sketchLine_.getGeometry();\n        if (!sketchLineGeom) {\n            sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n            this.sketchLine_.setGeometry(sketchLineGeom);\n        }\n        else {\n            sketchLineGeom.setFlatCoordinates(ring.getLayout(), ring.getFlatCoordinates());\n            sketchLineGeom.changed();\n        }\n    };\n    /**\n     * Start the drawing.\n     * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n     * @private\n     */\n    Draw.prototype.startDrawing_ = function (start) {\n        var projection = this.getMap().getView().getProjection();\n        this.finishCoordinate_ = start;\n        if (this.mode_ === Mode.POINT) {\n            this.sketchCoords_ = start.slice();\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            this.sketchCoords_ = [[start.slice(), start.slice()]];\n            this.sketchLineCoords_ = this.sketchCoords_[0];\n        }\n        else {\n            this.sketchCoords_ = [start.slice(), start.slice()];\n        }\n        if (this.sketchLineCoords_) {\n            this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n        }\n        var geometry = this.geometryFunction_(this.sketchCoords_, undefined, projection);\n        this.sketchFeature_ = new Feature();\n        if (this.geometryName_) {\n            this.sketchFeature_.setGeometryName(this.geometryName_);\n        }\n        this.sketchFeature_.setGeometry(geometry);\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Modify the drawing.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @private\n     */\n    Draw.prototype.modifyDrawing_ = function (coordinate) {\n        var map = this.getMap();\n        var geometry = this.sketchFeature_.getGeometry();\n        var projection = map.getView().getProjection();\n        var coordinates, last;\n        if (this.mode_ === Mode.POINT) {\n            last = this.sketchCoords_;\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            last = coordinates[coordinates.length - 1];\n            if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n                // snap to finish\n                coordinate = this.finishCoordinate_.slice();\n            }\n        }\n        else {\n            coordinates = this.sketchCoords_;\n            last = coordinates[coordinates.length - 1];\n        }\n        last[0] = coordinate[0];\n        last[1] = coordinate[1];\n        this.geometryFunction_(\n        /** @type {!LineCoordType} */ (this.sketchCoords_), geometry, projection);\n        if (this.sketchPoint_) {\n            var sketchPointGeom = this.sketchPoint_.getGeometry();\n            sketchPointGeom.setCoordinates(coordinate);\n        }\n        if (geometry.getType() === GeometryType.POLYGON &&\n            this.mode_ !== Mode.POLYGON) {\n            this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n        }\n        else if (this.sketchLineCoords_) {\n            var sketchLineGeom = this.sketchLine_.getGeometry();\n            sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Add a new coordinate to the drawing.\n     * @param {!PointCoordType} coordinate Coordinate\n     * @private\n     */\n    Draw.prototype.addToDrawing_ = function (coordinate) {\n        var geometry = this.sketchFeature_.getGeometry();\n        var projection = this.getMap().getView().getProjection();\n        var done;\n        var coordinates;\n        var mode = this.mode_;\n        if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n            this.finishCoordinate_ = coordinate.slice();\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            this.geometryFunction_(coordinates, geometry, projection);\n        }\n        else if (mode === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            if (done) {\n                this.finishCoordinate_ = coordinates[0];\n            }\n            this.geometryFunction_(this.sketchCoords_, geometry, projection);\n        }\n        this.createOrUpdateSketchPoint_(coordinate.slice());\n        this.updateSketchFeatures_();\n        if (done) {\n            this.finishDrawing();\n        }\n    };\n    /**\n     * Remove last point of the feature currently being drawn. Does not do anything when\n     * drawing POINT or MULTI_POINT geometries.\n     * @api\n     */\n    Draw.prototype.removeLastPoint = function () {\n        if (!this.sketchFeature_) {\n            return;\n        }\n        var geometry = this.sketchFeature_.getGeometry();\n        var projection = this.getMap().getView().getProjection();\n        var coordinates;\n        var mode = this.mode_;\n        if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            coordinates.splice(-2, 1);\n            if (coordinates.length >= 2) {\n                this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n                var finishCoordinate = this.finishCoordinate_.slice();\n                coordinates[coordinates.length - 1] = finishCoordinate;\n                this.createOrUpdateSketchPoint_(finishCoordinate);\n            }\n            this.geometryFunction_(coordinates, geometry, projection);\n            if (geometry.getType() === GeometryType.POLYGON && this.sketchLine_) {\n                this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n            }\n        }\n        else if (mode === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            coordinates.splice(-2, 1);\n            var sketchLineGeom = this.sketchLine_.getGeometry();\n            if (coordinates.length >= 2) {\n                var finishCoordinate = coordinates[coordinates.length - 2].slice();\n                coordinates[coordinates.length - 1] = finishCoordinate;\n                this.createOrUpdateSketchPoint_(finishCoordinate);\n            }\n            sketchLineGeom.setCoordinates(coordinates);\n            this.geometryFunction_(this.sketchCoords_, geometry, projection);\n        }\n        if (coordinates.length === 1) {\n            this.abortDrawing();\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Stop drawing and add the sketch feature to the target layer.\n     * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n     * dispatched before inserting the feature.\n     * @api\n     */\n    Draw.prototype.finishDrawing = function () {\n        var sketchFeature = this.abortDrawing_();\n        if (!sketchFeature) {\n            return;\n        }\n        var coordinates = this.sketchCoords_;\n        var geometry = sketchFeature.getGeometry();\n        var projection = this.getMap().getView().getProjection();\n        if (this.mode_ === Mode.LINE_STRING) {\n            // remove the redundant last point\n            coordinates.pop();\n            this.geometryFunction_(coordinates, geometry, projection);\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            // remove the redundant last point in ring\n            /** @type {PolyCoordType} */ (coordinates)[0].pop();\n            this.geometryFunction_(coordinates, geometry, projection);\n            coordinates = geometry.getCoordinates();\n        }\n        // cast multi-part geometries\n        if (this.type_ === GeometryType.MULTI_POINT) {\n            sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n            sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === GeometryType.MULTI_POLYGON) {\n            sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)]));\n        }\n        // First dispatch event to allow full set up of feature\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n        // Then insert feature\n        if (this.features_) {\n            this.features_.push(sketchFeature);\n        }\n        if (this.source_) {\n            this.source_.addFeature(sketchFeature);\n        }\n    };\n    /**\n     * Stop drawing without adding the sketch feature to the target layer.\n     * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n     * @private\n     */\n    Draw.prototype.abortDrawing_ = function () {\n        this.finishCoordinate_ = null;\n        var sketchFeature = this.sketchFeature_;\n        this.sketchFeature_ = null;\n        this.sketchPoint_ = null;\n        this.sketchLine_ = null;\n        this.overlay_.getSource().clear(true);\n        return sketchFeature;\n    };\n    /**\n     * Stop drawing without adding the sketch feature to the target layer.\n     * @api\n     */\n    Draw.prototype.abortDrawing = function () {\n        var sketchFeature = this.abortDrawing_();\n        if (sketchFeature) {\n            this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n        }\n    };\n    /**\n     * Append coordinates to the end of the geometry that is currently being drawn.\n     * This can be used when drawing LineStrings or Polygons. Coordinates will\n     * either be appended to the current LineString or the outer ring of the current\n     * Polygon. If no geometry is being drawn, a new one will be created.\n     * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n     * the coordinate array.\n     * @api\n     */\n    Draw.prototype.appendCoordinates = function (coordinates) {\n        var mode = this.mode_;\n        var newDrawing = !this.sketchFeature_;\n        if (newDrawing) {\n            this.startDrawing_(coordinates[0]);\n        }\n        /** @type {LineCoordType} */\n        var sketchCoords;\n        if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n            sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n        }\n        else if (mode === Mode.POLYGON) {\n            sketchCoords =\n                this.sketchCoords_ && this.sketchCoords_.length\n                    ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n                    : [];\n        }\n        else {\n            return;\n        }\n        if (newDrawing) {\n            sketchCoords.shift();\n        }\n        // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n        sketchCoords.pop();\n        // Append coordinate list\n        for (var i = 0; i < coordinates.length; i++) {\n            this.addToDrawing_(coordinates[i]);\n        }\n        var ending = coordinates[coordinates.length - 1];\n        // Duplicate last coordinate for sketch drawing (cursor position)\n        this.addToDrawing_(ending);\n        this.modifyDrawing_(ending);\n    };\n    /**\n     * Initiate draw mode by starting from an existing geometry which will\n     * receive new additional points. This only works on features with\n     * `LineString` geometries, where the interaction will extend lines by adding\n     * points to the end of the coordinates array.\n     * This will change the original feature, instead of drawing a copy.\n     *\n     * The function will dispatch a `drawstart` event.\n     *\n     * @param {!Feature<LineString>} feature Feature to be extended.\n     * @api\n     */\n    Draw.prototype.extend = function (feature) {\n        var geometry = feature.getGeometry();\n        var lineString = geometry;\n        this.sketchFeature_ = feature;\n        this.sketchCoords_ = lineString.getCoordinates();\n        var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n        this.finishCoordinate_ = last.slice();\n        this.sketchCoords_.push(last.slice());\n        this.sketchPoint_ = new Feature(new Point(last));\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Redraw the sketch features.\n     * @private\n     */\n    Draw.prototype.updateSketchFeatures_ = function () {\n        var sketchFeatures = [];\n        if (this.sketchFeature_) {\n            sketchFeatures.push(this.sketchFeature_);\n        }\n        if (this.sketchLine_) {\n            sketchFeatures.push(this.sketchLine_);\n        }\n        if (this.sketchPoint_) {\n            sketchFeatures.push(this.sketchPoint_);\n        }\n        var overlaySource = this.overlay_.getSource();\n        overlaySource.clear(true);\n        overlaySource.addFeatures(sketchFeatures);\n    };\n    /**\n     * @private\n     */\n    Draw.prototype.updateState_ = function () {\n        var map = this.getMap();\n        var active = this.getActive();\n        if (!map || !active) {\n            this.abortDrawing();\n        }\n        this.overlay_.setMap(active ? map : null);\n    };\n    return Draw;\n}(PointerInteraction));\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    return function (feature, resolution) {\n        return styles[feature.getGeometry().getType()];\n    };\n}\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [opt_sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [opt_angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n    return function (coordinates, opt_geometry, projection) {\n        var center = fromUserCoordinate(\n        /** @type {LineCoordType} */ (coordinates)[0], projection);\n        var end = fromUserCoordinate(\n        /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1], projection);\n        var radius = Math.sqrt(squaredCoordinateDistance(center, end));\n        var geometry = opt_geometry\n            ? /** @type {Polygon} */ (opt_geometry)\n            : fromCircle(new Circle(center), opt_sides);\n        var angle = opt_angle;\n        if (!opt_angle && opt_angle !== 0) {\n            var x = end[0] - center[0];\n            var y = end[1] - center[1];\n            angle = Math.atan2(y, x);\n        }\n        makeRegular(geometry, center, radius, angle);\n        var userProjection = getUserProjection();\n        if (userProjection) {\n            geometry.transform(projection, userProjection);\n        }\n        return geometry;\n    };\n}\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n    return function (coordinates, opt_geometry, projection) {\n        var extent = boundingExtent(\n        /** @type {LineCoordType} */ ([\n            coordinates[0],\n            coordinates[coordinates.length - 1],\n        ]).map(function (coordinate) {\n            return fromUserCoordinate(coordinate, projection);\n        }));\n        var boxCoordinates = [\n            [\n                getBottomLeft(extent),\n                getBottomRight(extent),\n                getTopRight(extent),\n                getTopLeft(extent),\n                getBottomLeft(extent),\n            ],\n        ];\n        var geometry = opt_geometry;\n        if (geometry) {\n            geometry.setCoordinates(boxCoordinates);\n        }\n        else {\n            geometry = new Polygon(boxCoordinates);\n        }\n        var userProjection = getUserProjection();\n        if (userProjection) {\n            geometry.transform(projection, userProjection);\n        }\n        return geometry;\n    };\n}\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/GeometryType.js\").default} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n            return Mode.POINT;\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n            return Mode.LINE_STRING;\n        case GeometryType.POLYGON:\n        case GeometryType.MULTI_POLYGON:\n            return Mode.POLYGON;\n        case GeometryType.CIRCLE:\n            return Mode.CIRCLE;\n        default:\n            throw new Error('Invalid type: ' + type);\n    }\n}\nexport default Draw;\n//# sourceMappingURL=Draw.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { boundingExtent, createEmpty } from '../extent.js';\nimport { closestOnCircle, closestOnSegment, squaredDistance, } from '../coordinate.js';\nimport { fromCircle } from '../geom/Polygon.js';\nimport { fromUserCoordinate, getUserProjection, toUserCoordinate, } from '../proj.js';\nimport { getUid } from '../util.js';\nimport { getValues } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Result\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\n */\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n    if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature) {\n        return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n            .feature;\n    }\n    else if (\n    /** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element) {\n        return /** @type {import(\"../Feature.js\").default} */ (\n        /** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element);\n    }\n}\nvar tempSegment = [];\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector~VectorSource} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @api\n */\nvar Snap = /** @class */ (function (_super) {\n    __extends(Snap, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Snap(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.handleDownEvent) {\n            pointerOptions.handleDownEvent = TRUE;\n        }\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @type {import(\"../source/Vector.js\").default|null}\n         * @private\n         */\n        _this.source_ = options.source ? options.source : null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.edge_ = options.edge !== undefined ? options.edge : true;\n        /**\n         * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|null}\n         * @private\n         */\n        _this.features_ = options.features ? options.features : null;\n        /**\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         * @private\n         */\n        _this.featuresListenerKeys_ = [];\n        /**\n         * @type {Object<string, import(\"../events.js\").EventsKey>}\n         * @private\n         */\n        _this.featureChangeListenerKeys_ = {};\n        /**\n         * Extents are preserved so indexed segment can be quickly removed\n         * when its feature geometry changes\n         * @type {Object<string, import(\"../extent.js\").Extent>}\n         * @private\n         */\n        _this.indexedFeaturesExtents_ = {};\n        /**\n         * If a feature geometry changes while a pointer drag|move event occurs, the\n         * feature doesn't get updated right away.  It will be at the next 'pointerup'\n         * event fired.\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.pendingFeatures_ = {};\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ =\n            options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n        /**\n         * Segment RTree for each layer\n         * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n         * @private\n         */\n        _this.rBush_ = new RBush();\n        /**\n         * @const\n         * @private\n         * @type {Object<string, function(Array<Array<import('../coordinate.js').Coordinate>>, import(\"../geom/Geometry.js\").default): void>}\n         */\n        _this.GEOMETRY_SEGMENTERS_ = {\n            'Point': _this.segmentPointGemetry_.bind(_this),\n            'LineString': _this.segmentLineStringGemetry_.bind(_this),\n            'LinearRing': _this.segmentLineStringGemetry_.bind(_this),\n            'Polygon': _this.segmentPolygonGemetry_.bind(_this),\n            'MultiPoint': _this.segmentMultiPointGemetry_.bind(_this),\n            'MultiLineString': _this.segmentMultiLineStringGemetry_.bind(_this),\n            'MultiPolygon': _this.segmentMultiPolygonGemetry_.bind(_this),\n            'GeometryCollection': _this.segmentGeometryCollectionGemetry_.bind(_this),\n            'Circle': _this.segmentCircleGemetry_.bind(_this),\n        };\n        return _this;\n    }\n    /**\n     * Add a feature to the collection of features that we may snap to.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {boolean} [opt_listen] Whether to listen to the feature change or not\n     *     Defaults to `true`.\n     * @api\n     */\n    Snap.prototype.addFeature = function (feature, opt_listen) {\n        var register = opt_listen !== undefined ? opt_listen : true;\n        var feature_uid = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var segmenter = this.GEOMETRY_SEGMENTERS_[geometry.getType()];\n            if (segmenter) {\n                this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n                var segments = \n                /** @type {Array<Array<import('../coordinate.js').Coordinate>>} */ ([]);\n                segmenter(segments, geometry);\n                if (segments.length === 1) {\n                    this.rBush_.insert(boundingExtent(segments[0]), {\n                        feature: feature,\n                        segment: segments[0],\n                    });\n                }\n                else if (segments.length > 1) {\n                    var extents = segments.map(function (s) { return boundingExtent(s); });\n                    var segmentsData = segments.map(function (segment) { return ({\n                        feature: feature,\n                        segment: segment,\n                    }); });\n                    this.rBush_.load(extents, segmentsData);\n                }\n            }\n        }\n        if (register) {\n            this.featureChangeListenerKeys_[feature_uid] = listen(feature, EventType.CHANGE, this.handleFeatureChange_, this);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @private\n     */\n    Snap.prototype.forEachFeatureAdd_ = function (feature) {\n        this.addFeature(feature);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @private\n     */\n    Snap.prototype.forEachFeatureRemove_ = function (feature) {\n        this.removeFeature(feature);\n    };\n    /**\n     * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n     * @private\n     */\n    Snap.prototype.getFeatures_ = function () {\n        var features;\n        if (this.features_) {\n            features = this.features_;\n        }\n        else if (this.source_) {\n            features = this.source_.getFeatures();\n        }\n        return features;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    Snap.prototype.handleEvent = function (evt) {\n        var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n        if (result) {\n            evt.coordinate = result.vertex.slice(0, 2);\n            evt.pixel = result.vertexPixel;\n        }\n        return _super.prototype.handleEvent.call(this, evt);\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureAdd_ = function (evt) {\n        var feature = getFeatureFromEvent(evt);\n        this.addFeature(feature);\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureRemove_ = function (evt) {\n        var feature = getFeatureFromEvent(evt);\n        this.removeFeature(feature);\n    };\n    /**\n     * @param {import(\"../events/Event.js\").default} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureChange_ = function (evt) {\n        var feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n        if (this.handlingDownUpSequence) {\n            var uid = getUid(feature);\n            if (!(uid in this.pendingFeatures_)) {\n                this.pendingFeatures_[uid] = feature;\n            }\n        }\n        else {\n            this.updateFeature_(feature);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Snap.prototype.handleUpEvent = function (evt) {\n        var featuresToUpdate = getValues(this.pendingFeatures_);\n        if (featuresToUpdate.length) {\n            featuresToUpdate.forEach(this.updateFeature_.bind(this));\n            this.pendingFeatures_ = {};\n        }\n        return false;\n    };\n    /**\n     * Remove a feature from the collection of features that we may snap to.\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {boolean} [opt_unlisten] Whether to unlisten to the feature change\n     *     or not. Defaults to `true`.\n     * @api\n     */\n    Snap.prototype.removeFeature = function (feature, opt_unlisten) {\n        var unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n        var feature_uid = getUid(feature);\n        var extent = this.indexedFeaturesExtents_[feature_uid];\n        if (extent) {\n            var rBush = this.rBush_;\n            var nodesToRemove_1 = [];\n            rBush.forEachInExtent(extent, function (node) {\n                if (feature === node.feature) {\n                    nodesToRemove_1.push(node);\n                }\n            });\n            for (var i = nodesToRemove_1.length - 1; i >= 0; --i) {\n                rBush.remove(nodesToRemove_1[i]);\n            }\n        }\n        if (unregister) {\n            unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n            delete this.featureChangeListenerKeys_[feature_uid];\n        }\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Snap.prototype.setMap = function (map) {\n        var currentMap = this.getMap();\n        var keys = this.featuresListenerKeys_;\n        var features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\n        if (currentMap) {\n            keys.forEach(unlistenByKey);\n            keys.length = 0;\n            features.forEach(this.forEachFeatureRemove_.bind(this));\n        }\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            if (this.features_) {\n                keys.push(listen(this.features_, CollectionEventType.ADD, this.handleFeatureAdd_, this), listen(this.features_, CollectionEventType.REMOVE, this.handleFeatureRemove_, this));\n            }\n            else if (this.source_) {\n                keys.push(listen(this.source_, VectorEventType.ADDFEATURE, this.handleFeatureAdd_, this), listen(this.source_, VectorEventType.REMOVEFEATURE, this.handleFeatureRemove_, this));\n            }\n            features.forEach(this.forEachFeatureAdd_.bind(this));\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n     * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @return {Result|null} Snap result\n     */\n    Snap.prototype.snapTo = function (pixel, pixelCoordinate, map) {\n        var lowerLeft = map.getCoordinateFromPixel([\n            pixel[0] - this.pixelTolerance_,\n            pixel[1] + this.pixelTolerance_,\n        ]);\n        var upperRight = map.getCoordinateFromPixel([\n            pixel[0] + this.pixelTolerance_,\n            pixel[1] - this.pixelTolerance_,\n        ]);\n        var box = boundingExtent([lowerLeft, upperRight]);\n        var segments = this.rBush_.getInExtent(box);\n        var segmentsLength = segments.length;\n        if (segmentsLength === 0) {\n            return null;\n        }\n        var projection = map.getView().getProjection();\n        var projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n        var closestVertex;\n        var minSquaredDistance = Infinity;\n        var squaredPixelTolerance = this.pixelTolerance_ * this.pixelTolerance_;\n        var getResult = function () {\n            if (closestVertex) {\n                var vertexPixel = map.getPixelFromCoordinate(closestVertex);\n                var squaredPixelDistance = squaredDistance(pixel, vertexPixel);\n                if (squaredPixelDistance <= squaredPixelTolerance) {\n                    return {\n                        vertex: closestVertex,\n                        vertexPixel: [\n                            Math.round(vertexPixel[0]),\n                            Math.round(vertexPixel[1]),\n                        ],\n                    };\n                }\n            }\n            return null;\n        };\n        if (this.vertex_) {\n            for (var i = 0; i < segmentsLength; ++i) {\n                var segmentData = segments[i];\n                if (segmentData.feature.getGeometry().getType() !== GeometryType.CIRCLE) {\n                    segmentData.segment.forEach(function (vertex) {\n                        var tempVertexCoord = fromUserCoordinate(vertex, projection);\n                        var delta = squaredDistance(projectedCoordinate, tempVertexCoord);\n                        if (delta < minSquaredDistance) {\n                            closestVertex = vertex;\n                            minSquaredDistance = delta;\n                        }\n                    });\n                }\n            }\n            var result = getResult();\n            if (result) {\n                return result;\n            }\n        }\n        if (this.edge_) {\n            for (var i = 0; i < segmentsLength; ++i) {\n                var vertex = null;\n                var segmentData = segments[i];\n                if (segmentData.feature.getGeometry().getType() === GeometryType.CIRCLE) {\n                    var circleGeometry = segmentData.feature.getGeometry();\n                    var userProjection = getUserProjection();\n                    if (userProjection) {\n                        circleGeometry = circleGeometry\n                            .clone()\n                            .transform(userProjection, projection);\n                    }\n                    vertex = toUserCoordinate(closestOnCircle(projectedCoordinate, \n                    /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)), projection);\n                }\n                else {\n                    var _a = segmentData.segment, segmentStart = _a[0], segmentEnd = _a[1];\n                    // points have only one coordinate\n                    if (segmentEnd) {\n                        tempSegment[0] = fromUserCoordinate(segmentStart, projection);\n                        tempSegment[1] = fromUserCoordinate(segmentEnd, projection);\n                        vertex = closestOnSegment(projectedCoordinate, tempSegment);\n                    }\n                }\n                if (vertex) {\n                    var delta = squaredDistance(projectedCoordinate, vertex);\n                    if (delta < minSquaredDistance) {\n                        closestVertex = vertex;\n                        minSquaredDistance = delta;\n                    }\n                }\n            }\n            var result = getResult();\n            if (result) {\n                return result;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Snap.prototype.updateFeature_ = function (feature) {\n        this.removeFeature(feature, false);\n        this.addFeature(feature, false);\n    };\n    /**\n     * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n     * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.segmentCircleGemetry_ = function (segments, geometry) {\n        var projection = this.getMap().getView().getProjection();\n        var circleGeometry = geometry;\n        var userProjection = getUserProjection();\n        if (userProjection) {\n            circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry.clone().transform(userProjection, projection));\n        }\n        var polygon = fromCircle(circleGeometry);\n        if (userProjection) {\n            polygon.transform(projection, userProjection);\n        }\n        var coordinates = polygon.getCoordinates()[0];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            segments.push(coordinates.slice(i, i + 2));\n        }\n    };\n    /**\n     * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.segmentGeometryCollectionGemetry_ = function (segments, geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0; i < geometries.length; ++i) {\n            var segmenter = this.GEOMETRY_SEGMENTERS_[geometries[i].getType()];\n            if (segmenter) {\n                segmenter(segments, geometries[i]);\n            }\n        }\n    };\n    /**\n     * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n     * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.segmentLineStringGemetry_ = function (segments, geometry) {\n        var coordinates = geometry.getCoordinates();\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            segments.push(coordinates.slice(i, i + 2));\n        }\n    };\n    /**\n     * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.segmentMultiLineStringGemetry_ = function (segments, geometry) {\n        var lines = geometry.getCoordinates();\n        for (var j = 0, jj = lines.length; j < jj; ++j) {\n            var coordinates = lines[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                segments.push(coordinates.slice(i, i + 2));\n            }\n        }\n    };\n    /**\n     * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.segmentMultiPointGemetry_ = function (segments, geometry) {\n        geometry.getCoordinates().forEach(function (point) {\n            segments.push([point]);\n        });\n    };\n    /**\n     * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.segmentMultiPolygonGemetry_ = function (segments, geometry) {\n        var polygons = geometry.getCoordinates();\n        for (var k = 0, kk = polygons.length; k < kk; ++k) {\n            var rings = polygons[k];\n            for (var j = 0, jj = rings.length; j < jj; ++j) {\n                var coordinates = rings[j];\n                for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                    segments.push(coordinates.slice(i, i + 2));\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n     * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.segmentPointGemetry_ = function (segments, geometry) {\n        segments.push([geometry.getCoordinates()]);\n    };\n    /**\n     * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n     * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.segmentPolygonGemetry_ = function (segments, geometry) {\n        var rings = geometry.getCoordinates();\n        for (var j = 0, jj = rings.length; j < jj; ++j) {\n            var coordinates = rings[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                segments.push(coordinates.slice(i, i + 2));\n            }\n        }\n    };\n    return Snap;\n}(PointerInteraction));\nexport default Snap;\n//# sourceMappingURL=Snap.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Extent\n */\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { always } from '../events/condition.js';\nimport { boundingExtent, getArea } from '../extent.js';\nimport { closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, } from '../coordinate.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { fromExtent as polygonFromExtent } from '../geom/Polygon.js';\nimport { toUserExtent } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to the `Polygon` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to the `Point` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n/**\n * @enum {string}\n */\nvar ExtentEventType = {\n    /**\n     * Triggered after the extent is changed\n     * @event ExtentEvent#extentchanged\n     * @api\n     */\n    EXTENTCHANGED: 'extentchanged',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nvar ExtentEvent = /** @class */ (function (_super) {\n    __extends(ExtentEvent, _super);\n    /**\n     * @param {import(\"../extent.js\").Extent} extent the new extent\n     */\n    function ExtentEvent(extent) {\n        var _this = _super.call(this, ExtentEventType.EXTENTCHANGED) || this;\n        /**\n         * The current extent.\n         * @type {import(\"../extent.js\").Extent}\n         * @api\n         */\n        _this.extent = extent;\n        return _this;\n    }\n    return ExtentEvent;\n}(Event));\nexport { ExtentEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'extentchanged', ExtentEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'extentchanged', Return>} ExtentOnSignature\n */\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nvar Extent = /** @class */ (function (_super) {\n    __extends(Extent, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Extent(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /***\n         * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {ExtentOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * Condition\n         * @type {import(\"../events/condition.js\").Condition}\n         * @private\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * Extent of the drawn box\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        _this.extent_ = null;\n        /**\n         * Handler for pointer move events\n         * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n         * @private\n         */\n        _this.pointerHandler_ = null;\n        /**\n         * Pixel threshold to snap to extent\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ =\n            options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n        /**\n         * Is the pointer snapped to an extent vertex\n         * @type {boolean}\n         * @private\n         */\n        _this.snappedToVertex_ = false;\n        /**\n         * Feature for displaying the visible extent\n         * @type {Feature}\n         * @private\n         */\n        _this.extentFeature_ = null;\n        /**\n         * Feature for displaying the visible pointer\n         * @type {Feature<Point>}\n         * @private\n         */\n        _this.vertexFeature_ = null;\n        if (!opt_options) {\n            opt_options = {};\n        }\n        /**\n         * Layer for the extentFeature\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.extentOverlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!opt_options.wrapX,\n            }),\n            style: opt_options.boxStyle\n                ? opt_options.boxStyle\n                : getDefaultExtentStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true,\n        });\n        /**\n         * Layer for the vertexFeature\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.vertexOverlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!opt_options.wrapX,\n            }),\n            style: opt_options.pointerStyle\n                ? opt_options.pointerStyle\n                : getDefaultPointerStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true,\n        });\n        if (opt_options.extent) {\n            _this.setExtent(opt_options.extent);\n        }\n        return _this;\n    }\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n     * @param {import(\"../PluggableMap.js\").default} map map\n     * @return {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n     * @private\n     */\n    Extent.prototype.snapToVertex_ = function (pixel, map) {\n        var pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n        var sortByDistance = function (a, b) {\n            return (squaredDistanceToSegment(pixelCoordinate, a) -\n                squaredDistanceToSegment(pixelCoordinate, b));\n        };\n        var extent = this.getExtentInternal();\n        if (extent) {\n            //convert extents to line segments and find the segment closest to pixelCoordinate\n            var segments = getSegments(extent);\n            segments.sort(sortByDistance);\n            var closestSegment = segments[0];\n            var vertex = closestOnSegment(pixelCoordinate, closestSegment);\n            var vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n            //if the distance is within tolerance, snap to the segment\n            if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n                //test if we should further snap to a vertex\n                var pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n                var pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n                var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                this.snappedToVertex_ = dist <= this.pixelTolerance_;\n                if (this.snappedToVertex_) {\n                    vertex =\n                        squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                }\n                return vertex;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n     * @private\n     */\n    Extent.prototype.handlePointerMove_ = function (mapBrowserEvent) {\n        var pixel = mapBrowserEvent.pixel;\n        var map = mapBrowserEvent.map;\n        var vertex = this.snapToVertex_(pixel, map);\n        if (!vertex) {\n            vertex = map.getCoordinateFromPixelInternal(pixel);\n        }\n        this.createOrUpdatePointerFeature_(vertex);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent extent\n     * @return {Feature} extent as featrue\n     * @private\n     */\n    Extent.prototype.createOrUpdateExtentFeature_ = function (extent) {\n        var extentFeature = this.extentFeature_;\n        if (!extentFeature) {\n            if (!extent) {\n                extentFeature = new Feature({});\n            }\n            else {\n                extentFeature = new Feature(polygonFromExtent(extent));\n            }\n            this.extentFeature_ = extentFeature;\n            this.extentOverlay_.getSource().addFeature(extentFeature);\n        }\n        else {\n            if (!extent) {\n                extentFeature.setGeometry(undefined);\n            }\n            else {\n                extentFeature.setGeometry(polygonFromExtent(extent));\n            }\n        }\n        return extentFeature;\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n     * @return {Feature} vertex as feature\n     * @private\n     */\n    Extent.prototype.createOrUpdatePointerFeature_ = function (vertex) {\n        var vertexFeature = this.vertexFeature_;\n        if (!vertexFeature) {\n            vertexFeature = new Feature(new Point(vertex));\n            this.vertexFeature_ = vertexFeature;\n            this.vertexOverlay_.getSource().addFeature(vertexFeature);\n        }\n        else {\n            var geometry = vertexFeature.getGeometry();\n            geometry.setCoordinates(vertex);\n        }\n        return vertexFeature;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    Extent.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        //display pointer (if not dragging)\n        if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n            !this.handlingDownUpSequence) {\n            this.handlePointerMove_(mapBrowserEvent);\n        }\n        //call pointer to determine up/down/drag\n        _super.prototype.handleEvent.call(this, mapBrowserEvent);\n        //return false to stop propagation\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Extent.prototype.handleDownEvent = function (mapBrowserEvent) {\n        var pixel = mapBrowserEvent.pixel;\n        var map = mapBrowserEvent.map;\n        var extent = this.getExtentInternal();\n        var vertex = this.snapToVertex_(pixel, map);\n        //find the extent corner opposite the passed corner\n        var getOpposingPoint = function (point) {\n            var x_ = null;\n            var y_ = null;\n            if (point[0] == extent[0]) {\n                x_ = extent[2];\n            }\n            else if (point[0] == extent[2]) {\n                x_ = extent[0];\n            }\n            if (point[1] == extent[1]) {\n                y_ = extent[3];\n            }\n            else if (point[1] == extent[3]) {\n                y_ = extent[1];\n            }\n            if (x_ !== null && y_ !== null) {\n                return [x_, y_];\n            }\n            return null;\n        };\n        if (vertex && extent) {\n            var x = vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n            var y = vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n            //snap to point\n            if (x !== null && y !== null) {\n                this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n                //snap to edge\n            }\n            else if (x !== null) {\n                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([x, extent[1]]), getOpposingPoint([x, extent[3]]));\n            }\n            else if (y !== null) {\n                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([extent[0], y]), getOpposingPoint([extent[2], y]));\n            }\n            //no snap - new bbox\n        }\n        else {\n            vertex = map.getCoordinateFromPixelInternal(pixel);\n            this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n            this.pointerHandler_ = getPointHandler(vertex);\n        }\n        return true; //event handled; start downup sequence\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    Extent.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (this.pointerHandler_) {\n            var pixelCoordinate = mapBrowserEvent.coordinate;\n            this.setExtent(this.pointerHandler_(pixelCoordinate));\n            this.createOrUpdatePointerFeature_(pixelCoordinate);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Extent.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.pointerHandler_ = null;\n        //If bbox is zero area, set to null;\n        var extent = this.getExtentInternal();\n        if (!extent || getArea(extent) === 0) {\n            this.setExtent(null);\n        }\n        return false; //Stop handling downup sequence\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Extent.prototype.setMap = function (map) {\n        this.extentOverlay_.setMap(map);\n        this.vertexOverlay_.setMap(map);\n        _super.prototype.setMap.call(this, map);\n    };\n    /**\n     * Returns the current drawn extent in the view projection (or user projection if set)\n     *\n     * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n     * @api\n     */\n    Extent.prototype.getExtent = function () {\n        return toUserExtent(this.getExtentInternal(), this.getMap().getView().getProjection());\n    };\n    /**\n     * Returns the current drawn extent in the view projection\n     *\n     * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n     * @api\n     */\n    Extent.prototype.getExtentInternal = function () {\n        return this.extent_;\n    };\n    /**\n     * Manually sets the drawn extent, using the view projection.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent\n     * @api\n     */\n    Extent.prototype.setExtent = function (extent) {\n        //Null extent means no bbox\n        this.extent_ = extent ? extent : null;\n        this.createOrUpdateExtentFeature_(extent);\n        this.dispatchEvent(new ExtentEvent(this.extent_));\n    };\n    return Extent;\n}(PointerInteraction));\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style[GeometryType.POLYGON];\n    };\n}\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style[GeometryType.POINT];\n    };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n    return function (point) {\n        return boundingExtent([fixedPoint, point]);\n    };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n    if (fixedP1[0] == fixedP2[0]) {\n        return function (point) {\n            return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n        };\n    }\n    else if (fixedP1[1] == fixedP2[1]) {\n        return function (point) {\n            return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n        };\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n    return [\n        [\n            [extent[0], extent[1]],\n            [extent[0], extent[3]],\n        ],\n        [\n            [extent[0], extent[3]],\n            [extent[2], extent[3]],\n        ],\n        [\n            [extent[2], extent[3]],\n            [extent[2], extent[1]],\n        ],\n        [\n            [extent[2], extent[1]],\n            [extent[0], extent[1]],\n        ],\n    ];\n}\nexport default Extent;\n//# sourceMappingURL=Extent.js.map"],"sourceRoot":""}