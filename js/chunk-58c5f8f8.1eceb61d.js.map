{"version":3,"sources":["webpack:///./node_modules/ol/renderer/canvas/common.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/Composite.js","webpack:///./node_modules/ol/renderer/canvas/ImageLayer.js","webpack:///./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/renderer/Layer.js"],"names":["IMAGE_SMOOTHING_DISABLED","imageSmoothingEnabled","msImageSmoothingEnabled","IMAGE_SMOOTHING_ENABLED","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","pixelContext","createPixelContext","canvas","document","createElement","width","height","getContext","CanvasLayerRenderer","_super","layer","_this","container","renderedResolution","tempTransform","pixelTransform","inversePixelTransform","context","containerReused","pixelContext_","frameState","getImageData","image","col","row","data","clearRect","drawImage","err","getBackground","getLayer","background","viewState","resolution","undefined","useContainer","target","transform","opacity","opt_backgroundColor","layerClassName","getClassName","className","style","backgroundColor","firstElementChild","HTMLCanvasElement","position","appendChild","left","transformOrigin","clipUnrotated","extent","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","save","beginPath","moveTo","Math","round","lineTo","clip","dispatchRenderEvent_","type","hasListener","event_1","dispatchEvent","preRender","PRERENDER","postRender","POSTRENDER","getRenderTransform","center","rotation","pixelRatio","offsetX","dx1","dy1","sx","sy","dx2","dy2","getDataAtPixel","pixel","hitTolerance","renderPixel","slice","layerExtent","getExtent","renderCoordinate","pixelToCoordinateTransform","x","y","pixelCanvas","name","Uint8Array","disposeInternal","MapRenderer","map","map_","dispatchRenderEvent","calculateMatrices2D","size","forEachFeatureAtCoordinate","coordinate","checkWrapped","callback","thisArg","layerFilter","thisArg2","result","managed","feature","geometry","projection","translatedCoordinate","offsets","canWrapX","projectionExtent","worldWidth","push","layerStates","layerStatesArray","numLayers","length","matches","tmpCoord","i","j","layerState","hasRenderer","layerRenderer","getRenderer","source","getSource","coordinates","getWrapX","callback_1","bind","order","forEach","m","distanceSq","sort","a","some","forEachLayerAtPixel","hasFeatureAtCoordinate","hasFeature","getMap","renderFrame","scheduleExpireIconCache","canExpireCache","postRenderFunctions","expireIconCache","Disposable","expire","Map","CompositeMapRenderer","fontChangeListenerKey_","ObjectEventType","PROPERTYCHANGE","redrawText","element_","zIndex","getViewport","insertBefore","firstChild","children_","renderedVisible_","parentNode","removeChild","PRECOMPOSE","declutterLayers","previousElement","ii","layerIndex","sourceState","getSourceState","READY","UNDEFINED","unrender","element","render","renderDeclutter","POSTCOMPOSE","display","CanvasImageLayerRenderer","imageLayer","image_","getImage","prepareFrame","viewResolution","imageSource","hints","viewHints","renderedExtent","ANIMATING","INTERACTING","sourceProjection","getProjection","loadImage","getState","EMPTY","getData","imageExtent","img","imageMapWidth","floor","imageMapHeight","imageResolution","getResolution","imagePixelRatio","getPixelRatio","viewCenter","scale","size_1","sqrt","canvasTransform","clipped","dw","dh","getInterpolate","dx","dy","previousAlpha","globalAlpha","restore","IMAGE_REPLAYS","POLYGON","CIRCLE","LINE_STRING","IMAGE","TEXT","VECTOR_REPLAYS","DEFAULT","CanvasVectorTileLayerRenderer","boundHandleStyleImageChange_","handleStyleImageChange_","dirty_","renderedLayerRevision_","renderedPixelToCoordinateTransform_","renderedRotation_","tmpTransform_","prepareTile","tile","state","LOADED","ERROR","updateExecutorGroup_","tileImageNeedsRender_","getTile","z","hifi","wantedResolution","Date","now","time","getRenderMode","VECTOR","renderTileImage_","isDrawableTile","executorGroups","hasContext","getTileImage","layerRevision","getRevision","renderedTiles","revision","renderOrder","getRenderOrder","builderState","getReplayState","dirty","renderedRevision","renderedRenderOrder","declutter","getDeclutter","sourceTileGrid","getTileGrid","tileGrid","getTileGridForProjection","tileExtent","getTileCoordExtent","wrappedTileCoord","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","declutterExecutorGroups","_loop_1","t","tt","sourceTile","sourceTileCoord","tileCoord","sourceTileExtent","sharedExtent","builderExtent","getRenderBuffer","this_1","tmpExtent","bufferedExtent","builderGroup","declutterBuilderGroup","squaredTolerance","styles","styleFunction","getStyleFunction","renderFeature","features","getFeatures","getGeometry","executorGroupInstructions","finish","replayExtent","renderingReplayGroup","getOverlaps","declutterExecutorGroup","hitExtent","found","featureCallback","key","getId","match","splice","lastIndexOf","_loop_2","declutteredFeatures","declutterTree","all","item","value","executorGroup","Promise","resolve","reject","renderedProjection","getTileCoordForCoordAndResolution","toString","extent_1","loadingSourceTiles","corner","tilePixel","reduce","accumulator","concat","animatingOrInteracting_","tileSize","getTileSize","getZForResolution","transforms","getTileCoordCenter","handleFontsChanged","getVisible","changed","event","renderIfReadyAndVisible","alpha","getOpacity","tiles","execute","getTileRenderTransform","worldOffset","renderMode","replayTypes","tileSource","zDirection","clips","clipZs","filter","group","hasExecutors","currentZ","contextSaved","currentClip","getClipCoords","jj","opt_declutterBuilderGroup","loading","isArray","replayState","renderedTileResolution","renderedTileRevision","tileResolution","renderPixelRatio","max","getTilePixelSize","renderScale","setTransform","apply","pixelScale","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","newTiles_","tmpTileRange_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","setState","getInterimTile","getRenderSource","tilePixelRatio","getTilePixelRatio","getMinZoom","getTileCoordForCoordAndZ","tileOrigin","getOrigin","loadedTileCallback","zoom","sourceRevision","canvasExtent","tileRange","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","tmpTileRange","minX","maxX","minY","maxY","uid","inTransition","indexOf","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","zs","keys","Number","getOpaque","reverse","currentTilePixelSize","currentResolution","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","w","h","transition","i_1","drawTileImage","unshift","updateUsedTiles","usedTiles","manageTilePyramid","scheduleExpireCache","gutter","alphaChanged","animate","endTransition","postRenderFunction","tileSourceKey","expireCache","getKey","preload","opt_tileCallback","wantedTiles","tileQueue","minZoom","tileCount","IDLE","isKeyQueued","enqueue","useTile","updateCacheSize","CanvasVectorLayerRenderer","vectorLayer","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","NaN","wrappedRenderedExtent_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","renderWorlds","opt_declutterTree","vectorSource","snapToPixel","multiWorld","endWorld","ceil","world","replayGroup","isEmpty","startX","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadExtents","loadExtent","userTransform","userProjection","userExtent_1","loadFeatures","userExtent","getFeaturesInExtent","replayGroupInstructions","opt_transform","LayerRenderer","ready","boundHandleImageChange_","handleImageChange_","layer_","forEachLoadedTile","imageState","addEventListener","CHANGE","load"],"mappings":"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","file":"js/chunk-58c5f8f8.1eceb61d.js","sourcesContent":["/**\n * @module ol/renderer/canvas/common\n */\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport var IMAGE_SMOOTHING_DISABLED = {\n    imageSmoothingEnabled: false,\n    msImageSmoothingEnabled: false,\n};\n/**\n * Context options to enable image smoothing.\n * @type {Object}\n */\nexport var IMAGE_SMOOTHING_ENABLED = {\n    imageSmoothingEnabled: true,\n    msImageSmoothingEnabled: true,\n};\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { asArray } from '../../color.js';\nimport { containsCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { equals } from '../../array.js';\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar pixelContext = null;\nfunction createPixelContext() {\n    var canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    pixelContext = canvas.getContext('2d');\n}\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.pixelContext_ = null;\n        /**\n         * @protected\n         * @type {import(\"../../PluggableMap.js\").FrameState|null}\n         */\n        _this.frameState = null;\n        return _this;\n    }\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     * @param {number} col The column index.\n     * @param {number} row The row index.\n     * @return {Uint8ClampedArray|null} The image data.\n     */\n    CanvasLayerRenderer.prototype.getImageData = function (image, col, row) {\n        if (!pixelContext) {\n            createPixelContext();\n        }\n        pixelContext.clearRect(0, 0, 1, 1);\n        var data;\n        try {\n            pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n            data = pixelContext.getImageData(0, 0, 1, 1).data;\n        }\n        catch (err) {\n            return null;\n        }\n        return data;\n    };\n    /**\n     * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\n     * @return {string} Background color.\n     */\n    CanvasLayerRenderer.prototype.getBackground = function (frameState) {\n        var layer = this.getLayer();\n        var background = layer.getBackground();\n        if (typeof background === 'function') {\n            background = background(frameState.viewState.resolution);\n        }\n        return background || undefined;\n    };\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     * @param {string} [opt_backgroundColor] Background color.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity, opt_backgroundColor) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target &&\n            target.className === layerClassName &&\n            target.style.opacity === '' &&\n            opacity === 1 &&\n            (!opt_backgroundColor ||\n                (target.style.backgroundColor &&\n                    equals(asArray(target.style.backgroundColor), asArray(opt_backgroundColor))))) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context && context.canvas.style.transform === transform) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            if (opt_backgroundColor) {\n                style.backgroundColor = opt_backgroundColor;\n            }\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.left = '0';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.frameState = frameState;\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (center, resolution, rotation, pixelRatio, width, height, offsetX) {\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / resolution;\n        var sy = -sx;\n        var dx2 = -center[0] + offsetX;\n        var dy2 = -center[1];\n        return composeTransform(this.tempTransform, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var layer = this.getLayer();\n        var layerExtent = layer.getExtent();\n        if (layerExtent) {\n            var renderCoordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n            /** get only data inside of the layer extent */\n            if (!containsCoordinate(layerExtent, renderCoordinate)) {\n                return null;\n            }\n        }\n        var x = Math.round(renderPixel[0]);\n        var y = Math.round(renderPixel[1]);\n        var pixelContext = this.pixelContext_;\n        if (!pixelContext) {\n            var pixelCanvas = document.createElement('canvas');\n            pixelCanvas.width = 1;\n            pixelCanvas.height = 1;\n            pixelContext = pixelCanvas.getContext('2d');\n            this.pixelContext_ = pixelContext;\n        }\n        pixelContext.clearRect(0, 0, 1, 1);\n        var data;\n        try {\n            pixelContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n            data = pixelContext.getImageData(0, 0, 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                this.pixelContext_ = null;\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    /**\n     * Clean up.\n     */\n    CanvasLayerRenderer.prototype.disposeInternal = function () {\n        delete this.frameState;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport { TRUE } from '../functions.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { getWidth } from '../extent.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { inView } from '../layer/Layer.js';\nimport { wrapX } from '../coordinate.js';\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n            return callback.call(thisArg, feature, managed ? layer : null, geometry);\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = wrapX(coordinate.slice(), projection);\n        var offsets = [[0, 0]];\n        if (projection.canWrapX() && checkWrapped) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            offsets.push([-worldWidth, 0], [worldWidth, 0]);\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var matches = /** @type {Array<HitMatch<T>>} */ ([]);\n        var tmpCoord = [];\n        for (var i = 0; i < offsets.length; i++) {\n            for (var j = numLayers - 1; j >= 0; --j) {\n                var layerState = layerStates[j];\n                var layer = layerState.layer;\n                if (layer.hasRenderer() &&\n                    inView(layerState, viewState) &&\n                    layerFilter.call(thisArg2, layer)) {\n                    var layerRenderer = layer.getRenderer();\n                    var source = layer.getSource();\n                    if (layerRenderer && source) {\n                        var coordinates = source.getWrapX()\n                            ? translatedCoordinate\n                            : coordinate;\n                        var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                        tmpCoord[0] = coordinates[0] + offsets[i][0];\n                        tmpCoord[1] = coordinates[1] + offsets[i][1];\n                        result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, matches);\n                    }\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        if (matches.length === 0) {\n            return undefined;\n        }\n        var order = 1 / matches.length;\n        matches.forEach(function (m, i) { return (m.distanceSq += i * order); });\n        matches.sort(function (a, b) { return a.distanceSq - b.distanceSq; });\n        matches.some(function (m) {\n            return (result = m.callback(m.feature, m.layer, m.geometry));\n        });\n        return result;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @abstract\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { checkedFonts } from '../render/canvas.js';\nimport { inView } from '../layer/Layer.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @type {import(\"../events.js\").EventsKey}\n         */\n        _this.fontChangeListenerKey_ = listen(checkedFonts, ObjectEventType.PROPERTYCHANGE, map.redrawText.bind(map));\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    CompositeMapRenderer.prototype.disposeInternal = function () {\n        unlistenByKey(this.fontChangeListenerKey_);\n        this.element_.parentNode.removeChild(this.element_);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n            return a.zIndex - b.zIndex;\n        });\n        var viewState = frameState.viewState;\n        this.children_.length = 0;\n        /**\n         * @type {Array<import(\"../layer/BaseVector.js\").default>}\n         */\n        var declutterLayers = [];\n        var previousElement = null;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            frameState.layerIndex = i;\n            var layer = layerState.layer;\n            var sourceState = layer.getSourceState();\n            if (!inView(layerState, viewState) ||\n                (sourceState != SourceState.READY &&\n                    sourceState != SourceState.UNDEFINED)) {\n                layer.unrender();\n                continue;\n            }\n            var element = layer.render(frameState, previousElement);\n            if (!element) {\n                continue;\n            }\n            if (element !== previousElement) {\n                this.children_.push(element);\n                previousElement = element;\n            }\n            if ('getDeclutter' in layer) {\n                declutterLayers.push(\n                /** @type {import(\"../layer/BaseVector.js\").default} */ (layer));\n            }\n        }\n        for (var i = declutterLayers.length - 1; i >= 0; --i) {\n            declutterLayers[i].renderDeclutter(frameState);\n        }\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() &&\n                inView(layerState, viewState) &&\n                layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../../reproj/common.js';\nimport { IMAGE_SMOOTHING_DISABLED, IMAGE_SMOOTHING_ENABLED } from './common.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, toString as toTransformString, } from '../../transform.js';\nimport { assign } from '../../obj.js';\nimport { containsCoordinate, containsExtent, getHeight, getIntersection, getWidth, intersects as intersectsExtent, isEmpty, } from '../../extent.js';\nimport { fromUserExtent } from '../../proj.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImageLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n     */\n    function CanvasImageLayerRenderer(imageLayer) {\n        var _this = _super.call(this, imageLayer) || this;\n        /**\n         * @protected\n         * @type {?import(\"../../ImageBase.js\").default}\n         */\n        _this.image_ = null;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    CanvasImageLayerRenderer.prototype.getImage = function () {\n        return !this.image_ ? null : this.image_.getImage();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasImageLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var imageSource = this.getLayer().getSource();\n        var hints = frameState.viewHints;\n        var renderedExtent = frameState.extent;\n        if (layerState.extent !== undefined) {\n            renderedExtent = getIntersection(renderedExtent, fromUserExtent(layerState.extent, viewState.projection));\n        }\n        if (!hints[ViewHint.ANIMATING] &&\n            !hints[ViewHint.INTERACTING] &&\n            !isEmpty(renderedExtent)) {\n            if (imageSource) {\n                var projection = viewState.projection;\n                if (!ENABLE_RASTER_REPROJECTION) {\n                    var sourceProjection = imageSource.getProjection();\n                    if (sourceProjection) {\n                        projection = sourceProjection;\n                    }\n                }\n                var image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n                if (image) {\n                    if (this.loadImage(image)) {\n                        this.image_ = image;\n                    }\n                    else if (image.getState() === ImageState.EMPTY) {\n                        this.image_ = null;\n                    }\n                }\n            }\n            else {\n                this.image_ = null;\n            }\n        }\n        return !!this.image_;\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Uint8ClampedArray} Data at the pixel location.\n     */\n    CanvasImageLayerRenderer.prototype.getData = function (pixel) {\n        var frameState = this.frameState;\n        if (!frameState) {\n            return null;\n        }\n        var layer = this.getLayer();\n        var coordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        var layerExtent = layer.getExtent();\n        if (layerExtent) {\n            if (!containsCoordinate(layerExtent, coordinate)) {\n                return null;\n            }\n        }\n        var imageExtent = this.image_.getExtent();\n        var img = this.image_.getImage();\n        var imageMapWidth = getWidth(imageExtent);\n        var col = Math.floor(img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth));\n        if (col < 0 || col >= img.width) {\n            return null;\n        }\n        var imageMapHeight = getHeight(imageExtent);\n        var row = Math.floor(img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight));\n        if (row < 0 || row >= img.height) {\n            return null;\n        }\n        return this.getImageData(img, col, row);\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasImageLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var image = this.image_;\n        var imageExtent = image.getExtent();\n        var imageResolution = image.getResolution();\n        var imagePixelRatio = image.getPixelRatio();\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewCenter = viewState.center;\n        var viewResolution = viewState.resolution;\n        var size = frameState.size;\n        var scale = (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n        var width = Math.round(size[0] * pixelRatio);\n        var height = Math.round(size[1] * pixelRatio);\n        var rotation = viewState.rotation;\n        if (rotation) {\n            var size_1 = Math.round(Math.sqrt(width * width + height * height));\n            width = size_1;\n            height = size_1;\n        }\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / pixelRatio, 1 / pixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = toTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity, this.getBackground(frameState));\n        var context = this.context;\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        var render = true;\n        if (layerState.extent) {\n            var layerExtent = fromUserExtent(layerState.extent, viewState.projection);\n            render = intersectsExtent(layerExtent, frameState.extent);\n            clipped = render && !containsExtent(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(context, frameState, layerExtent);\n            }\n        }\n        var img = image.getImage();\n        var transform = composeTransform(this.tempTransform, width / 2, height / 2, scale, scale, 0, (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution, (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution);\n        this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n        var dw = img.width * transform[0];\n        var dh = img.height * transform[3];\n        if (!this.getLayer().getSource().getInterpolate()) {\n            assign(context, IMAGE_SMOOTHING_DISABLED);\n        }\n        this.preRender(context, frameState);\n        if (render && dw >= 0.5 && dh >= 0.5) {\n            var dx = transform[4];\n            var dy = transform[5];\n            var opacity = layerState.opacity;\n            var previousAlpha = void 0;\n            if (opacity !== 1) {\n                previousAlpha = context.globalAlpha;\n                context.globalAlpha = opacity;\n            }\n            context.drawImage(img, 0, 0, +img.width, +img.height, Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n            if (opacity !== 1) {\n                context.globalAlpha = previousAlpha;\n            }\n        }\n        this.postRender(context, frameState);\n        if (clipped) {\n            context.restore();\n        }\n        assign(context, IMAGE_SMOOTHING_ENABLED);\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    return CanvasImageLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasImageLayerRenderer;\n//# sourceMappingURL=ImageLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport ReplayType from '../../render/canvas/BuilderType.js';\nimport TileState from '../../TileState.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport ViewHint from '../../ViewHint.js';\nimport { HIT_DETECT_RESOLUTION, createHitDetectionImageData, hitDetect, } from '../../render/canvas/hitdetect.js';\nimport { apply as applyTransform, create as createTransform, multiply, reset as resetTransform, scale, scale as scaleTransform, translate as translateTransform, } from '../../transform.js';\nimport { boundingExtent, buffer, containsExtent, equals, getIntersection, getTopLeft, intersects, } from '../../extent.js';\nimport { getSquaredTolerance as getSquaredRenderTolerance, renderFeature, } from '../vector.js';\nimport { getUid } from '../../util.js';\nimport { toSize } from '../../size.js';\nimport { wrapX } from '../../coordinate.js';\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas/BuilderType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n    'image': [\n        ReplayType.POLYGON,\n        ReplayType.CIRCLE,\n        ReplayType.LINE_STRING,\n        ReplayType.IMAGE,\n        ReplayType.TEXT,\n    ],\n    'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING],\n    'vector': [],\n};\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas/BuilderType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n    'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n    'vector': [\n        ReplayType.POLYGON,\n        ReplayType.CIRCLE,\n        ReplayType.LINE_STRING,\n        ReplayType.IMAGE,\n        ReplayType.TEXT,\n        ReplayType.DEFAULT,\n    ],\n};\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nvar CanvasVectorTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n     */\n    function CanvasVectorTileLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /** @private */\n        _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedLayerRevision_;\n        /**\n         * @private\n         * @type {import(\"../../transform\").Transform}\n         */\n        _this.renderedPixelToCoordinateTransform_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRotation_;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection\").default} projection Projection.\n     * @return {boolean|undefined} Tile needs to be rendered.\n     */\n    CanvasVectorTileLayerRenderer.prototype.prepareTile = function (tile, pixelRatio, projection) {\n        var render;\n        var state = tile.getState();\n        if (state === TileState.LOADED || state === TileState.ERROR) {\n            this.updateExecutorGroup_(tile, pixelRatio, projection);\n            if (this.tileImageNeedsRender_(tile)) {\n                render = true;\n            }\n        }\n        return render;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasVectorTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var resolution = viewState.resolution;\n        var projection = viewState.projection;\n        var layer = this.getLayer();\n        var tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n        var viewHints = frameState.viewHints;\n        var hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        if (hifi || !tile.wantedResolution) {\n            tile.wantedResolution = resolution;\n        }\n        var render = this.prepareTile(tile, pixelRatio, projection);\n        if (render &&\n            (hifi || Date.now() - frameState.time < 8) &&\n            layer.getRenderMode() !== VectorTileRenderType.VECTOR) {\n            this.renderTileImage_(tile, frameState);\n        }\n        return _super.prototype.getTile.call(this, z, x, y, frameState);\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasVectorTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var layer = this.getLayer();\n        return (_super.prototype.isDrawableTile.call(this, tile) &&\n            (layer.getRenderMode() === VectorTileRenderType.VECTOR\n                ? getUid(layer) in tile.executorGroups\n                : tile.hasContext(layer)));\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage(this.getLayer());\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasVectorTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var layerRevision = this.getLayer().getRevision();\n        if (this.renderedLayerRevision_ != layerRevision) {\n            this.renderedTiles.length = 0;\n        }\n        this.renderedLayerRevision_ = layerRevision;\n        return _super.prototype.prepareFrame.call(this, frameState);\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.updateExecutorGroup_ = function (tile, pixelRatio, projection) {\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var revision = layer.getRevision();\n        var renderOrder = layer.getRenderOrder() || null;\n        var resolution = tile.wantedResolution;\n        var builderState = tile.getReplayState(layer);\n        if (!builderState.dirty &&\n            builderState.renderedResolution === resolution &&\n            builderState.renderedRevision == revision &&\n            builderState.renderedRenderOrder == renderOrder) {\n            return;\n        }\n        var source = layer.getSource();\n        var declutter = layer.getDeclutter();\n        var sourceTileGrid = source.getTileGrid();\n        var tileGrid = source.getTileGridForProjection(projection);\n        var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n        var sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n        var layerUid = getUid(layer);\n        delete tile.hitDetectionImageData[layerUid];\n        tile.executorGroups[layerUid] = [];\n        if (declutter) {\n            tile.declutterExecutorGroups[layerUid] = [];\n        }\n        var _loop_1 = function (t, tt) {\n            var sourceTile = sourceTiles[t];\n            if (sourceTile.getState() != TileState.LOADED) {\n                return \"continue\";\n            }\n            var sourceTileCoord = sourceTile.tileCoord;\n            var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n            var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n            var builderExtent = buffer(sharedExtent, layer.getRenderBuffer() * resolution, this_1.tmpExtent);\n            var bufferedExtent = equals(sourceTileExtent, sharedExtent)\n                ? null\n                : builderExtent;\n            builderState.dirty = false;\n            var builderGroup = new CanvasBuilderGroup(0, builderExtent, resolution, pixelRatio);\n            var declutterBuilderGroup = declutter\n                ? new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio)\n                : undefined;\n            var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @this {CanvasVectorTileLayerRenderer}\n             */\n            var render = function (feature) {\n                var styles;\n                var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n                if (styleFunction) {\n                    styles = styleFunction(feature, resolution);\n                }\n                if (styles) {\n                    var dirty = this.renderFeature(feature, squaredTolerance, styles, builderGroup, declutterBuilderGroup);\n                    this.dirty_ = this.dirty_ || dirty;\n                    builderState.dirty = builderState.dirty || dirty;\n                }\n            };\n            var features = sourceTile.getFeatures();\n            if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n                features.sort(renderOrder);\n            }\n            for (var i = 0, ii = features.length; i < ii; ++i) {\n                var feature = features[i];\n                if (!bufferedExtent ||\n                    intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n                    render.call(this_1, feature);\n                }\n            }\n            var executorGroupInstructions = builderGroup.finish();\n            // no need to clip when the render tile is covered by a single source tile\n            var replayExtent = layer.getRenderMode() !== VectorTileRenderType.VECTOR &&\n                declutter &&\n                sourceTiles.length === 1\n                ? null\n                : sharedExtent;\n            var renderingReplayGroup = new CanvasExecutorGroup(replayExtent, resolution, pixelRatio, source.getOverlaps(), executorGroupInstructions, layer.getRenderBuffer());\n            tile.executorGroups[layerUid].push(renderingReplayGroup);\n            if (declutterBuilderGroup) {\n                var declutterExecutorGroup = new CanvasExecutorGroup(null, resolution, pixelRatio, source.getOverlaps(), declutterBuilderGroup.finish(), layer.getRenderBuffer());\n                tile.declutterExecutorGroups[layerUid].push(declutterExecutorGroup);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0, tt = sourceTiles.length; t < tt; ++t) {\n            _loop_1(t, tt);\n        }\n        builderState.renderedRevision = revision;\n        builderState.renderedRenderOrder = renderOrder;\n        builderState.renderedResolution = resolution;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        var resolution = frameState.viewState.resolution;\n        var rotation = frameState.viewState.rotation;\n        hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n        var layer = this.getLayer();\n        var source = layer.getSource();\n        var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n        var hitExtent = boundingExtent([coordinate]);\n        buffer(hitExtent, resolution * hitTolerance, hitExtent);\n        /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n        var features = {};\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @param {number} distanceSq The squared distance to the click position.\n         * @return {T|undefined} Callback result.\n         */\n        var featureCallback = function (feature, geometry, distanceSq) {\n            var key = feature.getId();\n            if (key === undefined) {\n                key = getUid(feature);\n            }\n            var match = features[key];\n            if (!match) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    return callback(feature, layer, geometry);\n                }\n                matches.push((features[key] = {\n                    feature: feature,\n                    layer: layer,\n                    geometry: geometry,\n                    distanceSq: distanceSq,\n                    callback: callback,\n                }));\n            }\n            else if (match !== true && distanceSq < match.distanceSq) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    matches.splice(matches.lastIndexOf(match), 1);\n                    return callback(feature, layer, geometry);\n                }\n                match.geometry = geometry;\n                match.distanceSq = distanceSq;\n            }\n            return undefined;\n        };\n        var renderedTiles = \n        /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (this.renderedTiles);\n        var found;\n        var _loop_2 = function (i, ii) {\n            var tile = renderedTiles[i];\n            var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n            if (!intersects(tileExtent, hitExtent)) {\n                return \"continue\";\n            }\n            var layerUid = getUid(layer);\n            var executorGroups = [tile.executorGroups[layerUid]];\n            var declutterExecutorGroups = tile.declutterExecutorGroups[layerUid];\n            if (declutterExecutorGroups) {\n                executorGroups.push(declutterExecutorGroups);\n            }\n            executorGroups.some(function (executorGroups) {\n                var declutteredFeatures = executorGroups === declutterExecutorGroups\n                    ? frameState.declutterTree.all().map(function (item) { return item.value; })\n                    : null;\n                for (var t = 0, tt = executorGroups.length; t < tt; ++t) {\n                    var executorGroup = executorGroups[t];\n                    found = executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, featureCallback, declutteredFeatures);\n                    if (found) {\n                        return true;\n                    }\n                }\n            });\n        };\n        for (var i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n            _loop_2(i, ii);\n        }\n        return found;\n    };\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n     */\n    CanvasVectorTileLayerRenderer.prototype.getFeatures = function (pixel) {\n        return new Promise(function (resolve, reject) {\n            var layer = \n            /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n            var layerUid = getUid(layer);\n            var source = layer.getSource();\n            var projection = this.renderedProjection;\n            var projectionExtent = projection.getExtent();\n            var resolution = this.renderedResolution;\n            var tileGrid = source.getTileGridForProjection(projection);\n            var coordinate = applyTransform(this.renderedPixelToCoordinateTransform_, pixel.slice());\n            var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n            var tile;\n            for (var i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n                if (tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()) {\n                    tile = this.renderedTiles[i];\n                    if (tile.getState() === TileState.LOADED) {\n                        var extent_1 = tileGrid.getTileCoordExtent(tile.tileCoord);\n                        if (source.getWrapX() &&\n                            projection.canWrapX() &&\n                            !containsExtent(projectionExtent, extent_1)) {\n                            wrapX(coordinate, projection);\n                        }\n                        break;\n                    }\n                    tile = undefined;\n                }\n            }\n            if (!tile || tile.loadingSourceTiles > 0) {\n                resolve([]);\n                return;\n            }\n            var extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n            var corner = getTopLeft(extent);\n            var tilePixel = [\n                (coordinate[0] - corner[0]) / resolution,\n                (corner[1] - coordinate[1]) / resolution,\n            ];\n            var features = tile\n                .getSourceTiles()\n                .reduce(function (accumulator, sourceTile) {\n                return accumulator.concat(sourceTile.getFeatures());\n            }, []);\n            var hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n            if (!hitDetectionImageData && !this.animatingOrInteracting_) {\n                var tileSize = toSize(tileGrid.getTileSize(tileGrid.getZForResolution(resolution)));\n                var rotation = this.renderedRotation_;\n                var transforms = [\n                    this.getRenderTransform(tileGrid.getTileCoordCenter(tile.wrappedTileCoord), resolution, 0, HIT_DETECT_RESOLUTION, tileSize[0] * HIT_DETECT_RESOLUTION, tileSize[1] * HIT_DETECT_RESOLUTION, 0),\n                ];\n                hitDetectionImageData = createHitDetectionImageData(tileSize, transforms, features, layer.getStyleFunction(), tileGrid.getTileCoordExtent(tile.wrappedTileCoord), tile.getReplayState(layer).renderedResolution, rotation);\n                tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n            }\n            resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n        }.bind(this));\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     */\n    CanvasVectorTileLayerRenderer.prototype.handleFontsChanged = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * Render declutter items for this layer\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderDeclutter = function (frameState) {\n        var context = this.context;\n        var alpha = context.globalAlpha;\n        context.globalAlpha = this.getLayer().getOpacity();\n        var viewHints = frameState.viewHints;\n        var hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var tiles = \n        /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (this.renderedTiles);\n        for (var i = 0, ii = tiles.length; i < ii; ++i) {\n            var tile = tiles[i];\n            var declutterExecutorGroups = tile.declutterExecutorGroups[getUid(this.getLayer())];\n            if (declutterExecutorGroups) {\n                for (var j = declutterExecutorGroups.length - 1; j >= 0; --j) {\n                    declutterExecutorGroups[j].execute(this.context, 1, this.getTileRenderTransform(tile, frameState), frameState.viewState.rotation, hifi, undefined, frameState.declutterTree);\n                }\n            }\n        }\n        context.globalAlpha = alpha;\n    };\n    CanvasVectorTileLayerRenderer.prototype.getTileRenderTransform = function (tile, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var center = viewState.center;\n        var resolution = viewState.resolution;\n        var rotation = viewState.rotation;\n        var size = frameState.size;\n        var width = Math.round(size[0] * pixelRatio);\n        var height = Math.round(size[1] * pixelRatio);\n        var source = this.getLayer().getSource();\n        var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n        var tileCoord = tile.tileCoord;\n        var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n        var transform = multiply(scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio), this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, worldOffset));\n        return transform;\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var viewHints = frameState.viewHints;\n        var hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        _super.prototype.renderFrame.call(this, frameState, target);\n        this.renderedPixelToCoordinateTransform_ =\n            frameState.pixelToCoordinateTransform.slice();\n        this.renderedRotation_ = frameState.viewState.rotation;\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var renderMode = layer.getRenderMode();\n        var context = this.context;\n        var alpha = context.globalAlpha;\n        context.globalAlpha = layer.getOpacity();\n        var replayTypes = VECTOR_REPLAYS[renderMode];\n        var viewState = frameState.viewState;\n        var rotation = viewState.rotation;\n        var tileSource = layer.getSource();\n        var tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n        var z = tileGrid.getZForResolution(viewState.resolution, tileSource.zDirection);\n        var tiles = this.renderedTiles;\n        var clips = [];\n        var clipZs = [];\n        for (var i = tiles.length - 1; i >= 0; --i) {\n            var tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (tiles[i]);\n            var executorGroups = tile.executorGroups[getUid(layer)].filter(function (group) { return group.hasExecutors(replayTypes); });\n            if (executorGroups.length === 0) {\n                continue;\n            }\n            var transform = this.getTileRenderTransform(tile, frameState);\n            var currentZ = tile.tileCoord[0];\n            var contextSaved = false;\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            var currentClip = executorGroups[0].getClipCoords(transform);\n            for (var j = 0, jj = clips.length; j < jj; ++j) {\n                if (z !== currentZ && currentZ < clipZs[j]) {\n                    var clip = clips[j];\n                    if (intersects([currentClip[0], currentClip[3], currentClip[4], currentClip[7]], [clip[0], clip[3], clip[4], clip[7]])) {\n                        if (!contextSaved) {\n                            context.save();\n                            contextSaved = true;\n                        }\n                        context.beginPath();\n                        // counter-clockwise (outer ring) for current tile\n                        context.moveTo(currentClip[0], currentClip[1]);\n                        context.lineTo(currentClip[2], currentClip[3]);\n                        context.lineTo(currentClip[4], currentClip[5]);\n                        context.lineTo(currentClip[6], currentClip[7]);\n                        // clockwise (inner ring) for higher z tile\n                        context.moveTo(clip[6], clip[7]);\n                        context.lineTo(clip[4], clip[5]);\n                        context.lineTo(clip[2], clip[3]);\n                        context.lineTo(clip[0], clip[1]);\n                        context.clip();\n                    }\n                }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n            for (var t = 0, tt = executorGroups.length; t < tt; ++t) {\n                var executorGroup = executorGroups[t];\n                executorGroup.execute(context, 1, transform, rotation, hifi, replayTypes);\n            }\n            if (contextSaved) {\n                context.restore();\n            }\n        }\n        context.globalAlpha = alpha;\n        return this.container;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder group for decluttering.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, opt_declutterBuilderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading =\n                    renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, undefined, opt_declutterBuilderGroup) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, undefined, opt_declutterBuilderGroup);\n        }\n        return loading;\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @return {boolean} A new tile image was rendered.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.tileImageNeedsRender_ = function (tile) {\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        if (layer.getRenderMode() === VectorTileRenderType.VECTOR) {\n            return false;\n        }\n        var replayState = tile.getReplayState(layer);\n        var revision = layer.getRevision();\n        var resolution = tile.wantedResolution;\n        return (replayState.renderedTileResolution !== resolution ||\n            replayState.renderedTileRevision !== revision);\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function (tile, frameState) {\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var replayState = tile.getReplayState(layer);\n        var revision = layer.getRevision();\n        var executorGroups = tile.executorGroups[getUid(layer)];\n        replayState.renderedTileRevision = revision;\n        var tileCoord = tile.wrappedTileCoord;\n        var z = tileCoord[0];\n        var source = layer.getSource();\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var tileGrid = source.getTileGridForProjection(projection);\n        var tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n        var renderPixelRatio = (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n        var resolution = tileGrid.getResolution(z);\n        var context = tile.getContext(layer);\n        // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n        pixelRatio = Math.round(Math.max(pixelRatio, renderPixelRatio / pixelRatio));\n        var size = source.getTilePixelSize(z, pixelRatio, projection);\n        context.canvas.width = size[0];\n        context.canvas.height = size[1];\n        var renderScale = pixelRatio / renderPixelRatio;\n        if (renderScale !== 1) {\n            var canvasTransform = resetTransform(this.tmpTransform_);\n            scaleTransform(canvasTransform, renderScale, renderScale);\n            context.setTransform.apply(context, canvasTransform);\n        }\n        var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n        var pixelScale = renderPixelRatio / resolution;\n        var transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        for (var i = 0, ii = executorGroups.length; i < ii; ++i) {\n            var executorGroup = executorGroups[i];\n            executorGroup.execute(context, renderScale, transform, 0, true, IMAGE_REPLAYS[layer.getRenderMode()]);\n        }\n        replayState.renderedTileResolution = tile.wantedResolution;\n    };\n    return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\nexport default CanvasVectorTileLayerRenderer;\n//# sourceMappingURL=VectorTileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { IMAGE_SMOOTHING_DISABLED, IMAGE_SMOOTHING_ENABLED } from './common.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, toString as toTransformString, } from '../../transform.js';\nimport { assign } from '../../obj.js';\nimport { containsCoordinate, createEmpty, equals, getIntersection, getTopLeft, intersects, } from '../../extent.js';\nimport { cssOpacity } from '../../css.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { toSize } from '../../size.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {LayerType} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {?import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedPixelRatio;\n        /**\n         * @protected\n         * @type {import(\"../../proj/Projection.js\").default}\n         */\n        _this.renderedProjection = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = this.getLayer();\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return (tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            (tileState == TileState.ERROR && !useInterimTilesOnError));\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Uint8ClampedArray} Data at the pixel location.\n     */\n    CanvasTileLayerRenderer.prototype.getData = function (pixel) {\n        var frameState = this.frameState;\n        if (!frameState) {\n            return null;\n        }\n        var layer = this.getLayer();\n        var coordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        var layerExtent = layer.getExtent();\n        if (layerExtent) {\n            if (!containsCoordinate(layerExtent, coordinate)) {\n                return null;\n            }\n        }\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var viewState = frameState.viewState;\n        var source = layer.getRenderSource();\n        var tileGrid = source.getTileGridForProjection(viewState.projection);\n        var tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n        for (var z = tileGrid.getZForResolution(viewState.resolution); z >= tileGrid.getMinZoom(); --z) {\n            var tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n            var tile = source.getTile(z, tileCoord[1], tileCoord[2], pixelRatio, projection);\n            if (!(tile instanceof ImageTile || tile instanceof ReprojTile)) {\n                return null;\n            }\n            if (tile.getState() !== TileState.LOADED) {\n                continue;\n            }\n            var tileOrigin = tileGrid.getOrigin(z);\n            var tileSize = toSize(tileGrid.getTileSize(z));\n            var tileResolution = tileGrid.getResolution(z);\n            var col = Math.floor(tilePixelRatio *\n                ((coordinate[0] - tileOrigin[0]) / tileResolution -\n                    tileCoord[1] * tileSize[0]));\n            var row = Math.floor(tilePixelRatio *\n                ((tileOrigin[1] - coordinate[1]) / tileResolution -\n                    tileCoord[2] * tileSize[1]));\n            return this.getImageData(tile.getImage(), col, row);\n        }\n        return null;\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        return !!this.getLayer().getSource();\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        var layerExtent = layerState.extent && fromUserExtent(layerState.extent, projection);\n        if (layerExtent) {\n            extent = getIntersection(extent, fromUserExtent(layerState.extent, projection));\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = size;\n            height = size;\n        }\n        var dx = (tileResolution * width) / 2 / tilePixelRatio;\n        var dy = (tileResolution * height) / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy,\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ &&\n                            (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        var canvasTransform = toTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity, this.getBackground(frameState));\n        var context = this.context;\n        var canvas = context.canvas;\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerExtent) {\n            this.clipUnrotated(context, frameState, layerExtent);\n        }\n        if (!tileSource.getInterpolate()) {\n            assign(context, IMAGE_SMOOTHING_DISABLED);\n        }\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var clips, clipZs, currentClip;\n        if (layerState.opacity === 1 &&\n            (!this.containerReused ||\n                tileSource.getOpaque(frameState.viewState.projection))) {\n            zs = zs.reverse();\n        }\n        else {\n            clips = [];\n            clipZs = [];\n        }\n        for (var i = zs.length - 1; i >= 0; --i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform, [\n                (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n                    tileResolution,\n                (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n                    tileResolution,\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[tileCoordKey]);\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var xIndex = originTileCoord[1] - tileCoord[1];\n                var nextX = Math.round(origin_1[0] - (xIndex - 1) * dx_1);\n                var yIndex = originTileCoord[2] - tileCoord[2];\n                var nextY = Math.round(origin_1[1] - (yIndex - 1) * dy_1);\n                var x = Math.round(origin_1[0] - xIndex * dx_1);\n                var y = Math.round(origin_1[1] - yIndex * dy_1);\n                var w = nextX - x;\n                var h = nextY - y;\n                var transition = z === currentZ;\n                var inTransition = transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n                var contextSaved = false;\n                if (!inTransition) {\n                    if (clips) {\n                        // Clip mask for regions in this tile that already filled by a higher z tile\n                        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n                        for (var i_1 = 0, ii = clips.length; i_1 < ii; ++i_1) {\n                            if (z !== currentZ && currentZ < clipZs[i_1]) {\n                                var clip = clips[i_1];\n                                if (intersects([x, y, x + w, y + h], [clip[0], clip[3], clip[4], clip[7]])) {\n                                    if (!contextSaved) {\n                                        context.save();\n                                        contextSaved = true;\n                                    }\n                                    context.beginPath();\n                                    // counter-clockwise (outer ring) for current tile\n                                    context.moveTo(currentClip[0], currentClip[1]);\n                                    context.lineTo(currentClip[2], currentClip[3]);\n                                    context.lineTo(currentClip[4], currentClip[5]);\n                                    context.lineTo(currentClip[6], currentClip[7]);\n                                    // clockwise (inner ring) for higher z tile\n                                    context.moveTo(clip[6], clip[7]);\n                                    context.lineTo(clip[4], clip[5]);\n                                    context.lineTo(clip[2], clip[3]);\n                                    context.lineTo(clip[0], clip[1]);\n                                    context.clip();\n                                }\n                            }\n                        }\n                        clips.push(currentClip);\n                        clipZs.push(currentZ);\n                    }\n                    else {\n                        context.clearRect(x, y, w, h);\n                    }\n                }\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition);\n                if (clips && !inTransition) {\n                    if (contextSaved) {\n                        context.restore();\n                    }\n                    this.renderedTiles.unshift(tile);\n                }\n                else {\n                    this.renderedTiles.push(tile);\n                }\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged =\n            !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.renderedPixelRatio = pixelRatio;\n        this.renderedProjection = projection;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        assign(context, IMAGE_SMOOTHING_ENABLED);\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        var opacity = cssOpacity(layerState.opacity);\n        var container = this.container;\n        if (opacity !== container.style.opacity) {\n            container.style.opacity = opacity;\n        }\n        return this.container;\n    };\n    /**\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (alpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Image\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to `preload` levels.\n     * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tileCount = 0;\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        ++tileCount;\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([\n                                    tile,\n                                    tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord),\n                                    tileResolution,\n                                ]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n        tileSource.updateCacheSize(tileCount, projection);\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport { HIT_DETECT_RESOLUTION, createHitDetectionImageData, hitDetect, } from '../../render/canvas/hitdetect.js';\nimport { apply, makeInverse, makeScale, toString as transformToString, } from '../../transform.js';\nimport { buffer, containsExtent, createEmpty, getWidth, intersects as intersectsExtent, wrapX as wrapExtentX, } from '../../extent.js';\nimport { cssOpacity } from '../../css.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature, } from '../vector.js';\nimport { equals } from '../../array.js';\nimport { fromUserExtent, getTransformFromProjections, getUserProjection, toUserExtent, toUserResolution, } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { wrapX as wrapCoordinateX } from '../../coordinate.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /** @private */\n        _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n        /**\n         * @type {boolean}\n         */\n        _this.animatingOrInteracting_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @type {ImageData}\n         */\n        _this.hitDetectionImageData_ = null;\n        /**\n         * @type {Array<import(\"../../Feature.js\").default>}\n         */\n        _this.renderedFeatures_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.wrappedRenderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRotation_;\n        /**\n         * @private\n         * @type {import(\"../../coordinate\").Coordinate}\n         */\n        _this.renderedCenter_ = null;\n        /**\n         * @private\n         * @type {import(\"../../proj/Projection\").default}\n         */\n        _this.renderedProjection_ = null;\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        /**\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        /**\n         * Clipping to be performed by `renderFrame()`\n         * @type {boolean}\n         */\n        _this.clipping = true;\n        return _this;\n    }\n    /**\n     * @param {ExecutorGroup} executorGroup Executor group.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     */\n    CanvasVectorLayerRenderer.prototype.renderWorlds = function (executorGroup, frameState, opt_declutterTree) {\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var center = viewState.center;\n        var resolution = viewState.resolution;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        var pixelRatio = frameState.pixelRatio;\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var context = this.context;\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        var multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n        var worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n        var endWorld = multiWorld\n            ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n            : 1;\n        var world = multiWorld\n            ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n            : 0;\n        do {\n            var transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, world * worldWidth);\n            executorGroup.execute(context, 1, transform, rotation, snapToPixel, undefined, opt_declutterTree);\n        } while (++world < endWorld);\n    };\n    /**\n     * Render declutter items for this layer\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CanvasVectorLayerRenderer.prototype.renderDeclutter = function (frameState) {\n        if (this.declutterExecutorGroup) {\n            this.renderWorlds(this.declutterExecutorGroup, frameState, frameState.declutterTree);\n        }\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var pixelRatio = frameState.pixelRatio;\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = transformToString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity, this.getBackground(frameState));\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        var declutterExecutorGroup = this.declutterExecutorGroup;\n        if ((!replayGroup || replayGroup.isEmpty()) &&\n            (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())) {\n            return null;\n        }\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        var render = true;\n        if (layerState.extent && this.clipping) {\n            var layerExtent = fromUserExtent(layerState.extent, projection);\n            render = intersectsExtent(layerExtent, frameState.extent);\n            clipped = render && !containsExtent(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(context, frameState, layerExtent);\n            }\n        }\n        if (render) {\n            this.renderWorlds(replayGroup, frameState);\n        }\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = cssOpacity(layerState.opacity);\n        var container = this.container;\n        if (opacity !== container.style.opacity) {\n            container.style.opacity = opacity;\n        }\n        if (this.renderedRotation_ !== viewState.rotation) {\n            this.renderedRotation_ = viewState.rotation;\n            this.hitDetectionImageData_ = null;\n        }\n        return this.container;\n    };\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n     */\n    CanvasVectorLayerRenderer.prototype.getFeatures = function (pixel) {\n        return new Promise(\n        /**\n         * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (resolve) {\n            if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n                var size = [this.context.canvas.width, this.context.canvas.height];\n                apply(this.pixelTransform, size);\n                var center = this.renderedCenter_;\n                var resolution = this.renderedResolution_;\n                var rotation = this.renderedRotation_;\n                var projection = this.renderedProjection_;\n                var extent = this.wrappedRenderedExtent_;\n                var layer = this.getLayer();\n                var transforms = [];\n                var width = size[0] * HIT_DETECT_RESOLUTION;\n                var height = size[1] * HIT_DETECT_RESOLUTION;\n                transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, 0).slice());\n                var source = layer.getSource();\n                var projectionExtent = projection.getExtent();\n                if (source.getWrapX() &&\n                    projection.canWrapX() &&\n                    !containsExtent(projectionExtent, extent)) {\n                    var startX = extent[0];\n                    var worldWidth = getWidth(projectionExtent);\n                    var world = 0;\n                    var offsetX = void 0;\n                    while (startX < projectionExtent[0]) {\n                        --world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, offsetX).slice());\n                        startX += worldWidth;\n                    }\n                    world = 0;\n                    startX = extent[2];\n                    while (startX > projectionExtent[2]) {\n                        ++world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, offsetX).slice());\n                        startX -= worldWidth;\n                    }\n                }\n                this.hitDetectionImageData_ = createHitDetectionImageData(size, transforms, this.renderedFeatures_, layer.getStyleFunction(), extent, resolution, rotation);\n            }\n            resolve(hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_));\n        }.bind(this));\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        var _this = this;\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        var resolution = frameState.viewState.resolution;\n        var rotation = frameState.viewState.rotation;\n        var layer = this.getLayer();\n        /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n        var features = {};\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @param {number} distanceSq The squared distance to the click position\n         * @return {T|undefined} Callback result.\n         */\n        var featureCallback = function (feature, geometry, distanceSq) {\n            var key = getUid(feature);\n            var match = features[key];\n            if (!match) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    return callback(feature, layer, geometry);\n                }\n                matches.push((features[key] = {\n                    feature: feature,\n                    layer: layer,\n                    geometry: geometry,\n                    distanceSq: distanceSq,\n                    callback: callback,\n                }));\n            }\n            else if (match !== true && distanceSq < match.distanceSq) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    matches.splice(matches.lastIndexOf(match), 1);\n                    return callback(feature, layer, geometry);\n                }\n                match.geometry = geometry;\n                match.distanceSq = distanceSq;\n            }\n            return undefined;\n        };\n        var result;\n        var executorGroups = [this.replayGroup_];\n        if (this.declutterExecutorGroup) {\n            executorGroups.push(this.declutterExecutorGroup);\n        }\n        executorGroups.some(function (executorGroup) {\n            return (result = executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, featureCallback, executorGroup === _this.declutterExecutorGroup &&\n                frameState.declutterTree\n                ? frameState.declutterTree.all().map(function (item) { return item.value; })\n                : null));\n        });\n        return result;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var vectorLayer = this.getLayer();\n        var vectorSource = vectorLayer.getSource();\n        if (!vectorSource) {\n            return false;\n        }\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if ((!this.dirty_ && !updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            this.animatingOrInteracting_ = true;\n            return true;\n        }\n        this.animatingOrInteracting_ = false;\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var center = viewState.center.slice();\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var renderedExtent = extent.slice();\n        var loadExtents = [extent.slice()];\n        var projectionExtent = projection.getExtent();\n        if (vectorSource.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n            wrapCoordinateX(center, projection);\n            var loadExtent = wrapExtentX(loadExtents[0], projection);\n            // If the extent crosses the date line, we load data for both edges of the worlds\n            if (loadExtent[0] < projectionExtent[0] &&\n                loadExtent[2] < projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] + worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] + worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n            else if (loadExtent[0] > projectionExtent[0] &&\n                loadExtent[2] > projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] - worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] - worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.wrappedRenderedExtent_, extent)) {\n            if (!equals(this.renderedExtent_, renderedExtent)) {\n                this.hitDetectionImageData_ = null;\n                this.renderedExtent_ = renderedExtent;\n            }\n            this.renderedCenter_ = center;\n            this.replayGroupChanged = false;\n            return true;\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        var declutterBuilderGroup;\n        if (this.getLayer().getDeclutter()) {\n            declutterBuilderGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        }\n        var userProjection = getUserProjection();\n        var userTransform;\n        if (userProjection) {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                var extent_1 = loadExtents[i];\n                var userExtent_1 = toUserExtent(extent_1, projection);\n                vectorSource.loadFeatures(userExtent_1, toUserResolution(resolution, projection), userProjection);\n            }\n            userTransform = getTransformFromProjections(userProjection, projection);\n        }\n        else {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n            }\n        }\n        var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n        var render = \n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, userTransform, declutterBuilderGroup);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        var userExtent = toUserExtent(extent, projection);\n        /** @type {Array<import(\"../../Feature.js\").default>} */\n        var features = vectorSource.getFeaturesInExtent(userExtent);\n        if (vectorLayerRenderOrder) {\n            features.sort(vectorLayerRenderOrder);\n        }\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            render(features[i]);\n        }\n        this.renderedFeatures_ = features;\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n        if (declutterBuilderGroup) {\n            this.declutterExecutorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), declutterBuilderGroup.finish(), vectorLayer.getRenderBuffer());\n        }\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = renderedExtent;\n        this.wrappedRenderedExtent_ = extent;\n        this.renderedCenter_ = center;\n        this.renderedProjection_ = projection;\n        this.replayGroup_ = executorGroup;\n        this.hitDetectionImageData_ = null;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} squaredTolerance Squared render tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, opt_transform, opt_declutterBuilderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading =\n                    renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport { abstract } from '../util.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /**\n         * The renderer is initialized and ready to render.\n         * @type {boolean}\n         */\n        _this.ready = true;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @protected\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        /**\n         * @type {import(\"../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        return _this;\n    }\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    LayerRenderer.prototype.getFeatures = function (pixel) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n     */\n    LayerRenderer.prototype.getData = function (pixel) {\n        return null;\n    };\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n        return undefined;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }.bind(this));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return null;\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    /**\n     * Clean up.\n     */\n    LayerRenderer.prototype.disposeInternal = function () {\n        delete this.layer_;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map"],"sourceRoot":""}