{"version":3,"file":"js/chunk-vendors-e334da7a.f1a105fa.js","mappings":"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","sources":["webpack://@openeo/web-editor/./node_modules/proj4/lib/global.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/constants/values.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/constants/units.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/match.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projString.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/defs.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/parseCode.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/extend.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/msfnz.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/sign.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/adjust_lon.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/tsfnz.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/phi2z.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/merc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/longlat.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/constants/Ellipsoid.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/deriveConstants.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/constants/Datum.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/datum.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/nadgrid.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/Proj.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/datumUtils.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/datum_transform.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/adjust_axis.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/toPoint.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/checkSanity.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/transform.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/core.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/Point.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/pj_enfn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/pj_mlfn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/tmerc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/sinh.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/hypot.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/log1py.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/asinhy.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/gatg.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/clens.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/cosh.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/clens_cmplx.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/etmerc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/adjust_zone.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/utm.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/srat.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/gauss.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/sterea.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/stere.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/somerc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/omerc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/lcc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/krovak.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/mlfn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/e0fn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/e1fn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/e2fn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/e3fn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/gN.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/adjust_lat.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/imlfn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/cass.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/qsfnz.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/laea.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/asinz.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/aea.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/gnom.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/iqsfnz.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/cea.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/eqc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/poly.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/nzmg.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/mill.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/sinu.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/moll.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/eqdc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/vandg.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/aeqd.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/ortho.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/qsc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/robin.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/geocent.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/tpers.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/geos.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/eqearth.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/bonne.js","webpack://@openeo/web-editor/./node_modules/proj4/projs.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/index.js"],"sourcesContent":["export default function (defs) {\n  defs('EPSG:4326', '+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees');\n  defs('EPSG:4269', '+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees');\n  defs('EPSG:3857', '+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs');\n  // UTM WGS84\n  for (var i = 1; i <= 60; ++i) {\n    defs('EPSG:' + (32600 + i), '+proj=utm +zone=' + i + ' +datum=WGS84 +units=m');\n    defs('EPSG:' + (32700 + i), '+proj=utm +zone=' + i + ' +south +datum=WGS84 +units=m');\n  }\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0; // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314; // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI / 2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI / 4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport { exports as default };\n\nexports.greenwich = 0.0; // \"0dE\",\nexports.lisbon = -9.131906111111; // \"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; // \"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; // \"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; // \"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; // \"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; // \"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; // \"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; // \"17d40'W\",\nexports.brussels = 4.367975; // \"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; // \"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; // \"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; // \"10d43'22.5\\\"E\"\n","export default {\n  mm: { to_meter: 0.001 },\n  cm: { to_meter: 0.01 },\n  ft: { to_meter: 0.3048 },\n  'us-ft': { to_meter: 1200 / 3937 },\n  fath: { to_meter: 1.8288 },\n  kmi: { to_meter: 1852 },\n  'us-ch': { to_meter: 20.1168402336805 },\n  'us-mi': { to_meter: 1609.34721869444 },\n  km: { to_meter: 1000 },\n  'ind-ft': { to_meter: 0.30479841 },\n  'ind-yd': { to_meter: 0.91439523 },\n  mi: { to_meter: 1609.344 },\n  yd: { to_meter: 0.9144 },\n  ch: { to_meter: 20.1168 },\n  link: { to_meter: 0.201168 },\n  dm: { to_meter: 0.1 },\n  in: { to_meter: 0.0254 },\n  'ind-ch': { to_meter: 20.11669506 },\n  'us-in': { to_meter: 0.025400050800101 },\n  'us-yd': { to_meter: 0.914401828803658 }\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import { D2R } from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function (defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function (v) {\n    return v.trim();\n  }).filter(function (a) {\n    return a;\n  }).reduce(function (p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function (v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function (v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function (v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function (v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function (v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function (v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function (v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function (v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function (v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function (v) {\n      self.rectified_grid_angle = parseFloat(v) * D2R;\n    },\n    lonc: function (v) {\n      self.longc = v * D2R;\n    },\n    x_0: function (v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function (v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function (v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function (v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function (v) {\n      self.a = parseFloat(v);\n    },\n    b: function (v) {\n      self.b = parseFloat(v);\n    },\n    r: function (v) {\n      self.a = self.b = parseFloat(v);\n    },\n    r_a: function () {\n      self.R_A = true;\n    },\n    zone: function (v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function () {\n      self.utmSouth = true;\n    },\n    towgs84: function (v) {\n      self.datum_params = v.split(',').map(function (a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function (v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function (v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function (v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function (v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function (v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      } else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function (v) {\n      var legalAxis = 'ewnsud';\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function () {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      } else {\n        self[paramOutname] = paramVal;\n      }\n    } else {\n      self[paramName] = paramVal;\n    }\n  }\n  if (typeof self.datumCode === 'string' && self.datumCode !== 'WGS84') {\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /* global console */\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      } else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  } else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function (v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        } else {\n          defs(v);\n        }\n      });\n    } else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    } else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    } else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    } else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    } else {\n      console.log(name);\n    }\n    return;\n  }\n}\nglobals(defs);\nexport default defs;\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code) {\n  return typeof code === 'string';\n}\nfunction testDef(code) {\n  return code in defs;\n}\nfunction testWKT(code) {\n  return (code.indexOf('+') !== 0 && code.indexOf('[') !== -1) || (typeof code === 'object' && !('srsCode' in code));\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code) {\n  return code[0] === '+';\n}\nfunction parse(code) {\n  if (testObj(code)) {\n    // check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  } else if (!code.projName) {\n    return wkt(code);\n  } else {\n    return code;\n  }\n}\n\nexport default parse;\n","export default function (destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function (eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n","export default function (x) {\n  return x < 0 ? -1 : 1;\n}\n","import { TWO_PI, SPI } from '../constants/values';\nimport sign from './sign';\n\nexport default function (x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import { HALF_PI } from '../constants/values';\n\nexport default function (eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import { HALF_PI } from '../constants/values';\n\nexport default function (eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  // console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport { FORTPI, R2D, EPSLN, HALF_PI } from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if (!('x0' in this)) {\n    this.x0 = 0;\n  }\n  if (!('y0' in this)) {\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    } else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  } else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      } else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  -------------------------------------------------- */\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  } else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    } else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  -------------------------------------------------- */\nexport function inverse(p) {\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  } else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Mercator', 'Popular Visualisation Pseudo Mercator', 'Mercator_1SP', 'Mercator_Auxiliary_Sphere', 'Mercator_Variant_A', 'merc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export function init() {\n  // no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport { identity as forward };\nexport { identity as inverse };\nexport var names = ['longlat', 'identity'];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from './projections/merc';\nimport longlat from './projections/longlat';\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function (n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport { add };\n\nexport function getNormalizedProjName(n) {\n  return n.replace(/[-\\(\\)\\s]+/g, ' ').trim().replace(/ /g, '_');\n}\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n  n = getNormalizedProjName(n);\n  if (n in names && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","var ellipsoids = {\n  MERIT: {\n    a: 6378137,\n    rf: 298.257,\n    ellipseName: 'MERIT 1983'\n  },\n  SGS85: {\n    a: 6378136,\n    rf: 298.257,\n    ellipseName: 'Soviet Geodetic System 85'\n  },\n  GRS80: {\n    a: 6378137,\n    rf: 298.257222101,\n    ellipseName: 'GRS 1980(IUGG, 1980)'\n  },\n  IAU76: {\n    a: 6378140,\n    rf: 298.257,\n    ellipseName: 'IAU 1976'\n  },\n  airy: {\n    a: 6377563.396,\n    b: 6356256.91,\n    ellipseName: 'Airy 1830'\n  },\n  APL4: {\n    a: 6378137,\n    rf: 298.25,\n    ellipseName: 'Appl. Physics. 1965'\n  },\n  NWL9D: {\n    a: 6378145,\n    rf: 298.25,\n    ellipseName: 'Naval Weapons Lab., 1965'\n  },\n  mod_airy: {\n    a: 6377340.189,\n    b: 6356034.446,\n    ellipseName: 'Modified Airy'\n  },\n  andrae: {\n    a: 6377104.43,\n    rf: 300,\n    ellipseName: 'Andrae 1876 (Den., Iclnd.)'\n  },\n  aust_SA: {\n    a: 6378160,\n    rf: 298.25,\n    ellipseName: 'Australian Natl & S. Amer. 1969'\n  },\n  GRS67: {\n    a: 6378160,\n    rf: 298.247167427,\n    ellipseName: 'GRS 67(IUGG 1967)'\n  },\n  bessel: {\n    a: 6377397.155,\n    rf: 299.1528128,\n    ellipseName: 'Bessel 1841'\n  },\n  bess_nam: {\n    a: 6377483.865,\n    rf: 299.1528128,\n    ellipseName: 'Bessel 1841 (Namibia)'\n  },\n  clrk66: {\n    a: 6378206.4,\n    b: 6356583.8,\n    ellipseName: 'Clarke 1866'\n  },\n  clrk80: {\n    a: 6378249.145,\n    rf: 293.4663,\n    ellipseName: 'Clarke 1880 mod.'\n  },\n  clrk80ign: {\n    a: 6378249.2,\n    b: 6356515,\n    rf: 293.4660213,\n    ellipseName: 'Clarke 1880 (IGN)'\n  },\n  clrk58: {\n    a: 6378293.645208759,\n    rf: 294.2606763692654,\n    ellipseName: 'Clarke 1858'\n  },\n  CPM: {\n    a: 6375738.7,\n    rf: 334.29,\n    ellipseName: 'Comm. des Poids et Mesures 1799'\n  },\n  delmbr: {\n    a: 6376428,\n    rf: 311.5,\n    ellipseName: 'Delambre 1810 (Belgium)'\n  },\n  engelis: {\n    a: 6378136.05,\n    rf: 298.2566,\n    ellipseName: 'Engelis 1985'\n  },\n  evrst30: {\n    a: 6377276.345,\n    rf: 300.8017,\n    ellipseName: 'Everest 1830'\n  },\n  evrst48: {\n    a: 6377304.063,\n    rf: 300.8017,\n    ellipseName: 'Everest 1948'\n  },\n  evrst56: {\n    a: 6377301.243,\n    rf: 300.8017,\n    ellipseName: 'Everest 1956'\n  },\n  evrst69: {\n    a: 6377295.664,\n    rf: 300.8017,\n    ellipseName: 'Everest 1969'\n  },\n  evrstSS: {\n    a: 6377298.556,\n    rf: 300.8017,\n    ellipseName: 'Everest (Sabah & Sarawak)'\n  },\n  fschr60: {\n    a: 6378166,\n    rf: 298.3,\n    ellipseName: 'Fischer (Mercury Datum) 1960'\n  },\n  fschr60m: {\n    a: 6378155,\n    rf: 298.3,\n    ellipseName: 'Fischer 1960'\n  },\n  fschr68: {\n    a: 6378150,\n    rf: 298.3,\n    ellipseName: 'Fischer 1968'\n  },\n  helmert: {\n    a: 6378200,\n    rf: 298.3,\n    ellipseName: 'Helmert 1906'\n  },\n  hough: {\n    a: 6378270,\n    rf: 297,\n    ellipseName: 'Hough'\n  },\n  intl: {\n    a: 6378388,\n    rf: 297,\n    ellipseName: 'International 1909 (Hayford)'\n  },\n  kaula: {\n    a: 6378163,\n    rf: 298.24,\n    ellipseName: 'Kaula 1961'\n  },\n  lerch: {\n    a: 6378139,\n    rf: 298.257,\n    ellipseName: 'Lerch 1979'\n  },\n  mprts: {\n    a: 6397300,\n    rf: 191,\n    ellipseName: 'Maupertius 1738'\n  },\n  new_intl: {\n    a: 6378157.5,\n    b: 6356772.2,\n    ellipseName: 'New International 1967'\n  },\n  plessis: {\n    a: 6376523,\n    rf: 6355863,\n    ellipseName: 'Plessis 1817 (France)'\n  },\n  krass: {\n    a: 6378245,\n    rf: 298.3,\n    ellipseName: 'Krassovsky, 1942'\n  },\n  SEasia: {\n    a: 6378155,\n    b: 6356773.3205,\n    ellipseName: 'Southeast Asia'\n  },\n  walbeck: {\n    a: 6376896,\n    b: 6355834.8467,\n    ellipseName: 'Walbeck'\n  },\n  WGS60: {\n    a: 6378165,\n    rf: 298.3,\n    ellipseName: 'WGS 60'\n  },\n  WGS66: {\n    a: 6378145,\n    rf: 298.25,\n    ellipseName: 'WGS 66'\n  },\n  WGS7: {\n    a: 6378135,\n    rf: 298.26,\n    ellipseName: 'WGS 72'\n  },\n  WGS84: {\n    a: 6378137,\n    rf: 298.257223563,\n    ellipseName: 'WGS 84'\n  },\n  sphere: {\n    a: 6370997,\n    b: 6370997,\n    ellipseName: 'Normal Sphere (r=6370997)'\n  }\n};\n\nexport default ellipsoids;\n","import { SIXTH, RA4, RA6, EPSLN } from './constants/values';\nimport { default as Ellipsoid } from './constants/Ellipsoid';\nimport match from './match';\n\nconst WGS84 = Ellipsoid.WGS84; // default ellipsoid\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","var datums = {\n  wgs84: {\n    towgs84: '0,0,0',\n    ellipse: 'WGS84',\n    datumName: 'WGS84'\n  },\n  ch1903: {\n    towgs84: '674.374,15.056,405.346',\n    ellipse: 'bessel',\n    datumName: 'swiss'\n  },\n  ggrs87: {\n    towgs84: '-199.87,74.79,246.62',\n    ellipse: 'GRS80',\n    datumName: 'Greek_Geodetic_Reference_System_1987'\n  },\n  nad83: {\n    towgs84: '0,0,0',\n    ellipse: 'GRS80',\n    datumName: 'North_American_Datum_1983'\n  },\n  nad27: {\n    nadgrids: '@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat',\n    ellipse: 'clrk66',\n    datumName: 'North_American_Datum_1927'\n  },\n  potsdam: {\n    towgs84: '598.1,73.7,418.2,0.202,0.045,-2.455,6.7',\n    ellipse: 'bessel',\n    datumName: 'Potsdam Rauenberg 1950 DHDN'\n  },\n  carthage: {\n    towgs84: '-263.0,6.0,431.0',\n    ellipse: 'clark80',\n    datumName: 'Carthage 1934 Tunisia'\n  },\n  hermannskogel: {\n    towgs84: '577.326,90.129,463.919,5.137,1.474,5.297,2.4232',\n    ellipse: 'bessel',\n    datumName: 'Hermannskogel'\n  },\n  mgi: {\n    towgs84: '577.326,90.129,463.919,5.137,1.474,5.297,2.4232',\n    ellipse: 'bessel',\n    datumName: 'Militar-Geographische Institut'\n  },\n  osni52: {\n    towgs84: '482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15',\n    ellipse: 'airy',\n    datumName: 'Irish National'\n  },\n  ire65: {\n    towgs84: '482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15',\n    ellipse: 'mod_airy',\n    datumName: 'Ireland 1965'\n  },\n  rassadiran: {\n    towgs84: '-133.63,-157.5,-158.62',\n    ellipse: 'intl',\n    datumName: 'Rassadiran'\n  },\n  nzgd49: {\n    towgs84: '59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993',\n    ellipse: 'intl',\n    datumName: 'New Zealand Geodetic Datum 1949'\n  },\n  osgb36: {\n    towgs84: '446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894',\n    ellipse: 'airy',\n    datumName: 'Ordnance Survey of Great Britain 1936'\n  },\n  s_jtsk: {\n    towgs84: '589,76,480',\n    ellipse: 'bessel',\n    datumName: 'S-JTSK (Ferro)'\n  },\n  beduaram: {\n    towgs84: '-106,-87,188',\n    ellipse: 'clrk80',\n    datumName: 'Beduaram'\n  },\n  gunung_segara: {\n    towgs84: '-403,684,41',\n    ellipse: 'bessel',\n    datumName: 'Gunung Segara Jakarta'\n  },\n  rnb72: {\n    towgs84: '106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1',\n    ellipse: 'intl',\n    datumName: 'Reseau National Belge 1972'\n  },\n  EPSG_5451: {\n    towgs84: '6.41,-49.05,-11.28,1.5657,0.5242,6.9718,-5.7649'\n  },\n  IGNF_LURESG: {\n    towgs84: '-192.986,13.673,-39.309,-0.4099,-2.9332,2.6881,0.43'\n  },\n  EPSG_4614: {\n    towgs84: '-119.4248,-303.65872,-11.00061,1.164298,0.174458,1.096259,3.657065'\n  },\n  EPSG_4615: {\n    towgs84: '-494.088,-312.129,279.877,-1.423,-1.013,1.59,-0.748'\n  },\n  ESRI_37241: {\n    towgs84: '-76.822,257.457,-12.817,2.136,-0.033,-2.392,-0.031'\n  },\n  ESRI_37249: {\n    towgs84: '-440.296,58.548,296.265,1.128,10.202,4.559,-0.438'\n  },\n  ESRI_37245: {\n    towgs84: '-511.151,-181.269,139.609,1.05,2.703,1.798,3.071'\n  },\n  EPSG_4178: {\n    towgs84: '24.9,-126.4,-93.2,-0.063,-0.247,-0.041,1.01'\n  },\n  EPSG_4622: {\n    towgs84: '-472.29,-5.63,-304.12,0.4362,-0.8374,0.2563,1.8984'\n  },\n  EPSG_4625: {\n    towgs84: '126.93,547.94,130.41,-2.7867,5.1612,-0.8584,13.8227'\n  },\n  EPSG_5252: {\n    towgs84: '0.023,0.036,-0.068,0.00176,0.00912,-0.01136,0.00439'\n  },\n  EPSG_4314: {\n    towgs84: '597.1,71.4,412.1,0.894,0.068,-1.563,7.58'\n  },\n  EPSG_4282: {\n    towgs84: '-178.3,-316.7,-131.5,5.278,6.077,10.979,19.166'\n  },\n  EPSG_4231: {\n    towgs84: '-83.11,-97.38,-117.22,0.0276,-0.2167,0.2147,0.1218'\n  },\n  EPSG_4274: {\n    towgs84: '-230.994,102.591,25.199,0.633,-0.239,0.9,1.95'\n  },\n  EPSG_4134: {\n    towgs84: '-180.624,-225.516,173.919,-0.81,-1.898,8.336,16.71006'\n  },\n  EPSG_4254: {\n    towgs84: '18.38,192.45,96.82,0.056,-0.142,-0.2,-0.0013'\n  },\n  EPSG_4159: {\n    towgs84: '-194.513,-63.978,-25.759,-3.4027,3.756,-3.352,-0.9175'\n  },\n  EPSG_4687: {\n    towgs84: '0.072,-0.507,-0.245,0.0183,-0.0003,0.007,-0.0093'\n  },\n  EPSG_4227: {\n    towgs84: '-83.58,-397.54,458.78,-17.595,-2.847,4.256,3.225'\n  },\n  EPSG_4746: {\n    towgs84: '599.4,72.4,419.2,-0.062,-0.022,-2.723,6.46'\n  },\n  EPSG_4745: {\n    towgs84: '612.4,77,440.2,-0.054,0.057,-2.797,2.55'\n  },\n  EPSG_6311: {\n    towgs84: '8.846,-4.394,-1.122,-0.00237,-0.146528,0.130428,0.783926'\n  },\n  EPSG_4289: {\n    towgs84: '565.7381,50.4018,465.2904,-1.91514,1.60363,-9.09546,4.07244'\n  },\n  EPSG_4230: {\n    towgs84: '-68.863,-134.888,-111.49,-0.53,-0.14,0.57,-3.4'\n  },\n  EPSG_4154: {\n    towgs84: '-123.02,-158.95,-168.47'\n  },\n  EPSG_4156: {\n    towgs84: '570.8,85.7,462.8,4.998,1.587,5.261,3.56'\n  },\n  EPSG_4299: {\n    towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n  },\n  EPSG_4179: {\n    towgs84: '33.4,-146.6,-76.3,-0.359,-0.053,0.844,-0.84'\n  },\n  EPSG_4313: {\n    towgs84: '-106.8686,52.2978,-103.7239,0.3366,-0.457,1.8422,-1.2747'\n  },\n  EPSG_4194: {\n    towgs84: '163.511,127.533,-159.789'\n  },\n  EPSG_4195: {\n    towgs84: '105,326,-102.5'\n  },\n  EPSG_4196: {\n    towgs84: '-45,417,-3.5'\n  },\n  EPSG_4611: {\n    towgs84: '-162.619,-276.959,-161.764,0.067753,-2.243649,-1.158827,-1.094246'\n  },\n  EPSG_4633: {\n    towgs84: '137.092,131.66,91.475,-1.9436,-11.5993,-4.3321,-7.4824'\n  },\n  EPSG_4641: {\n    towgs84: '-408.809,366.856,-412.987,1.8842,-0.5308,2.1655,-121.0993'\n  },\n  EPSG_4643: {\n    towgs84: '-480.26,-438.32,-643.429,16.3119,20.1721,-4.0349,-111.7002'\n  },\n  EPSG_4300: {\n    towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n  },\n  EPSG_4188: {\n    towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n  },\n  EPSG_4660: {\n    towgs84: '982.6087,552.753,-540.873,32.39344,-153.25684,-96.2266,16.805'\n  },\n  EPSG_4662: {\n    towgs84: '97.295,-263.247,310.882,-1.5999,0.8386,3.1409,13.3259'\n  },\n  EPSG_3906: {\n    towgs84: '577.88891,165.22205,391.18289,4.9145,-0.94729,-13.05098,7.78664'\n  },\n  EPSG_4307: {\n    towgs84: '-209.3622,-87.8162,404.6198,0.0046,3.4784,0.5805,-1.4547'\n  },\n  EPSG_6892: {\n    towgs84: '-76.269,-16.683,68.562,-6.275,10.536,-4.286,-13.686'\n  },\n  EPSG_4690: {\n    towgs84: '221.597,152.441,176.523,2.403,1.3893,0.884,11.4648'\n  },\n  EPSG_4691: {\n    towgs84: '218.769,150.75,176.75,3.5231,2.0037,1.288,10.9817'\n  },\n  EPSG_4629: {\n    towgs84: '72.51,345.411,79.241,-1.5862,-0.8826,-0.5495,1.3653'\n  },\n  EPSG_4630: {\n    towgs84: '165.804,216.213,180.26,-0.6251,-0.4515,-0.0721,7.4111'\n  },\n  EPSG_4692: {\n    towgs84: '217.109,86.452,23.711,0.0183,-0.0003,0.007,-0.0093'\n  },\n  EPSG_9333: {\n    towgs84: '0,0,0,-8.393,0.749,-10.276,0'\n  },\n  EPSG_9059: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4312: {\n    towgs84: '601.705,84.263,485.227,4.7354,1.3145,5.393,-2.3887'\n  },\n  EPSG_4123: {\n    towgs84: '-96.062,-82.428,-121.753,4.801,0.345,-1.376,1.496'\n  },\n  EPSG_4309: {\n    towgs84: '-124.45,183.74,44.64,-0.4384,0.5446,-0.9706,-2.1365'\n  },\n  ESRI_104106: {\n    towgs84: '-283.088,-70.693,117.445,-1.157,0.059,-0.652,-4.058'\n  },\n  EPSG_4281: {\n    towgs84: '-219.247,-73.802,269.529'\n  },\n  EPSG_4322: {\n    towgs84: '0,0,4.5'\n  },\n  EPSG_4324: {\n    towgs84: '0,0,1.9'\n  },\n  EPSG_4284: {\n    towgs84: '43.822,-108.842,-119.585,1.455,-0.761,0.737,0.549'\n  },\n  EPSG_4277: {\n    towgs84: '446.448,-125.157,542.06,0.15,0.247,0.842,-20.489'\n  },\n  EPSG_4207: {\n    towgs84: '-282.1,-72.2,120,-1.529,0.145,-0.89,-4.46'\n  },\n  EPSG_4688: {\n    towgs84: '347.175,1077.618,2623.677,33.9058,-70.6776,9.4013,186.0647'\n  },\n  EPSG_4689: {\n    towgs84: '410.793,54.542,80.501,-2.5596,-2.3517,-0.6594,17.3218'\n  },\n  EPSG_4720: {\n    towgs84: '0,0,4.5'\n  },\n  EPSG_4273: {\n    towgs84: '278.3,93,474.5,7.889,0.05,-6.61,6.21'\n  },\n  EPSG_4240: {\n    towgs84: '204.64,834.74,293.8'\n  },\n  EPSG_4817: {\n    towgs84: '278.3,93,474.5,7.889,0.05,-6.61,6.21'\n  },\n  ESRI_104131: {\n    towgs84: '426.62,142.62,460.09,4.98,4.49,-12.42,-17.1'\n  },\n  EPSG_4265: {\n    towgs84: '-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68'\n  },\n  EPSG_4263: {\n    towgs84: '-111.92,-87.85,114.5,1.875,0.202,0.219,0.032'\n  },\n  EPSG_4298: {\n    towgs84: '-689.5937,623.84046,-65.93566,-0.02331,1.17094,-0.80054,5.88536'\n  },\n  EPSG_4270: {\n    towgs84: '-253.4392,-148.452,386.5267,0.15605,0.43,-0.1013,-0.0424'\n  },\n  EPSG_4229: {\n    towgs84: '-121.8,98.1,-10.7'\n  },\n  EPSG_4220: {\n    towgs84: '-55.5,-348,-229.2'\n  },\n  EPSG_4214: {\n    towgs84: '12.646,-155.176,-80.863'\n  },\n  EPSG_4232: {\n    towgs84: '-345,3,223'\n  },\n  EPSG_4238: {\n    towgs84: '-1.977,-13.06,-9.993,0.364,0.254,0.689,-1.037'\n  },\n  EPSG_4168: {\n    towgs84: '-170,33,326'\n  },\n  EPSG_4131: {\n    towgs84: '199,931,318.9'\n  },\n  EPSG_4152: {\n    towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n  },\n  EPSG_5228: {\n    towgs84: '572.213,85.334,461.94,4.9732,1.529,5.2484,3.5378'\n  },\n  EPSG_8351: {\n    towgs84: '485.021,169.465,483.839,7.786342,4.397554,4.102655,0'\n  },\n  EPSG_4683: {\n    towgs84: '-127.62,-67.24,-47.04,-3.068,4.903,1.578,-1.06'\n  },\n  EPSG_4133: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7373: {\n    towgs84: '0.819,-0.5762,-1.6446,-0.00378,-0.03317,0.00318,0.0693'\n  },\n  EPSG_9075: {\n    towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n  },\n  EPSG_9072: {\n    towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n  },\n  EPSG_9294: {\n    towgs84: '1.16835,-1.42001,-2.24431,-0.00822,-0.05508,0.01818,0.23388'\n  },\n  EPSG_4212: {\n    towgs84: '-267.434,173.496,181.814,-13.4704,8.7154,7.3926,14.7492'\n  },\n  EPSG_4191: {\n    towgs84: '-44.183,-0.58,-38.489,2.3867,2.7072,-3.5196,-8.2703'\n  },\n  EPSG_4237: {\n    towgs84: '52.684,-71.194,-13.975,-0.312,-0.1063,-0.3729,1.0191'\n  },\n  EPSG_4740: {\n    towgs84: '-1.08,-0.27,-0.9'\n  },\n  EPSG_4124: {\n    towgs84: '419.3836,99.3335,591.3451,0.850389,1.817277,-7.862238,-0.99496'\n  },\n  EPSG_5681: {\n    towgs84: '584.9636,107.7175,413.8067,1.1155,0.2824,-3.1384,7.9922'\n  },\n  EPSG_4141: {\n    towgs84: '23.772,17.49,17.859,-0.3132,-1.85274,1.67299,-5.4262'\n  },\n  EPSG_4204: {\n    towgs84: '-85.645,-273.077,-79.708,2.289,-1.421,2.532,3.194'\n  },\n  EPSG_4319: {\n    towgs84: '226.702,-193.337,-35.371,-2.229,-4.391,9.238,0.9798'\n  },\n  EPSG_4200: {\n    towgs84: '24.82,-131.21,-82.66'\n  },\n  EPSG_4130: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4127: {\n    towgs84: '-82.875,-57.097,-156.768,-2.158,1.524,-0.982,-0.359'\n  },\n  EPSG_4149: {\n    towgs84: '674.374,15.056,405.346'\n  },\n  EPSG_4617: {\n    towgs84: '-0.991,1.9072,0.5129,1.25033e-7,4.6785e-8,5.6529e-8,0'\n  },\n  EPSG_4663: {\n    towgs84: '-210.502,-66.902,-48.476,2.094,-15.067,-5.817,0.485'\n  },\n  EPSG_4664: {\n    towgs84: '-211.939,137.626,58.3,-0.089,0.251,0.079,0.384'\n  },\n  EPSG_4665: {\n    towgs84: '-105.854,165.589,-38.312,-0.003,-0.026,0.024,-0.048'\n  },\n  EPSG_4666: {\n    towgs84: '631.392,-66.551,481.442,1.09,-4.445,-4.487,-4.43'\n  },\n  EPSG_4756: {\n    towgs84: '-192.873,-39.382,-111.202,-0.00205,-0.0005,0.00335,0.0188'\n  },\n  EPSG_4723: {\n    towgs84: '-179.483,-69.379,-27.584,-7.862,8.163,6.042,-13.925'\n  },\n  EPSG_4726: {\n    towgs84: '8.853,-52.644,180.304,-0.393,-2.323,2.96,-24.081'\n  },\n  EPSG_4267: {\n    towgs84: '-8.0,160.0,176.0'\n  },\n  EPSG_5365: {\n    towgs84: '-0.16959,0.35312,0.51846,0.03385,-0.16325,0.03446,0.03693'\n  },\n  EPSG_4218: {\n    towgs84: '304.5,306.5,-318.1'\n  },\n  EPSG_4242: {\n    towgs84: '-33.722,153.789,94.959,-8.581,-4.478,4.54,8.95'\n  },\n  EPSG_4216: {\n    towgs84: '-292.295,248.758,429.447,4.9971,2.99,6.6906,1.0289'\n  },\n  ESRI_104105: {\n    towgs84: '631.392,-66.551,481.442,1.09,-4.445,-4.487,-4.43'\n  },\n  ESRI_104129: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4673: {\n    towgs84: '174.05,-25.49,112.57'\n  },\n  EPSG_4202: {\n    towgs84: '-124,-60,154'\n  },\n  EPSG_4203: {\n    towgs84: '-117.763,-51.51,139.061,0.292,0.443,0.277,-0.191'\n  },\n  EPSG_3819: {\n    towgs84: '595.48,121.69,515.35,4.115,-2.9383,0.853,-3.408'\n  },\n  EPSG_8694: {\n    towgs84: '-93.799,-132.737,-219.073,-1.844,0.648,-6.37,-0.169'\n  },\n  EPSG_4145: {\n    towgs84: '275.57,676.78,229.6'\n  },\n  EPSG_4283: {\n    towgs84: '61.55,-10.87,-40.19,39.4924,32.7221,32.8979,-9.994'\n  },\n  EPSG_4317: {\n    towgs84: '2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266'\n  },\n  EPSG_4272: {\n    towgs84: '59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993'\n  },\n  EPSG_4248: {\n    towgs84: '-307.7,265.3,-363.5'\n  },\n  EPSG_5561: {\n    towgs84: '24,-121,-76'\n  },\n  EPSG_5233: {\n    towgs84: '-0.293,766.95,87.713,0.195704,1.695068,3.473016,-0.039338'\n  },\n  ESRI_104130: {\n    towgs84: '-86,-98,-119'\n  },\n  ESRI_104102: {\n    towgs84: '682,-203,480'\n  },\n  ESRI_37207: {\n    towgs84: '7,-10,-26'\n  },\n  EPSG_4675: {\n    towgs84: '59.935,118.4,-10.871'\n  },\n  ESRI_104109: {\n    towgs84: '-89.121,-348.182,260.871'\n  },\n  ESRI_104112: {\n    towgs84: '-185.583,-230.096,281.361'\n  },\n  ESRI_104113: {\n    towgs84: '25.1,-275.6,222.6'\n  },\n  IGNF_WGS72G: {\n    towgs84: '0,12,6'\n  },\n  IGNF_NTFG: {\n    towgs84: '-168,-60,320'\n  },\n  IGNF_EFATE57G: {\n    towgs84: '-127,-769,472'\n  },\n  IGNF_PGP50G: {\n    towgs84: '324.8,153.6,172.1'\n  },\n  IGNF_REUN47G: {\n    towgs84: '94,-948,-1262'\n  },\n  IGNF_CSG67G: {\n    towgs84: '-186,230,110'\n  },\n  IGNF_GUAD48G: {\n    towgs84: '-467,-16,-300'\n  },\n  IGNF_TAHI51G: {\n    towgs84: '162,117,154'\n  },\n  IGNF_TAHAAG: {\n    towgs84: '65,342,77'\n  },\n  IGNF_NUKU72G: {\n    towgs84: '84,274,65'\n  },\n  IGNF_PETRELS72G: {\n    towgs84: '365,194,166'\n  },\n  IGNF_WALL78G: {\n    towgs84: '253,-133,-127'\n  },\n  IGNF_MAYO50G: {\n    towgs84: '-382,-59,-262'\n  },\n  IGNF_TANNAG: {\n    towgs84: '-139,-967,436'\n  },\n  IGNF_IGN72G: {\n    towgs84: '-13,-348,292'\n  },\n  IGNF_ATIGG: {\n    towgs84: '1118,23,66'\n  },\n  IGNF_FANGA84G: {\n    towgs84: '150.57,158.33,118.32'\n  },\n  IGNF_RUSAT84G: {\n    towgs84: '202.13,174.6,-15.74'\n  },\n  IGNF_KAUE70G: {\n    towgs84: '126.74,300.1,-75.49'\n  },\n  IGNF_MOP90G: {\n    towgs84: '-10.8,-1.8,12.77'\n  },\n  IGNF_MHPF67G: {\n    towgs84: '338.08,212.58,-296.17'\n  },\n  IGNF_TAHI79G: {\n    towgs84: '160.61,116.05,153.69'\n  },\n  IGNF_ANAA92G: {\n    towgs84: '1.5,3.84,4.81'\n  },\n  IGNF_MARQUI72G: {\n    towgs84: '330.91,-13.92,58.56'\n  },\n  IGNF_APAT86G: {\n    towgs84: '143.6,197.82,74.05'\n  },\n  IGNF_TUBU69G: {\n    towgs84: '237.17,171.61,-77.84'\n  },\n  IGNF_STPM50G: {\n    towgs84: '11.363,424.148,373.13'\n  },\n  EPSG_4150: {\n    towgs84: '674.374,15.056,405.346'\n  },\n  EPSG_4754: {\n    towgs84: '-208.4058,-109.8777,-2.5764'\n  },\n  ESRI_104101: {\n    towgs84: '374,150,588'\n  },\n  EPSG_4693: {\n    towgs84: '0,-0.15,0.68'\n  },\n  EPSG_6207: {\n    towgs84: '293.17,726.18,245.36'\n  },\n  EPSG_4153: {\n    towgs84: '-133.63,-157.5,-158.62'\n  },\n  EPSG_4132: {\n    towgs84: '-241.54,-163.64,396.06'\n  },\n  EPSG_4221: {\n    towgs84: '-154.5,150.7,100.4'\n  },\n  EPSG_4266: {\n    towgs84: '-80.7,-132.5,41.1'\n  },\n  EPSG_4193: {\n    towgs84: '-70.9,-151.8,-41.4'\n  },\n  EPSG_5340: {\n    towgs84: '-0.41,0.46,-0.35'\n  },\n  EPSG_4246: {\n    towgs84: '-294.7,-200.1,525.5'\n  },\n  EPSG_4318: {\n    towgs84: '-3.2,-5.7,2.8'\n  },\n  EPSG_4121: {\n    towgs84: '-199.87,74.79,246.62'\n  },\n  EPSG_4223: {\n    towgs84: '-260.1,5.5,432.2'\n  },\n  EPSG_4158: {\n    towgs84: '-0.465,372.095,171.736'\n  },\n  EPSG_4285: {\n    towgs84: '-128.16,-282.42,21.93'\n  },\n  EPSG_4613: {\n    towgs84: '-404.78,685.68,45.47'\n  },\n  EPSG_4607: {\n    towgs84: '195.671,332.517,274.607'\n  },\n  EPSG_4475: {\n    towgs84: '-381.788,-57.501,-256.673'\n  },\n  EPSG_4208: {\n    towgs84: '-157.84,308.54,-146.6'\n  },\n  EPSG_4743: {\n    towgs84: '70.995,-335.916,262.898'\n  },\n  EPSG_4710: {\n    towgs84: '-323.65,551.39,-491.22'\n  },\n  EPSG_7881: {\n    towgs84: '-0.077,0.079,0.086'\n  },\n  EPSG_4682: {\n    towgs84: '283.729,735.942,261.143'\n  },\n  EPSG_4739: {\n    towgs84: '-156,-271,-189'\n  },\n  EPSG_4679: {\n    towgs84: '-80.01,253.26,291.19'\n  },\n  EPSG_4750: {\n    towgs84: '-56.263,16.136,-22.856'\n  },\n  EPSG_4644: {\n    towgs84: '-10.18,-350.43,291.37'\n  },\n  EPSG_4695: {\n    towgs84: '-103.746,-9.614,-255.95'\n  },\n  EPSG_4292: {\n    towgs84: '-355,21,72'\n  },\n  EPSG_4302: {\n    towgs84: '-61.702,284.488,472.052'\n  },\n  EPSG_4143: {\n    towgs84: '-124.76,53,466.79'\n  },\n  EPSG_4606: {\n    towgs84: '-153,153,307'\n  },\n  EPSG_4699: {\n    towgs84: '-770.1,158.4,-498.2'\n  },\n  EPSG_4247: {\n    towgs84: '-273.5,110.6,-357.9'\n  },\n  EPSG_4160: {\n    towgs84: '8.88,184.86,106.69'\n  },\n  EPSG_4161: {\n    towgs84: '-233.43,6.65,173.64'\n  },\n  EPSG_9251: {\n    towgs84: '-9.5,122.9,138.2'\n  },\n  EPSG_9253: {\n    towgs84: '-78.1,101.6,133.3'\n  },\n  EPSG_4297: {\n    towgs84: '-198.383,-240.517,-107.909'\n  },\n  EPSG_4269: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4301: {\n    towgs84: '-147,506,687'\n  },\n  EPSG_4618: {\n    towgs84: '-59,-11,-52'\n  },\n  EPSG_4612: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4678: {\n    towgs84: '44.585,-131.212,-39.544'\n  },\n  EPSG_4250: {\n    towgs84: '-130,29,364'\n  },\n  EPSG_4144: {\n    towgs84: '214,804,268'\n  },\n  EPSG_4147: {\n    towgs84: '-17.51,-108.32,-62.39'\n  },\n  EPSG_4259: {\n    towgs84: '-254.1,-5.36,-100.29'\n  },\n  EPSG_4164: {\n    towgs84: '-76,-138,67'\n  },\n  EPSG_4211: {\n    towgs84: '-378.873,676.002,-46.255'\n  },\n  EPSG_4182: {\n    towgs84: '-422.651,-172.995,84.02'\n  },\n  EPSG_4224: {\n    towgs84: '-143.87,243.37,-33.52'\n  },\n  EPSG_4225: {\n    towgs84: '-205.57,168.77,-4.12'\n  },\n  EPSG_5527: {\n    towgs84: '-67.35,3.88,-38.22'\n  },\n  EPSG_4752: {\n    towgs84: '98,390,-22'\n  },\n  EPSG_4310: {\n    towgs84: '-30,190,89'\n  },\n  EPSG_9248: {\n    towgs84: '-192.26,65.72,132.08'\n  },\n  EPSG_4680: {\n    towgs84: '124.5,-63.5,-281'\n  },\n  EPSG_4701: {\n    towgs84: '-79.9,-158,-168.9'\n  },\n  EPSG_4706: {\n    towgs84: '-146.21,112.63,4.05'\n  },\n  EPSG_4805: {\n    towgs84: '682,-203,480'\n  },\n  EPSG_4201: {\n    towgs84: '-165,-11,206'\n  },\n  EPSG_4210: {\n    towgs84: '-157,-2,-299'\n  },\n  EPSG_4183: {\n    towgs84: '-104,167,-38'\n  },\n  EPSG_4139: {\n    towgs84: '11,72,-101'\n  },\n  EPSG_4668: {\n    towgs84: '-86,-98,-119'\n  },\n  EPSG_4717: {\n    towgs84: '-2,151,181'\n  },\n  EPSG_4732: {\n    towgs84: '102,52,-38'\n  },\n  EPSG_4280: {\n    towgs84: '-377,681,-50'\n  },\n  EPSG_4209: {\n    towgs84: '-138,-105,-289'\n  },\n  EPSG_4261: {\n    towgs84: '31,146,47'\n  },\n  EPSG_4658: {\n    towgs84: '-73,46,-86'\n  },\n  EPSG_4721: {\n    towgs84: '265.025,384.929,-194.046'\n  },\n  EPSG_4222: {\n    towgs84: '-136,-108,-292'\n  },\n  EPSG_4601: {\n    towgs84: '-255,-15,71'\n  },\n  EPSG_4602: {\n    towgs84: '725,685,536'\n  },\n  EPSG_4603: {\n    towgs84: '72,213.7,93'\n  },\n  EPSG_4605: {\n    towgs84: '9,183,236'\n  },\n  EPSG_4621: {\n    towgs84: '137,248,-430'\n  },\n  EPSG_4657: {\n    towgs84: '-28,199,5'\n  },\n  EPSG_4316: {\n    towgs84: '103.25,-100.4,-307.19'\n  },\n  EPSG_4642: {\n    towgs84: '-13,-348,292'\n  },\n  EPSG_4698: {\n    towgs84: '145,-187,103'\n  },\n  EPSG_4192: {\n    towgs84: '-206.1,-174.7,-87.7'\n  },\n  EPSG_4311: {\n    towgs84: '-265,120,-358'\n  },\n  EPSG_4135: {\n    towgs84: '58,-283,-182'\n  },\n  ESRI_104138: {\n    towgs84: '198,-226,-347'\n  },\n  EPSG_4245: {\n    towgs84: '-11,851,5'\n  },\n  EPSG_4142: {\n    towgs84: '-125,53,467'\n  },\n  EPSG_4213: {\n    towgs84: '-106,-87,188'\n  },\n  EPSG_4253: {\n    towgs84: '-133,-77,-51'\n  },\n  EPSG_4129: {\n    towgs84: '-132,-110,-335'\n  },\n  EPSG_4713: {\n    towgs84: '-77,-128,142'\n  },\n  EPSG_4239: {\n    towgs84: '217,823,299'\n  },\n  EPSG_4146: {\n    towgs84: '295,736,257'\n  },\n  EPSG_4155: {\n    towgs84: '-83,37,124'\n  },\n  EPSG_4165: {\n    towgs84: '-173,253,27'\n  },\n  EPSG_4672: {\n    towgs84: '175,-38,113'\n  },\n  EPSG_4236: {\n    towgs84: '-637,-549,-203'\n  },\n  EPSG_4251: {\n    towgs84: '-90,40,88'\n  },\n  EPSG_4271: {\n    towgs84: '-2,374,172'\n  },\n  EPSG_4175: {\n    towgs84: '-88,4,101'\n  },\n  EPSG_4716: {\n    towgs84: '298,-304,-375'\n  },\n  EPSG_4315: {\n    towgs84: '-23,259,-9'\n  },\n  EPSG_4744: {\n    towgs84: '-242.2,-144.9,370.3'\n  },\n  EPSG_4244: {\n    towgs84: '-97,787,86'\n  },\n  EPSG_4293: {\n    towgs84: '616,97,-251'\n  },\n  EPSG_4714: {\n    towgs84: '-127,-769,472'\n  },\n  EPSG_4736: {\n    towgs84: '260,12,-147'\n  },\n  EPSG_6883: {\n    towgs84: '-235,-110,393'\n  },\n  EPSG_6894: {\n    towgs84: '-63,176,185'\n  },\n  EPSG_4205: {\n    towgs84: '-43,-163,45'\n  },\n  EPSG_4256: {\n    towgs84: '41,-220,-134'\n  },\n  EPSG_4262: {\n    towgs84: '639,405,60'\n  },\n  EPSG_4604: {\n    towgs84: '174,359,365'\n  },\n  EPSG_4169: {\n    towgs84: '-115,118,426'\n  },\n  EPSG_4620: {\n    towgs84: '-106,-129,165'\n  },\n  EPSG_4184: {\n    towgs84: '-203,141,53'\n  },\n  EPSG_4616: {\n    towgs84: '-289,-124,60'\n  },\n  EPSG_9403: {\n    towgs84: '-307,-92,127'\n  },\n  EPSG_4684: {\n    towgs84: '-133,-321,50'\n  },\n  EPSG_4708: {\n    towgs84: '-491,-22,435'\n  },\n  EPSG_4707: {\n    towgs84: '114,-116,-333'\n  },\n  EPSG_4709: {\n    towgs84: '145,75,-272'\n  },\n  EPSG_4712: {\n    towgs84: '-205,107,53'\n  },\n  EPSG_4711: {\n    towgs84: '124,-234,-25'\n  },\n  EPSG_4718: {\n    towgs84: '230,-199,-752'\n  },\n  EPSG_4719: {\n    towgs84: '211,147,111'\n  },\n  EPSG_4724: {\n    towgs84: '208,-435,-229'\n  },\n  EPSG_4725: {\n    towgs84: '189,-79,-202'\n  },\n  EPSG_4735: {\n    towgs84: '647,1777,-1124'\n  },\n  EPSG_4722: {\n    towgs84: '-794,119,-298'\n  },\n  EPSG_4728: {\n    towgs84: '-307,-92,127'\n  },\n  EPSG_4734: {\n    towgs84: '-632,438,-609'\n  },\n  EPSG_4727: {\n    towgs84: '912,-58,1227'\n  },\n  EPSG_4729: {\n    towgs84: '185,165,42'\n  },\n  EPSG_4730: {\n    towgs84: '170,42,84'\n  },\n  EPSG_4733: {\n    towgs84: '276,-57,149'\n  },\n  ESRI_37218: {\n    towgs84: '230,-199,-752'\n  },\n  ESRI_37240: {\n    towgs84: '-7,215,225'\n  },\n  ESRI_37221: {\n    towgs84: '252,-209,-751'\n  },\n  ESRI_4305: {\n    towgs84: '-123,-206,219'\n  },\n  ESRI_104139: {\n    towgs84: '-73,-247,227'\n  },\n  EPSG_4748: {\n    towgs84: '51,391,-36'\n  },\n  EPSG_4219: {\n    towgs84: '-384,664,-48'\n  },\n  EPSG_4255: {\n    towgs84: '-333,-222,114'\n  },\n  EPSG_4257: {\n    towgs84: '-587.8,519.75,145.76'\n  },\n  EPSG_4646: {\n    towgs84: '-963,510,-359'\n  },\n  EPSG_6881: {\n    towgs84: '-24,-203,268'\n  },\n  EPSG_6882: {\n    towgs84: '-183,-15,273'\n  },\n  EPSG_4715: {\n    towgs84: '-104,-129,239'\n  },\n  IGNF_RGF93GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGM04GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGSPM06GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGTAAF07GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGFG95GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGNCG: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGPFGDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_ETRS89G: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGR92GDD: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4173: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4180: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4619: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4667: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4075: {\n    towgs84: '0,0,0'\n  },\n  EPSG_6706: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7798: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4661: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4669: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8685: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4151: {\n    towgs84: '0,0,0'\n  },\n  EPSG_9702: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4758: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4761: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4765: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8997: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4023: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4670: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4694: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4148: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4163: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4167: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4189: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4190: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4176: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4659: {\n    towgs84: '0,0,0'\n  },\n  EPSG_3824: {\n    towgs84: '0,0,0'\n  },\n  EPSG_3889: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4046: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4081: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4558: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4483: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5013: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5264: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5324: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5354: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5371: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5373: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5381: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5393: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5489: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5593: {\n    towgs84: '0,0,0'\n  },\n  EPSG_6135: {\n    towgs84: '0,0,0'\n  },\n  EPSG_6365: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5246: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7886: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8431: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8427: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8699: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8818: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4757: {\n    towgs84: '0,0,0'\n  },\n  EPSG_9140: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8086: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4686: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4737: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4702: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4747: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4749: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4674: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4755: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4759: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4762: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4763: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4764: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4166: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4170: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5546: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7844: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4818: {\n    towgs84: '589,76,480'\n  }\n};\n\nfor (var key in datums) {\n  var datum = datums[key];\n  if (!datum.datumName) {\n    continue;\n  }\n  datums[datum.datumName] = datum;\n}\n\nexport default datums;\n","import { PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD } from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; // datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load either a NTv2 file (.gsb) or a Geotiff (.tif) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer. Pass Geotiff as a GeoTIFF instance from the geotiff.js library.\n */\nexport default function nadgrid(key, data, options) {\n  if (data instanceof ArrayBuffer) {\n    return readNTV2Grid(key, data, options);\n  }\n  return { ready: readGeotiffGrid(key, data) };\n}\n\nfunction readNTV2Grid(key, data, options) {\n  var includeErrorFields = true;\n  if (options !== undefined && options.includeErrorFields === false) {\n    includeErrorFields = false;\n  }\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  var subgrids = readSubgrids(view, header, isLittleEndian, includeErrorFields);\n  var nadgrid = { header: header, subgrids: subgrids };\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\nasync function readGeotiffGrid(key, tiff) {\n  var subgrids = [];\n  var subGridCount = await tiff.getImageCount();\n  // proj produced tiff grid shift files appear to organize lower res subgrids first, higher res/ child subgrids last.\n  for (var subgridIndex = subGridCount - 1; subgridIndex >= 0; subgridIndex--) {\n    var image = await tiff.getImage(subgridIndex);\n\n    var rasters = await image.readRasters();\n    var data = rasters;\n    var lim = [image.getWidth(), image.getHeight()];\n    var imageBBoxRadians = image.getBoundingBox().map(degreesToRadians);\n    var del = [image.fileDirectory.ModelPixelScale[0], image.fileDirectory.ModelPixelScale[1]].map(degreesToRadians);\n\n    var maxX = imageBBoxRadians[0] + (lim[0] - 1) * del[0];\n    var minY = imageBBoxRadians[3] - (lim[1] - 1) * del[1];\n\n    var latitudeOffsetBand = data[0];\n    var longitudeOffsetBand = data[1];\n    var nodes = [];\n\n    for (let i = lim[1] - 1; i >= 0; i--) {\n      for (let j = lim[0] - 1; j >= 0; j--) {\n        var index = i * lim[0] + j;\n        nodes.push([-secondsToRadians(longitudeOffsetBand[index]), secondsToRadians(latitudeOffsetBand[index])]);\n      }\n    }\n\n    subgrids.push({\n      del: del,\n      lim: lim,\n      ll: [-maxX, minY],\n      cvs: nodes\n    });\n  }\n\n  var tifGrid = {\n    header: {\n      nSubgrids: subGridCount\n    },\n    subgrids: subgrids\n  };\n  loadedNadgrids[key] = tifGrid;\n  return tifGrid;\n};\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) {\n    return null;\n  }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return { name: 'null', mandatory: !optional, grid: null, isNull: true };\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction degreesToRadians(degrees) {\n  return (degrees) * Math.PI / 180;\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian)\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian, includeErrorFields) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian, includeErrorFields);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n    var rowSize = 16;\n    if (includeErrorFields === false) {\n      rowSize = 8;\n    }\n    gridOffset += 176 + subHeader.gridNodeCount * rowSize;\n  }\n  return grids;\n}\n\n/**\n * @param {*} nodes\n * @returns Array<Array<number>>\n */\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {\n    return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];\n  });\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian, includeErrorFields) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n\n  if (includeErrorFields === false) {\n    gridRecordLength = 8;\n  }\n\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian)\n\n    };\n\n    if (includeErrorFields !== false) {\n      record.latitudeAccuracy = view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian);\n      record.longitudeAccuracy = view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian);\n    }\n\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport { sphere as dc_sphere, eccentricity as dc_eccentricity } from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport { getNadgrids } from './nadgrid';\n\nfunction Projection(srsCode, callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function (error) {\n    if (error) {\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if (typeof json !== 'object') {\n    callback('Could not parse to valid json: ' + srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if (!ourProj) {\n    callback('Could not get projection name from: ' + srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","'use strict';\nimport { PJD_3PARAM, PJD_7PARAM, HALF_PI } from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; // Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    // ..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; // Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2]\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2]\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } // cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport { geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums } from './datumUtils';\nimport adjust_lon from './common/adjust_lon';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function (source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) && !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = { x: -point.x, y: point.y };\n  var output = { x: Number.NaN, y: Number.NaN };\n  var attemptedGrids = [];\n  outer:\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log('Unable to find mandatory grid \\'' + grid.name + '\\'');\n        return -1;\n      }\n      continue;\n    }\n    var subgrids = grid.grid.subgrids;\n    for (var j = 0, jj = subgrids.length; j < jj; j++) {\n      var subgrid = subgrids[j];\n      // skip tables that don't match our point at all\n      var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n      var minX = subgrid.ll[0] - epsilon;\n      var minY = subgrid.ll[1] - epsilon;\n      var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n      var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n      if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x) {\n        continue;\n      }\n      output = applySubgridShift(input, inverse, subgrid);\n      if (!isNaN(output.x)) {\n        break outer;\n      }\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log('Failed to find a grid shift table for location \\''\n      + -input.x * R2D + ' ' + input.y * R2D + ' tried: \\'' + attemptedGrids + '\\'');\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = { x: Number.NaN, y: Number.NaN };\n  if (isNaN(pin.x)) {\n    return val;\n  }\n  var tb = { x: pin.x, y: pin.y };\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log('Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.');\n        break;\n      }\n      dif = { x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y) };\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log('Inverse grid shift iterator failed to converge.');\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = { x: pin.x / ct.del[0], y: pin.y / ct.del[1] };\n  var indx = { x: Math.floor(t.x), y: Math.floor(t.y) };\n  var frct = { x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y };\n  var val = { x: Number.NaN, y: Number.NaN };\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  inx++;\n  var f10 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  inx += ct.lim[0];\n  var f11 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  inx--;\n  var f01 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function (crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if ('ew'.indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n    } else if (i === 1) {\n      v = yin;\n      if ('ns'.indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    } else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n      case 'e':\n        out[t] = v;\n        break;\n      case 'w':\n        out[t] = -v;\n        break;\n      case 'n':\n        out[t] = v;\n        break;\n      case 's':\n        out[t] = -v;\n        break;\n      case 'u':\n        if (point[t] !== undefined) {\n          out.z = v;\n        }\n        break;\n      case 'd':\n        if (point[t] !== undefined) {\n          out.z = -v;\n        }\n        break;\n      default:\n      // console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n        return null;\n    }\n  }\n  return out;\n}\n","export default function (array) {\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length > 2) {\n    out.z = array[2];\n  }\n  if (array.length > 3) {\n    out.m = array[3];\n  }\n  return out;\n}\n","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import { D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT } from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84')\n  || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (point && !hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || { x: NaN, y: NaN };\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.slice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.slice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.slice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n","import { toPoint, forward } from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if (typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function (mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function (accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function (es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n","export default function (phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n","import pj_mlfn from './pj_mlfn';\nimport { EPSLN } from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function (arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    // t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    // phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  // ..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport { EPSLN, HALF_PI } from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    } else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        } else {\n          y = 0;\n        }\n      } else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  } else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1\n      + als / 6 * (1 - t + c\n        + als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c\n          + als / 42 * (61 + 179 * ts - ts * t - 479 * t)))))\n        + this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0\n      + sin_phi * delta_lon * al / 2 * (1\n        + als / 12 * (5 - t + 9 * c + 4 * cs\n          + als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c\n            + als / 56 * (1385 + 543 * ts - ts * t - 3111 * t))))))\n          + this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    } else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  } else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1\n        - ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs\n          - ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c\n            - ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1\n        - ds / 6 * (1 + 2 * t + c\n          - ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c\n            - ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    } else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = ['Fast_Transverse_Mercator', 'Fast Transverse Mercator'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function (x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n","export default function (x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","export default function (x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function (x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function (pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","export default function (pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","export default function (x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function (pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675))))));\n  this.cbg[0] = n * (-2 + n * (2 / 3 + n * (4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * (-13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * (-24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * (2 / 3 + n * (-37 / 96 + n * (1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  } else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  } else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = ['Extended_Transverse_Mercator', 'Extended Transverse Mercator', 'etmerc', 'Transverse_Mercator', 'Transverse Mercator', 'Gauss Kruger', 'Gauss_Kruger', 'tmerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function (zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport { D2R } from '../constants/values';\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 = ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = ['Universal Transverse Mercator System', 'utm'];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","export default function (esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport { HALF_PI, FORTPI } from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), -0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['gauss'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = 'Oblique Stereographic Alternative';\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = hypot(p.x, p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  } else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = ['Stereographic_North_Pole', 'Oblique_Stereographic', 'sterea', 'Oblique Stereographic Alternative', 'Double_Stereographic'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import { EPSLN, HALF_PI } from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  // setting default parameters\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  } else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        // North pole\n        // trace('stere:north pole');\n        this.con = 1;\n      } else {\n        // South pole\n        // trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN && Math.abs(Math.cos(this.lat_ts)) > EPSLN) {\n      // When k0 is 1 (default value) and lat_ts is a vaild number and lat0 is at a pole and lat_ts is not at a pole\n      // Recalculate k0 using formula 21-35 from p161 of Snyder, 1987\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    // case of the origine point\n    // trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    // trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  } else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      // trace(p.toString());\n      return p;\n    } else if (Math.abs(this.sinlat0) < EPSLN) {\n      // Eq\n      // trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    } else {\n      // other case\n      // trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  // trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, -1 * p.y));\n      } else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    } else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        // trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, -1 * p.y));\n    } else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      } else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  // trace(p.toString());\n  return p;\n}\n\nexport var names = ['stere', 'Stereographic_South_Pole', 'Polar_Stereographic_variant_A', 'Polar_Stereographic_variant_B', 'Polar_Stereographic'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      // ...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    // S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = ['somerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\nimport { getNormalizedProjName } from '../projections';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator', 'Hotine_Oblique_Mercator_variant_A', 'Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.projName === 'object' ? Object.keys(P.projName)[0] : P.projName;\n\n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1 || typeAProjections.indexOf(getNormalizedProjName(projectionName)) !== -1;\n}\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------ */\nexport function init() {\n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0;\n\n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n\n  var alp = false;\n  if ('alpha' in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if ('rectified_grid_angle' in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n\n  if (gam) {\n    gamma = this.rectified_grid_angle;\n  }\n\n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n\n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL\n      || Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL\n      || Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n\n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n\n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D - 1;\n\n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n\n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n\n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n\n    if (con < -Math.pi) {\n      lam2 -= TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n\n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n\n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n\n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n\n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n\n    if (this.lat0 < 0) {\n      this.u_0 = -this.u_0;\n    }\n  }\n\n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ---------------------------------------------------------- */\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n\n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n\n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n\n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n\n    v = 0.5 * this.ArB * Math.log((1 - U) / (1 + U));\n    temp = Math.cos(this.B * p.x);\n\n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }\n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n\n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n\n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n\n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n\n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n\n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n\n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n\n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n\n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n\n  coords.x += this.lam0;\n\n  return coords;\n}\n\nexport var names = ['Hotine_Oblique_Mercator', 'Hotine Oblique Mercator', 'Hotine_Oblique_Mercator_variant_A', 'Hotine_Oblique_Mercator_Variant_B', 'Hotine_Oblique_Mercator_Azimuth_Natural_Origin', 'Hotine_Oblique_Mercator_Two_Point_Natural_Origin', 'Hotine_Oblique_Mercator_Azimuth_Center', 'Oblique_Mercator', 'omerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { HALF_PI, EPSLN } from '../constants/values';\nexport function init() {\n  // double lat0;                    /* the reference latitude               */\n  // double long0;                   /* the reference longitude              */\n  // double lat1;                    /* first standard parallel              */\n  // double lat2;                    /* second standard parallel             */\n  // double r_maj;                   /* major axis                           */\n  // double r_min;                   /* minor axis                           */\n  // double false_east;              /* x offset in meters                   */\n  // double false_north;             /* y offset in meters                   */\n\n  // the above value can be set with proj4.defs\n  // example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } // if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = Math.abs(Math.abs(this.lat0) - HALF_PI) < EPSLN\n    ? 0 // Handle poles by setting ts0 to 0\n    : tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  } else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = 'Lambert Conformal Conic';\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  } else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  } else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  'Lambert Tangential Conformal Conic Projection',\n  'Lambert_Conformal_Conic',\n  'Lambert_Conformal_Conic_1SP',\n  'Lambert_Conformal_Conic_2SP',\n  'lcc',\n  'Lambert Conic Conformal (1SP)',\n  'Lambert Conic Conformal (2SP)'\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x */\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, -1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = ['Krovak', 'krovak'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function (e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n","export default function (x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n","export default function (x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n","export default function (x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n","export default function (x) {\n  return (x * x * x * (35 / 3072));\n}\n","export default function (a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n","import { HALF_PI } from '../constants/values';\nimport sign from './sign';\n\nexport default function (x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function (ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  // ..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport { HALF_PI, EPSLN } from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  ----------------------------------------------------------------------- */\nexport function forward(p) {\n  /* Forward equations\n      ----------------- */\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  } else {\n    // ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  } else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nexport var names = ['Cassini', 'Cassini_Soldner', 'cass'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function (eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  } else {\n    return (2 * sinphi);\n  }\n}\n","import { HALF_PI, EPSLN, FORTPI } from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------ */\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  } else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  } else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n      case this.N_POLE:\n        this.dd = 1;\n        break;\n      case this.S_POLE:\n        this.dd = 1;\n        break;\n      case this.EQUIT:\n        this.rq = Math.sqrt(0.5 * this.qp);\n        this.dd = 1 / this.rq;\n        this.xmf = 1;\n        this.ymf = 0.5 * this.qp;\n        break;\n      case this.OBLIQ:\n        this.rq = Math.sqrt(0.5 * this.qp);\n        sinphi = Math.sin(this.lat0);\n        this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n        this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n        this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n        this.ymf = (this.xmf = this.rq) / this.dd;\n        this.xmf *= this.dd;\n        break;\n    }\n  } else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  ----------------------------------------------------------------------- */\nexport function forward(p) {\n  /* Forward equations\n      ----------------- */\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  } else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n      case this.OBLIQ:\n        b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n        break;\n      case this.EQUIT:\n        b = 1 + cosb * coslam;\n        break;\n      case this.N_POLE:\n        b = HALF_PI + phi;\n        q = this.qp - q;\n        break;\n      case this.S_POLE:\n        b = phi - HALF_PI;\n        q = this.qp + q;\n        break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n      case this.OBLIQ:\n      case this.EQUIT:\n        b = Math.sqrt(2 / b);\n        if (this.mode === this.OBLIQ) {\n          y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n        } else {\n          y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n        }\n        x = this.xmf * b * cosb * sinlam;\n        break;\n      case this.N_POLE:\n      case this.S_POLE:\n        if (q >= 0) {\n          x = (b = Math.sqrt(q)) * sinlam;\n          y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n        } else {\n          x = y = 0;\n        }\n        break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n      case this.EQUIT:\n        phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n        x *= sinz;\n        y = cosz * rh;\n        break;\n      case this.OBLIQ:\n        phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n        x *= sinz * this.cosph0;\n        y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n        break;\n      case this.N_POLE:\n        y = -y;\n        phi = HALF_PI - phi;\n        break;\n      case this.S_POLE:\n        phi -= HALF_PI;\n        break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  } else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      } else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = ['Lambert Azimuthal Equal Area', 'Lambert_Azimuthal_Equal_Area', 'laea'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function (x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN } from '../constants/values';\n\nexport function init() {\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  } else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  ------------------------------------------------------------------- */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  } else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n------------------------------------------- */\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = ['Albers_Conic_Equal_Area', 'Albers_Equal_Area', 'Albers', 'aea'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN } from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    --------------------------------------------------- */\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      ----------------- */\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  } else {\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      ----------------- */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  } else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['gnom'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import { HALF_PI } from '../constants/values';\n\nexport default function (eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    } else {\n      return HALF_PI;\n    }\n  }\n  // var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  // console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  // no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------ */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      ----------------- */\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  } else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------ */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  } else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['cea'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || 'Equidistant Cylindrical (Plate Carre)';\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = ['Equirectangular', 'Equidistant_Cylindrical', 'Equidistant_Cylindrical_Spherical', 'eqc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport { EPSLN } from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); // si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    --------------------------------------------------- */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    } else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  } else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    } else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    } else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  } else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    } else {\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      // lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Polyconic', 'American_Polyconic', 'poly'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import { SEC_TO_RAD } from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = ['New_Zealand_Map_Grid', 'nzmg'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n/* Initialize the Miller Cylindrical projection\n  ------------------------------------------- */\nexport function init() {\n  // no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------ */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      ----------------- */\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------ */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Miller_Cylindrical', 'mill'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport { EPSLN, HALF_PI } from '../constants/values';\n\nimport asinz from '../common/asinz';\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    ------------------------------------------------- */\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  } else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  ----------------------------------------------------- */\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    ----------------- */\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    } else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n  } else {\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    } else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  } else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      // temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    } else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Sinusoidal', 'sinu'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport { EPSLN } from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ---------------------------------------------------- */\nexport function forward(p) {\n  /* Forward equations\n      ----------------- */\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      ----------------------------------------------------- */\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       -------------------------------------------------------------------------- */\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      ----------------- */\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       ------------------------------------------------------------------- */\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Mollweide', 'moll'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport { EPSLN } from '../constants/values';\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  } else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  ----------------------------------------------------------- */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      ----------------- */\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  } else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n}\n\nexport var names = ['Equidistant_Conic', 'eqdc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport { HALF_PI, EPSLN } from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ---------------------------------------- */\nexport function init() {\n  // this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    ----------------- */\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    } else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  // con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    // y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  } else {\n    // y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  --------------------------------------------------------- */\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    ----------------- */\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    } else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  } else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  } else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Van_der_Grinten_I', 'VanDerGrinten', 'Van_der_Grinten', 'vandg'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport { HALF_PI, EPSLN, D2R } from '../constants/values';\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\nimport { Geodesic } from 'geographiclib-geodesic';\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n  this.g = new Geodesic.Geodesic(this.a, this.es / (1 + Math.sqrt(1 - this.es)));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, c, kp, cos_c, lat1, lon1, lat2, lon2, vars, azi1;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      // North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      // South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    } else {\n      // default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      // North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      // South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    } else {\n      // Default case\n      if (Math.abs(lon) < EPSLN && Math.abs(lat - this.lat0) < EPSLN) {\n        p.x = p.y = 0;\n        return p;\n      }\n      lat1 = this.lat0 / D2R;\n      lon1 = this.long0 / D2R;\n      lat2 = lat / D2R;\n      lon2 = lon / D2R;\n\n      vars = this.g.Inverse(lat1, lon1, lat2, lon2, this.g.AZIMUTH);\n      azi1 = vars.azi1 * D2R;\n\n      p.x = vars.s12 * Math.sin(azi1);\n      p.y = vars.s12 * Math.cos(azi1);\n      return p;\n    }\n  }\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, lat1, lon1, azi1, s12, vars;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    } else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, -p.y));\n        } else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      } else {\n        /* con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        } */\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      // North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, -1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      // South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else {\n      // default case\n      lat1 = this.lat0 / D2R;\n      lon1 = this.long0 / D2R;\n      azi1 = Math.atan2(p.x, p.y) / D2R;\n      s12 = Math.sqrt(p.x * p.x + p.y * p.y);\n      vars = this.g.Direct(lat1, lon1, azi1, s12, this.g.STANDARD);\n\n      p.x = vars.lon2 * D2R;\n      p.y = vars.lat2 * D2R;\n      return p;\n    }\n  }\n}\n\nexport var names = ['Azimuthal_Equidistant', 'aeqd'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN, HALF_PI } from '../constants/values';\n\nexport function init() {\n  // double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    --------------------------------------------------- */\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      ----------------- */\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      ----------------- */\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, -p.y));\n    } else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['ortho'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport { EPSLN, TWO_PI, SPI, HALF_PI, FORTPI } from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n  FRONT: 1,\n  RIGHT: 2,\n  BACK: 3,\n  LEFT: 4,\n  TOP: 5,\n  BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n  AREA_0: 1,\n  AREA_1: 2,\n  AREA_2: 3,\n  AREA_3: 4\n};\n\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || 'Quadrilateralized Spherical Cube';\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = { x: 0, y: 0 };\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = { value: 0 };\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) { // if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; // lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = { lam: 0, phi: 0 };\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = { value: 0 };\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = ['Quadrilateralized Spherical Cube', 'Quadrilateralized_Spherical_Cube', 'qsc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport { HALF_PI, D2R, R2D, EPSLN } from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n  [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n  [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n  [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n  [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n  [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n  [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n  [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n  [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n  [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n  [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n  [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n  [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n  [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n  [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n  [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n  [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n  [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n  [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n  [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n  [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n  [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n  [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n  [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n  [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n  [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n  [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n  [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n  [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n  [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n  [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n  [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n  [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n  [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n  [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n  [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n  [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n  [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n  [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D / 5; // rad to 5-degree interval\nvar RC1 = 1 / C1;\nvar NODES = 18;\n\nvar poly3_val = function (coefs, x) {\n  return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function (coefs, x) {\n  return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n  var x = start;\n  for (; iters; --iters) {\n    var upd = f_df(x);\n    x -= upd;\n    if (Math.abs(upd) < max_err) {\n      break;\n    }\n  }\n  return x;\n}\n\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.long0 = this.long0 || 0;\n  this.es = 0;\n  this.title = this.title || 'Robinson';\n}\n\nexport function forward(ll) {\n  var lon = adjust_lon(ll.x - this.long0);\n\n  var dphi = Math.abs(ll.y);\n  var i = Math.floor(dphi * C1);\n  if (i < 0) {\n    i = 0;\n  } else if (i >= NODES) {\n    i = NODES - 1;\n  }\n  dphi = R2D * (dphi - RC1 * i);\n  var xy = {\n    x: poly3_val(COEFS_X[i], dphi) * lon,\n    y: poly3_val(COEFS_Y[i], dphi)\n  };\n  if (ll.y < 0) {\n    xy.y = -xy.y;\n  }\n\n  xy.x = xy.x * this.a * FXC + this.x0;\n  xy.y = xy.y * this.a * FYC + this.y0;\n  return xy;\n}\n\nexport function inverse(xy) {\n  var ll = {\n    x: (xy.x - this.x0) / (this.a * FXC),\n    y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n  };\n\n  if (ll.y >= 1) { // pathologic case\n    ll.x /= COEFS_X[NODES][0];\n    ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    // find table interval\n    var i = Math.floor(ll.y * NODES);\n    if (i < 0) {\n      i = 0;\n    } else if (i >= NODES) {\n      i = NODES - 1;\n    }\n    for (;;) {\n      if (COEFS_Y[i][0] > ll.y) {\n        --i;\n      } else if (COEFS_Y[i + 1][0] <= ll.y) {\n        ++i;\n      } else {\n        break;\n      }\n    }\n    // linear interpolation in 5 degree interval\n    var coefs = COEFS_Y[i];\n    var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i + 1][0] - coefs[0]);\n    // find t so that poly3_val(coefs, t) = ll.y\n    t = newton_rapshon(function (x) {\n      return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n    }, t, EPSLN, 100);\n\n    ll.x /= poly3_val(COEFS_X[i], t);\n    ll.y = (5 * i + t) * D2R;\n    if (xy.y < 0) {\n      ll.y = -ll.y;\n    }\n  }\n\n  ll.x = adjust_lon(ll.x + this.long0);\n  return ll;\n}\n\nexport var names = ['Robinson', 'robin'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n  geodeticToGeocentric,\n  geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n  this.name = 'geocent';\n}\n\nexport function forward(p) {\n  var point = geodeticToGeocentric(p, this.es, this.a);\n  return point;\n}\n\nexport function inverse(p) {\n  var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n  return point;\n}\n\nexport var names = ['Geocentric', 'geocentric', 'geocent', 'Geocent'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","var mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from '../constants/values';\nimport hypot from '../common/hypot';\n\nvar params = {\n  h: { def: 100000, num: true }, // default is Karman line, no default in PROJ.7\n  azi: { def: 0, num: true, degrees: true }, // default is North\n  tilt: { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true }, // default is Greenwich, conversion to rad is automatic\n  lat0: { def: 0, num: true } // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === 'undefined') {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error('Invalid parameter value, must be numeric ' + p + ' = ' + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a; // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error('Invalid height');\n  }\n\n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt\n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = ['Tilted_Perspective', 'tpers'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\nexport function init() {\n  this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n  this.h = Number(this.h);\n  this.radius_g_1 = this.h / this.a;\n\n  if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n    throw new Error();\n  }\n\n  this.radius_g = 1.0 + this.radius_g_1;\n  this.C = this.radius_g * this.radius_g - 1.0;\n\n  if (this.es !== 0.0) {\n    var one_es = 1.0 - this.es;\n    var rone_es = 1 / one_es;\n\n    this.radius_p = Math.sqrt(one_es);\n    this.radius_p2 = one_es;\n    this.radius_p_inv2 = rone_es;\n\n    this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n  } else {\n    this.radius_p = 1.0;\n    this.radius_p2 = 1.0;\n    this.radius_p_inv2 = 1.0;\n\n    this.shape = 'sphere'; // Use as a condition in the forward and inverse functions.\n  }\n\n  if (!this.title) {\n    this.title = 'Geostationary Satellite View';\n  }\n}\n\nfunction forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var tmp, v_x, v_y, v_z;\n  lon = lon - this.long0;\n\n  if (this.shape === 'ellipse') {\n    lat = Math.atan(this.radius_p2 * Math.tan(lat));\n    var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n    v_x = r * Math.cos(lon) * Math.cos(lat);\n    v_y = r * Math.sin(lon) * Math.cos(lat);\n    v_z = r * Math.sin(lat);\n\n    if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    tmp = this.radius_g - v_x;\n    if (this.flip_axis) {\n      p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n      p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n    } else {\n      p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n      p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n    }\n  } else if (this.shape === 'sphere') {\n    tmp = Math.cos(lat);\n    v_x = Math.cos(lon) * tmp;\n    v_y = Math.sin(lon) * tmp;\n    v_z = Math.sin(lat);\n    tmp = this.radius_g - v_x;\n\n    if (this.flip_axis) {\n      p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n      p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n    } else {\n      p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n      p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n    }\n  }\n  p.x = p.x * this.a;\n  p.y = p.y * this.a;\n  return p;\n}\n\nfunction inverse(p) {\n  var v_x = -1.0;\n  var v_y = 0.0;\n  var v_z = 0.0;\n  var a, b, det, k;\n\n  p.x = p.x / this.a;\n  p.y = p.y / this.a;\n\n  if (this.shape === 'ellipse') {\n    if (this.flip_axis) {\n      v_z = Math.tan(p.y / this.radius_g_1);\n      v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n    } else {\n      v_y = Math.tan(p.x / this.radius_g_1);\n      v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n    }\n\n    var v_zp = v_z / this.radius_p;\n    a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n    b = 2 * this.radius_g * v_x;\n    det = (b * b) - 4 * a * this.C;\n\n    if (det < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    k = (-b - Math.sqrt(det)) / (2.0 * a);\n    v_x = this.radius_g + k * v_x;\n    v_y *= k;\n    v_z *= k;\n\n    p.x = Math.atan2(v_y, v_x);\n    p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n  } else if (this.shape === 'sphere') {\n    if (this.flip_axis) {\n      v_z = Math.tan(p.y / this.radius_g_1);\n      v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n    } else {\n      v_y = Math.tan(p.x / this.radius_g_1);\n      v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n    }\n\n    a = v_y * v_y + v_z * v_z + v_x * v_x;\n    b = 2 * this.radius_g * v_x;\n    det = (b * b) - 4 * a * this.C;\n    if (det < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    k = (-b - Math.sqrt(det)) / (2.0 * a);\n    v_x = this.radius_g + k * v_x;\n    v_y *= k;\n    v_z *= k;\n\n    p.x = Math.atan2(v_y, v_x);\n    p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n  }\n  p.x = p.x + this.long0;\n  return p;\n}\n\nexport var names = ['Geostationary Satellite View', 'Geostationary_Satellite', 'geos'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","/**\n * Copyright 2018 Bernie Jenny, Monash University, Melbourne, Australia.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Equal Earth is a projection inspired by the Robinson projection, but unlike\n * the Robinson projection retains the relative size of areas. The projection\n * was designed in 2018 by Bojan Savric, Tom Patterson and Bernhard Jenny.\n *\n * Publication:\n * Bojan Savric, Tom Patterson & Bernhard Jenny (2018). The Equal Earth map\n * projection, International Journal of Geographical Information Science,\n * DOI: 10.1080/13658816.2018.1504949\n *\n * Code released August 2018\n * Ported to JavaScript and adapted for mapshaper-proj by Matthew Bloch August 2018\n * Modified for proj4js by Andreas Hocevar by Andreas Hocevar March 2024\n */\n\nimport adjust_lon from '../common/adjust_lon';\n\nvar A1 = 1.340264,\n  A2 = -0.081106,\n  A3 = 0.000893,\n  A4 = 0.003796,\n  M = Math.sqrt(3) / 2.0;\n\nexport function init() {\n  this.es = 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n}\n\nexport function forward(p) {\n  var lam = adjust_lon(p.x - this.long0);\n  var phi = p.y;\n  var paramLat = Math.asin(M * Math.sin(phi)),\n    paramLatSq = paramLat * paramLat,\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = lam * Math.cos(paramLat)\n    / (M * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq)));\n  p.y = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq));\n\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  var EPS = 1e-9,\n    NITER = 12,\n    paramLat = p.y,\n    paramLatSq, paramLatPow6, fy, fpy, dlat, i;\n\n  for (i = 0; i < NITER; ++i) {\n    paramLatSq = paramLat * paramLat;\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n    fy = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq)) - p.y;\n    fpy = A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq);\n    paramLat -= dlat = fy / fpy;\n    if (Math.abs(dlat) < EPS) {\n      break;\n    }\n  }\n  paramLatSq = paramLat * paramLat;\n  paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = M * p.x * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq))\n    / Math.cos(paramLat);\n  p.y = Math.asin(Math.sin(paramLat) / M);\n\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = ['eqearth', 'Equal Earth', 'Equal_Earth'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lat from '../common/adjust_lat';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\nimport pj_enfn from '../common/pj_enfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport { HALF_PI } from '../constants/values';\n\nvar EPS10 = 1e-10;\n\nexport function init() {\n  var c;\n\n  this.phi1 = this.lat1;\n  if (Math.abs(this.phi1) < EPS10) {\n    throw new Error();\n  }\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.m1 = pj_mlfn(this.phi1, this.am1 = Math.sin(this.phi1),\n      c = Math.cos(this.phi1), this.en);\n    this.am1 = c / (Math.sqrt(1 - this.es * this.am1 * this.am1) * this.am1);\n    this.inverse = e_inv;\n    this.forward = e_fwd;\n  } else {\n    if (Math.abs(this.phi1) + EPS10 >= HALF_PI) {\n      this.cphi1 = 0;\n    } else {\n      this.cphi1 = 1 / Math.tan(this.phi1);\n    }\n    this.inverse = s_inv;\n    this.forward = s_fwd;\n  }\n}\n\nfunction e_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var rh, E, c;\n  rh = this.am1 + this.m1 - pj_mlfn(phi, E = Math.sin(phi), c = Math.cos(phi), this.en);\n  E = c * lam / (rh * Math.sqrt(1 - this.es * E * E));\n  p.x = rh * Math.sin(E);\n  p.y = this.am1 - rh * Math.cos(E);\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction e_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var s, rh, lam, phi;\n  rh = hypot(p.x, p.y = this.am1 - p.y);\n  phi = pj_inv_mlfn(this.am1 + this.m1 - rh, this.es, this.en);\n  if ((s = Math.abs(phi)) < HALF_PI) {\n    s = Math.sin(phi);\n    lam = rh * Math.atan2(p.x, p.y) * Math.sqrt(1 - this.es * s * s) / Math.cos(phi);\n  } else if (Math.abs(s - HALF_PI) <= EPS10) {\n    lam = 0;\n  } else {\n    throw new Error();\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nfunction s_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var E, rh;\n  rh = this.cphi1 + this.phi1 - phi;\n  if (Math.abs(rh) > EPS10) {\n    p.x = rh * Math.sin(E = lam * Math.cos(phi) / rh);\n    p.y = this.cphi1 - rh * Math.cos(E);\n  } else {\n    p.x = p.y = 0;\n  }\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction s_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var lam, phi;\n  var rh = hypot(p.x, p.y = this.cphi1 - p.y);\n  phi = this.cphi1 + this.phi1 - rh;\n  if (Math.abs(phi) > HALF_PI) {\n    throw new Error();\n  }\n  if (Math.abs(Math.abs(phi) - HALF_PI) <= EPS10) {\n    lam = 0;\n  } else {\n    lam = rh * Math.atan2(p.x, p.y) / Math.cos(phi);\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nexport var names = ['bonne', 'Bonne (Werner lat_1=90)'];\nexport default {\n  init: init,\n  names: names\n};\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nimport eqearth from './lib/projections/eqearth';\nimport bonne from './lib/projections/bonne';\nexport default function (proj4) {\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n  proj4.Proj.projections.add(eqearth);\n  proj4.Proj.projections.add(bonne);\n}\n","import proj4 from './core';\nimport Proj from './Proj';\nimport Point from './Point';\nimport common from './common/toPoint';\nimport defs from './defs';\nimport nadgrid from './nadgrid';\nimport transform from './transform';\nimport mgrs from 'mgrs';\nimport includedProjections from '../projs';\n\nproj4.defaultDatum = 'WGS84'; // default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n"],"names":["defs","i","WGS84","GOOGLE","PJD_3PARAM","PJD_7PARAM","PJD_GRIDSHIFT","PJD_WGS84","PJD_NODATUM","SRS_WGS84_SEMIMAJOR","SRS_WGS84_SEMIMINOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","Math","PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","mm","to_meter","cm","ft","fath","kmi","km","mi","yd","ch","link","dm","in","ignoredChar","match","obj","key","testkey","processedKey","keys","Object","lkey","toLowerCase","replace","length","defData","paramName","paramVal","paramOutname","self","paramObj","split","map","v","trim","filter","a","reduce","p","push","params","proj","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","x0","y_0","y0","k_0","k0","k","b","r","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","units","unit","from_greenwich","pm","nadgrids","datumCode","axis","legalAxis","indexOf","substr","approx","name","that","this","arguments","def","charAt","Array","isArray","apply","EPSG","ESRI","IAU2000","console","log","global","testObj","code","testDef","testWKT","codes","checkMercator","item","auth","checkProjStr","ext","testProj","parse","projName","out","maybeProjStr","destination","source","value","property","undefined","eccent","sinphi","cosphi","con","sqrt","x","abs","sign","phi","com","pow","tan","ts","dphi","eccnth","atan","sin","init","es","e","sphere","cos","msfnz","forward","y","lon","lat","adjust_lon","tsfnz","inverse","exp","phi2z","names","identity","pt","projs","merc","longlat","projStore","add","len","forEach","n","getNormalizedProjName","get","start","ellipsoids","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk80ign","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Ellipsoid","eccentricity","a2","b2","ep2","ellps","ellipse","datums","wgs84","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","mgi","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","EPSG_5451","IGNF_LURESG","EPSG_4614","EPSG_4615","ESRI_37241","ESRI_37249","ESRI_37245","EPSG_4178","EPSG_4622","EPSG_4625","EPSG_5252","EPSG_4314","EPSG_4282","EPSG_4231","EPSG_4274","EPSG_4134","EPSG_4254","EPSG_4159","EPSG_4687","EPSG_4227","EPSG_4746","EPSG_4745","EPSG_6311","EPSG_4289","EPSG_4230","EPSG_4154","EPSG_4156","EPSG_4299","EPSG_4179","EPSG_4313","EPSG_4194","EPSG_4195","EPSG_4196","EPSG_4611","EPSG_4633","EPSG_4641","EPSG_4643","EPSG_4300","EPSG_4188","EPSG_4660","EPSG_4662","EPSG_3906","EPSG_4307","EPSG_6892","EPSG_4690","EPSG_4691","EPSG_4629","EPSG_4630","EPSG_4692","EPSG_9333","EPSG_9059","EPSG_4312","EPSG_4123","EPSG_4309","ESRI_104106","EPSG_4281","EPSG_4322","EPSG_4324","EPSG_4284","EPSG_4277","EPSG_4207","EPSG_4688","EPSG_4689","EPSG_4720","EPSG_4273","EPSG_4240","EPSG_4817","ESRI_104131","EPSG_4265","EPSG_4263","EPSG_4298","EPSG_4270","EPSG_4229","EPSG_4220","EPSG_4214","EPSG_4232","EPSG_4238","EPSG_4168","EPSG_4131","EPSG_4152","EPSG_5228","EPSG_8351","EPSG_4683","EPSG_4133","EPSG_7373","EPSG_9075","EPSG_9072","EPSG_9294","EPSG_4212","EPSG_4191","EPSG_4237","EPSG_4740","EPSG_4124","EPSG_5681","EPSG_4141","EPSG_4204","EPSG_4319","EPSG_4200","EPSG_4130","EPSG_4127","EPSG_4149","EPSG_4617","EPSG_4663","EPSG_4664","EPSG_4665","EPSG_4666","EPSG_4756","EPSG_4723","EPSG_4726","EPSG_4267","EPSG_5365","EPSG_4218","EPSG_4242","EPSG_4216","ESRI_104105","ESRI_104129","EPSG_4673","EPSG_4202","EPSG_4203","EPSG_3819","EPSG_8694","EPSG_4145","EPSG_4283","EPSG_4317","EPSG_4272","EPSG_4248","EPSG_5561","EPSG_5233","ESRI_104130","ESRI_104102","ESRI_37207","EPSG_4675","ESRI_104109","ESRI_104112","ESRI_104113","IGNF_WGS72G","IGNF_NTFG","IGNF_EFATE57G","IGNF_PGP50G","IGNF_REUN47G","IGNF_CSG67G","IGNF_GUAD48G","IGNF_TAHI51G","IGNF_TAHAAG","IGNF_NUKU72G","IGNF_PETRELS72G","IGNF_WALL78G","IGNF_MAYO50G","IGNF_TANNAG","IGNF_IGN72G","IGNF_ATIGG","IGNF_FANGA84G","IGNF_RUSAT84G","IGNF_KAUE70G","IGNF_MOP90G","IGNF_MHPF67G","IGNF_TAHI79G","IGNF_ANAA92G","IGNF_MARQUI72G","IGNF_APAT86G","IGNF_TUBU69G","IGNF_STPM50G","EPSG_4150","EPSG_4754","ESRI_104101","EPSG_4693","EPSG_6207","EPSG_4153","EPSG_4132","EPSG_4221","EPSG_4266","EPSG_4193","EPSG_5340","EPSG_4246","EPSG_4318","EPSG_4121","EPSG_4223","EPSG_4158","EPSG_4285","EPSG_4613","EPSG_4607","EPSG_4475","EPSG_4208","EPSG_4743","EPSG_4710","EPSG_7881","EPSG_4682","EPSG_4739","EPSG_4679","EPSG_4750","EPSG_4644","EPSG_4695","EPSG_4292","EPSG_4302","EPSG_4143","EPSG_4606","EPSG_4699","EPSG_4247","EPSG_4160","EPSG_4161","EPSG_9251","EPSG_9253","EPSG_4297","EPSG_4269","EPSG_4301","EPSG_4618","EPSG_4612","EPSG_4678","EPSG_4250","EPSG_4144","EPSG_4147","EPSG_4259","EPSG_4164","EPSG_4211","EPSG_4182","EPSG_4224","EPSG_4225","EPSG_5527","EPSG_4752","EPSG_4310","EPSG_9248","EPSG_4680","EPSG_4701","EPSG_4706","EPSG_4805","EPSG_4201","EPSG_4210","EPSG_4183","EPSG_4139","EPSG_4668","EPSG_4717","EPSG_4732","EPSG_4280","EPSG_4209","EPSG_4261","EPSG_4658","EPSG_4721","EPSG_4222","EPSG_4601","EPSG_4602","EPSG_4603","EPSG_4605","EPSG_4621","EPSG_4657","EPSG_4316","EPSG_4642","EPSG_4698","EPSG_4192","EPSG_4311","EPSG_4135","ESRI_104138","EPSG_4245","EPSG_4142","EPSG_4213","EPSG_4253","EPSG_4129","EPSG_4713","EPSG_4239","EPSG_4146","EPSG_4155","EPSG_4165","EPSG_4672","EPSG_4236","EPSG_4251","EPSG_4271","EPSG_4175","EPSG_4716","EPSG_4315","EPSG_4744","EPSG_4244","EPSG_4293","EPSG_4714","EPSG_4736","EPSG_6883","EPSG_6894","EPSG_4205","EPSG_4256","EPSG_4262","EPSG_4604","EPSG_4169","EPSG_4620","EPSG_4184","EPSG_4616","EPSG_9403","EPSG_4684","EPSG_4708","EPSG_4707","EPSG_4709","EPSG_4712","EPSG_4711","EPSG_4718","EPSG_4719","EPSG_4724","EPSG_4725","EPSG_4735","EPSG_4722","EPSG_4728","EPSG_4734","EPSG_4727","EPSG_4729","EPSG_4730","EPSG_4733","ESRI_37218","ESRI_37240","ESRI_37221","ESRI_4305","ESRI_104139","EPSG_4748","EPSG_4219","EPSG_4255","EPSG_4257","EPSG_4646","EPSG_6881","EPSG_6882","EPSG_4715","IGNF_RGF93GDD","IGNF_RGM04GDD","IGNF_RGSPM06GDD","IGNF_RGTAAF07GDD","IGNF_RGFG95GDD","IGNF_RGNCG","IGNF_RGPFGDD","IGNF_ETRS89G","IGNF_RGR92GDD","EPSG_4173","EPSG_4180","EPSG_4619","EPSG_4667","EPSG_4075","EPSG_6706","EPSG_7798","EPSG_4661","EPSG_4669","EPSG_8685","EPSG_4151","EPSG_9702","EPSG_4758","EPSG_4761","EPSG_4765","EPSG_8997","EPSG_4023","EPSG_4670","EPSG_4694","EPSG_4148","EPSG_4163","EPSG_4167","EPSG_4189","EPSG_4190","EPSG_4176","EPSG_4659","EPSG_3824","EPSG_3889","EPSG_4046","EPSG_4081","EPSG_4558","EPSG_4483","EPSG_5013","EPSG_5264","EPSG_5324","EPSG_5354","EPSG_5371","EPSG_5373","EPSG_5381","EPSG_5393","EPSG_5489","EPSG_5593","EPSG_6135","EPSG_6365","EPSG_5246","EPSG_7886","EPSG_8431","EPSG_8427","EPSG_8699","EPSG_8818","EPSG_4757","EPSG_9140","EPSG_8086","EPSG_4686","EPSG_4737","EPSG_4702","EPSG_4747","EPSG_4749","EPSG_4674","EPSG_4755","EPSG_4759","EPSG_4762","EPSG_4763","EPSG_4764","EPSG_4166","EPSG_4170","EPSG_5546","EPSG_7844","EPSG_4818","datum_type","grids","loadedNadgrids","nadgrid","data","options","ArrayBuffer","readNTV2Grid","ready","readGeotiffGrid","includeErrorFields","view","DataView","isLittleEndian","detectLittleEndian","header","readHeader","subgrids","readSubgrids","async","tiff","subGridCount","getImageCount","subgridIndex","image","getImage","rasters","readRasters","lim","getWidth","getHeight","imageBBoxRadians","getBoundingBox","degreesToRadians","del","fileDirectory","ModelPixelScale","maxX","minY","latitudeOffsetBand","longitudeOffsetBand","nodes","j","index","secondsToRadians","ll","cvs","tifGrid","nSubgrids","getNadgrids","parseNadgridString","optional","slice","mandatory","grid","isNull","degrees","seconds","nFields","getInt32","warn","nSubgridFields","shiftType","decodeString","fromSemiMajorAxis","getFloat64","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","end","String","fromCharCode","Uint8Array","buffer","gridOffset","subHeader","readGridHeader","readGridNodes","lngColumnCount","round","upperLongitude","lowerLongitude","longitudeInterval","latColumnCount","upperLatitude","lowerLatitude","latitudeInterval","count","gridNodeCount","mapNodes","rowSize","longitudeShift","latitudeShift","offset","parent","gridHeader","nodesOffset","gridRecordLength","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","Projection","srsCode","callback","error","json","parseCode","ourProj","projections","datumDef","Datum","sphere_","ecc","datumObj","extend","compareDatums","dest","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","z","Infinity","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","genau2","maxiter","X","Y","Z","atan2","geocentricToWgs84","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricFromWgs84","x_tmp","y_tmp","z_tmp","checkParams","type","point","source_a","source_es","gridShiftCode","applyGridShift","dest_a","dest_b","dest_es","destGridShiftResult","input","output","Number","NaN","attemptedGrids","outer","jj","subgrid","epsilon","minX","maxY","applySubgridShift","isNaN","pin","ct","val","tb","t","nadInterpolate","dif","tol","inx","indx","floor","frct","f00","f10","f11","f01","m11","m10","m00","m01","crs","denorm","xin","yin","zin","array","m","checkCoord","num","isFinite","TypeError","checkNotWGS","transform","enforceAxis","toPoint","hasZ","checkSanity","adjust_axis","datum_transform","transformer","from","to","coords","transformedArray","concat","checkProj","oProj","proj4","fromProj","toProj","coord","single","Point","fromMGRS","mgrsStr","prototype","toMGRS","accuracy","C00","C02","C04","C06","C08","C22","C44","C46","C48","C66","C68","C88","en","sphi","cphi","MAX_ITER","arg","s","pj_mlfn","pj_enfn","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","pj_inv_mlfn","tan_phi","d","ds","f","g","temp","h","asin","max","min","log1py","hypot","pp","B","cos_2B","h1","h2","arg_r","hr","hr1","hr2","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","sinh","cosh_arg_i","cosh","hi1","hi","Error","tmerc","cgb","cbg","utg","gtu","np","Qn","gatg","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","asinhy","tmp","clens_cmplx","dependsOn","adjust_zone","etmerc","esinp","rc","C","phic0","ratexp","K","srat","DEL_TOL","gauss","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","ssfn_","phit","eccen","coslat0","sinlat0","cons","ms1","X0","cosX0","sinX0","A","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phy0","lambda0","sinPhy0","semiMajorAxis","invF","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","I","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","isTypeA","typeAProjections","projectionName","cosph0","D","F","H","L","sinph0","J","gamma0","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","T","U","V","W","u","Qp","Sp","Tp","Vp","Up","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","e0","e1","e3","e0fn","e1fn","e2fn","e3fn","mlfn","lam","nl","gN","tl","asq","cl","dd","ml1","imlfn","nl1","rl1","tl1","dl","dsq","adjust_lat","S_POLE","N_POLE","EQUIT","OBLIQ","mode","qp","qsfnz","mmf","apa","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","cosz","sinz","authlat","P00","P01","P02","P10","P11","P20","APA","beta","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","qs","phi1z","asinz","eccnts","sin_p14","cos_p14","infinity_dist","coslon","ksp","iqsfnz","dlat","el","bl","tanphi","mln","mlnp","ma","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_re1","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_re1","z_n_im1","delta_x","delta_y","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","C_y","C_x","delta_theta","ml2","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","sin_p12","cos_p12","Geodesic","Mlp","Ml","kp","cos_c","lon1","lon2","vars","azi1","Inverse","AZIMUTH","s12","M","Direct","STANDARD","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","face","one_minus_f","one_minus_f_squared","mu","xy","area","sinlon","qsc_shift_lon_origin","qsc_fwd_equat_face_theta","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","slon","COEFS_X","COEFS_Y","FXC","FYC","C1","RC1","NODES","poly3_val","coefs","poly3_der","newton_rapshon","f_df","max_err","iters","upd","azi","tilt","bind","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","flip_axis","sweep","radius_g_1","radius_g","rone_es","radius_p","radius_p2","radius_p_inv2","shape","v_x","v_y","v_z","det","v_zp","A1","A2","A3","A4","paramLat","paramLatSq","paramLatPow6","fy","fpy","EPS","NITER","EPS10","am1","e_inv","e_fwd","cphi1","s_inv","s_fwd","Proj","utm","sterea","stere","somerc","omerc","lcc","krovak","cass","laea","aea","gnom","cea","eqc","poly","nzmg","mill","sinu","moll","eqdc","vandg","aeqd","ortho","qsc","robin","geocent","tpers","geos","eqearth","bonne","defaultDatum","mgrs","version"],"sourceRoot":""}