{"version":3,"sources":["webpack:///./node_modules/chart.js/dist/chart.esm.js"],"names":["Animator","this","_request","_charts","Map","_running","_lastDate","undefined","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","call","window","_update","_refresh","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_notify","charts","get","complete","progress","set","event","cb","_getAnims","push","reduce","acc","cur","max","_duration","cancel","delete","animator","transparent","interpolators","from","to","factor","c0","c1","valid","mix","hexString","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","active","resize","show","animations","visible","hide","v","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","has","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","_animateOptions","value","update","size","assign","add","anim","wait","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","r","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","addElements","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","range","parsedValue","NaN","otherScale","_getOtherScale","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","clip","getMaxOverflow","elements","area","chartArea","drawActiveElementsOnTop","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","_cacheable","sharedOptions","_animationsDisabled","_resolveAnimations","getStyle","getSharedOptions","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","args","_dataChanges","arguments","_sync","newCount","getAllScaleValues","_cache","$bar","visibleMetas","concat","getAllParsedValues","sort","a","computeMinSampleSize","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","setInflateAmount","inflateAmount","defaults","prototype","BarController","iAxisKey","vAxisKey","obj","super","bars","reset","getBasePixel","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","updateElement","last","grouped","val","isNaN","indexOf","_getStacks","_startPixel","_endPixel","_getStackCount","baseValue","minBarLength","floating","getDataVisibility","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","_getStackIndex","rects","overrides","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","getPixelForDecimal","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","plugins","tooltip","DoughnutController","innerRadius","outerRadius","getter","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","_getRotationExtents","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","descriptors","aspectRatio","legend","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","e","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","stop","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","interaction","abstract","Error","DateAdapter","format","timestamp","amount","unit","weekday","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","j","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","autoPadding","_layers","z","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","canvas","listener","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","addEventListener","removeListener","removeEventListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","final","ret","defaultRoutes","formatters","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","numeric","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","diff","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","color","borderDash","borderDashOffset","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","callback","minor","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","metas","getMinMax","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","valueAt","idx","pixel","decimal","getBaseValue","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","save","fillRect","restore","findIndex","_computeGridLineItems","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","_computeLabelArea","_computeLabelItems","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","fontSize","TypedRegistry","scope","create","isPrototypeOf","proto","getPrototypeOf","parentScope","isIChartComponent","register","registerDefaults","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","controllers","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","getPlugin","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","p","hasFunction","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","userConfig","initialCanvas","existingChart","chartOptionScopes","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","listen","_initialize","maintainAspectRatio","responsive","bindEvents","_resizeBeforeDraw","_resize","newSize","getMaximumSize","newRatio","getDevicePixelRatio","onResize","render","scalesOptions","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","getScale","init","hasUpdated","addBox","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","removeBox","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","_stop","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","isAttached","prefix","activeElements","lastActive","notify","replay","hoverOptions","hover","deactivated","activated","updateHoverStyle","eventFilter","_handleEvent","_getActiveElements","onHover","onClick","getElementsAtEventForMode","invalidatePlugins","enumerable","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","PI","p8","drawArc","fullCircles","drawFullCircleBorders","inner","borderJoinStyle","lineJoin","defineProperties","unregister","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","capBezierPoints","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","_getLegendItemAt","sameItem","onLeave","plugin_legend","_element","_args","adjustHitBoxes","handleEvent","ci","Title","_padding","textSize","fontOpts","_drawArgs","createTitle","titleBlock","plugin_title","WeakMap","positioners","hasValue","tooltipPosition","eventPosition","nearestElement","d","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","labelCount","addIfString","addedLabels","unshift","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","getDecimalForPixel","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","stepSize","computeTickLimit","getTickLimit","numericGeneratorOptions","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","m","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","logarithmic","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","scaledDistance","pointLabel","distanceFromCenter","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","formatter","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","normalize","interpolate","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"mappings":"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","file":"js/chunk-2d0f00ac.353d1db0.js","sourcesContent":["/*!\n * Chart.js v3.7.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as getRelativePosition$1, z as _isPointInArea, A as _rlookupByKey, B as getAngleFromPoint, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as _isDomSupported, L as log10, M as _factorize, N as finiteOrDefault, O as callback, Q as _addGrace, R as toDegrees, S as _measureText, U as _int16Range, V as _alignPixel, W as clipArea, X as renderText, Y as unclipArea, Z as toFont, $ as _toLeftRightCenter, a0 as _alignStartEnd, a1 as overrides, a2 as merge, a3 as _capitalize, a4 as descriptors, a5 as isFunction, a6 as _attachContext, a7 as _createResolver, a8 as _descriptors, a9 as mergeIf, aa as uid, ab as debounce, ac as retinaScale, ad as clearCanvas, ae as setsEqual, af as _elementsEqual, ag as _isClickEvent, ah as _isBetween, ai as _readValueToProps, aj as _updateBezierControlPoints, ak as _computeSegments, al as _boundSegments, am as _steppedInterpolation, an as _bezierInterpolation, ao as _pointInLine, ap as _steppedLineTo, aq as _bezierCurveTo, ar as drawPoint, as as addRoundedRectPath, at as toTRBL, au as toTRBLCorners, av as _boundSegment, aw as _normalizeAngle, ax as getRtlAdapter, ay as overrideTextDirection, az as _textX, aA as restoreTextDirection, aB as noop, aC as distanceBetweenPoints, aD as _setMinAndMaxByKey, aE as niceNum, aF as almostWhole, aG as almostEquals, aH as _decimalPlaces, aI as _longestText, aJ as _filterBetween, aK as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = _isPointInArea(center, chart.chartArea, chart._minPadding);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition);\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'x', intersect: options.intersect}, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'y', intersect: options.intersect}, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.7.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: _isPointInArea(e, this.chartArea, this._minPadding)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"sourceRoot":""}