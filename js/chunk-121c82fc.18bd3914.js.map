{"version":3,"sources":["webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/Composite.js","webpack:///./node_modules/ol/renderer/canvas/ImageLayer.js","webpack:///./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/renderer/Layer.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","CanvasLayerRenderer","_super","layer","_this","container","renderedResolution","tempTransform","pixelTransform","inversePixelTransform","context","containerReused","useContainer","target","transform","opacity","layerClassName","getLayer","getClassName","style","className","canvas","firstElementChild","HTMLCanvasElement","getContext","width","document","createElement","position","height","appendChild","left","transformOrigin","clipUnrotated","frameState","extent","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","save","beginPath","moveTo","Math","round","lineTo","clip","dispatchRenderEvent_","type","hasListener","event_1","dispatchEvent","preRender","PRERENDER","postRender","POSTRENDER","getRenderTransform","center","resolution","rotation","pixelRatio","offsetX","dx1","dy1","sx","sy","dx2","dy2","getDataAtPixel","pixel","hitTolerance","data","renderPixel","slice","layerExtent","getExtent","renderCoordinate","pixelToCoordinateTransform","x","y","newCanvas","newContext","clearRect","drawImage","getImageData","err","name","Uint8Array","MapRenderer","map","map_","dispatchRenderEvent","calculateMatrices2D","viewState","size","forEachFeatureAtCoordinate","coordinate","checkWrapped","callback","thisArg","layerFilter","thisArg2","result","managed","feature","geometry","projection","translatedCoordinate","offsets","canWrapX","projectionExtent","worldWidth","push","layerStates","layerStatesArray","numLayers","length","matches","tmpCoord","i","j","layerState","hasRenderer","layerRenderer","getRenderer","source","getSource","coordinates","getWrapX","callback_1","bind","order","forEach","m","distanceSq","sort","a","some","forEachLayerAtPixel","hasFeatureAtCoordinate","hasFeature","undefined","getMap","renderFrame","scheduleExpireIconCache","canExpireCache","postRenderFunctions","expireIconCache","Disposable","expire","Map","CompositeMapRenderer","fontChangeListenerKey_","ObjectEventType","PROPERTYCHANGE","redrawText","element_","zIndex","getViewport","insertBefore","firstChild","children_","renderedVisible_","disposeInternal","parentNode","removeChild","PRECOMPOSE","declutterLayers","previousElement","ii","layerIndex","sourceState","READY","UNDEFINED","element","render","renderDeclutter","POSTCOMPOSE","display","CanvasImageLayerRenderer","imageLayer","image_","getImage","prepareFrame","viewResolution","imageSource","hints","viewHints","renderedExtent","ANIMATING","INTERACTING","sourceProjection","getProjection","image","loadImage","imageExtent","imageResolution","getResolution","imagePixelRatio","getPixelRatio","viewCenter","scale","size_1","sqrt","canvasTransform","clipped","img","dw","dh","getContextOptions","dx","dy","previousAlpha","globalAlpha","restore","IMAGE_REPLAYS","POLYGON","CIRCLE","LINE_STRING","IMAGE","TEXT","VECTOR_REPLAYS","DEFAULT","CanvasVectorTileLayerRenderer","boundHandleStyleImageChange_","handleStyleImageChange_","dirty_","renderedLayerRevision_","renderedPixelToCoordinateTransform_","renderedRotation_","renderTileImageQueue_","tileListenerKeys_","tmpTransform_","prepareTile","tile","queue","tileUid","state","getState","LOADED","ERROR","updateExecutorGroup_","tileImageNeedsRender_","getTile","z","wantedResolution","listenerKey","CHANGE","hifi","getRenderMode","VECTOR","renderTileImage_","isDrawableTile","executorGroups","hasContext","getTileImage","layerRevision","getRevision","renderedTiles","revision","renderOrder","getRenderOrder","builderState","getReplayState","dirty","renderedRevision","renderedRenderOrder","declutter","getDeclutter","sourceTileGrid","getTileGrid","tileGrid","getTileGridForProjection","tileExtent","getTileCoordExtent","wrappedTileCoord","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","declutterExecutorGroups","_loop_1","t","tt","sourceTile","sourceTileCoord","tileCoord","sourceTileExtent","sharedExtent","builderExtent","getRenderBuffer","this_1","tmpExtent","bufferedExtent","builderGroup","declutterBuilderGroup","squaredTolerance","styles","styleFunction","getStyleFunction","renderFeature","features","getFeatures","getGeometry","executorGroupInstructions","finish","replayExtent","renderingReplayGroup","getOverlaps","declutterExecutorGroup","hitExtent","found","featureCallback","key","getId","match","splice","lastIndexOf","_loop_2","declutteredFeatures","declutterTree","all","item","value","executorGroup","Promise","resolve","reject","renderedProjection","getTileCoordForCoordAndResolution","toString","extent_1","loadingSourceTiles","corner","tilePixel","reduce","accumulator","concat","animatingOrInteracting_","tileSize","getTileSize","getZForResolution","transforms","getTileCoordCenter","handleFontsChanged","getVisible","changed","event","renderIfReadyAndVisible","alpha","getOpacity","tiles","execute","getTileRenderTransform","worldOffset","renderQueuedTileImages_","renderMode","usedTiles","replayTypes","clips","clipZs","hasExecutors","currentZ","currentClip","getClipCoords","jj","uid","Date","now","time","animate","opt_declutterBuilderGroup","loading","isArray","replayState","renderedTileResolution","renderedTileRevision","tileResolution","renderPixelRatio","max","getTilePixelSize","renderScale","setTransform","apply","pixelScale","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","newTiles_","tmpTileRange_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","EMPTY","tileSource","getPreload","setState","getInterimTile","loadedTileCallback","zoom","sourceRevision","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","tileRange","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","tmpTileRange","minX","maxX","minY","maxY","inTransition","indexOf","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","zs","keys","Number","getOpaque","reverse","currentTilePixelSize","currentResolution","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","w","h","transition","i_1","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","gutter","tileAlpha","alphaChanged","endTransition","postRenderFunction","tileSourceKey","expireCache","getKey","preload","opt_tileCallback","wantedTiles","tileQueue","minZoom","getMinZoom","tileCount","IDLE","isKeyQueued","enqueue","useTile","updateCacheSize","CanvasVectorLayerRenderer","vectorLayer","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","NaN","wrappedRenderedExtent_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","renderWorlds","opt_declutterTree","vectorSource","snapToPixel","multiWorld","endWorld","ceil","world","floor","replayGroup","isEmpty","parseFloat","startX","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadExtents","loadExtent","userTransform","userProjection","loadFeatures","userExtent","getFeaturesInExtent","replayGroupInstructions","opt_transform","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","forEachLoadedTile","imageState","addEventListener","load","getSourceState"],"mappings":"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","file":"js/chunk-121c82fc.18bd3914.js","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { containsCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target &&\n            target.style.opacity === '' &&\n            target.className === layerClassName) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context &&\n            (context.canvas.width === 0 ||\n                context.canvas.style.transform === transform)) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.left = '0';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (center, resolution, rotation, pixelRatio, width, height, offsetX) {\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / resolution;\n        var sy = -sx;\n        var dx2 = -center[0] + offsetX;\n        var dy2 = -center[1];\n        return composeTransform(this.tempTransform, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var layer = this.getLayer();\n        var layerExtent = layer.getExtent();\n        if (layerExtent) {\n            var renderCoordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n            /** get only data inside of the layer extent */\n            if (!containsCoordinate(layerExtent, renderCoordinate)) {\n                return null;\n            }\n        }\n        var data;\n        try {\n            var x = Math.round(renderPixel[0]);\n            var y = Math.round(renderPixel[1]);\n            var newCanvas = document.createElement('canvas');\n            var newContext = newCanvas.getContext('2d');\n            newCanvas.width = 1;\n            newCanvas.height = 1;\n            newContext.clearRect(0, 0, 1, 1);\n            newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n            data = newContext.getImageData(0, 0, 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport { TRUE } from '../functions.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { getWidth } from '../extent.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { inView } from '../layer/Layer.js';\nimport { wrapX } from '../coordinate.js';\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n            return callback.call(thisArg, feature, managed ? layer : null, geometry);\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = wrapX(coordinate.slice(), projection);\n        var offsets = [[0, 0]];\n        if (projection.canWrapX() && checkWrapped) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            offsets.push([-worldWidth, 0], [worldWidth, 0]);\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var matches = /** @type {Array<HitMatch<T>>} */ ([]);\n        var tmpCoord = [];\n        for (var i = 0; i < offsets.length; i++) {\n            for (var j = numLayers - 1; j >= 0; --j) {\n                var layerState = layerStates[j];\n                var layer = layerState.layer;\n                if (layer.hasRenderer() &&\n                    inView(layerState, viewState) &&\n                    layerFilter.call(thisArg2, layer)) {\n                    var layerRenderer = layer.getRenderer();\n                    var source = layer.getSource();\n                    if (layerRenderer && source) {\n                        var coordinates = source.getWrapX()\n                            ? translatedCoordinate\n                            : coordinate;\n                        var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                        tmpCoord[0] = coordinates[0] + offsets[i][0];\n                        tmpCoord[1] = coordinates[1] + offsets[i][1];\n                        result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, matches);\n                    }\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        if (matches.length === 0) {\n            return undefined;\n        }\n        var order = 1 / matches.length;\n        matches.forEach(function (m, i) { return (m.distanceSq += i * order); });\n        matches.sort(function (a, b) { return a.distanceSq - b.distanceSq; });\n        matches.some(function (m) {\n            return (result = m.callback(m.feature, m.layer, m.geometry));\n        });\n        return result;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @abstract\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { checkedFonts } from '../render/canvas.js';\nimport { inView } from '../layer/Layer.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @type {import(\"../events.js\").EventsKey}\n         */\n        _this.fontChangeListenerKey_ = listen(checkedFonts, ObjectEventType.PROPERTYCHANGE, map.redrawText.bind(map));\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    CompositeMapRenderer.prototype.disposeInternal = function () {\n        unlistenByKey(this.fontChangeListenerKey_);\n        this.element_.parentNode.removeChild(this.element_);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n            return a.zIndex - b.zIndex;\n        });\n        var viewState = frameState.viewState;\n        this.children_.length = 0;\n        /**\n         * @type {Array<import(\"../layer/BaseVector.js\").default>}\n         */\n        var declutterLayers = [];\n        var previousElement = null;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            frameState.layerIndex = i;\n            if (!inView(layerState, viewState) ||\n                (layerState.sourceState != SourceState.READY &&\n                    layerState.sourceState != SourceState.UNDEFINED)) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState, previousElement);\n            if (!element) {\n                continue;\n            }\n            if (element !== previousElement) {\n                this.children_.push(element);\n                previousElement = element;\n            }\n            if ('getDeclutter' in layer) {\n                declutterLayers.push(\n                /** @type {import(\"../layer/BaseVector.js\").default} */ (layer));\n            }\n        }\n        for (var i = declutterLayers.length - 1; i >= 0; --i) {\n            declutterLayers[i].renderDeclutter(frameState);\n        }\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() &&\n                inView(layerState, viewState) &&\n                layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ViewHint from '../../ViewHint.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../../reproj/common.js';\nimport { assign } from '../../obj.js';\nimport { compose as composeTransform, makeInverse } from '../../transform.js';\nimport { containsExtent, intersects as intersectsExtent } from '../../extent.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getIntersection, isEmpty } from '../../extent.js';\nimport { toString as toTransformString } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImageLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n     */\n    function CanvasImageLayerRenderer(imageLayer) {\n        var _this = _super.call(this, imageLayer) || this;\n        /**\n         * @protected\n         * @type {?import(\"../../ImageBase.js\").default}\n         */\n        _this.image_ = null;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    CanvasImageLayerRenderer.prototype.getImage = function () {\n        return !this.image_ ? null : this.image_.getImage();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasImageLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var imageSource = this.getLayer().getSource();\n        var hints = frameState.viewHints;\n        var renderedExtent = frameState.extent;\n        if (layerState.extent !== undefined) {\n            renderedExtent = getIntersection(renderedExtent, fromUserExtent(layerState.extent, viewState.projection));\n        }\n        if (!hints[ViewHint.ANIMATING] &&\n            !hints[ViewHint.INTERACTING] &&\n            !isEmpty(renderedExtent)) {\n            if (imageSource) {\n                var projection = viewState.projection;\n                if (!ENABLE_RASTER_REPROJECTION) {\n                    var sourceProjection = imageSource.getProjection();\n                    if (sourceProjection) {\n                        projection = sourceProjection;\n                    }\n                }\n                var image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n                if (image && this.loadImage(image)) {\n                    this.image_ = image;\n                }\n            }\n            else {\n                this.image_ = null;\n            }\n        }\n        return !!this.image_;\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasImageLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var image = this.image_;\n        var imageExtent = image.getExtent();\n        var imageResolution = image.getResolution();\n        var imagePixelRatio = image.getPixelRatio();\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewCenter = viewState.center;\n        var viewResolution = viewState.resolution;\n        var size = frameState.size;\n        var scale = (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n        var width = Math.round(size[0] * pixelRatio);\n        var height = Math.round(size[1] * pixelRatio);\n        var rotation = viewState.rotation;\n        if (rotation) {\n            var size_1 = Math.round(Math.sqrt(width * width + height * height));\n            width = size_1;\n            height = size_1;\n        }\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / pixelRatio, 1 / pixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = toTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        var render = true;\n        if (layerState.extent) {\n            var layerExtent = fromUserExtent(layerState.extent, viewState.projection);\n            render = intersectsExtent(layerExtent, frameState.extent);\n            clipped = render && !containsExtent(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(context, frameState, layerExtent);\n            }\n        }\n        var img = image.getImage();\n        var transform = composeTransform(this.tempTransform, width / 2, height / 2, scale, scale, 0, (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution, (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution);\n        this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n        var dw = img.width * transform[0];\n        var dh = img.height * transform[3];\n        assign(context, this.getLayer().getSource().getContextOptions());\n        this.preRender(context, frameState);\n        if (render && dw >= 0.5 && dh >= 0.5) {\n            var dx = transform[4];\n            var dy = transform[5];\n            var opacity = layerState.opacity;\n            var previousAlpha = void 0;\n            if (opacity !== 1) {\n                previousAlpha = context.globalAlpha;\n                context.globalAlpha = opacity;\n            }\n            context.drawImage(img, 0, 0, +img.width, +img.height, Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n            if (opacity !== 1) {\n                context.globalAlpha = previousAlpha;\n            }\n        }\n        this.postRender(context, frameState);\n        if (clipped) {\n            context.restore();\n        }\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    return CanvasImageLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasImageLayerRenderer;\n//# sourceMappingURL=ImageLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport EventType from '../../events/EventType.js';\nimport ReplayType from '../../render/canvas/BuilderType.js';\nimport TileState from '../../TileState.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport ViewHint from '../../ViewHint.js';\nimport { HIT_DETECT_RESOLUTION, createHitDetectionImageData, hitDetect, } from '../../render/canvas/hitdetect.js';\nimport { apply as applyTransform, create as createTransform, multiply, reset as resetTransform, scale, scale as scaleTransform, translate as translateTransform, } from '../../transform.js';\nimport { boundingExtent, buffer, containsExtent, equals, getIntersection, getTopLeft, intersects, } from '../../extent.js';\nimport { clear } from '../../obj.js';\nimport { getSquaredTolerance as getSquaredRenderTolerance, renderFeature, } from '../vector.js';\nimport { getUid } from '../../util.js';\nimport { listen, unlistenByKey } from '../../events.js';\nimport { toSize } from '../../size.js';\nimport { wrapX } from '../../coordinate.js';\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas/BuilderType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n    'image': [\n        ReplayType.POLYGON,\n        ReplayType.CIRCLE,\n        ReplayType.LINE_STRING,\n        ReplayType.IMAGE,\n        ReplayType.TEXT,\n    ],\n    'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING],\n    'vector': [],\n};\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas/BuilderType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n    'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n    'vector': [\n        ReplayType.POLYGON,\n        ReplayType.CIRCLE,\n        ReplayType.LINE_STRING,\n        ReplayType.IMAGE,\n        ReplayType.TEXT,\n        ReplayType.DEFAULT,\n    ],\n};\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n     */\n    function CanvasVectorTileLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /** @private */\n        _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedLayerRevision_;\n        /**\n         * @private\n         * @type {import(\"../../transform\").Transform}\n         */\n        _this.renderedPixelToCoordinateTransform_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRotation_;\n        /**\n         * @private\n         * @type {!Object<string, import(\"../../VectorRenderTile.js\").default>}\n         */\n        _this.renderTileImageQueue_ = {};\n        /**\n         * @type {Object<string, import(\"../../events.js\").EventsKey>}\n         */\n        _this.tileListenerKeys_ = {};\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection\").default} projection Projection.\n     * @param {boolean} queue Queue tile for rendering.\n     * @return {boolean|undefined} Tile needs to be rendered.\n     */\n    CanvasVectorTileLayerRenderer.prototype.prepareTile = function (tile, pixelRatio, projection, queue) {\n        var render;\n        var tileUid = getUid(tile);\n        var state = tile.getState();\n        if ((state === TileState.LOADED || state === TileState.ERROR) &&\n            tileUid in this.tileListenerKeys_) {\n            unlistenByKey(this.tileListenerKeys_[tileUid]);\n            delete this.tileListenerKeys_[tileUid];\n        }\n        if (state === TileState.LOADED || state === TileState.ERROR) {\n            this.updateExecutorGroup_(tile, pixelRatio, projection);\n            if (this.tileImageNeedsRender_(tile)) {\n                render = true;\n                if (queue) {\n                    this.renderTileImageQueue_[tileUid] = tile;\n                }\n            }\n        }\n        return render;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasVectorTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var resolution = viewState.resolution;\n        var projection = viewState.projection;\n        var layer = this.getLayer();\n        var tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() < TileState.LOADED) {\n            tile.wantedResolution = resolution;\n            var tileUid = getUid(tile);\n            if (!(tileUid in this.tileListenerKeys_)) {\n                var listenerKey = listen(tile, EventType.CHANGE, this.prepareTile.bind(this, tile, pixelRatio, projection, true));\n                this.tileListenerKeys_[tileUid] = listenerKey;\n            }\n        }\n        else {\n            var viewHints = frameState.viewHints;\n            var hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n            if (hifi || !tile.wantedResolution) {\n                tile.wantedResolution = resolution;\n            }\n            var render = this.prepareTile(tile, pixelRatio, projection, false);\n            if (render && layer.getRenderMode() !== VectorTileRenderType.VECTOR) {\n                this.renderTileImage_(tile, frameState);\n            }\n        }\n        return _super.prototype.getTile.call(this, z, x, y, frameState);\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasVectorTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var layer = this.getLayer();\n        return (_super.prototype.isDrawableTile.call(this, tile) &&\n            (layer.getRenderMode() === VectorTileRenderType.VECTOR\n                ? getUid(layer) in tile.executorGroups\n                : tile.hasContext(layer)));\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage(this.getLayer());\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasVectorTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var layerRevision = this.getLayer().getRevision();\n        if (this.renderedLayerRevision_ != layerRevision) {\n            this.renderedTiles.length = 0;\n        }\n        this.renderedLayerRevision_ = layerRevision;\n        return _super.prototype.prepareFrame.call(this, frameState);\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.updateExecutorGroup_ = function (tile, pixelRatio, projection) {\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var revision = layer.getRevision();\n        var renderOrder = layer.getRenderOrder() || null;\n        var resolution = tile.wantedResolution;\n        var builderState = tile.getReplayState(layer);\n        if (!builderState.dirty &&\n            builderState.renderedResolution === resolution &&\n            builderState.renderedRevision == revision &&\n            builderState.renderedRenderOrder == renderOrder) {\n            return;\n        }\n        var source = layer.getSource();\n        var declutter = layer.getDeclutter();\n        var sourceTileGrid = source.getTileGrid();\n        var tileGrid = source.getTileGridForProjection(projection);\n        var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n        var sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n        var layerUid = getUid(layer);\n        delete tile.hitDetectionImageData[layerUid];\n        tile.executorGroups[layerUid] = [];\n        if (declutter) {\n            tile.declutterExecutorGroups[layerUid] = [];\n        }\n        var _loop_1 = function (t, tt) {\n            var sourceTile = sourceTiles[t];\n            if (sourceTile.getState() != TileState.LOADED) {\n                return \"continue\";\n            }\n            var sourceTileCoord = sourceTile.tileCoord;\n            var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n            var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n            var builderExtent = buffer(sharedExtent, layer.getRenderBuffer() * resolution, this_1.tmpExtent);\n            var bufferedExtent = equals(sourceTileExtent, sharedExtent)\n                ? null\n                : builderExtent;\n            builderState.dirty = false;\n            var builderGroup = new CanvasBuilderGroup(0, builderExtent, resolution, pixelRatio);\n            var declutterBuilderGroup = declutter\n                ? new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio)\n                : undefined;\n            var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @this {CanvasVectorTileLayerRenderer}\n             */\n            var render = function (feature) {\n                var styles;\n                var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n                if (styleFunction) {\n                    styles = styleFunction(feature, resolution);\n                }\n                if (styles) {\n                    var dirty = this.renderFeature(feature, squaredTolerance, styles, builderGroup, declutterBuilderGroup);\n                    this.dirty_ = this.dirty_ || dirty;\n                    builderState.dirty = builderState.dirty || dirty;\n                }\n            };\n            var features = sourceTile.getFeatures();\n            if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n                features.sort(renderOrder);\n            }\n            for (var i = 0, ii = features.length; i < ii; ++i) {\n                var feature = features[i];\n                if (!bufferedExtent ||\n                    intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n                    render.call(this_1, feature);\n                }\n            }\n            var executorGroupInstructions = builderGroup.finish();\n            // no need to clip when the render tile is covered by a single source tile\n            var replayExtent = layer.getRenderMode() !== VectorTileRenderType.VECTOR &&\n                declutter &&\n                sourceTiles.length === 1\n                ? null\n                : sharedExtent;\n            var renderingReplayGroup = new CanvasExecutorGroup(replayExtent, resolution, pixelRatio, source.getOverlaps(), executorGroupInstructions, layer.getRenderBuffer());\n            tile.executorGroups[layerUid].push(renderingReplayGroup);\n            if (declutterBuilderGroup) {\n                var declutterExecutorGroup = new CanvasExecutorGroup(null, resolution, pixelRatio, source.getOverlaps(), declutterBuilderGroup.finish(), layer.getRenderBuffer());\n                tile.declutterExecutorGroups[layerUid].push(declutterExecutorGroup);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0, tt = sourceTiles.length; t < tt; ++t) {\n            _loop_1(t, tt);\n        }\n        builderState.renderedRevision = revision;\n        builderState.renderedRenderOrder = renderOrder;\n        builderState.renderedResolution = resolution;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        var resolution = frameState.viewState.resolution;\n        var rotation = frameState.viewState.rotation;\n        hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n        var layer = this.getLayer();\n        var source = layer.getSource();\n        var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n        var hitExtent = boundingExtent([coordinate]);\n        buffer(hitExtent, resolution * hitTolerance, hitExtent);\n        /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n        var features = {};\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @param {number} distanceSq The squared distance to the click position.\n         * @return {T|undefined} Callback result.\n         */\n        var featureCallback = function (feature, geometry, distanceSq) {\n            var key = feature.getId();\n            if (key === undefined) {\n                key = getUid(feature);\n            }\n            var match = features[key];\n            if (!match) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    return callback(feature, layer, geometry);\n                }\n                matches.push((features[key] = {\n                    feature: feature,\n                    layer: layer,\n                    geometry: geometry,\n                    distanceSq: distanceSq,\n                    callback: callback,\n                }));\n            }\n            else if (match !== true && distanceSq < match.distanceSq) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    matches.splice(matches.lastIndexOf(match), 1);\n                    return callback(feature, layer, geometry);\n                }\n                match.geometry = geometry;\n                match.distanceSq = distanceSq;\n            }\n            return undefined;\n        };\n        var renderedTiles = \n        /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (this.renderedTiles);\n        var found;\n        var _loop_2 = function (i, ii) {\n            var tile = renderedTiles[i];\n            var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n            if (!intersects(tileExtent, hitExtent)) {\n                return \"continue\";\n            }\n            var layerUid = getUid(layer);\n            var executorGroups = [tile.executorGroups[layerUid]];\n            var declutterExecutorGroups = tile.declutterExecutorGroups[layerUid];\n            if (declutterExecutorGroups) {\n                executorGroups.push(declutterExecutorGroups);\n            }\n            executorGroups.some(function (executorGroups) {\n                var declutteredFeatures = executorGroups === declutterExecutorGroups\n                    ? frameState.declutterTree.all().map(function (item) { return item.value; })\n                    : null;\n                for (var t = 0, tt = executorGroups.length; t < tt; ++t) {\n                    var executorGroup = executorGroups[t];\n                    found = executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, featureCallback, declutteredFeatures);\n                    if (found) {\n                        return true;\n                    }\n                }\n            });\n        };\n        for (var i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n            _loop_2(i, ii);\n        }\n        return found;\n    };\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n     */\n    CanvasVectorTileLayerRenderer.prototype.getFeatures = function (pixel) {\n        return new Promise(function (resolve, reject) {\n            var layer = \n            /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n            var layerUid = getUid(layer);\n            var source = layer.getSource();\n            var projection = this.renderedProjection;\n            var projectionExtent = projection.getExtent();\n            var resolution = this.renderedResolution;\n            var tileGrid = source.getTileGridForProjection(projection);\n            var coordinate = applyTransform(this.renderedPixelToCoordinateTransform_, pixel.slice());\n            var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n            var tile;\n            for (var i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n                if (tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()) {\n                    tile = this.renderedTiles[i];\n                    if (tile.getState() === TileState.LOADED) {\n                        var extent_1 = tileGrid.getTileCoordExtent(tile.tileCoord);\n                        if (source.getWrapX() &&\n                            projection.canWrapX() &&\n                            !containsExtent(projectionExtent, extent_1)) {\n                            wrapX(coordinate, projection);\n                        }\n                        break;\n                    }\n                    tile = undefined;\n                }\n            }\n            if (!tile || tile.loadingSourceTiles > 0) {\n                resolve([]);\n                return;\n            }\n            var extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n            var corner = getTopLeft(extent);\n            var tilePixel = [\n                (coordinate[0] - corner[0]) / resolution,\n                (corner[1] - coordinate[1]) / resolution,\n            ];\n            var features = tile\n                .getSourceTiles()\n                .reduce(function (accumulator, sourceTile) {\n                return accumulator.concat(sourceTile.getFeatures());\n            }, []);\n            var hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n            if (!hitDetectionImageData && !this.animatingOrInteracting_) {\n                var tileSize = toSize(tileGrid.getTileSize(tileGrid.getZForResolution(resolution)));\n                var rotation = this.renderedRotation_;\n                var transforms = [\n                    this.getRenderTransform(tileGrid.getTileCoordCenter(tile.wrappedTileCoord), resolution, 0, HIT_DETECT_RESOLUTION, tileSize[0] * HIT_DETECT_RESOLUTION, tileSize[1] * HIT_DETECT_RESOLUTION, 0),\n                ];\n                hitDetectionImageData = createHitDetectionImageData(tileSize, transforms, features, layer.getStyleFunction(), tileGrid.getTileCoordExtent(tile.wrappedTileCoord), tile.getReplayState(layer).renderedResolution, rotation);\n                tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n            }\n            resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n        }.bind(this));\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     */\n    CanvasVectorTileLayerRenderer.prototype.handleFontsChanged = function () {\n        clear(this.renderTileImageQueue_);\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * Render declutter items for this layer\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderDeclutter = function (frameState) {\n        var context = this.context;\n        var alpha = context.globalAlpha;\n        context.globalAlpha = this.getLayer().getOpacity();\n        var viewHints = frameState.viewHints;\n        var hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var tiles = \n        /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (this.renderedTiles);\n        for (var i = 0, ii = tiles.length; i < ii; ++i) {\n            var tile = tiles[i];\n            var declutterExecutorGroups = tile.declutterExecutorGroups[getUid(this.getLayer())];\n            if (declutterExecutorGroups) {\n                for (var j = declutterExecutorGroups.length - 1; j >= 0; --j) {\n                    declutterExecutorGroups[j].execute(this.context, 1, this.getTileRenderTransform(tile, frameState), frameState.viewState.rotation, hifi, undefined, frameState.declutterTree);\n                }\n            }\n        }\n        context.globalAlpha = alpha;\n    };\n    CanvasVectorTileLayerRenderer.prototype.getTileRenderTransform = function (tile, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var center = viewState.center;\n        var resolution = viewState.resolution;\n        var rotation = viewState.rotation;\n        var size = frameState.size;\n        var width = Math.round(size[0] * pixelRatio);\n        var height = Math.round(size[1] * pixelRatio);\n        var source = this.getLayer().getSource();\n        var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n        var tileCoord = tile.tileCoord;\n        var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n        var transform = multiply(scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio), this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, worldOffset));\n        return transform;\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var viewHints = frameState.viewHints;\n        var hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        this.renderQueuedTileImages_(hifi, frameState);\n        _super.prototype.renderFrame.call(this, frameState, target);\n        this.renderedPixelToCoordinateTransform_ =\n            frameState.pixelToCoordinateTransform.slice();\n        this.renderedRotation_ = frameState.viewState.rotation;\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var renderMode = layer.getRenderMode();\n        var source = layer.getSource();\n        // Unqueue tiles from the image queue when we don't need any more\n        var usedTiles = frameState.usedTiles[getUid(source)];\n        for (var tileUid in this.renderTileImageQueue_) {\n            if (!usedTiles || !(tileUid in usedTiles)) {\n                delete this.renderTileImageQueue_[tileUid];\n            }\n        }\n        var context = this.context;\n        var alpha = context.globalAlpha;\n        context.globalAlpha = layer.getOpacity();\n        var replayTypes = VECTOR_REPLAYS[renderMode];\n        var viewState = frameState.viewState;\n        var rotation = viewState.rotation;\n        var tiles = this.renderedTiles;\n        var clips = [];\n        var clipZs = [];\n        for (var i = tiles.length - 1; i >= 0; --i) {\n            var tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (tiles[i]);\n            var transform = this.getTileRenderTransform(tile, frameState);\n            var executorGroups = tile.executorGroups[getUid(layer)];\n            var clipped = false;\n            for (var t = 0, tt = executorGroups.length; t < tt; ++t) {\n                var executorGroup = executorGroups[t];\n                if (!executorGroup.hasExecutors(replayTypes)) {\n                    // sourceTile has no instructions of the types we want to render\n                    continue;\n                }\n                var currentZ = tile.tileCoord[0];\n                var currentClip = void 0;\n                if (!clipped) {\n                    currentClip = executorGroup.getClipCoords(transform);\n                    if (currentClip) {\n                        context.save();\n                        // Create a clip mask for regions in this low resolution tile that are\n                        // already filled by a higher resolution tile\n                        for (var j = 0, jj = clips.length; j < jj; ++j) {\n                            var clip = clips[j];\n                            if (currentZ < clipZs[j]) {\n                                context.beginPath();\n                                // counter-clockwise (outer ring) for current tile\n                                context.moveTo(currentClip[0], currentClip[1]);\n                                context.lineTo(currentClip[2], currentClip[3]);\n                                context.lineTo(currentClip[4], currentClip[5]);\n                                context.lineTo(currentClip[6], currentClip[7]);\n                                // clockwise (inner ring) for higher resolution tile\n                                context.moveTo(clip[6], clip[7]);\n                                context.lineTo(clip[4], clip[5]);\n                                context.lineTo(clip[2], clip[3]);\n                                context.lineTo(clip[0], clip[1]);\n                                context.clip();\n                            }\n                        }\n                    }\n                }\n                executorGroup.execute(context, 1, transform, rotation, hifi, replayTypes);\n                if (!clipped && currentClip) {\n                    context.restore();\n                    clips.push(currentClip);\n                    clipZs.push(currentZ);\n                    clipped = true;\n                }\n            }\n        }\n        context.globalAlpha = alpha;\n        return this.container;\n    };\n    /**\n     * @param {boolean} hifi We have time to render a high fidelity map image.\n     * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderQueuedTileImages_ = function (hifi, frameState) {\n        // When we don't have time to render hifi, only render tiles until we have used up\n        // half of the frame budget of 16 ms\n        for (var uid in this.renderTileImageQueue_) {\n            if (!hifi && Date.now() - frameState.time > 8) {\n                frameState.animate = true;\n                break;\n            }\n            var tile = this.renderTileImageQueue_[uid];\n            delete this.renderTileImageQueue_[uid];\n            this.renderTileImage_(tile, frameState);\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder group for decluttering.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, opt_declutterBuilderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading =\n                    renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, undefined, opt_declutterBuilderGroup) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, undefined, opt_declutterBuilderGroup);\n        }\n        return loading;\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @return {boolean} A new tile image was rendered.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.tileImageNeedsRender_ = function (tile) {\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        if (layer.getRenderMode() === VectorTileRenderType.VECTOR) {\n            return false;\n        }\n        var replayState = tile.getReplayState(layer);\n        var revision = layer.getRevision();\n        var resolution = tile.wantedResolution;\n        return (replayState.renderedTileResolution !== resolution ||\n            replayState.renderedTileRevision !== revision);\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function (tile, frameState) {\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var replayState = tile.getReplayState(layer);\n        var revision = layer.getRevision();\n        var executorGroups = tile.executorGroups[getUid(layer)];\n        replayState.renderedTileRevision = revision;\n        var tileCoord = tile.wrappedTileCoord;\n        var z = tileCoord[0];\n        var source = layer.getSource();\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var tileGrid = source.getTileGridForProjection(projection);\n        var tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n        var renderPixelRatio = (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n        var resolution = tileGrid.getResolution(z);\n        var context = tile.getContext(layer);\n        // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n        pixelRatio = Math.round(Math.max(pixelRatio, renderPixelRatio / pixelRatio));\n        var size = source.getTilePixelSize(z, pixelRatio, projection);\n        context.canvas.width = size[0];\n        context.canvas.height = size[1];\n        var renderScale = pixelRatio / renderPixelRatio;\n        if (renderScale !== 1) {\n            var canvasTransform = resetTransform(this.tmpTransform_);\n            scaleTransform(canvasTransform, renderScale, renderScale);\n            context.setTransform.apply(context, canvasTransform);\n        }\n        var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n        var pixelScale = renderPixelRatio / resolution;\n        var transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        for (var i = 0, ii = executorGroups.length; i < ii; ++i) {\n            var executorGroup = executorGroups[i];\n            executorGroup.execute(context, renderScale, transform, 0, true, IMAGE_REPLAYS[layer.getRenderMode()]);\n        }\n        replayState.renderedTileResolution = tile.wantedResolution;\n    };\n    return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\nexport default CanvasVectorTileLayerRenderer;\n//# sourceMappingURL=VectorTileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, } from '../../transform.js';\nimport { assign } from '../../obj.js';\nimport { createEmpty, equals, getIntersection, getTopLeft, } from '../../extent.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { toString as toTransformString } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {?import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedPixelRatio;\n        /**\n         * @protected\n         * @type {import(\"../../proj/Projection.js\").default}\n         */\n        _this.renderedProjection = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = this.getLayer();\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return (tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            (tileState == TileState.ERROR && !useInterimTilesOnError));\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        return !!this.getLayer().getSource();\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        var layerExtent = layerState.extent && fromUserExtent(layerState.extent, projection);\n        if (layerExtent) {\n            extent = getIntersection(extent, fromUserExtent(layerState.extent, projection));\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = size;\n            height = size;\n        }\n        var dx = (tileResolution * width) / 2 / tilePixelRatio;\n        var dy = (tileResolution * height) / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy,\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ &&\n                            (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        var canvasTransform = toTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerExtent) {\n            this.clipUnrotated(context, frameState, layerExtent);\n        }\n        assign(context, tileSource.getContextOptions());\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var clips, clipZs, currentClip;\n        if (layerState.opacity === 1 &&\n            (!this.containerReused ||\n                tileSource.getOpaque(frameState.viewState.projection))) {\n            zs = zs.reverse();\n        }\n        else {\n            clips = [];\n            clipZs = [];\n        }\n        for (var i = zs.length - 1; i >= 0; --i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform, [\n                (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n                    tileResolution,\n                (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n                    tileResolution,\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[tileCoordKey]);\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var xIndex = originTileCoord[1] - tileCoord[1];\n                var nextX = Math.round(origin_1[0] - (xIndex - 1) * dx_1);\n                var yIndex = originTileCoord[2] - tileCoord[2];\n                var nextY = Math.round(origin_1[1] - (yIndex - 1) * dy_1);\n                var x = Math.round(origin_1[0] - xIndex * dx_1);\n                var y = Math.round(origin_1[1] - yIndex * dy_1);\n                var w = nextX - x;\n                var h = nextY - y;\n                var transition = z === currentZ;\n                var inTransition = transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n                if (!inTransition) {\n                    if (clips) {\n                        // Clip mask for regions in this tile that already filled by a higher z tile\n                        context.save();\n                        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n                        for (var i_1 = 0, ii = clips.length; i_1 < ii; ++i_1) {\n                            if (z !== currentZ && currentZ < clipZs[i_1]) {\n                                var clip = clips[i_1];\n                                context.beginPath();\n                                // counter-clockwise (outer ring) for current tile\n                                context.moveTo(currentClip[0], currentClip[1]);\n                                context.lineTo(currentClip[2], currentClip[3]);\n                                context.lineTo(currentClip[4], currentClip[5]);\n                                context.lineTo(currentClip[6], currentClip[7]);\n                                // clockwise (inner ring) for higher z tile\n                                context.moveTo(clip[6], clip[7]);\n                                context.lineTo(clip[4], clip[5]);\n                                context.lineTo(clip[2], clip[3]);\n                                context.lineTo(clip[0], clip[1]);\n                                context.clip();\n                            }\n                        }\n                        clips.push(currentClip);\n                        clipZs.push(currentZ);\n                    }\n                    else {\n                        context.clearRect(x, y, w, h);\n                    }\n                }\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition, layerState.opacity);\n                if (clips && !inTransition) {\n                    context.restore();\n                    this.renderedTiles.unshift(tile);\n                }\n                else {\n                    this.renderedTiles.push(tile);\n                }\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged =\n            !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.renderedPixelRatio = pixelRatio;\n        this.renderedProjection = projection;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    /**\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     * @param {number} opacity Opacity.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition, opacity) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var alpha = opacity * tileAlpha;\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (tileAlpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Image\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tileCount = 0;\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        ++tileCount;\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([\n                                    tile,\n                                    tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord),\n                                    tileResolution,\n                                ]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n        tileSource.updateCacheSize(tileCount, projection);\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport { HIT_DETECT_RESOLUTION, createHitDetectionImageData, hitDetect, } from '../../render/canvas/hitdetect.js';\nimport { apply, makeInverse, makeScale, toString as transformToString, } from '../../transform.js';\nimport { buffer, containsExtent, createEmpty, getWidth, intersects as intersectsExtent, wrapX as wrapExtentX, } from '../../extent.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature, } from '../vector.js';\nimport { equals } from '../../array.js';\nimport { fromUserExtent, getTransformFromProjections, getUserProjection, toUserExtent, } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { wrapX as wrapCoordinateX } from '../../coordinate.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /** @private */\n        _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n        /**\n         * @type {boolean}\n         */\n        _this.animatingOrInteracting_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @type {ImageData}\n         */\n        _this.hitDetectionImageData_ = null;\n        /**\n         * @type {Array<import(\"../../Feature.js\").default>}\n         */\n        _this.renderedFeatures_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.wrappedRenderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRotation_;\n        /**\n         * @private\n         * @type {import(\"../../coordinate\").Coordinate}\n         */\n        _this.renderedCenter_ = null;\n        /**\n         * @private\n         * @type {import(\"../../proj/Projection\").default}\n         */\n        _this.renderedProjection_ = null;\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        /**\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        /**\n         * Clipping to be performed by `renderFrame()`\n         * @type {boolean}\n         */\n        _this.clipping = true;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasVectorLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        if (opacity < 1) {\n            target = null;\n        }\n        _super.prototype.useContainer.call(this, target, transform, opacity);\n    };\n    /**\n     * @param {ExecutorGroup} executorGroup Executor group.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     */\n    CanvasVectorLayerRenderer.prototype.renderWorlds = function (executorGroup, frameState, opt_declutterTree) {\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var center = viewState.center;\n        var resolution = viewState.resolution;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        var pixelRatio = frameState.pixelRatio;\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var context = this.context;\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        var multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n        var worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n        var endWorld = multiWorld\n            ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n            : 1;\n        var world = multiWorld\n            ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n            : 0;\n        do {\n            var transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, world * worldWidth);\n            executorGroup.execute(context, 1, transform, rotation, snapToPixel, undefined, opt_declutterTree);\n        } while (++world < endWorld);\n    };\n    /**\n     * Render declutter items for this layer\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CanvasVectorLayerRenderer.prototype.renderDeclutter = function (frameState) {\n        if (this.declutterExecutorGroup) {\n            this.renderWorlds(this.declutterExecutorGroup, frameState, frameState.declutterTree);\n        }\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var pixelRatio = frameState.pixelRatio;\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = transformToString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        var declutterExecutorGroup = this.declutterExecutorGroup;\n        if ((!replayGroup || replayGroup.isEmpty()) &&\n            (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())) {\n            if (!this.containerReused && canvas.width > 0) {\n                canvas.width = 0;\n            }\n            return this.container;\n        }\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        var render = true;\n        if (layerState.extent && this.clipping) {\n            var layerExtent = fromUserExtent(layerState.extent, projection);\n            render = intersectsExtent(layerExtent, frameState.extent);\n            clipped = render && !containsExtent(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(context, frameState, layerExtent);\n            }\n        }\n        if (render) {\n            this.renderWorlds(replayGroup, frameState);\n        }\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = layerState.opacity;\n        var container = this.container;\n        if (opacity !== parseFloat(container.style.opacity)) {\n            container.style.opacity = opacity === 1 ? '' : String(opacity);\n        }\n        if (this.renderedRotation_ !== viewState.rotation) {\n            this.renderedRotation_ = viewState.rotation;\n            this.hitDetectionImageData_ = null;\n        }\n        return this.container;\n    };\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n     */\n    CanvasVectorLayerRenderer.prototype.getFeatures = function (pixel) {\n        return new Promise(\n        /**\n         * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (resolve) {\n            if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n                var size = [this.context.canvas.width, this.context.canvas.height];\n                apply(this.pixelTransform, size);\n                var center = this.renderedCenter_;\n                var resolution = this.renderedResolution_;\n                var rotation = this.renderedRotation_;\n                var projection = this.renderedProjection_;\n                var extent = this.wrappedRenderedExtent_;\n                var layer = this.getLayer();\n                var transforms = [];\n                var width = size[0] * HIT_DETECT_RESOLUTION;\n                var height = size[1] * HIT_DETECT_RESOLUTION;\n                transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, 0).slice());\n                var source = layer.getSource();\n                var projectionExtent = projection.getExtent();\n                if (source.getWrapX() &&\n                    projection.canWrapX() &&\n                    !containsExtent(projectionExtent, extent)) {\n                    var startX = extent[0];\n                    var worldWidth = getWidth(projectionExtent);\n                    var world = 0;\n                    var offsetX = void 0;\n                    while (startX < projectionExtent[0]) {\n                        --world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, offsetX).slice());\n                        startX += worldWidth;\n                    }\n                    world = 0;\n                    startX = extent[2];\n                    while (startX > projectionExtent[2]) {\n                        ++world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, offsetX).slice());\n                        startX -= worldWidth;\n                    }\n                }\n                this.hitDetectionImageData_ = createHitDetectionImageData(size, transforms, this.renderedFeatures_, layer.getStyleFunction(), extent, resolution, rotation);\n            }\n            resolve(hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_));\n        }.bind(this));\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        var _this = this;\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        var resolution = frameState.viewState.resolution;\n        var rotation = frameState.viewState.rotation;\n        var layer = this.getLayer();\n        /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n        var features = {};\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @param {number} distanceSq The squared distance to the click position\n         * @return {T|undefined} Callback result.\n         */\n        var featureCallback = function (feature, geometry, distanceSq) {\n            var key = getUid(feature);\n            var match = features[key];\n            if (!match) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    return callback(feature, layer, geometry);\n                }\n                matches.push((features[key] = {\n                    feature: feature,\n                    layer: layer,\n                    geometry: geometry,\n                    distanceSq: distanceSq,\n                    callback: callback,\n                }));\n            }\n            else if (match !== true && distanceSq < match.distanceSq) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    matches.splice(matches.lastIndexOf(match), 1);\n                    return callback(feature, layer, geometry);\n                }\n                match.geometry = geometry;\n                match.distanceSq = distanceSq;\n            }\n            return undefined;\n        };\n        var result;\n        var executorGroups = [this.replayGroup_];\n        if (this.declutterExecutorGroup) {\n            executorGroups.push(this.declutterExecutorGroup);\n        }\n        executorGroups.some(function (executorGroup) {\n            return (result = executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, featureCallback, executorGroup === _this.declutterExecutorGroup\n                ? frameState.declutterTree.all().map(function (item) { return item.value; })\n                : null));\n        });\n        return result;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var vectorLayer = this.getLayer();\n        var vectorSource = vectorLayer.getSource();\n        if (!vectorSource) {\n            return false;\n        }\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if ((!this.dirty_ && !updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            this.animatingOrInteracting_ = true;\n            return true;\n        }\n        this.animatingOrInteracting_ = false;\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var center = viewState.center.slice();\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var renderedExtent = extent.slice();\n        var loadExtents = [extent.slice()];\n        var projectionExtent = projection.getExtent();\n        if (vectorSource.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n            wrapCoordinateX(center, projection);\n            var loadExtent = wrapExtentX(loadExtents[0], projection);\n            // If the extent crosses the date line, we load data for both edges of the worlds\n            if (loadExtent[0] < projectionExtent[0] &&\n                loadExtent[2] < projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] + worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] + worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n            else if (loadExtent[0] > projectionExtent[0] &&\n                loadExtent[2] > projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] - worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] - worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.wrappedRenderedExtent_, extent)) {\n            if (!equals(this.renderedExtent_, renderedExtent)) {\n                this.hitDetectionImageData_ = null;\n                this.renderedExtent_ = renderedExtent;\n            }\n            this.renderedCenter_ = center;\n            this.replayGroupChanged = false;\n            return true;\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        var declutterBuilderGroup;\n        if (this.getLayer().getDeclutter()) {\n            declutterBuilderGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        }\n        var userProjection = getUserProjection();\n        var userTransform;\n        if (userProjection) {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(toUserExtent(loadExtents[i], projection), resolution, userProjection);\n            }\n            userTransform = getTransformFromProjections(userProjection, projection);\n        }\n        else {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n            }\n        }\n        var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n        var render = \n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, userTransform, declutterBuilderGroup);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        var userExtent = toUserExtent(extent, projection);\n        /** @type {Array<import(\"../../Feature.js\").default>} */\n        var features = vectorSource.getFeaturesInExtent(userExtent);\n        if (vectorLayerRenderOrder) {\n            features.sort(vectorLayerRenderOrder);\n        }\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            render(features[i]);\n        }\n        this.renderedFeatures_ = features;\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n        if (declutterBuilderGroup) {\n            this.declutterExecutorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), declutterBuilderGroup.finish(), vectorLayer.getRenderBuffer());\n        }\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = renderedExtent;\n        this.wrappedRenderedExtent_ = extent;\n        this.renderedCenter_ = center;\n        this.renderedProjection_ = projection;\n        this.replayGroup_ = executorGroup;\n        this.hitDetectionImageData_ = null;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} squaredTolerance Squared render tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, opt_transform, opt_declutterBuilderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading =\n                    renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport { abstract } from '../util.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @protected\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        /**\n         * @type {import(\"../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        return _this;\n    }\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    LayerRenderer.prototype.getFeatures = function (pixel) {\n        return abstract();\n    };\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n        return undefined;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }.bind(this));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map"],"sourceRoot":""}