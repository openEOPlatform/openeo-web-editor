{"version":3,"sources":["webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/style/IconOrigin.js","webpack:///./node_modules/ol/style/IconImage.js","webpack:///./node_modules/ol/style/Icon.js","webpack:///./node_modules/ol/source/TileJSON.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/style/IconAnchorUnits.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/string.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/source/WMTSRequestEncoding.js","webpack:///./node_modules/ol/source/WMTS.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/source/Source.js"],"names":["POINT","LINE","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","XYZ","_super","opt_options","options","interpolate","undefined","imageSmoothing","projection","tileGrid","extent","maxResolution","maxZoom","minZoom","tileSize","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","url","urls","wrapX","transition","attributionsCollapsible","zDirection","hasArea","size","scale","ratio","opt_size","toSize","isArray","RegularShape","_this","rotateWithView","opacity","rotation","displacement","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius_","radius","radius1","radius2_","radius2","angle_","angle","stroke_","stroke","size_","renderOptions_","render","clone","getScale","style","getFill","getPoints","getRadius","getRadius2","getAngle","getStroke","getRotation","getRotateWithView","slice","getDisplacement","setOpacity","getOpacity","getAnchor","getHitDetectionImage","createHitDetectionCanvas_","getImage","pixelRatio","image","renderOptions","context","draw_","canvas","getPixelRatio","getImageSize","getImageState","LOADED","getOrigin","getSize","listenImageChange","listener","load","unlistenImageChange","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","Infinity","r1","r2","tmp","alpha","Math","PI","a","sin","sqrt","e","miterRatio","k","l","maxr","bevelAdd","aa","bb","dd","ee","innerMiterRatio","innerLength","max","createRenderOptions","strokeStyle","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","add","maxRadius","ceil","translate","createPath_","color","fillStyle","lineWidth","setLineDash","length","drawHitDetectionCanvas_","arc","startAngle","step","i","angle0","radiusC","lineTo","cos","closePath","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","key","iconImage","hasListener","get","src","getKey","set","setSize","maxCacheSize","colorString","shared","RBush","opt_maxEntries","rbush_","items_","insert","value","item","minX","minY","maxX","maxY","extents","values","items","remove","uid","update","bbox","getAll","all","map","getInExtent","search","forEach","callback","forEach_","forEachInExtent","result","isEmpty","getExtent","opt_extent","data","toJSON","concat","rbush","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","getCount","expireCache","keep","pop","containsKey","f","entry","value_","key_","newer","older","getKeys","keys","getValues","peekLast","peekLastKey","peekFirstKey","replace","VectorSourceEvent","type","opt_feature","opt_features","feature","features","VectorSource","state","READY","on","once","un","loader_","format_","format","overlaps_","overlaps","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","getArray","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","changed","featureKey","addToIndex_","setupChangeEvents_","geometry","getGeometry","dispatchEvent","ADDFEATURE","CHANGE","handleFeatureChange_","PROPERTYCHANGE","valid","id","getId","toString","addFeatures","newFeatures","geometryFeatures","length_1","push","length_2","length_3","modifyingCollection","addEventListener","evt","REMOVEFEATURE","ADD","bind","REMOVE","removeFeature","opt_fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","CLEAR","forEachFeature","forEachFeatureAtCoordinateDirect","coordinate","forEachFeatureInExtent","intersectsCoordinate","forEachFeatureIntersectingExtent","intersectsExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","x","y","closestFeature","closestPoint","NaN","minSquaredDistance","filter","previousMinSquaredDistance","closestPointXY","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","event","sid","removeFromIdIndex_","CHANGEFEATURE","hasFeature","getLength","loadFeatures","resolution","loadedExtentsRtree","extentsToLoad","_loop_1","ii","extentToLoad","alreadyLoaded","object","this_1","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","loading","refresh","removeLoadedExtent","obj","featureChangeKeys","removed","setLoader","setUrl","Style","geometry_","geometryFunction_","defaultGeometryFunction","setGeometry","image_","renderer_","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","text","zIndex_","zIndex","getRenderer","getText","getZIndex","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","setZIndex","toFunction","styleFunction","styles_1","defaultStyles","createDefaultStyle","width","createEditingStyle","styles","white","blue","POLYGON","MULTI_POLYGON","LINE_STRING","MULTI_LINE_STRING","CIRCLE","MULTI_POINT","GEOMETRY_COLLECTION","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","taintedTestContext","IconImage","imageState","hitDetectionImage_","Image","color_","unlisten_","imageState_","src_","tainted_","isTainted_","ImageState","drawImage","getImageData","dispatchChangeEvent_","EventType","handleImageError_","ERROR","unlistenImage_","handleImageLoad_","height","replaceColor_","fillRect","getSrc","IDLE","LOADING","document","createElement","ctx","getContext","globalCompositeOperation","imgData","r","g","putImageData","Icon","anchor_","anchor","normalizedAnchor_","anchorOrigin_","anchorOrigin","IconOrigin","anchorXUnits_","anchorXUnits","IconAnchorUnits","FRACTION","anchorYUnits_","anchorYUnits","crossOrigin_","img","imgSize_","imgSize","iconImage_","offset_","offset","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","removeEventListener","TileJSON","tileJSON_","tileSize_","jsonp","handleTileJSONResponse","handleTileJSONError","client","XMLHttpRequest","onXHRLoad_","onXHRError_","open","send","tileJSON","status","response","JSON","parse","responseText","err","getTileJSON","epsg4326Projection","sourceProjection","getProjection","transform","gridExtent","getAttributions","attributionExtent_1","setAttributions","frameState","setState","UNDEFINED","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","distance","bearing","lon1","dByR","lat","asin","lon","PIXELS","Fill","setColor","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","TILELOADSTART","TILELOADEND","TILELOADERROR","TileSource","opaque_","tilePixelRatio_","getTileSize","getMinZoom","tileCache","TileCache","tmpSize","tileOptions","usedTiles","getTileCacheForProjection","forEachLoadedTile","z","tileRange","tile","tileCoordKey","loaded","covered","getState","TileState","getGutterForProjection","setKey","getOpaque","getResolutions","getTile","getTileGrid","getTileGridForProjection","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","tileCoord","opt_projection","getWrapX","isGlobal","updateCacheSize","tileCount","useTile","Source","TileSourceEvent","Event","UrlTile","generateTileUrlFunction_","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","handleTileChange","tileState","TileEventType","setTileLoadFunction","setTileUrlFunction","pruneExceptNewestZ","join","TileImage","defaultTileLoadFunction","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","usedTileCache","getGutter","getInterpolate","thisProj","projKey","createTile_","urlTileCoord","tileUrl","EMPTY","cache","sourceTileGrid","targetTileGrid","wrappedTileCoord","newTile","getTileInternal","interimTile","refreshInterimChain","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","ImageStyle","opacity_","rotateWithView_","rotation_","scale_","scaleArray_","displacement_","getScaleArray","setDisplacement","setRotateWithView","setRotation","setScale","padNumber","number","opt_precision","numberString","toFixed","decimal","indexOf","CircleStyle","setRadius","KVP","REST","WMTS","requestEncoding","WMTSRequestEncoding","version_","version","dimensions_","dimensions","layer_","layer","matrixSet_","matrixSet","style_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getLayer","getMatrixSet","getRequestEncoding","getStyle","getVersion","res","updateDimensions","template","m","toLowerCase","localContext_1","getMatrixId","optionsFromCapabilities","wmtsCap","config","layers","elt","index","array","idx","tileMatrixSets","tileMatrixSet","el","supportedCRS","proj1","proj2","matrixLimits","matrixSets","matrixSetObj","code","projConfig","switchOriginXY","getAxisOrientation","substr","matrix","TileMatrix","selectedMatrixLimit","MinTileCol","MinTileRow","MaxTileCol","MatrixWidth","MaxTileRow","MatrixHeight","tileMatrixValue","Identifier","ScaleDenominator","getMetersPerUnit","origin","TopLeftCorner","tileSpanX","TileWidth","tileSpanY","TileHeight","matrixSetExtent","wgs84BoundingBox","wgs84ProjectionExtent","wgs84MatrixSetExtent","gets","constraint","element","encodings","DROP","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","n","attributions_","adaptAttributions","attributionsCollapsible_","state_","wrapX_","interpolate_","viewResolver","viewRejector","self","viewPromise_","Promise","resolve","reject","getAttributionsCollapsible","getView","attributionLike"],"mappings":"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","file":"js/chunk-7ac93669.5549f023.js","sourcesContent":["/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line',\n};\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options} [opt_options] XYZ options.\n     */\n    function XYZ(opt_options) {\n        var options = opt_options || {};\n        var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n        if (options.interpolate !== undefined) {\n            interpolate = options.interpolate;\n        }\n        var projection = options.projection !== undefined ? options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined\n            ? options.tileGrid\n            : createXYZ({\n                extent: extentFromProjection(projection),\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize,\n            });\n        return _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            interpolate: interpolate,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = size;\n            opt_size[1] = size;\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { defaultFillStyle, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../render/canvas.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: options.scale !== undefined ? options.scale : 1,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = undefined;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ =\n            options.radius !== undefined ? options.radius : options.radius1;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {RenderOptions}\n         */\n        _this.renderOptions_ = null;\n        _this.render();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var scale = this.getScale();\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        return style;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        var size = this.size_;\n        if (!size) {\n            return null;\n        }\n        var displacement = this.getDisplacement();\n        return [size[0] / 2 - displacement[0], size[1] / 2 + displacement[1]];\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @return {HTMLCanvasElement} Image element.\n     */\n    RegularShape.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionCanvas_) {\n            this.createHitDetectionCanvas_(this.renderOptions_);\n        }\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        var image = this.canvas_[pixelRatio];\n        if (!image) {\n            var renderOptions = this.renderOptions_;\n            var context = createCanvasContext2D(renderOptions.size * pixelRatio, renderOptions.size * pixelRatio);\n            this.draw_(renderOptions, context, pixelRatio);\n            image = context.canvas;\n            this.canvas_[pixelRatio] = image;\n        }\n        return image;\n    };\n    /**\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Pixel ratio.\n     */\n    RegularShape.prototype.getPixelRatio = function (pixelRatio) {\n        return pixelRatio;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @return {import(\"../size.js\").Size} Size.\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.listenImageChange = function (listener) { };\n    /**\n     * Load not yet loaded URI.\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener) { };\n    /**\n     * Calculate additional canvas size needed for the miter.\n     * @param {string} lineJoin Line join\n     * @param {number} strokeWidth Stroke width\n     * @param {number} miterLimit Miter limit\n     * @return {number} Additional canvas size needed\n     * @private\n     */\n    RegularShape.prototype.calculateLineJoinSize_ = function (lineJoin, strokeWidth, miterLimit) {\n        if (strokeWidth === 0 ||\n            this.points_ === Infinity ||\n            (lineJoin !== 'bevel' && lineJoin !== 'miter')) {\n            return strokeWidth;\n        }\n        // m  | ^\n        // i  | |\\                  .\n        // t >|  #\\\n        // e  | |\\ \\              .\n        // r      \\s\\\n        //      |  \\t\\          .                 .\n        //          \\r\\                      .   .\n        //      |    \\o\\      .          .  . . .\n        //          e \\k\\            .  .    . .\n        //      |      \\e\\  .    .  .       . .\n        //       d      \\ \\  .  .          . .\n        //      | _ _a_ _\\#  .            . .\n        //   r1          / `             . .\n        //      |                       . .\n        //       b     /               . .\n        //      |                     . .\n        //           / r2            . .\n        //      |                        .   .\n        //         /                           .   .\n        //      |α                                   .   .\n        //       /                                         .   .\n        //      ° center\n        var r1 = this.radius_;\n        var r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n        if (r1 < r2) {\n            var tmp = r1;\n            r1 = r2;\n            r2 = tmp;\n        }\n        var points = this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n        var alpha = (2 * Math.PI) / points;\n        var a = r2 * Math.sin(alpha);\n        var b = Math.sqrt(r2 * r2 - a * a);\n        var d = r1 - b;\n        var e = Math.sqrt(a * a + d * d);\n        var miterRatio = e / a;\n        if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n            return miterRatio * strokeWidth;\n        }\n        // Calculate the distnce from center to the stroke corner where\n        // it was cut short because of the miter limit.\n        //              l\n        //        ----+---- <= distance from center to here is maxr\n        //       /####|k ##\\\n        //      /#####^#####\\\n        //     /#### /+\\# s #\\\n        //    /### h/+++\\# t #\\\n        //   /### t/+++++\\# r #\\\n        //  /### a/+++++++\\# o #\\\n        // /### p/++ fill +\\# k #\\\n        ///#### /+++++^+++++\\# e #\\\n        //#####/+++++/+\\+++++\\#####\\\n        var k = strokeWidth / 2 / miterRatio;\n        var l = (strokeWidth / 2) * (d / e);\n        var maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n        var bevelAdd = maxr - r1;\n        if (this.radius2_ === undefined || lineJoin === 'bevel') {\n            return bevelAdd * 2;\n        }\n        // If outer miter is over the miter limit the inner miter may reach through the\n        // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n        var aa = r1 * Math.sin(alpha);\n        var bb = Math.sqrt(r1 * r1 - aa * aa);\n        var dd = r2 - bb;\n        var ee = Math.sqrt(aa * aa + dd * dd);\n        var innerMiterRatio = ee / aa;\n        if (innerMiterRatio <= miterLimit) {\n            var innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n            return 2 * Math.max(bevelAdd, innerLength);\n        }\n        return bevelAdd * 2;\n    };\n    /**\n     * @return {RenderOptions}  The render options\n     * @protected\n     */\n    RegularShape.prototype.createRenderOptions = function () {\n        var lineJoin = defaultLineJoin;\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n        var maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n        var size = Math.ceil(2 * maxRadius + add);\n        return {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit,\n        };\n    };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render = function () {\n        this.renderOptions_ = this.createRenderOptions();\n        var size = this.renderOptions_.size;\n        this.canvas_ = {};\n        this.size_ = [size, size];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} pixelRatio The pixel ratio.\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, pixelRatio) {\n        context.scale(pixelRatio, pixelRatio);\n        // set origin to canvas center\n        context.translate(renderOptions.size / 2, renderOptions.size / 2);\n        this.createPath_(context);\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineJoin = renderOptions.lineJoin;\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            // determine if fill is transparent (or pattern or gradient)\n            var opacity = 0;\n            if (typeof color === 'string') {\n                color = asArray(color);\n            }\n            if (color === null) {\n                opacity = 1;\n            }\n            else if (Array.isArray(color)) {\n                opacity = color.length === 4 ? color[3] : 1;\n            }\n            if (opacity === 0) {\n                // if a transparent fill style is set, create an extra hit-detection image\n                // with a default fill style\n                var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n                this.hitDetectionCanvas_ = context.canvas;\n                this.drawHitDetectionCanvas_(renderOptions, context);\n            }\n        }\n        if (!this.hitDetectionCanvas_) {\n            this.hitDetectionCanvas_ = this.getImage(1);\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context The context to draw in.\n     */\n    RegularShape.prototype.createPath_ = function (context) {\n        var points = this.points_;\n        var radius = this.radius_;\n        if (points === Infinity) {\n            context.arc(0, 0, radius, 0, 2 * Math.PI);\n        }\n        else {\n            var radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n            if (this.radius2_ !== undefined) {\n                points *= 2;\n            }\n            var startAngle = this.angle_ - Math.PI / 2;\n            var step = (2 * Math.PI) / points;\n            for (var i = 0; i < points; i++) {\n                var angle0 = startAngle + i * step;\n                var radiusC = i % 2 === 0 ? radius : radius2;\n                context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n            }\n            context.closePath();\n        }\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context) {\n        // set origin to canvas center\n        context.translate(renderOptions.size / 2, renderOptions.size / 2);\n        this.createPath_(context);\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineJoin = renderOptions.lineJoin;\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n         * @type {!Object<string, import(\"./IconImage.js\").default>}\n         * @private\n         */\n        this.cache_ = {};\n        /**\n         * @type {number}\n         * @private\n         */\n        this.cacheSize_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @return {import(\"./IconImage.js\").default} Icon image.\n     */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n     */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n     * Set the cache size of the icon cache. Default is `32`. Change this value when\n     * your map uses more than 32 different icon images and you are not caching icon\n     * styles on the application level.\n     * @param {number} maxCacheSize Cache max size.\n     * @api\n     */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number} [opt_maxEntries] Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = new RBush_(opt_maxEntries);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value,\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value,\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/structs/LRUCache\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nvar LRUCache = /** @class */ (function () {\n    /**\n     * @param {number} [opt_highWaterMark] High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        /**\n         * Desired max cache size after expireCache(). If set to 0, no cache entries\n         * will be pruned at all.\n         * @type {number}\n         */\n        this.highWaterMark =\n            opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.newest_ = null;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n    };\n    /**\n     * Expire the cache.\n     * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n     */\n    LRUCache.prototype.expireCache = function (keep) {\n        while (this.canExpireCache()) {\n            this.pop();\n        }\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache<T>): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*} [opt_options] Options (reserved for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value,\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}());\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { assert } from '../asserts.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { extend } from '../array.js';\nimport { getUid } from '../util.js';\nimport { getValues, isEmpty } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { xhr } from '../featureloader.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n     */\n    function VectorSourceEvent(type, opt_feature, opt_features) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n         * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        /**\n         * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n         * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n         * @api\n         */\n        _this.features = opt_features;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options} [opt_options] Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            interpolate: true,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n        }) || this;\n        /***\n         * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {VectorSourceOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, \n            /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ =\n            options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.loadingExtentsCount_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features by uid (using getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.uidIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features =\n                /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (options.features);\n        }\n        else if (options.features) {\n            collection =\n                /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */ (options.features);\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n     * meaning that if a feature with a duplicate id is added in the collection, it will\n     * be removed from it right away.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            if (this.featuresCollection_) {\n                this.featuresCollection_.remove(feature);\n            }\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this),\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        if (valid) {\n            assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n            this.uidIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        if (this.hasListener(VectorEventType.ADDFEATURE)) {\n            for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n                this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n            }\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        this.addEventListener(VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        this.addEventListener(VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        collection.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        collection.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.uidIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                var removeAndIgnoreReturn = function (feature) {\n                    this.removeFeatureInternal(feature);\n                }.bind(this);\n                this.featuresRtree_.forEach(removeAndIgnoreReturn);\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection~Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get a snapshot of the features currently on the source in random order. The returned array\n     * is a copy, the features are references to the features in the source.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray().slice(0);\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * When `useSpatialIndex` is set to false, this method will return all\n     * features.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.getInExtent(extent);\n        }\n        else if (this.featuresCollection_) {\n            return this.featuresCollection_.getArray().slice(0);\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get a feature by its internal unique identifier (using `getUid`).\n     *\n     * @param {string} uid Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n     */\n    VectorSource.prototype.getFeatureByUid = function (uid) {\n        var feature = this.uidIndex_[uid];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (this.idIndex_[sid] !== feature) {\n                this.removeFromIdIndex_(feature);\n                this.idIndex_[sid] = feature;\n            }\n        }\n        else {\n            this.removeFromIdIndex_(feature);\n            this.uidIndex_[featureKey] = feature;\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.uidIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        if (this.featuresRtree_) {\n            return (this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_));\n        }\n        if (this.featuresCollection_) {\n            return this.featuresCollection_.getLength() === 0;\n        }\n        return true;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution, projection);\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                ++this_1.loadingExtentsCount_;\n                this_1.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADSTART));\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection, function (features) {\n                    --this.loadingExtentsCount_;\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADEND, undefined, features));\n                }.bind(this_1), function () {\n                    --this.loadingExtentsCount_;\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADERROR));\n                }.bind(this_1));\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n        this.loading =\n            this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n    };\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        if (!feature) {\n            return;\n        }\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        var result = this.removeFeatureInternal(feature);\n        if (result) {\n            this.changed();\n        }\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n     *     (or undefined if the feature was not found).\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        var featureChangeKeys = this.featureChangeKeys_[featureKey];\n        if (!featureChangeKeys) {\n            return;\n        }\n        featureChangeKeys.forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        delete this.uidIndex_[featureKey];\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n        return feature;\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.url_ = url;\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/style/Style\n */\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import GeometryType from 'ol/geom/GeometryType';\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n *\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n *\n *  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n *    styles[GeometryType.LINE_STRING]\n *  );\n *\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n *\n *  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n *    GeometryType.POLYGON\n *  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n * ```\n *\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {import(\"./Image.js\").default}\n         */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.hitDetectionRenderer_ =\n            options.hitDetectionRenderer !== undefined\n                ? options.hitDetectionRenderer\n                : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            renderer: this.getRenderer(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex(),\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Sets a custom renderer function for this style used\n     * in hit detection.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setHitDetectionRenderer = function (renderer) {\n        this.hitDetectionRenderer_ = renderer;\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getHitDetectionRenderer = function () {\n        return this.hitDetectionRenderer_;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>|null}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)',\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25,\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5,\n                }),\n                fill: fill,\n                stroke: stroke,\n            }),\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5],\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2,\n            }),\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width,\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue,\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2,\n                }),\n            }),\n            zIndex: Infinity,\n        }),\n    ];\n    styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Origin is at bottom left\n     * @api\n     */\n    BOTTOM_LEFT: 'bottom-left',\n    /**\n     * Origin is at bottom right\n     * @api\n     */\n    BOTTOM_RIGHT: 'bottom-right',\n    /**\n     * Origin is at top left\n     * @api\n     */\n    TOP_LEFT: 'top-left',\n    /**\n     * Origin is at top right\n     * @api\n     */\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { asString } from '../color.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar taintedTestContext = null;\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            if (!taintedTestContext) {\n                taintedTestContext = createCanvasContext2D(1, 1);\n            }\n            taintedTestContext.drawImage(this.image_, 0, 0);\n            try {\n                taintedTestContext.getImageData(0, 0, 1, 1);\n                this.tainted_ = false;\n            }\n            catch (e) {\n                taintedTestContext = null;\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        else {\n            this.size_ = [this.image_.width, this.image_.height];\n        }\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Image or Canvas element.\n     */\n    IconImage.prototype.getPixelRatio = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? pixelRatio : 1;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function (pixelRatio) {\n        if (!this.color_ ||\n            this.canvas_[pixelRatio] ||\n            this.imageState_ !== ImageState.LOADED) {\n            return;\n        }\n        var canvas = document.createElement('canvas');\n        this.canvas_[pixelRatio] = canvas;\n        canvas.width = Math.ceil(this.image_.width * pixelRatio);\n        canvas.height = Math.ceil(this.image_.height * pixelRatio);\n        var ctx = canvas.getContext('2d');\n        ctx.scale(pixelRatio, pixelRatio);\n        ctx.drawImage(this.image_, 0, 0);\n        ctx.globalCompositeOperation = 'multiply';\n        // Internet Explorer 11 does not support the multiply operation.\n        // If the canvas is tainted in Internet Explorer this still produces\n        // a solid color image with the shape of the icon.\n        if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n            ctx.fillStyle = asString(this.color_);\n            ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n            ctx.globalCompositeOperation = 'destination-in';\n            ctx.drawImage(this.image_, 0, 0);\n        }\n        else {\n            var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n            var data = imgData.data;\n            var r = this.color_[0] / 255.0;\n            var g = this.color_[1] / 255.0;\n            var b = this.color_[2] / 255.0;\n            var a = this.color_[3];\n            for (var i = 0, ii = data.length; i < ii; i += 4) {\n                data[i] *= r;\n                data[i + 1] *= g;\n                data[i + 2] *= b;\n                data[i + 3] *= a;\n            }\n            ctx.putImageData(imgData, 0, 0);\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { get as getIconImage } from './IconImage.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n            rotateWithView: rotateWithView,\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ =\n            options.anchorOrigin !== undefined\n                ? options.anchorOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ =\n            options.anchorXUnits !== undefined\n                ? options.anchorXUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ =\n            options.anchorYUnits !== undefined\n                ? options.anchorYUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size|undefined}\n         */\n        _this.imgSize_ = options.imgSize;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && _this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, \n        /** @type {string} */ (src), _this.imgSize_ !== undefined ? _this.imgSize_ : null, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ =\n            options.offsetOrigin !== undefined\n                ? options.offsetOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            color: this.color_ && this.color_.slice\n                ? this.color_.slice()\n                : this.color_ || undefined,\n            crossOrigin: this.crossOrigin_,\n            imgSize: this.imgSize_,\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            opacity: this.getOpacity(),\n            rotateWithView: this.getRotateWithView(),\n            rotation: this.getRotation(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            src: this.getSrc(),\n        });\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        var anchor = this.normalizedAnchor_;\n        if (!anchor) {\n            anchor = this.anchor_;\n            var size = this.getSize();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n                this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                if (!size) {\n                    return null;\n                }\n                anchor = this.anchor_.slice();\n                if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                    anchor[0] *= size[0];\n                }\n                if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                    anchor[1] *= size[1];\n                }\n            }\n            if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n                if (!size) {\n                    return null;\n                }\n                if (anchor === this.anchor_) {\n                    anchor = this.anchor_.slice();\n                }\n                if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                    this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                    anchor[0] = -anchor[0] + size[0];\n                }\n                if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                    this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                    anchor[1] = -anchor[1] + size[1];\n                }\n            }\n            this.normalizedAnchor_ = anchor;\n        }\n        var displacement = this.getDisplacement();\n        return [anchor[0] - displacement[0], anchor[1] + displacement[1]];\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * Get the pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} The pixel ratio of the image.\n     * @api\n     */\n    Icon.prototype.getPixelRatio = function (pixelRatio) {\n        return this.iconImage_.getPixelRatio(pixelRatio);\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    Icon.prototype.getHitDetectionImage = function () {\n        return this.iconImage_.getHitDetectionImage();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.listenImageChange = function (listener) {\n        this.iconImage_.addEventListener(EventType.CHANGE, listener);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.unlistenImageChange = function (listener) {\n        this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * See https://mapbox.com/developers/api/.\n */\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { assert } from '../asserts.js';\nimport { createFromTemplates } from '../tileurlfunction.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport { jsonp as requestJSONP } from '../net.js';\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nvar TileJSON = /** @class */ (function (_super) {\n    __extends(TileJSON, _super);\n    /**\n     * @param {Options} options TileJSON options.\n     */\n    function TileJSON(options) {\n        var _this = this;\n        var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n        if (options.interpolate !== undefined) {\n            interpolate = options.interpolate;\n        }\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            interpolate: interpolate,\n            projection: getProjection('EPSG:3857'),\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            state: SourceState.LOADING,\n            tileLoadFunction: options.tileLoadFunction,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @type {Config}\n         * @private\n         */\n        _this.tileJSON_ = null;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         * @private\n         */\n        _this.tileSize_ = options.tileSize;\n        if (options.url) {\n            if (options.jsonp) {\n                requestJSONP(options.url, _this.handleTileJSONResponse.bind(_this), _this.handleTileJSONError.bind(_this));\n            }\n            else {\n                var client = new XMLHttpRequest();\n                client.addEventListener('load', _this.onXHRLoad_.bind(_this));\n                client.addEventListener('error', _this.onXHRError_.bind(_this));\n                client.open('GET', options.url);\n                client.send();\n            }\n        }\n        else if (options.tileJSON) {\n            _this.handleTileJSONResponse(options.tileJSON);\n        }\n        else {\n            assert(false, 51); // Either `url` or `tileJSON` options must be provided\n        }\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Event} event The load event.\n     */\n    TileJSON.prototype.onXHRLoad_ = function (event) {\n        var client = /** @type {XMLHttpRequest} */ (event.target);\n        // status will be 0 for file:// urls\n        if (!client.status || (client.status >= 200 && client.status < 300)) {\n            var response = void 0;\n            try {\n                response = /** @type {Config} */ (JSON.parse(client.responseText));\n            }\n            catch (err) {\n                this.handleTileJSONError();\n                return;\n            }\n            this.handleTileJSONResponse(response);\n        }\n        else {\n            this.handleTileJSONError();\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event The error event.\n     */\n    TileJSON.prototype.onXHRError_ = function (event) {\n        this.handleTileJSONError();\n    };\n    /**\n     * @return {Config} The tilejson object.\n     * @api\n     */\n    TileJSON.prototype.getTileJSON = function () {\n        return this.tileJSON_;\n    };\n    /**\n     * @protected\n     * @param {Config} tileJSON Tile JSON.\n     */\n    TileJSON.prototype.handleTileJSONResponse = function (tileJSON) {\n        var epsg4326Projection = getProjection('EPSG:4326');\n        var sourceProjection = this.getProjection();\n        var extent;\n        if (tileJSON['bounds'] !== undefined) {\n            var transform = getTransformFromProjections(epsg4326Projection, sourceProjection);\n            extent = applyTransform(tileJSON['bounds'], transform);\n        }\n        var gridExtent = extentFromProjection(sourceProjection);\n        var minZoom = tileJSON['minzoom'] || 0;\n        var maxZoom = tileJSON['maxzoom'] || 22;\n        var tileGrid = createXYZ({\n            extent: gridExtent,\n            maxZoom: maxZoom,\n            minZoom: minZoom,\n            tileSize: this.tileSize_,\n        });\n        this.tileGrid = tileGrid;\n        this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n        if (tileJSON['attribution'] !== undefined && !this.getAttributions()) {\n            var attributionExtent_1 = extent !== undefined ? extent : gridExtent;\n            this.setAttributions(function (frameState) {\n                if (intersects(attributionExtent_1, frameState.extent)) {\n                    return [tileJSON['attribution']];\n                }\n                return null;\n            });\n        }\n        this.tileJSON_ = tileJSON;\n        this.setState(SourceState.READY);\n    };\n    /**\n     * @protected\n     */\n    TileJSON.prototype.handleTileJSONError = function () {\n        this.setState(SourceState.ERROR);\n    };\n    return TileJSON;\n}(TileImage));\nexport default TileJSON;\n//# sourceMappingURL=TileJSON.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error',\n};\n//# sourceMappingURL=State.js.map","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport { toDegrees, toRadians } from './math.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) *\n            Math.sin(deltaLonBy2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = \n            /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area +=\n            toRadians(x2 - x1) *\n                (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return (area * radius * radius) / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = \n            /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 +\n        Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Anchor is a fraction\n     * @api\n     */\n    FRACTION: 'fraction',\n    /**\n     * Anchor is in pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n};\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {CanvasLineCap|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {CanvasLineJoin|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth(),\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {CanvasLineCap|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {CanvasLineJoin|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {CanvasLineCap|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {CanvasLineJoin|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror',\n};\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { equivalent } from '../proj.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection, wrapX, } from '../tilegrid.js';\nimport { scale as scaleSize, toSize } from '../size.js';\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX,\n            interpolate: options.interpolate,\n        }) || this;\n        /***\n         * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {TileSourceOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ =\n            options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n        /**\n         * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var tileSize = [256, 256];\n        if (_this.tileGrid) {\n            toSize(_this.tileGrid.getTileSize(_this.tileGrid.getMinZoom()), tileSize);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(options.cacheSize || 0);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = {\n            transition: options.transition,\n            interpolate: options.interpolate,\n        };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number|import(\"../array.js\").NearestDirectionFunction}\n         */\n        _this.zDirection = options.zDirection ? options.zDirection : 0;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = callback(tile) !== false;\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @return {Array<number>|null} Resolutions.\n     */\n    TileSource.prototype.getResolutions = function () {\n        if (!this.tileGrid) {\n            return null;\n        }\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        assert(equivalent(this.getProjection(), projection), 68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n        );\n        return this.tileCache;\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ? opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Increases the cache size if needed\n     * @param {number} tileCount Minimum number of tiles needed.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.updateCacheSize = function (tileCount, projection) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCount > tileCache.highWaterMark) {\n            tileCache.highWaterMark = tileCount;\n        }\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileState from '../TileState.js';\nimport { createFromTemplates, expandUrl } from '../tileurlfunction.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            interpolate: options.interpolate,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ =\n            _this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        if (options.tileUrlFunction) {\n            _this.tileUrlFunction = options.tileUrlFunction;\n        }\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n            ? this.tileUrlFunction.bind(this)\n            : this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type =\n                tileState == TileState.ERROR\n                    ? TileEventType.TILELOADERROR\n                    : tileState == TileState.LOADED\n                        ? TileEventType.TILELOADEND\n                        : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string} [key] Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = expandUrl(url);\n        this.urls = urls;\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    UrlTile.prototype.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n        return undefined;\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = this;\n        var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n        if (options.interpolate !== undefined) {\n            interpolate = options.interpolate;\n        }\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction\n                ? options.tileLoadFunction\n                : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            interpolate: interpolate,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass =\n            options.tileClass !== undefined ? options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     */\n    TileImage.prototype.getKey = function () {\n        var key = _super.prototype.getKey.call(this);\n        if (!this.getInterpolate()) {\n            key += ':disable-interpolation';\n        }\n        return key;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] =\n                    getTileGridForProjection(projection);\n            }\n            return this.tileGridForProjection[projKey];\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!ImageTile} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord\n            ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n            : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n        return tile;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!(ImageTile|ReprojTile)} Tile.\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = cache.get(tileCoordKey);\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_, this.getInterpolate());\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!(ImageTile|ReprojTile)} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n        src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature',\n    /**\n     * Triggered when features starts loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n     * @api\n     */\n    FEATURESLOADSTART: 'featuresloadstart',\n    /**\n     * Triggered when features finishes loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n     * @api\n     */\n    FEATURESLOADEND: 'featuresloadend',\n    /**\n     * Triggered if feature loading results in an error.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n     * @api\n     */\n    FEATURESLOADERROR: 'featuresloaderror',\n};\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\nimport { toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.displacement_ = options.displacement;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number|import(\"../size.js\").Size} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    ImageStyle.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the displacement of the shape\n     * @return {Array<number>} Shape's center displacement\n     * @api\n     */\n    ImageStyle.prototype.getDisplacement = function () {\n        return this.displacement_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function () {\n        return abstract();\n    };\n    /**\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Pixel ratio.\n     */\n    ImageStyle.prototype.getPixelRatio = function (pixelRatio) {\n        return 1;\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the displacement.\n     *\n     * @param {Array<number>} displacement Displacement.\n     * @api\n     */\n    ImageStyle.prototype.setDisplacement = function (displacement) {\n        this.displacement_ = displacement;\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale);\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.listenImageChange = function (listener) {\n        abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/string\n */\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [opt_precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n    var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n    var decimal = numberString.indexOf('.');\n    decimal = decimal === -1 ? numberString.length : decimal;\n    return decimal > width\n        ? numberString\n        : new Array(1 + width - decimal).join('0') + numberString;\n}\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n    var s1 = ('' + v1).split('.');\n    var s2 = ('' + v2).split('.');\n    for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n        var n1 = parseInt(s1[i] || '0', 10);\n        var n2 = parseInt(s2[i] || '0', 10);\n        if (n1 > n2) {\n            return 1;\n        }\n        if (n2 > n1) {\n            return -1;\n        }\n    }\n    return 0;\n}\n//# sourceMappingURL=string.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function CircleStyle(opt_options) {\n        var options = opt_options ? opt_options : {};\n        return _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke,\n            scale: options.scale !== undefined ? options.scale : 1,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            rotateWithView: options.rotateWithView !== undefined ? options.rotateWithView : false,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n    }\n    /**\n     * Clones the style.\n     * @return {CircleStyle} The cloned style.\n     * @api\n     */\n    CircleStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        return style;\n    };\n    /**\n     * Set the circle radius.\n     *\n     * @param {number} radius Circle radius.\n     * @api\n     */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n        this.render();\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/source/WMTSRequestEncoding\n */\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n    KVP: 'KVP',\n    REST: 'REST', // see spec §10\n};\n//# sourceMappingURL=WMTSRequestEncoding.js.map","/**\n * @module ol/source/WMTS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport { appendParams } from '../uri.js';\nimport { assign } from '../obj.js';\nimport { containsExtent } from '../extent.js';\nimport { createFromCapabilitiesMatrixSet } from '../tilegrid/WMTS.js';\nimport { createFromTileUrlFunctions, expandUrl } from '../tileurlfunction.js';\nimport { equivalent, get as getProjection, transformExtent } from '../proj.js';\nimport { find, findIndex, includes } from '../array.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nvar WMTS = /** @class */ (function (_super) {\n    __extends(WMTS, _super);\n    /**\n     * @param {Options} options WMTS options.\n     */\n    function WMTS(options) {\n        var _this = this;\n        var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n        if (options.interpolate !== undefined) {\n            interpolate = options.interpolate;\n        }\n        // TODO: add support for TileMatrixLimits\n        var requestEncoding = options.requestEncoding !== undefined\n            ? /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding)\n            : WMTSRequestEncoding.KVP;\n        // FIXME: should we create a default tileGrid?\n        // we could issue a getCapabilities xhr to retrieve missing configuration\n        var tileGrid = options.tileGrid;\n        var urls = options.urls;\n        if (urls === undefined && options.url !== undefined) {\n            urls = expandUrl(options.url);\n        }\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            interpolate: interpolate,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileClass: options.tileClass,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            urls: urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : false,\n            transition: options.transition,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.version_ = options.version !== undefined ? options.version : '1.0.0';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.dimensions_ =\n            options.dimensions !== undefined ? options.dimensions : {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.layer_ = options.layer;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.matrixSet_ = options.matrixSet;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.style_ = options.style;\n        // FIXME: should we guess this requestEncoding from options.url(s)\n        //        structure? that would mean KVP only if a template is not provided.\n        /**\n         * @private\n         * @type {import(\"./WMTSRequestEncoding.js\").default}\n         */\n        _this.requestEncoding_ = requestEncoding;\n        _this.setKey(_this.getKeyForDimensions_());\n        if (urls && urls.length > 0) {\n            _this.tileUrlFunction = createFromTileUrlFunctions(urls.map(_this.createFromWMTSTemplate.bind(_this)));\n        }\n        return _this;\n    }\n    /**\n     * Set the URLs to use for requests.\n     * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n     * @param {Array<string>} urls URLs.\n     */\n    WMTS.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        this.setTileUrlFunction(createFromTileUrlFunctions(urls.map(this.createFromWMTSTemplate.bind(this))), key);\n    };\n    /**\n     * Get the dimensions, i.e. those passed to the constructor through the\n     * \"dimensions\" option, and possibly updated using the updateDimensions\n     * method.\n     * @return {!Object} Dimensions.\n     * @api\n     */\n    WMTS.prototype.getDimensions = function () {\n        return this.dimensions_;\n    };\n    /**\n     * Return the image format of the WMTS source.\n     * @return {string} Format.\n     * @api\n     */\n    WMTS.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * Return the layer of the WMTS source.\n     * @return {string} Layer.\n     * @api\n     */\n    WMTS.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Return the matrix set of the WMTS source.\n     * @return {string} MatrixSet.\n     * @api\n     */\n    WMTS.prototype.getMatrixSet = function () {\n        return this.matrixSet_;\n    };\n    /**\n     * Return the request encoding, either \"KVP\" or \"REST\".\n     * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n     * @api\n     */\n    WMTS.prototype.getRequestEncoding = function () {\n        return this.requestEncoding_;\n    };\n    /**\n     * Return the style of the WMTS source.\n     * @return {string} Style.\n     * @api\n     */\n    WMTS.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Return the version of the WMTS source.\n     * @return {string} Version.\n     * @api\n     */\n    WMTS.prototype.getVersion = function () {\n        return this.version_;\n    };\n    /**\n     * @private\n     * @return {string} The key for the current dimensions.\n     */\n    WMTS.prototype.getKeyForDimensions_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.dimensions_) {\n            res[i++] = key + '-' + this.dimensions_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Update the dimensions.\n     * @param {Object} dimensions Dimensions.\n     * @api\n     */\n    WMTS.prototype.updateDimensions = function (dimensions) {\n        assign(this.dimensions_, dimensions);\n        this.setKey(this.getKeyForDimensions_());\n    };\n    /**\n     * @param {string} template Template.\n     * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n     */\n    WMTS.prototype.createFromWMTSTemplate = function (template) {\n        var requestEncoding = this.requestEncoding_;\n        // context property names are lower case to allow for a case insensitive\n        // replacement as some services use different naming conventions\n        var context = {\n            'layer': this.layer_,\n            'style': this.style_,\n            'tilematrixset': this.matrixSet_,\n        };\n        if (requestEncoding == WMTSRequestEncoding.KVP) {\n            assign(context, {\n                'Service': 'WMTS',\n                'Request': 'GetTile',\n                'Version': this.version_,\n                'Format': this.format_,\n            });\n        }\n        // TODO: we may want to create our own appendParams function so that params\n        // order conforms to wmts spec guidance, and so that we can avoid to escape\n        // special template params\n        template =\n            requestEncoding == WMTSRequestEncoding.KVP\n                ? appendParams(template, context)\n                : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n                    return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n                });\n        var tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (this.tileGrid);\n        var dimensions = this.dimensions_;\n        return (\n        /**\n         * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {import(\"../proj/Projection.js\").default} projection Projection.\n         * @return {string|undefined} Tile URL.\n         */\n        function (tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n                return undefined;\n            }\n            else {\n                var localContext_1 = {\n                    'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n                    'TileCol': tileCoord[1],\n                    'TileRow': tileCoord[2],\n                };\n                assign(localContext_1, dimensions);\n                var url = template;\n                if (requestEncoding == WMTSRequestEncoding.KVP) {\n                    url = appendParams(url, localContext_1);\n                }\n                else {\n                    url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n                        return localContext_1[p];\n                    });\n                }\n                return url;\n            }\n        });\n    };\n    return WMTS;\n}(TileImage));\nexport default WMTS;\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n    var layers = wmtsCap['Contents']['Layer'];\n    var l = find(layers, function (elt, index, array) {\n        return elt['Identifier'] == config['layer'];\n    });\n    if (l === null) {\n        return null;\n    }\n    var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n    var idx;\n    if (l['TileMatrixSetLink'].length > 1) {\n        if ('projection' in config) {\n            idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n                var tileMatrixSet = find(tileMatrixSets, function (el) {\n                    return el['Identifier'] == elt['TileMatrixSet'];\n                });\n                var supportedCRS = tileMatrixSet['SupportedCRS'];\n                var proj1 = getProjection(supportedCRS);\n                var proj2 = getProjection(config['projection']);\n                if (proj1 && proj2) {\n                    return equivalent(proj1, proj2);\n                }\n                else {\n                    return supportedCRS == config['projection'];\n                }\n            });\n        }\n        else {\n            idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n                return elt['TileMatrixSet'] == config['matrixSet'];\n            });\n        }\n    }\n    else {\n        idx = 0;\n    }\n    if (idx < 0) {\n        idx = 0;\n    }\n    var matrixSet = \n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n    var matrixLimits = \n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n    var format = /** @type {string} */ (l['Format'][0]);\n    if ('format' in config) {\n        format = config['format'];\n    }\n    idx = findIndex(l['Style'], function (elt, index, array) {\n        if ('style' in config) {\n            return elt['Title'] == config['style'];\n        }\n        else {\n            return elt['isDefault'];\n        }\n    });\n    if (idx < 0) {\n        idx = 0;\n    }\n    var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n    var dimensions = {};\n    if ('Dimension' in l) {\n        l['Dimension'].forEach(function (elt, index, array) {\n            var key = elt['Identifier'];\n            var value = elt['Default'];\n            if (value === undefined) {\n                value = elt['Value'][0];\n            }\n            dimensions[key] = value;\n        });\n    }\n    var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n    var matrixSetObj = find(matrixSets, function (elt, index, array) {\n        return elt['Identifier'] == matrixSet;\n    });\n    var projection;\n    var code = matrixSetObj['SupportedCRS'];\n    if (code) {\n        projection = getProjection(code);\n    }\n    if ('projection' in config) {\n        var projConfig = getProjection(config['projection']);\n        if (projConfig) {\n            if (!projection || equivalent(projConfig, projection)) {\n                projection = projConfig;\n            }\n        }\n    }\n    var wrapX = false;\n    var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n    var matrix = matrixSetObj.TileMatrix[0];\n    // create default matrixLimit\n    var selectedMatrixLimit = {\n        MinTileCol: 0,\n        MinTileRow: 0,\n        // subtract one to end up at tile top left\n        MaxTileCol: matrix.MatrixWidth - 1,\n        MaxTileRow: matrix.MatrixHeight - 1,\n    };\n    //in case of matrix limits, use matrix limits to calculate extent\n    if (matrixLimits) {\n        selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n        var m = find(matrixSetObj.TileMatrix, function (tileMatrixValue) {\n            return tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n                matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n                    selectedMatrixLimit.TileMatrix;\n        });\n        if (m) {\n            matrix = m;\n        }\n    }\n    var resolution = (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n    var origin = switchOriginXY\n        ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n        : matrix.TopLeftCorner;\n    var tileSpanX = matrix.TileWidth * resolution;\n    var tileSpanY = matrix.TileHeight * resolution;\n    var matrixSetExtent = matrixSetObj['BoundingBox'];\n    var extent = [\n        origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n        // add one to get proper bottom/right coordinate\n        origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n        origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n        origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n    ];\n    if (matrixSetExtent !== undefined &&\n        !containsExtent(matrixSetExtent, extent)) {\n        var wgs84BoundingBox = l['WGS84BoundingBox'];\n        var wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n        extent = matrixSetExtent;\n        if (wgs84BoundingBox) {\n            wrapX =\n                wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n                    wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n        }\n        else {\n            var wgs84MatrixSetExtent = transformExtent(matrixSetExtent, matrixSetObj['SupportedCRS'], 'EPSG:4326');\n            // Ignore slight deviation from the correct x limits\n            wrapX =\n                wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n                    wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n        }\n    }\n    var tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n    /** @type {!Array<string>} */\n    var urls = [];\n    var requestEncoding = config['requestEncoding'];\n    requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n    if ('OperationsMetadata' in wmtsCap &&\n        'GetTile' in wmtsCap['OperationsMetadata']) {\n        var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n        for (var i = 0, ii = gets.length; i < ii; ++i) {\n            if (gets[i]['Constraint']) {\n                var constraint = find(gets[i]['Constraint'], function (element) {\n                    return element['name'] == 'GetEncoding';\n                });\n                var encodings = constraint['AllowedValues']['Value'];\n                if (requestEncoding === '') {\n                    // requestEncoding not provided, use the first encoding from the list\n                    requestEncoding = encodings[0];\n                }\n                if (requestEncoding === WMTSRequestEncoding.KVP) {\n                    if (includes(encodings, WMTSRequestEncoding.KVP)) {\n                        urls.push(/** @type {string} */ (gets[i]['href']));\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n            else if (gets[i]['href']) {\n                requestEncoding = WMTSRequestEncoding.KVP;\n                urls.push(/** @type {string} */ (gets[i]['href']));\n            }\n        }\n    }\n    if (urls.length === 0) {\n        requestEncoding = WMTSRequestEncoding.REST;\n        l['ResourceURL'].forEach(function (element) {\n            if (element['resourceType'] === 'tile') {\n                format = element['format'];\n                urls.push(/** @type {string} */ (element['template']));\n            }\n        });\n    }\n    return {\n        urls: urls,\n        layer: config['layer'],\n        matrixSet: matrixSet,\n        format: format,\n        projection: projection,\n        requestEncoding: requestEncoding,\n        tileGrid: tileGrid,\n        style: style,\n        dimensions: dimensions,\n        wrapX: wrapX,\n        crossOrigin: config['crossOrigin'],\n    };\n}\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < count >> 1) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count && priorities[rIndex] < priorities[lIndex]\n                ? rIndex\n                : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ =\n            options.attributionsCollapsible !== undefined\n                ? options.attributionsCollapsible\n                : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {import(\"./State.js\").default}\n         */\n        _this.state_ =\n            options.state !== undefined ? options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.interpolate_ = !!options.interpolate;\n        /**\n         * @protected\n         * @type {function(import(\"../View.js\").ViewOptions):void}\n         */\n        _this.viewResolver = null;\n        /**\n         * @protected\n         * @type {function(Error):void}\n         */\n        _this.viewRejector = null;\n        var self = _this;\n        /**\n         * @private\n         * @type {Promise<import(\"../View.js\").ViewOptions>}\n         */\n        _this.viewPromise_ = new Promise(function (resolve, reject) {\n            self.viewResolver = resolve;\n            self.viewRejector = reject;\n        });\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     * @api\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     * @api\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|null} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n     */\n    Source.prototype.getView = function () {\n        return this.viewPromise_;\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {import(\"./State.js\").default} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * @return {boolean} Use linear interpolation when resampling.\n     */\n    Source.prototype.getInterpolate = function () {\n        return this.interpolate_;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {import(\"./State.js\").default} state State.\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map"],"sourceRoot":""}