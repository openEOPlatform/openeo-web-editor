{"version":3,"sources":["webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/style/IconOrigin.js","webpack:///./node_modules/ol/style/IconImage.js","webpack:///./node_modules/ol/style/Icon.js","webpack:///./node_modules/ol/tilegrid/WMTS.js","webpack:///./node_modules/ol/style/IconAnchorUnits.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/style/expressions.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/uri.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/structs/PriorityQueue.js"],"names":["POINT","LINE","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","RegularShape","_super","options","_this","rotateWithView","undefined","opacity","rotation","scale","displacement","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius_","radius","radius1","radius2_","radius2","angle_","angle","stroke_","stroke","size_","renderOptions_","render","clone","getScale","style","getFill","getPoints","getRadius","getRadius2","getAngle","getStroke","getRotation","getRotateWithView","isArray","slice","getDisplacement","setOpacity","getOpacity","getAnchor","size","getHitDetectionImage","createHitDetectionCanvas_","getImage","pixelRatio","image","renderOptions","context","draw_","canvas","getPixelRatio","getImageSize","getImageState","LOADED","getOrigin","getSize","listenImageChange","listener","load","unlistenImageChange","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","Infinity","r1","r2","tmp","alpha","Math","PI","a","sin","sqrt","e","miterRatio","k","l","maxr","bevelAdd","aa","bb","dd","ee","innerMiterRatio","innerLength","max","createRenderOptions","strokeStyle","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","add","maxRadius","ceil","translate","createPath_","color","fillStyle","lineWidth","setLineDash","length","drawHitDetectionCanvas_","arc","startAngle","step","i","angle0","radiusC","lineTo","cos","closePath","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","key","iconImage","hasListener","get","src","crossOrigin","getKey","set","setSize","maxCacheSize","colorString","shared","RBush","opt_maxEntries","rbush_","items_","insert","extent","value","item","minX","minY","maxX","maxY","extents","values","items","remove","uid","update","bbox","getAll","all","map","getInExtent","search","forEach","callback","forEach_","forEachInExtent","result","isEmpty","getExtent","opt_extent","data","toJSON","concat","rbush","Style","opt_options","geometry_","geometryFunction_","defaultGeometryFunction","geometry","setGeometry","image_","renderer_","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","text","zIndex_","zIndex","getGeometry","getRenderer","getText","getZIndex","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","feature","setZIndex","toFunction","obj","styleFunction","styles_1","defaultStyles","createDefaultStyle","resolution","width","createEditingStyle","styles","white","blue","POLYGON","MULTI_POLYGON","LINE_STRING","MULTI_LINE_STRING","CIRCLE","MULTI_POINT","GEOMETRY_COLLECTION","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","taintedTestContext","IconImage","imageState","hitDetectionImage_","Image","color_","unlisten_","imageState_","src_","tainted_","isTainted_","ImageState","drawImage","getImageData","dispatchChangeEvent_","dispatchEvent","EventType","CHANGE","handleImageError_","ERROR","unlistenImage_","handleImageLoad_","height","replaceColor_","fillRect","getSrc","IDLE","LOADING","bind","document","createElement","ctx","getContext","globalCompositeOperation","imgData","r","g","ii","putImageData","Icon","anchor_","anchor","normalizedAnchor_","anchorOrigin_","anchorOrigin","IconOrigin","anchorXUnits_","anchorXUnits","IconAnchorUnits","FRACTION","anchorYUnits_","anchorYUnits","crossOrigin_","img","imgSize_","imgSize","iconImage_","offset_","offset","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","addEventListener","removeEventListener","WMTSTileGrid","origin","origins","resolutions","tileSize","tileSizes","sizes","matrixIds_","matrixIds","getMatrixId","z","getMatrixIds","createFromCapabilitiesMatrixSet","matrixSet","opt_matrixLimits","matrixLimits","supportedCRSPropName","matrixIdsPropName","identifierPropName","scaleDenominatorPropName","topLeftCornerPropName","tileWidthPropName","tileHeightPropName","code","projection","metersPerUnit","getMetersPerUnit","switchOriginXY","getAxisOrientation","substr","sort","elt","matrixAvailable","elt_ml","indexOf","push","tileWidth","tileHeight","PIXELS","Fill","setColor","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","ValueTypes","NUMBER","STRING","COLOR","BOOLEAN","NUMBER_ARRAY","ANY","NONE","Operators","getValueType","Error","JSON","stringify","valueArr","onlyNumbers","every","v","operator","getReturnType","isTypeUnique","valueType","numberToGlsl","s","toString","arrayToGlsl","array","join","colorToGlsl","c","getStringNumberEquivalent","string","stringLiteralsMap","keys","stringToGlsl","expressionToGlsl","typeHint","toGlsl","assertNumber","assertNumbers","assertString","assertBoolean","assertArgsCount","args","count","assertArgsMinCount","assertArgsMaxCount","assertArgsEven","assertArgsOdd","assertUniqueInferredType","types","uniformNameForVariable","variableName","attributes","prefix","inFragmentShader","variables","PALETTE_TEXTURE_ARRAY","index","colors","numColors","palette","Uint8Array","candidate","length_1","paletteTextures","paletteName","paletteTexture","GET_BAND_VALUE_FUNC","getEqualOperator","type","getDecisionOperator","arg","band","functions","ifBlocks","bandCount","colorIndex","floor","bandIndex","textureName","TILE_TEXTURE_ARRAY","TEXTURE_PIXEL_WIDTH","TEXTURE_PIXEL_HEIGHT","bandExpression","xOffsetExpression","yOffsetExpression","min","parsedArgs","val","opt_typeHint","interpolation","outputType","input","exponent","stop1","output1","stop2","output2","fallback","match","output","condition","createFromTemplate","template","tileGrid","zRegEx","xRegEx","yRegEx","dashYRegEx","tileCoord","replace","range","getFullTileRange","y","getHeight","createFromTemplates","templates","len","tileUrlFunctions","createFromTileUrlFunctions","h","expandUrl","url","urls","exec","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","stop_1","parseInt","transformStringDiv","tmp_","reset","transform","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","f","setFromArray","apply","coordinate","x","rotate","makeScale","target","dx","dy","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","source","det","determinant","mat","transformString","node","ImageStyle","opacity_","rotateWithView_","rotation_","scale_","scaleArray_","displacement_","getScaleArray","setDisplacement","setRotateWithView","setRotation","setScale","appendParams","uri","params","keyParams","encodeURIComponent","qs","CircleStyle","setRadius","DROP","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","element","pop","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","n"],"mappings":"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","file":"js/chunk-c25ba866.104a3aae.js","sourcesContent":["/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line',\n};\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { defaultFillStyle, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../render/canvas.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: options.scale !== undefined ? options.scale : 1,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = undefined;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ =\n            options.radius !== undefined ? options.radius : options.radius1;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {RenderOptions}\n         */\n        _this.renderOptions_ = null;\n        _this.render();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var scale = this.getScale();\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        return style;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        var size = this.size_;\n        if (!size) {\n            return null;\n        }\n        var displacement = this.getDisplacement();\n        return [size[0] / 2 - displacement[0], size[1] / 2 + displacement[1]];\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @return {HTMLCanvasElement} Image element.\n     */\n    RegularShape.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionCanvas_) {\n            this.createHitDetectionCanvas_(this.renderOptions_);\n        }\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        var image = this.canvas_[pixelRatio];\n        if (!image) {\n            var renderOptions = this.renderOptions_;\n            var context = createCanvasContext2D(renderOptions.size * pixelRatio, renderOptions.size * pixelRatio);\n            this.draw_(renderOptions, context, pixelRatio);\n            image = context.canvas;\n            this.canvas_[pixelRatio] = image;\n        }\n        return image;\n    };\n    /**\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Pixel ratio.\n     */\n    RegularShape.prototype.getPixelRatio = function (pixelRatio) {\n        return pixelRatio;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @return {import(\"../size.js\").Size} Size.\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.listenImageChange = function (listener) { };\n    /**\n     * Load not yet loaded URI.\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener) { };\n    /**\n     * Calculate additional canvas size needed for the miter.\n     * @param {string} lineJoin Line join\n     * @param {number} strokeWidth Stroke width\n     * @param {number} miterLimit Miter limit\n     * @return {number} Additional canvas size needed\n     * @private\n     */\n    RegularShape.prototype.calculateLineJoinSize_ = function (lineJoin, strokeWidth, miterLimit) {\n        if (strokeWidth === 0 ||\n            this.points_ === Infinity ||\n            (lineJoin !== 'bevel' && lineJoin !== 'miter')) {\n            return strokeWidth;\n        }\n        // m  | ^\n        // i  | |\\                  .\n        // t >|  #\\\n        // e  | |\\ \\              .\n        // r      \\s\\\n        //      |  \\t\\          .                 .\n        //          \\r\\                      .   .\n        //      |    \\o\\      .          .  . . .\n        //          e \\k\\            .  .    . .\n        //      |      \\e\\  .    .  .       . .\n        //       d      \\ \\  .  .          . .\n        //      | _ _a_ _\\#  .            . .\n        //   r1          / `             . .\n        //      |                       . .\n        //       b     /               . .\n        //      |                     . .\n        //           / r2            . .\n        //      |                        .   .\n        //         /                           .   .\n        //      |α                                   .   .\n        //       /                                         .   .\n        //      ° center\n        var r1 = this.radius_;\n        var r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n        if (r1 < r2) {\n            var tmp = r1;\n            r1 = r2;\n            r2 = tmp;\n        }\n        var points = this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n        var alpha = (2 * Math.PI) / points;\n        var a = r2 * Math.sin(alpha);\n        var b = Math.sqrt(r2 * r2 - a * a);\n        var d = r1 - b;\n        var e = Math.sqrt(a * a + d * d);\n        var miterRatio = e / a;\n        if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n            return miterRatio * strokeWidth;\n        }\n        // Calculate the distnce from center to the stroke corner where\n        // it was cut short because of the miter limit.\n        //              l\n        //        ----+---- <= distance from center to here is maxr\n        //       /####|k ##\\\n        //      /#####^#####\\\n        //     /#### /+\\# s #\\\n        //    /### h/+++\\# t #\\\n        //   /### t/+++++\\# r #\\\n        //  /### a/+++++++\\# o #\\\n        // /### p/++ fill +\\# k #\\\n        ///#### /+++++^+++++\\# e #\\\n        //#####/+++++/+\\+++++\\#####\\\n        var k = strokeWidth / 2 / miterRatio;\n        var l = (strokeWidth / 2) * (d / e);\n        var maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n        var bevelAdd = maxr - r1;\n        if (this.radius2_ === undefined || lineJoin === 'bevel') {\n            return bevelAdd * 2;\n        }\n        // If outer miter is over the miter limit the inner miter may reach through the\n        // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n        var aa = r1 * Math.sin(alpha);\n        var bb = Math.sqrt(r1 * r1 - aa * aa);\n        var dd = r2 - bb;\n        var ee = Math.sqrt(aa * aa + dd * dd);\n        var innerMiterRatio = ee / aa;\n        if (innerMiterRatio <= miterLimit) {\n            var innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n            return 2 * Math.max(bevelAdd, innerLength);\n        }\n        return bevelAdd * 2;\n    };\n    /**\n     * @return {RenderOptions}  The render options\n     * @protected\n     */\n    RegularShape.prototype.createRenderOptions = function () {\n        var lineJoin = defaultLineJoin;\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n        var maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n        var size = Math.ceil(2 * maxRadius + add);\n        return {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit,\n        };\n    };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render = function () {\n        this.renderOptions_ = this.createRenderOptions();\n        var size = this.renderOptions_.size;\n        this.canvas_ = {};\n        this.size_ = [size, size];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} pixelRatio The pixel ratio.\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, pixelRatio) {\n        context.scale(pixelRatio, pixelRatio);\n        // set origin to canvas center\n        context.translate(renderOptions.size / 2, renderOptions.size / 2);\n        this.createPath_(context);\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineJoin = renderOptions.lineJoin;\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            // determine if fill is transparent (or pattern or gradient)\n            var opacity = 0;\n            if (typeof color === 'string') {\n                color = asArray(color);\n            }\n            if (color === null) {\n                opacity = 1;\n            }\n            else if (Array.isArray(color)) {\n                opacity = color.length === 4 ? color[3] : 1;\n            }\n            if (opacity === 0) {\n                // if a transparent fill style is set, create an extra hit-detection image\n                // with a default fill style\n                var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n                this.hitDetectionCanvas_ = context.canvas;\n                this.drawHitDetectionCanvas_(renderOptions, context);\n            }\n        }\n        if (!this.hitDetectionCanvas_) {\n            this.hitDetectionCanvas_ = this.getImage(1);\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context The context to draw in.\n     */\n    RegularShape.prototype.createPath_ = function (context) {\n        var points = this.points_;\n        var radius = this.radius_;\n        if (points === Infinity) {\n            context.arc(0, 0, radius, 0, 2 * Math.PI);\n        }\n        else {\n            var radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n            if (this.radius2_ !== undefined) {\n                points *= 2;\n            }\n            var startAngle = this.angle_ - Math.PI / 2;\n            var step = (2 * Math.PI) / points;\n            for (var i = 0; i < points; i++) {\n                var angle0 = startAngle + i * step;\n                var radiusC = i % 2 === 0 ? radius : radius2;\n                context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n            }\n            context.closePath();\n        }\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context) {\n        // set origin to canvas center\n        context.translate(renderOptions.size / 2, renderOptions.size / 2);\n        this.createPath_(context);\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineJoin = renderOptions.lineJoin;\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n         * @type {!Object<string, import(\"./IconImage.js\").default>}\n         * @private\n         */\n        this.cache_ = {};\n        /**\n         * @type {number}\n         * @private\n         */\n        this.cacheSize_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @return {import(\"./IconImage.js\").default} Icon image.\n     */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n     */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n     * Set the cache size of the icon cache. Default is `32`. Change this value when\n     * your map uses more than 32 different icon images and you are not caching icon\n     * styles on the application level.\n     * @param {number} maxCacheSize Cache max size.\n     * @api\n     */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number} [opt_maxEntries] Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = new RBush_(opt_maxEntries);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value,\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value,\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/style/Style\n */\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import GeometryType from 'ol/geom/GeometryType';\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n *\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n *\n *  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n *    styles[GeometryType.LINE_STRING]\n *  );\n *\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n *\n *  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n *    GeometryType.POLYGON\n *  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n * ```\n *\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {import(\"./Image.js\").default}\n         */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.hitDetectionRenderer_ =\n            options.hitDetectionRenderer !== undefined\n                ? options.hitDetectionRenderer\n                : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            renderer: this.getRenderer(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex(),\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Sets a custom renderer function for this style used\n     * in hit detection.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setHitDetectionRenderer = function (renderer) {\n        this.hitDetectionRenderer_ = renderer;\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getHitDetectionRenderer = function () {\n        return this.hitDetectionRenderer_;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>|null}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)',\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25,\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5,\n                }),\n                fill: fill,\n                stroke: stroke,\n            }),\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5],\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2,\n            }),\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width,\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue,\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2,\n                }),\n            }),\n            zIndex: Infinity,\n        }),\n    ];\n    styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Origin is at bottom left\n     * @api\n     */\n    BOTTOM_LEFT: 'bottom-left',\n    /**\n     * Origin is at bottom right\n     * @api\n     */\n    BOTTOM_RIGHT: 'bottom-right',\n    /**\n     * Origin is at top left\n     * @api\n     */\n    TOP_LEFT: 'top-left',\n    /**\n     * Origin is at top right\n     * @api\n     */\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { asString } from '../color.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar taintedTestContext = null;\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            if (!taintedTestContext) {\n                taintedTestContext = createCanvasContext2D(1, 1);\n            }\n            taintedTestContext.drawImage(this.image_, 0, 0);\n            try {\n                taintedTestContext.getImageData(0, 0, 1, 1);\n                this.tainted_ = false;\n            }\n            catch (e) {\n                taintedTestContext = null;\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        else {\n            this.size_ = [this.image_.width, this.image_.height];\n        }\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Image or Canvas element.\n     */\n    IconImage.prototype.getPixelRatio = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? pixelRatio : 1;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function (pixelRatio) {\n        if (!this.color_ ||\n            this.canvas_[pixelRatio] ||\n            this.imageState_ !== ImageState.LOADED) {\n            return;\n        }\n        var canvas = document.createElement('canvas');\n        this.canvas_[pixelRatio] = canvas;\n        canvas.width = Math.ceil(this.image_.width * pixelRatio);\n        canvas.height = Math.ceil(this.image_.height * pixelRatio);\n        var ctx = canvas.getContext('2d');\n        ctx.scale(pixelRatio, pixelRatio);\n        ctx.drawImage(this.image_, 0, 0);\n        ctx.globalCompositeOperation = 'multiply';\n        // Internet Explorer 11 does not support the multiply operation.\n        // If the canvas is tainted in Internet Explorer this still produces\n        // a solid color image with the shape of the icon.\n        if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n            ctx.fillStyle = asString(this.color_);\n            ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n            ctx.globalCompositeOperation = 'destination-in';\n            ctx.drawImage(this.image_, 0, 0);\n        }\n        else {\n            var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n            var data = imgData.data;\n            var r = this.color_[0] / 255.0;\n            var g = this.color_[1] / 255.0;\n            var b = this.color_[2] / 255.0;\n            var a = this.color_[3];\n            for (var i = 0, ii = data.length; i < ii; i += 4) {\n                data[i] *= r;\n                data[i + 1] *= g;\n                data[i + 2] *= b;\n                data[i + 3] *= a;\n            }\n            ctx.putImageData(imgData, 0, 0);\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { get as getIconImage } from './IconImage.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n            rotateWithView: rotateWithView,\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ =\n            options.anchorOrigin !== undefined\n                ? options.anchorOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ =\n            options.anchorXUnits !== undefined\n                ? options.anchorXUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ =\n            options.anchorYUnits !== undefined\n                ? options.anchorYUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size|undefined}\n         */\n        _this.imgSize_ = options.imgSize;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && _this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, \n        /** @type {string} */ (src), _this.imgSize_ !== undefined ? _this.imgSize_ : null, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ =\n            options.offsetOrigin !== undefined\n                ? options.offsetOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            color: this.color_ && this.color_.slice\n                ? this.color_.slice()\n                : this.color_ || undefined,\n            crossOrigin: this.crossOrigin_,\n            imgSize: this.imgSize_,\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            opacity: this.getOpacity(),\n            rotateWithView: this.getRotateWithView(),\n            rotation: this.getRotation(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            src: this.getSrc(),\n        });\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        var anchor = this.normalizedAnchor_;\n        if (!anchor) {\n            anchor = this.anchor_;\n            var size = this.getSize();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n                this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                if (!size) {\n                    return null;\n                }\n                anchor = this.anchor_.slice();\n                if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                    anchor[0] *= size[0];\n                }\n                if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                    anchor[1] *= size[1];\n                }\n            }\n            if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n                if (!size) {\n                    return null;\n                }\n                if (anchor === this.anchor_) {\n                    anchor = this.anchor_.slice();\n                }\n                if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                    this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                    anchor[0] = -anchor[0] + size[0];\n                }\n                if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                    this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                    anchor[1] = -anchor[1] + size[1];\n                }\n            }\n            this.normalizedAnchor_ = anchor;\n        }\n        var displacement = this.getDisplacement();\n        return [anchor[0] - displacement[0], anchor[1] + displacement[1]];\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * Get the pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} The pixel ratio of the image.\n     * @api\n     */\n    Icon.prototype.getPixelRatio = function (pixelRatio) {\n        return this.iconImage_.getPixelRatio(pixelRatio);\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    Icon.prototype.getHitDetectionImage = function () {\n        return this.iconImage_.getHitDetectionImage();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.listenImageChange = function (listener) {\n        this.iconImage_.addEventListener(EventType.CHANGE, listener);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.unlistenImageChange = function (listener) {\n        this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/tilegrid/WMTS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileGrid from './TileGrid.js';\nimport { find } from '../array.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nvar WMTSTileGrid = /** @class */ (function (_super) {\n    __extends(WMTSTileGrid, _super);\n    /**\n     * @param {Options} options WMTS options.\n     */\n    function WMTSTileGrid(options) {\n        var _this = _super.call(this, {\n            extent: options.extent,\n            origin: options.origin,\n            origins: options.origins,\n            resolutions: options.resolutions,\n            tileSize: options.tileSize,\n            tileSizes: options.tileSizes,\n            sizes: options.sizes,\n        }) || this;\n        /**\n         * @private\n         * @type {!Array<string>}\n         */\n        _this.matrixIds_ = options.matrixIds;\n        return _this;\n    }\n    /**\n     * @param {number} z Z.\n     * @return {string} MatrixId..\n     */\n    WMTSTileGrid.prototype.getMatrixId = function (z) {\n        return this.matrixIds_[z];\n    };\n    /**\n     * Get the list of matrix identifiers.\n     * @return {Array<string>} MatrixIds.\n     * @api\n     */\n    WMTSTileGrid.prototype.getMatrixIds = function () {\n        return this.matrixIds_;\n    };\n    return WMTSTileGrid;\n}(TileGrid));\nexport default WMTSTileGrid;\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [opt_extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [opt_matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\n    /** @type {!Array<number>} */\n    var resolutions = [];\n    /** @type {!Array<string>} */\n    var matrixIds = [];\n    /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n    var origins = [];\n    /** @type {!Array<import(\"../size.js\").Size>} */\n    var tileSizes = [];\n    /** @type {!Array<import(\"../size.js\").Size>} */\n    var sizes = [];\n    var matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n    var supportedCRSPropName = 'SupportedCRS';\n    var matrixIdsPropName = 'TileMatrix';\n    var identifierPropName = 'Identifier';\n    var scaleDenominatorPropName = 'ScaleDenominator';\n    var topLeftCornerPropName = 'TopLeftCorner';\n    var tileWidthPropName = 'TileWidth';\n    var tileHeightPropName = 'TileHeight';\n    var code = matrixSet[supportedCRSPropName];\n    var projection = getProjection(code);\n    var metersPerUnit = projection.getMetersPerUnit();\n    // swap origin x and y coordinates if axis orientation is lat/long\n    var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n    matrixSet[matrixIdsPropName].sort(function (a, b) {\n        return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n    });\n    matrixSet[matrixIdsPropName].forEach(function (elt) {\n        var matrixAvailable;\n        // use of matrixLimits to filter TileMatrices from GetCapabilities\n        // TileMatrixSet from unavailable matrix levels.\n        if (matrixLimits.length > 0) {\n            matrixAvailable = find(matrixLimits, function (elt_ml) {\n                if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n                    return true;\n                }\n                // Fallback for tileMatrix identifiers that don't get prefixed\n                // by their tileMatrixSet identifiers.\n                if (elt[identifierPropName].indexOf(':') === -1) {\n                    return (matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n                        elt_ml[matrixIdsPropName]);\n                }\n                return false;\n            });\n        }\n        else {\n            matrixAvailable = true;\n        }\n        if (matrixAvailable) {\n            matrixIds.push(elt[identifierPropName]);\n            var resolution = (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n            var tileWidth = elt[tileWidthPropName];\n            var tileHeight = elt[tileHeightPropName];\n            if (switchOriginXY) {\n                origins.push([\n                    elt[topLeftCornerPropName][1],\n                    elt[topLeftCornerPropName][0],\n                ]);\n            }\n            else {\n                origins.push(elt[topLeftCornerPropName]);\n            }\n            resolutions.push(resolution);\n            tileSizes.push(tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight]);\n            sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n        }\n    });\n    return new WMTSTileGrid({\n        extent: opt_extent,\n        origins: origins,\n        resolutions: resolutions,\n        matrixIds: matrixIds,\n        tileSizes: tileSizes,\n        sizes: sizes,\n    });\n}\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Anchor is a fraction\n     * @api\n     */\n    FRACTION: 'fraction',\n    /**\n     * Anchor is in pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n};\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {CanvasLineCap|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {CanvasLineJoin|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth(),\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {CanvasLineCap|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {CanvasLineJoin|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {CanvasLineCap|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {CanvasLineJoin|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * Operators and utilities used for style expressions\n * @module ol/style/expressions\n */\nimport PaletteTexture from '../webgl/PaletteTexture.js';\nimport { Uniforms } from '../renderer/webgl/TileLayer.js';\nimport { asArray, fromString, isStringColor } from '../color.js';\nimport { log2 } from '../math.js';\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expressions.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels.\n *   * `['get', 'attributeName']` fetches a feature attribute (it will be prefixed by `a_` in the shader)\n *     Note: those will be taken from the attributes provided to the renderer\n *   * `['resolution']` returns the current resolution\n *   * `['time']` returns the time in seconds since the creation of the layer\n *   * `['var', 'varName']` fetches a value from the style variables, or 0 if undefined\n *   * `['zoom']` returns the current zoom level\n *\n * * Math operators:\n *   * `['*', value1, value2]` multiplies `value1` by `value2`\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2]` adds `value1` and `value2`\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4.\n *   * `['color', red, green, blue, alpha]` creates a `color` value from `number` values; the `alpha` parameter is\n *     optional; if not specified, it will be set to 1.\n *     Note: `red`, `green` and `blue` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range).\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n/**\n * Possible inferred types from a given value or expression.\n * Note: these are binary flags.\n * @enum {number}\n */\nexport var ValueTypes = {\n    NUMBER: 1,\n    STRING: 2,\n    COLOR: 4,\n    BOOLEAN: 8,\n    NUMBER_ARRAY: 16,\n    ANY: 31,\n    NONE: 0,\n};\n/**\n * An operator declaration must contain two methods: `getReturnType` which returns a type based on\n * the operator arguments, and `toGlsl` which returns a GLSL-compatible string.\n * Note: both methods can process arguments recursively.\n * @typedef {Object} Operator\n * @property {function(Array<ExpressionValue>): ValueTypes|number} getReturnType Returns one or several types\n * @property {function(ParsingContext, Array<ExpressionValue>, ValueTypes=): string} toGlsl Returns a GLSL-compatible string\n * Note: takes in an optional type hint as 3rd parameter\n */\n/**\n * Operator declarations\n * @type {Object<string, Operator>}\n */\nexport var Operators = {};\n/**\n * Returns the possible types for a given value (each type being a binary flag)\n * To test a value use e.g. `getValueType(v) & ValueTypes.BOOLEAN`\n * @param {ExpressionValue} value Value\n * @return {ValueTypes|number} Type or types inferred from the value\n */\nexport function getValueType(value) {\n    if (typeof value === 'number') {\n        return ValueTypes.NUMBER;\n    }\n    if (typeof value === 'boolean') {\n        return ValueTypes.BOOLEAN;\n    }\n    if (typeof value === 'string') {\n        if (isStringColor(value)) {\n            return ValueTypes.COLOR | ValueTypes.STRING;\n        }\n        return ValueTypes.STRING;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Unhandled value type: \".concat(JSON.stringify(value)));\n    }\n    var valueArr = /** @type {Array<*>} */ (value);\n    var onlyNumbers = valueArr.every(function (v) {\n        return typeof v === 'number';\n    });\n    if (onlyNumbers) {\n        if (valueArr.length === 3 || valueArr.length === 4) {\n            return ValueTypes.COLOR | ValueTypes.NUMBER_ARRAY;\n        }\n        return ValueTypes.NUMBER_ARRAY;\n    }\n    if (typeof valueArr[0] !== 'string') {\n        throw new Error(\"Expected an expression operator but received: \".concat(JSON.stringify(valueArr)));\n    }\n    var operator = Operators[valueArr[0]];\n    if (operator === undefined) {\n        throw new Error(\"Unrecognized expression operator: \".concat(JSON.stringify(valueArr)));\n    }\n    return operator.getReturnType(valueArr.slice(1));\n}\n/**\n * Checks if only one value type is enabled in the input number.\n * @param {ValueTypes|number} valueType Number containing value type binary flags\n * @return {boolean} True if only one type flag is enabled, false if zero or multiple\n */\nexport function isTypeUnique(valueType) {\n    return log2(valueType) % 1 === 0;\n}\n/**\n * Context available during the parsing of an expression.\n * @typedef {Object} ParsingContext\n * @property {boolean} [inFragmentShader] If false, means the expression output should be made for a vertex shader\n * @property {Array<string>} variables List of variables used in the expression; contains **unprefixed names**\n * @property {Array<string>} attributes List of attributes used in the expression; contains **unprefixed names**\n * @property {Object<string, number>} stringLiteralsMap This object maps all encountered string values to a number\n * @property {Object<string, string>} functions Lookup of functions used by the style.\n * @property {number} [bandCount] Number of bands per pixel.\n * @property {Array<PaletteTexture>} [paletteTextures] List of palettes used by the style.\n */\n/**\n * Will return the number as a float with a dot separator, which is required by GLSL.\n * @param {number} v Numerical value.\n * @return {string} The value as string.\n */\nexport function numberToGlsl(v) {\n    var s = v.toString();\n    return s.indexOf('.') === -1 ? s + '.0' : s;\n}\n/**\n * Will return the number array as a float with a dot separator, concatenated with ', '.\n * @param {Array<number>} array Numerical values array.\n * @return {string} The array as a vector, e. g.: `vec3(1.0, 2.0, 3.0)`.\n */\nexport function arrayToGlsl(array) {\n    if (array.length < 2 || array.length > 4) {\n        throw new Error('`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.');\n    }\n    return \"vec\".concat(array.length, \"(\").concat(array.map(numberToGlsl).join(', '), \")\");\n}\n/**\n * Will normalize and converts to string a `vec4` color array compatible with GLSL.\n * @param {string|import(\"../color.js\").Color} color Color either in string format or [r, g, b, a] array format,\n * with RGB components in the 0..255 range and the alpha component in the 0..1 range.\n * Note that the final array will always have 4 components.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function colorToGlsl(color) {\n    var array = asArray(color).slice();\n    if (array.length < 4) {\n        array.push(1);\n    }\n    return arrayToGlsl(array.map(function (c, i) {\n        return i < 3 ? c / 255 : c;\n    }));\n}\n/**\n * Returns a stable equivalent number for the string literal.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @return {number} Number equivalent\n */\nexport function getStringNumberEquivalent(context, string) {\n    if (context.stringLiteralsMap[string] === undefined) {\n        context.stringLiteralsMap[string] = Object.keys(context.stringLiteralsMap).length;\n    }\n    return context.stringLiteralsMap[string];\n}\n/**\n * Returns a stable equivalent number for the string literal, for use in shaders. This number is then\n * converted to be a GLSL-compatible string.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @return {string} GLSL-compatible string containing a number\n */\nexport function stringToGlsl(context, string) {\n    return numberToGlsl(getStringNumberEquivalent(context, string));\n}\n/**\n * Recursively parses a style expression and outputs a GLSL-compatible string. Takes in a parsing context that\n * will be read and modified during the parsing operation.\n * @param {ParsingContext} context Parsing context\n * @param {ExpressionValue} value Value\n * @param {ValueTypes|number} [typeHint] Hint for the expected final type (can be several types combined)\n * @return {string} GLSL-compatible output\n */\nexport function expressionToGlsl(context, value, typeHint) {\n    // operator\n    if (Array.isArray(value) && typeof value[0] === 'string') {\n        var operator = Operators[value[0]];\n        if (operator === undefined) {\n            throw new Error(\"Unrecognized expression operator: \".concat(JSON.stringify(value)));\n        }\n        return operator.toGlsl(context, value.slice(1), typeHint);\n    }\n    var valueType = getValueType(value);\n    if ((valueType & ValueTypes.NUMBER) > 0) {\n        return numberToGlsl(/** @type {number} */ (value));\n    }\n    if ((valueType & ValueTypes.BOOLEAN) > 0) {\n        return value.toString();\n    }\n    if ((valueType & ValueTypes.STRING) > 0 &&\n        (typeHint === undefined || typeHint == ValueTypes.STRING)) {\n        return stringToGlsl(context, value.toString());\n    }\n    if ((valueType & ValueTypes.COLOR) > 0 &&\n        (typeHint === undefined || typeHint == ValueTypes.COLOR)) {\n        return colorToGlsl(/** @type {Array<number> | string} */ (value));\n    }\n    if ((valueType & ValueTypes.NUMBER_ARRAY) > 0) {\n        return arrayToGlsl(/** @type {Array<number>} */ (value));\n    }\n    throw new Error(\"Unexpected expression \".concat(value, \" (expected type \").concat(typeHint, \")\"));\n}\nfunction assertNumber(value) {\n    if (!(getValueType(value) & ValueTypes.NUMBER)) {\n        throw new Error(\"A numeric value was expected, got \".concat(JSON.stringify(value), \" instead\"));\n    }\n}\nfunction assertNumbers(values) {\n    for (var i = 0; i < values.length; i++) {\n        assertNumber(values[i]);\n    }\n}\nfunction assertString(value) {\n    if (!(getValueType(value) & ValueTypes.STRING)) {\n        throw new Error(\"A string value was expected, got \".concat(JSON.stringify(value), \" instead\"));\n    }\n}\nfunction assertBoolean(value) {\n    if (!(getValueType(value) & ValueTypes.BOOLEAN)) {\n        throw new Error(\"A boolean value was expected, got \".concat(JSON.stringify(value), \" instead\"));\n    }\n}\nfunction assertArgsCount(args, count) {\n    if (args.length !== count) {\n        throw new Error(\"Exactly \".concat(count, \" arguments were expected, got \").concat(args.length, \" instead\"));\n    }\n}\nfunction assertArgsMinCount(args, count) {\n    if (args.length < count) {\n        throw new Error(\"At least \".concat(count, \" arguments were expected, got \").concat(args.length, \" instead\"));\n    }\n}\nfunction assertArgsMaxCount(args, count) {\n    if (args.length > count) {\n        throw new Error(\"At most \".concat(count, \" arguments were expected, got \").concat(args.length, \" instead\"));\n    }\n}\nfunction assertArgsEven(args) {\n    if (args.length % 2 !== 0) {\n        throw new Error(\"An even amount of arguments was expected, got \".concat(args, \" instead\"));\n    }\n}\nfunction assertArgsOdd(args) {\n    if (args.length % 2 === 0) {\n        throw new Error(\"An odd amount of arguments was expected, got \".concat(args, \" instead\"));\n    }\n}\nfunction assertUniqueInferredType(args, types) {\n    if (!isTypeUnique(types)) {\n        throw new Error(\"Could not infer only one type from the following expression: \".concat(JSON.stringify(args)));\n    }\n}\nOperators['get'] = {\n    getReturnType: function (args) {\n        return ValueTypes.ANY;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertString(args[0]);\n        var value = args[0].toString();\n        if (context.attributes.indexOf(value) === -1) {\n            context.attributes.push(value);\n        }\n        var prefix = context.inFragmentShader ? 'v_' : 'a_';\n        return prefix + value;\n    },\n};\n/**\n * Get the uniform name given a variable name.\n * @param {string} variableName The variable name.\n * @return {string} The uniform name.\n */\nexport function uniformNameForVariable(variableName) {\n    return 'u_var_' + variableName;\n}\nOperators['var'] = {\n    getReturnType: function (args) {\n        return ValueTypes.ANY;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertString(args[0]);\n        var value = args[0].toString();\n        if (context.variables.indexOf(value) === -1) {\n            context.variables.push(value);\n        }\n        return uniformNameForVariable(value);\n    },\n};\nexport var PALETTE_TEXTURE_ARRAY = 'u_paletteTextures';\n// ['palette', index, colors]\nOperators['palette'] = {\n    getReturnType: function (args) {\n        return ValueTypes.COLOR;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumber(args[0]);\n        var index = expressionToGlsl(context, args[0]);\n        var colors = args[1];\n        if (!Array.isArray(colors)) {\n            throw new Error('The second argument of palette must be an array');\n        }\n        var numColors = colors.length;\n        var palette = new Uint8Array(numColors * 4);\n        for (var i = 0; i < numColors; i++) {\n            var candidate = colors[i];\n            /**\n             * @type {import('../color.js').Color}\n             */\n            var color = void 0;\n            if (typeof candidate === 'string') {\n                color = fromString(candidate);\n            }\n            else {\n                if (!Array.isArray(candidate)) {\n                    throw new Error('The second argument of palette must be an array of strings or colors');\n                }\n                var length_1 = candidate.length;\n                if (length_1 === 4) {\n                    color = candidate;\n                }\n                else {\n                    if (length_1 !== 3) {\n                        throw new Error(\"Expected palette color to have 3 or 4 values, got \".concat(length_1));\n                    }\n                    color = [candidate[0], candidate[1], candidate[2], 1];\n                }\n            }\n            var offset = i * 4;\n            palette[offset] = color[0];\n            palette[offset + 1] = color[1];\n            palette[offset + 2] = color[2];\n            palette[offset + 3] = color[3] * 255;\n        }\n        if (!context.paletteTextures) {\n            context.paletteTextures = [];\n        }\n        var paletteName = \"\".concat(PALETTE_TEXTURE_ARRAY, \"[\").concat(context.paletteTextures.length, \"]\");\n        var paletteTexture = new PaletteTexture(paletteName, palette);\n        context.paletteTextures.push(paletteTexture);\n        return \"texture2D(\".concat(paletteName, \", vec2((\").concat(index, \" + 0.5) / \").concat(numColors, \".0, 0.5))\");\n    },\n};\nvar GET_BAND_VALUE_FUNC = 'getBandValue';\nOperators['band'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsMinCount(args, 1);\n        assertArgsMaxCount(args, 3);\n        var band = args[0];\n        if (!(GET_BAND_VALUE_FUNC in context.functions)) {\n            var ifBlocks = '';\n            var bandCount = context.bandCount || 1;\n            for (var i = 0; i < bandCount; i++) {\n                var colorIndex = Math.floor(i / 4);\n                var bandIndex = i % 4;\n                if (bandIndex === bandCount - 1 && bandIndex === 1) {\n                    // LUMINANCE_ALPHA - band 1 assigned to rgb and band 2 assigned to alpha\n                    bandIndex = 3;\n                }\n                var textureName = \"\".concat(Uniforms.TILE_TEXTURE_ARRAY, \"[\").concat(colorIndex, \"]\");\n                ifBlocks += \"\\n          if (band == \".concat(i + 1, \".0) {\\n            return texture2D(\").concat(textureName, \", v_textureCoord + vec2(dx, dy))[\").concat(bandIndex, \"];\\n          }\\n        \");\n            }\n            context.functions[GET_BAND_VALUE_FUNC] = \"\\n        float getBandValue(float band, float xOffset, float yOffset) {\\n          float dx = xOffset / \".concat(Uniforms.TEXTURE_PIXEL_WIDTH, \";\\n          float dy = yOffset / \").concat(Uniforms.TEXTURE_PIXEL_HEIGHT, \";\\n          \").concat(ifBlocks, \"\\n        }\\n      \");\n        }\n        var bandExpression = expressionToGlsl(context, band);\n        var xOffsetExpression = expressionToGlsl(context, args[1] || 0);\n        var yOffsetExpression = expressionToGlsl(context, args[2] || 0);\n        return \"\".concat(GET_BAND_VALUE_FUNC, \"(\").concat(bandExpression, \", \").concat(xOffsetExpression, \", \").concat(yOffsetExpression, \")\");\n    },\n};\nOperators['time'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 0);\n        return 'u_time';\n    },\n};\nOperators['zoom'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 0);\n        return 'u_zoom';\n    },\n};\nOperators['resolution'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 0);\n        return 'u_resolution';\n    },\n};\nOperators['*'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\".concat(expressionToGlsl(context, args[0]), \" * \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nOperators['/'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\".concat(expressionToGlsl(context, args[0]), \" / \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nOperators['+'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\".concat(expressionToGlsl(context, args[0]), \" + \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nOperators['-'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\".concat(expressionToGlsl(context, args[0]), \" - \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nOperators['clamp'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 3);\n        assertNumbers(args);\n        var min = expressionToGlsl(context, args[1]);\n        var max = expressionToGlsl(context, args[2]);\n        return \"clamp(\".concat(expressionToGlsl(context, args[0]), \", \").concat(min, \", \").concat(max, \")\");\n    },\n};\nOperators['%'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"mod(\".concat(expressionToGlsl(context, args[0]), \", \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nOperators['^'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"pow(\".concat(expressionToGlsl(context, args[0]), \", \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nOperators['abs'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertNumbers(args);\n        return \"abs(\".concat(expressionToGlsl(context, args[0]), \")\");\n    },\n};\nOperators['floor'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertNumbers(args);\n        return \"floor(\".concat(expressionToGlsl(context, args[0]), \")\");\n    },\n};\nOperators['round'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertNumbers(args);\n        return \"floor(\".concat(expressionToGlsl(context, args[0]), \" + 0.5)\");\n    },\n};\nOperators['ceil'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertNumbers(args);\n        return \"ceil(\".concat(expressionToGlsl(context, args[0]), \")\");\n    },\n};\nOperators['sin'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertNumbers(args);\n        return \"sin(\".concat(expressionToGlsl(context, args[0]), \")\");\n    },\n};\nOperators['cos'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertNumbers(args);\n        return \"cos(\".concat(expressionToGlsl(context, args[0]), \")\");\n    },\n};\nOperators['atan'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsMinCount(args, 1);\n        assertArgsMaxCount(args, 2);\n        assertNumbers(args);\n        return args.length === 2\n            ? \"atan(\".concat(expressionToGlsl(context, args[0]), \", \").concat(expressionToGlsl(context, args[1]), \")\")\n            : \"atan(\".concat(expressionToGlsl(context, args[0]), \")\");\n    },\n};\nOperators['>'] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\".concat(expressionToGlsl(context, args[0]), \" > \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nOperators['>='] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\".concat(expressionToGlsl(context, args[0]), \" >= \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nOperators['<'] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\".concat(expressionToGlsl(context, args[0]), \" < \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nOperators['<='] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\".concat(expressionToGlsl(context, args[0]), \" <= \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nfunction getEqualOperator(operator) {\n    return {\n        getReturnType: function (args) {\n            return ValueTypes.BOOLEAN;\n        },\n        toGlsl: function (context, args) {\n            assertArgsCount(args, 2);\n            // find common type\n            var type = ValueTypes.ANY;\n            for (var i = 0; i < args.length; i++) {\n                type &= getValueType(args[i]);\n            }\n            if (type === ValueTypes.NONE) {\n                throw new Error(\"All arguments should be of compatible type, got \".concat(JSON.stringify(args), \" instead\"));\n            }\n            // Since it's not possible to have color types here, we can leave it out\n            // This fixes issues in case the value type is ambiguously detected as a color (e.g. the string 'red')\n            type &= ~ValueTypes.COLOR;\n            return \"(\".concat(expressionToGlsl(context, args[0], type), \" \").concat(operator, \" \").concat(expressionToGlsl(context, args[1], type), \")\");\n        },\n    };\n}\nOperators['=='] = getEqualOperator('==');\nOperators['!='] = getEqualOperator('!=');\nOperators['!'] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertBoolean(args[0]);\n        return \"(!\".concat(expressionToGlsl(context, args[0]), \")\");\n    },\n};\nfunction getDecisionOperator(operator) {\n    return {\n        getReturnType: function (args) {\n            return ValueTypes.BOOLEAN;\n        },\n        toGlsl: function (context, args) {\n            assertArgsMinCount(args, 2);\n            for (var i = 0; i < args.length; i++) {\n                assertBoolean(args[i]);\n            }\n            var result = '';\n            result = args\n                .map(function (arg) { return expressionToGlsl(context, arg); })\n                .join(\" \".concat(operator, \" \"));\n            result = \"(\".concat(result, \")\");\n            return result;\n        },\n    };\n}\nOperators['all'] = getDecisionOperator('&&');\nOperators['any'] = getDecisionOperator('||');\nOperators['between'] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 3);\n        assertNumbers(args);\n        var min = expressionToGlsl(context, args[1]);\n        var max = expressionToGlsl(context, args[2]);\n        var value = expressionToGlsl(context, args[0]);\n        return \"(\".concat(value, \" >= \").concat(min, \" && \").concat(value, \" <= \").concat(max, \")\");\n    },\n};\nOperators['array'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER_ARRAY;\n    },\n    toGlsl: function (context, args) {\n        assertArgsMinCount(args, 2);\n        assertArgsMaxCount(args, 4);\n        assertNumbers(args);\n        var parsedArgs = args.map(function (val) {\n            return expressionToGlsl(context, val, ValueTypes.NUMBER);\n        });\n        return \"vec\".concat(args.length, \"(\").concat(parsedArgs.join(', '), \")\");\n    },\n};\nOperators['color'] = {\n    getReturnType: function (args) {\n        return ValueTypes.COLOR;\n    },\n    toGlsl: function (context, args) {\n        assertArgsMinCount(args, 3);\n        assertArgsMaxCount(args, 4);\n        assertNumbers(args);\n        var array = /** @type {Array<number>} */ (args);\n        if (args.length === 3) {\n            array.push(1);\n        }\n        var parsedArgs = args.map(function (val, i) {\n            return (expressionToGlsl(context, val, ValueTypes.NUMBER) +\n                (i < 3 ? ' / 255.0' : ''));\n        });\n        return \"vec\".concat(args.length, \"(\").concat(parsedArgs.join(', '), \")\");\n    },\n};\nOperators['interpolate'] = {\n    getReturnType: function (args) {\n        var type = ValueTypes.COLOR | ValueTypes.NUMBER;\n        for (var i = 3; i < args.length; i += 2) {\n            type = type & getValueType(args[i]);\n        }\n        return type;\n    },\n    toGlsl: function (context, args, opt_typeHint) {\n        assertArgsEven(args);\n        assertArgsMinCount(args, 6);\n        // validate interpolation type\n        var type = args[0];\n        var interpolation;\n        switch (type[0]) {\n            case 'linear':\n                interpolation = 1;\n                break;\n            case 'exponential':\n                interpolation = type[1];\n                break;\n            default:\n                interpolation = null;\n        }\n        if (!interpolation) {\n            throw new Error(\"Invalid interpolation type for \\\"interpolate\\\" operator, received: \".concat(JSON.stringify(type)));\n        }\n        // compute input/output types\n        var typeHint = opt_typeHint !== undefined ? opt_typeHint : ValueTypes.ANY;\n        var outputType = Operators['interpolate'].getReturnType(args) & typeHint;\n        assertUniqueInferredType(args, outputType);\n        var input = expressionToGlsl(context, args[1]);\n        var exponent = numberToGlsl(interpolation);\n        var result = '';\n        for (var i = 2; i < args.length - 2; i += 2) {\n            var stop1 = expressionToGlsl(context, args[i]);\n            var output1 = result || expressionToGlsl(context, args[i + 1], outputType);\n            var stop2 = expressionToGlsl(context, args[i + 2]);\n            var output2 = expressionToGlsl(context, args[i + 3], outputType);\n            result = \"mix(\".concat(output1, \", \").concat(output2, \", pow(clamp((\").concat(input, \" - \").concat(stop1, \") / (\").concat(stop2, \" - \").concat(stop1, \"), 0.0, 1.0), \").concat(exponent, \"))\");\n        }\n        return result;\n    },\n};\nOperators['match'] = {\n    getReturnType: function (args) {\n        var type = ValueTypes.ANY;\n        for (var i = 2; i < args.length; i += 2) {\n            type = type & getValueType(args[i]);\n        }\n        type = type & getValueType(args[args.length - 1]);\n        return type;\n    },\n    toGlsl: function (context, args, opt_typeHint) {\n        assertArgsEven(args);\n        assertArgsMinCount(args, 4);\n        var typeHint = opt_typeHint !== undefined ? opt_typeHint : ValueTypes.ANY;\n        var outputType = Operators['match'].getReturnType(args) & typeHint;\n        assertUniqueInferredType(args, outputType);\n        var input = expressionToGlsl(context, args[0]);\n        var fallback = expressionToGlsl(context, args[args.length - 1], outputType);\n        var result = null;\n        for (var i = args.length - 3; i >= 1; i -= 2) {\n            var match = expressionToGlsl(context, args[i]);\n            var output = expressionToGlsl(context, args[i + 1], outputType);\n            result = \"(\".concat(input, \" == \").concat(match, \" ? \").concat(output, \" : \").concat(result || fallback, \")\");\n        }\n        return result;\n    },\n};\nOperators['case'] = {\n    getReturnType: function (args) {\n        var type = ValueTypes.ANY;\n        for (var i = 1; i < args.length; i += 2) {\n            type = type & getValueType(args[i]);\n        }\n        type = type & getValueType(args[args.length - 1]);\n        return type;\n    },\n    toGlsl: function (context, args, opt_typeHint) {\n        assertArgsOdd(args);\n        assertArgsMinCount(args, 3);\n        var typeHint = opt_typeHint !== undefined ? opt_typeHint : ValueTypes.ANY;\n        var outputType = Operators['case'].getReturnType(args) & typeHint;\n        assertUniqueInferredType(args, outputType);\n        for (var i = 0; i < args.length - 1; i += 2) {\n            assertBoolean(args[i]);\n        }\n        var fallback = expressionToGlsl(context, args[args.length - 1], outputType);\n        var result = null;\n        for (var i = args.length - 3; i >= 0; i -= 2) {\n            var condition = expressionToGlsl(context, args[i]);\n            var output = expressionToGlsl(context, args[i + 1], outputType);\n            result = \"(\".concat(condition, \" ? \").concat(output, \" : \").concat(result || fallback, \")\");\n        }\n        return result;\n    },\n};\n//# sourceMappingURL=expressions.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template\n                .replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/transform\n */\nimport { WORKER_OFFSCREEN_CANVAS } from './has.js';\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n    return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * @type {HTMLElement}\n * @private\n */\nvar transformStringDiv;\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    var transformString = 'matrix(' + mat.join(', ') + ')';\n    if (WORKER_OFFSCREEN_CANVAS) {\n        return transformString;\n    }\n    var node = transformStringDiv || (transformStringDiv = document.createElement('div'));\n    node.style.transform = transformString;\n    return node.style.transform;\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\nimport { toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.displacement_ = options.displacement;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number|import(\"../size.js\").Size} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    ImageStyle.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the displacement of the shape\n     * @return {Array<number>} Shape's center displacement\n     * @api\n     */\n    ImageStyle.prototype.getDisplacement = function () {\n        return this.displacement_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function () {\n        return abstract();\n    };\n    /**\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Pixel ratio.\n     */\n    ImageStyle.prototype.getPixelRatio = function (pixelRatio) {\n        return 1;\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the displacement.\n     *\n     * @param {Array<number>} displacement Displacement.\n     * @api\n     */\n    ImageStyle.prototype.setDisplacement = function (displacement) {\n        this.displacement_ = displacement;\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale);\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.listenImageChange = function (listener) {\n        abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/uri\n */\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n    var keyParams = [];\n    // Skip any null or undefined parameter values\n    Object.keys(params).forEach(function (k) {\n        if (params[k] !== null && params[k] !== undefined) {\n            keyParams.push(k + '=' + encodeURIComponent(params[k]));\n        }\n    });\n    var qs = keyParams.join('&');\n    // remove any trailing ? or &\n    uri = uri.replace(/[?&]$/, '');\n    // append ? or & depending on whether uri has existing parameters\n    uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n    return uri + qs;\n}\n//# sourceMappingURL=uri.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function CircleStyle(opt_options) {\n        var options = opt_options ? opt_options : {};\n        return _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke,\n            scale: options.scale !== undefined ? options.scale : 1,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            rotateWithView: options.rotateWithView !== undefined ? options.rotateWithView : false,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n    }\n    /**\n     * Clones the style.\n     * @return {CircleStyle} The cloned style.\n     * @api\n     */\n    CircleStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        return style;\n    };\n    /**\n     * Set the circle radius.\n     *\n     * @param {number} radius Circle radius.\n     * @api\n     */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n        this.render();\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < count >> 1) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count && priorities[rIndex] < priorities[lIndex]\n                ? rIndex\n                : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map"],"sourceRoot":""}