{"version":3,"sources":["webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/Image.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/Object.js"],"names":["SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","Kinetic","decay","minVelocity","delay","this","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","prototype","begin","length","update","x","y","push","Date","now","end","lastIndex","firstIndex","duration","dx","dy","Math","atan2","sqrt","getDistance","getAngle","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","call","TypeError","String","__","constructor","create","Observable","_super","_this","on","onInternal","once","onceInternal","un","unInternal","revision_","changed","dispatchEvent","CHANGE","getRevision","type","listener","isArray","len","keys","i","key","ol_key","unByKey","ii","removeEventListener","MapBrowserEvent","map","originalEvent","opt_dragging","opt_frameState","pixel_","coordinate_","dragging","undefined","defineProperty","get","getEventPixel","set","pixel","enumerable","configurable","getCoordinateFromPixel","coordinate","preventDefault","stopPropagation","POSTRENDER","MOVESTART","MOVEEND","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","element","getViewport","activePointers_","trackedTouches_","element_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","bind","addEventListener","EventType","TOUCHMOVE","passive","emulateClick_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","setTimeout","updateActivePointers_","event","pointerId","handlePointerUp_","defaultPrevented","isMouseActionButton_","forEach","button","property","value","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","disposeInternal","Target","LAYERGROUP","SIZE","TARGET","VIEW","PluggableMap","options","optionsInternal","createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","document","createElement","className","window","style","position","overflow","width","height","overlayContainer_","zIndex","pointerEvents","appendChild","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","keyHandlerKeys_","controls","Collection","interactions","overlays_","overlays","overlayIdIndex_","renderer_","handleResize_","postRenderFunctions_","tileQueue_","TileQueue","getTilePriority","handleTileChange_","addChangeListener","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","setProperties","values","control","setMap","CollectionEventType","ADD","REMOVE","interaction","addOverlayInternal_","overlay","id","getId","toString","createRenderer","Error","addControl","getControls","addInteraction","getInteractions","addLayer","layer","layers","getLayerGroup","getLayers","addOverlay","getOverlays","setTarget","forEachFeatureAtPixel","callback","opt_options","getCoordinateFromPixelInternal","hitTolerance","layerFilter","checkWrapped","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","left","top","getTarget","getTargetElement","target","getElementById","getView","getProjection","frameState","pixelToCoordinateTransform","slice","getOverlayById","getLoading","layerStatesArray","getLayerStatesArray","source","getSource","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","coordinateToPixelTransform","getRenderer","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","tile","tileSourceKey","tileCenter","tileResolution","browserEvent","opt_type","mapBrowserEvent","handleMapBrowserEvent","eventType","WHEEL","KEYDOWN","rootNode","contains","documentElement","interactionsArray","getArray","getMap","getActive","cont","handleEvent","propagationStopped","handlePostRender","tileQueue","isEmpty","maxTotalLoading","maxNewLoads","hints","viewHints","ViewHint","ANIMATING","INTERACTING","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","hasListener","RENDERCOMPLETE","animate","dispatchRenderEvent","postRenderFunctions","getAnimating","resolveConstraints","render","CONTEXTMENU","RESIZE","dispose","KEYPRESS","updateSize","cancelAnimationFrame","handleViewPropertyChanged_","view","updateViewportSize_","ObjectEventType","PROPERTYCHANGE","layerGroup","isRendered","renderSync","redrawText","layerStates","hasRenderer","handleFontsChanged","requestAnimationFrame","removeControl","remove","removeInteraction","removeLayer","removeOverlay","size","previousFrameState","isDef","getHints","viewState","getState","declutterTree","extent","center","resolution","rotation","index","layerIndex","usedTiles","wantedTiles","renderFrame","apply","moveStart","MapEvent","MapEventType","idle","setLayerGroup","setSize","setView","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","isNaN","console","warn","parseInt","setViewportSize","View","Map","onFocusOnly","Composite","ImageBase","state","getExtent","getImage","getPixelRatio","getResolution","load","ImageWrapper","src","crossOrigin","imageLoadFunction","ImageState","IDLE","src_","image_","Image","unlisten_","imageLoadFunction_","handleImageError_","ERROR","unlistenImage_","handleImageLoad_","LOADED","LOADING","listenImage","setImage","image","loadHandler","errorHandler","img","promise","decode","listening_1","unlisten","then","catch","error","name","message","listenerKeys","LOAD","ImageTile","tileCoord","tileLoadFunction","crossOrigin_","tileLoadFunction_","getBlankImage","naturalWidth","naturalHeight","EMPTY","ctx","fillStyle","fillRect","canvas","ObjectEvent","oldValue","BaseObject","opt_values","values_","getKeys","getProperties","hasProperties","notify","removeChangeListener","opt_silent","applyProperties","unset"],"mappings":"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","file":"js/chunk-f569afc8.d2f81d48.js","sourcesContent":["/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { listen, listenOnce, unlistenByKey } from './events.js';\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type|Type[], listener: (event: EventClass) => ?) => Return} OnSignature\n */\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return} CombinedOnSignature\n */\n/***\n * @typedef {import(\"./events\").EventsKey|Array<import(\"./events\").EventsKey>} OnReturn\n */\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {OnSignature<EventTypes, import(\"./events/Event.js\").default, OnReturn>}\n         */\n        _this.on = _this.onInternal;\n        /***\n         * @type {OnSignature<EventTypes, import(\"./events/Event.js\").default, OnReturn>}\n         */\n        _this.once = _this.onceInternal;\n        /***\n         * @type {OnSignature<EventTypes, import(\"./events/Event.js\").default, void>}\n         */\n        _this.un = _this.unInternal;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * @param {string|Array<string>} type Type.\n     * @param {function(?): ?} listener Listener.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n     * @protected\n     */\n    Observable.prototype.onInternal = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * @param {string|Array<string>} type Type.\n     * @param {function(?): ?} listener Listener.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n     * @protected\n     */\n    Observable.prototype.onceInternal = function (type, listener) {\n        var key;\n        if (Array.isArray(type)) {\n            var len = type.length;\n            key = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                key[i] = listenOnce(this, type[i], listener);\n            }\n        }\n        else {\n            key = listenOnce(this, /** @type {string} */ (type), listener);\n        }\n        /** @type {Object} */ (listener).ol_key = key;\n        return key;\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type Type.\n     * @param {function(?): ?} listener Listener.\n     * @protected\n     */\n    Observable.prototype.unInternal = function (type, listener) {\n        var key = /** @type {Object} */ (listener).ol_key;\n        if (key) {\n            unByKey(key);\n        }\n        else if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                this.removeEventListener(type[i], listener);\n            }\n        }\n        else {\n            this.removeEventListener(type, listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {EVENT} originalEvent Original event.\n     * @param {boolean} [opt_dragging] Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n     */\n    function MapBrowserEvent(type, map, originalEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {EVENT}\n         * @api\n         */\n        _this.originalEvent = originalEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {?import(\"./pixel.js\").Pixel}\n         */\n        _this.pixel_ = null;\n        /**\n         * The coordinate in the user projection corresponding to the original browser event.\n         * @type {?import(\"./coordinate.js\").Coordinate}\n         */\n        _this.coordinate_ = null;\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n        /**\n         * The map pixel relative to the viewport corresponding to the original event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        get: function () {\n            if (!this.pixel_) {\n                this.pixel_ = this.map.getEventPixel(this.originalEvent);\n            }\n            return this.pixel_;\n        },\n        set: function (pixel) {\n            this.pixel_ = pixel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n        /**\n         * The coordinate corresponding to the original browser event.  This will be in the user\n         * projection if one is set.  Otherwise it will be in the view projection.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        get: function () {\n            if (!this.coordinate_) {\n                this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n            }\n            return this.coordinate_;\n        },\n        set: function (coordinate) {\n            this.coordinate_ = coordinate;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        if ('preventDefault' in this.originalEvent) {\n            /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n        }\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        if ('stopPropagation' in this.originalEvent) {\n            /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n        }\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend',\n};\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport { PASSIVE_EVENT_LISTENERS } from './has.js';\nimport { VOID } from './functions.js';\nimport { listen, unlistenByKey } from './events.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n         * @type {boolean}\n         */\n        _this.emulateClicks_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        _this.element_ = element;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(element, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.originalPointerMoveEvent_;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(element, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        /**\n         * @private\n         */\n        _this.boundHandleTouchMove_ = _this.handleTouchMove_.bind(_this);\n        _this.element_.addEventListener(EventType.TOUCHMOVE, _this.boundHandleTouchMove_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n        return _this;\n    }\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(\n            /** @this {MapBrowserEventHandler} */\n            function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.preventDefault().\n        if (this.emulateClicks_ &&\n            !newEvent.defaultPrevented &&\n            !this.dragging_ &&\n            this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.emulateClicks_ = this.activePointers_ === 0;\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // Store a copy of the down event\n        this.down_ = /** @type {PointerEvent} */ ({});\n        for (var property in pointerEvent) {\n            var value = pointerEvent[property];\n            this.down_[property] = typeof value === 'function' ? VOID : value;\n        }\n        if (this.dragListenerKeys_.length === 0) {\n            var doc = this.map_.getOwnerDocument();\n            this.dragListenerKeys_.push(listen(doc, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.element_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n            if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n                this.dragListenerKeys_.push(listen(this.element_.getRootNode(), MapBrowserEventType.POINTERUP, this.handlePointerUp_, this));\n            }\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserEvent matches the PointerEvent type.\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        this.originalPointerMoveEvent_ = pointerEvent;\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * Flexible handling of a `touch-action: none` css equivalent: because calling\n     * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n     * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n     * when an interaction (currently `DragPan` handles the event.\n     * @param {TouchEvent} event Event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handleTouchMove_ = function (event) {\n        // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n        // may not be initialized yet when we get here on a platform without native pointer events.\n        var originalEvent = this.originalPointerMoveEvent_;\n        if ((!originalEvent || originalEvent.defaultPrevented) &&\n            (typeof event.cancelable !== 'boolean' || event.cancelable === true)) {\n            event.preventDefault();\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return (this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) >\n                this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_);\n    };\n    /**\n     * Clean up.\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        this.element_.removeEventListener(EventType.TOUCHMOVE, this.boundHandleTouchMove_);\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        this.element_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(Target));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view',\n};\n//# sourceMappingURL=MapProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, { getTilePriority } from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS } from './has.js';\nimport { TRUE } from './functions.js';\nimport { apply as applyTransform, create as createTransform, } from './transform.js';\nimport { assert } from './asserts.js';\nimport { clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty, } from './extent.js';\nimport { fromUserCoordinate, toUserCoordinate } from './proj.js';\nimport { hasArea } from './size.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { removeNode } from './dom.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {PluggableMapOnSignature<import(\"./Observable.js\").OnReturn>}\n         */\n        _this.on;\n        /***\n         * @type {PluggableMapOnSignature<import(\"./Observable.js\").OnReturn>}\n         */\n        _this.once;\n        /***\n         * @type {PluggableMapOnSignature<void>}\n         */\n        _this.un;\n        var optionsInternal = createOptionsInternal(options);\n        /** @private */\n        _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ =\n            options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ =\n            options.pixelRatio !== undefined\n                ? options.pixelRatio\n                : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.postRenderTimeoutHandle_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = /** @this {PluggableMap} */ function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className =\n            'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.style.pointerEvents = 'none';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.moveTolerance_ = options.moveTolerance;\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = null;\n        /**\n         * @type {undefined|function(Event): void}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        _this.addChangeListener(MapProperty.LAYERGROUP, _this.handleLayerGroupChanged_);\n        _this.addChangeListener(MapProperty.VIEW, _this.handleViewChanged_);\n        _this.addChangeListener(MapProperty.SIZE, _this.handleSizeChanged_);\n        _this.addChangeListener(MapProperty.TARGET, _this.handleTargetChanged_);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        function (control) {\n            control.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        function (interaction) {\n            interaction.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(\n            /** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }.bind(_this));\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * Clean up.\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions} [opt_options] Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions} [opt_options] Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * an empty array if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = [];\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     *\n     * Note: this may give false positives unless the map layers have had different `className`\n     * properties assigned to them.\n     *\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions} [opt_options] Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || {};\n        var hitTolerance = options.hitTolerance !== undefined ? options.hitTolerance : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions} [opt_options] Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in user projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     */\n    PluggableMap.prototype.getEventCoordinateInternal = function (event) {\n        return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {UIEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = \n        //FIXME Are we really calling this with a TouchEvent anywhere?\n        'changedTouches' in event\n            ? /** @type {TouchEvent} */ (event).changedTouches[0]\n            : /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top,\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string'\n                ? document.getElementById(target)\n                : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * user projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     */\n    PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * @return {boolean} Layers have sources that are still loading.\n     */\n    PluggableMap.prototype.getLoading = function () {\n        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layer = layerStatesArray[i].layer;\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the user\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n        return this.getPixelFromCoordinateInternal(viewCoordinate);\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     */\n    PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return /** @type {View} */ (this.get(MapProperty.VIEW));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @return {!Document} The document where the map is displayed.\n     */\n    PluggableMap.prototype.getOwnerDocument = function () {\n        var targetElement = this.getTargetElement();\n        return targetElement ? targetElement.ownerDocument : document;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        return getTilePriority(this.frameState_, tile, tileSourceKey, tileCenter, tileResolution);\n    };\n    /**\n     * @param {UIEvent} browserEvent Browser event.\n     * @param {string} [opt_type] Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n        var eventType = originalEvent.type;\n        if (eventType === PointerEventType.POINTERDOWN ||\n            eventType === EventType.WHEEL ||\n            eventType === EventType.KEYDOWN) {\n            var doc = this.getOwnerDocument();\n            var rootNode = this.viewport_.getRootNode\n                ? this.viewport_.getRootNode()\n                : doc;\n            var target = /** @type {Node} */ (originalEvent.target);\n            if (\n            // Abort if the target is a child of the container for elements whose events are not meant\n            // to be handled by map interactions.\n            this.overlayContainerStopEvent_.contains(target) ||\n                // Abort if the event target is a child of the container that is no longer in the page.\n                // It's possible for the target to no longer be in the page if it has been removed in an\n                // event listener, this might happen in a Control that recreates it's content based on\n                // user interaction either manually or via a render in something like https://reactjs.org/\n                !(rootNode === doc ? doc.documentElement : rootNode).contains(target)) {\n                return;\n            }\n        }\n        mapBrowserEvent.frameState = this.frameState_;\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            var interactionsArray = this.getInteractions().getArray().slice();\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (interaction.getMap() !== this ||\n                    !interaction.getActive() ||\n                    !this.getTargetElement()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont || mapBrowserEvent.propagationStopped) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState &&\n            this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n            !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() &&\n            !this.getLoading()) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView() && !this.getView().getAnimating()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.mapBrowserEventHandler_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n            this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n            this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n            this.mapBrowserEventHandler_.dispose();\n            this.mapBrowserEventHandler_ = null;\n            removeNode(this.viewport_);\n        }\n        if (!targetElement) {\n            if (this.renderer_) {\n                clearTimeout(this.postRenderTimeoutHandle_);\n                this.postRenderTimeoutHandle_ = undefined;\n                this.postRenderFunctions_.length = 0;\n                this.renderer_.dispose();\n                this.renderer_ = null;\n            }\n            if (this.animationDelayKey_) {\n                cancelAnimationFrame(this.animationDelayKey_);\n                this.animationDelayKey_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            if (!this.renderer_) {\n                this.renderer_ = this.createRenderer();\n            }\n            this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, this.moveTolerance_);\n            for (var key in MapBrowserEventType) {\n                this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], this.handleMapBrowserEvent.bind(this));\n            }\n            this.viewport_.addEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_, false);\n            this.viewport_.addEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n            var keyboardEventTarget = !this.keyboardEventTarget_\n                ? targetElement\n                : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this),\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.updateViewportSize_();\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this),\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Redraws all text after new fonts have loaded\n     */\n    PluggableMap.prototype.redrawText = function () {\n        var layerStates = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n            var layer = layerStates[i].layer;\n            if (layer.hasRenderer()) {\n                layer.getRenderer().handleFontsChanged();\n            }\n        }\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.renderer_ && this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var _this = this;\n        var size = this.getSize();\n        var view = this.getView();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            var viewState = view.getState();\n            frameState = {\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterTree: null,\n                extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n                index: this.frameIndex_++,\n                layerIndex: 0,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {},\n            };\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        if (!this.postRenderTimeoutHandle_) {\n            this.postRenderTimeoutHandle_ = setTimeout(function () {\n                _this.postRenderTimeoutHandle_ = undefined;\n                _this.handlePostRender();\n            }, 0);\n        }\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string} [target] The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        var size = undefined;\n        if (targetElement) {\n            var computedStyle = getComputedStyle(targetElement);\n            var width = targetElement.offsetWidth -\n                parseFloat(computedStyle['borderLeftWidth']) -\n                parseFloat(computedStyle['paddingLeft']) -\n                parseFloat(computedStyle['paddingRight']) -\n                parseFloat(computedStyle['borderRightWidth']);\n            var height = targetElement.offsetHeight -\n                parseFloat(computedStyle['borderTopWidth']) -\n                parseFloat(computedStyle['paddingTop']) -\n                parseFloat(computedStyle['paddingBottom']) -\n                parseFloat(computedStyle['borderBottomWidth']);\n            if (!isNaN(width) && !isNaN(height)) {\n                size = [width, height];\n                if (!hasArea(size)) {\n                    // eslint-disable-next-line\n                    console.warn(\"No map visible because the map container's width or height are 0.\");\n                }\n            }\n        }\n        this.setSize(size);\n        this.updateViewportSize_();\n    };\n    /**\n     * Recomputes the viewport size and save it on the view object (if any)\n     * @private\n     */\n    PluggableMap.prototype.updateViewportSize_ = function () {\n        var view = this.getView();\n        if (view) {\n            var size = undefined;\n            var computedStyle = getComputedStyle(this.viewport_);\n            if (computedStyle.width && computedStyle.height) {\n                size = [\n                    parseInt(computedStyle.width, 10),\n                    parseInt(computedStyle.height, 10),\n                ];\n            }\n            view.setViewportSize(size);\n        }\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget =\n            typeof options.keyboardEventTarget === 'string'\n                ? document.getElementById(options.keyboardEventTarget)\n                : options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers &&\n        typeof ( /** @type {?} */(options.layers).getLayers) === 'function'\n        ? /** @type {LayerGroup} */ (options.layers)\n        : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] =\n        options.view !== undefined ? options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.controls).getArray) === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.interactions).getArray) ===\n                'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.overlays).getArray) === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values,\n    };\n}\nexport default PluggableMap;\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport { assign } from './obj.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions({\n                onFocusOnly: true,\n            });\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { IMAGE_DECODE } from './has.js';\nimport { getHeight } from './extent.js';\nimport { listenOnce, unlistenByKey } from './events.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n        this.resolution = getHeight(this.extent) / this.image_.height;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.src && IMAGE_DECODE) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise\n            .then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        })\n            .catch(function (error) {\n            if (listening_1) {\n                // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n                //        https://bugs.webkit.org/show_bug.cgi?id=198527\n                if (error.name === 'EncodingError' &&\n                    error.message === 'Invalid image type.') {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler),\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange',\n};\n/**\n * @typedef {'propertychange'} Types\n */\n//# sourceMappingURL=ObjectEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        _this.key = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n     * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n     */\n    ImageTile.prototype.setImage = function (element) {\n        this.image_ = element;\n        this.state = TileState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.tileLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=ImageState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport { assign, isEmpty } from './obj.js';\nimport { getUid } from './util.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {ObjectOnSignature<import(\"./Observable.js\").OnReturn>}\n         */\n        _this.on;\n        /***\n         * @type {ObjectOnSignature<import(\"./Observable.js\").OnReturn>}\n         */\n        _this.once;\n        /***\n         * @type {ObjectOnSignature<void>}\n         */\n        _this.un;\n        // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {Object<string, *>}\n         */\n        _this.values_ = null;\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_ && this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return (this.values_ && Object.keys(this.values_)) || [];\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return (this.values_ && assign({}, this.values_)) || {};\n    };\n    /**\n     * @return {boolean} The object has properties.\n     */\n    BaseObject.prototype.hasProperties = function () {\n        return !!this.values_;\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = \"change:\" + key;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {import(\"./events.js\").Listener} listener Listener.\n     */\n    BaseObject.prototype.addChangeListener = function (key, listener) {\n        this.addEventListener(\"change:\" + key, listener);\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {import(\"./events.js\").Listener} listener Listener.\n     */\n    BaseObject.prototype.removeChangeListener = function (key, listener) {\n        this.removeEventListener(\"change:\" + key, listener);\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean} [opt_silent] Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        var values = this.values_ || (this.values_ = {});\n        if (opt_silent) {\n            values[key] = value;\n        }\n        else {\n            var oldValue = values[key];\n            values[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean} [opt_silent] Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Apply any properties from another object without triggering events.\n     * @param {BaseObject} source The source object.\n     * @protected\n     */\n    BaseObject.prototype.applyProperties = function (source) {\n        if (!source.values_) {\n            return;\n        }\n        assign(this.values_ || (this.values_ = {}), source.values_);\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean} [opt_silent] Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (this.values_ && key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (isEmpty(this.values_)) {\n                this.values_ = null;\n            }\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map"],"sourceRoot":""}