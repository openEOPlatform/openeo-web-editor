{"version":3,"sources":["webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/WMTSRequestEncoding.js","webpack:///./node_modules/ol/source/WMTS.js","webpack:///./node_modules/ol/source/GeoTIFF.js","webpack:///./node_modules/ol/source/DataTile.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/Source.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","XYZ","_super","opt_options","options","interpolate","undefined","imageSmoothing","projection","tileGrid","extent","maxResolution","maxZoom","minZoom","tileSize","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","url","urls","wrapX","transition","attributionsCollapsible","zDirection","RBush","opt_maxEntries","rbush_","items_","insert","value","item","minX","minY","maxX","maxY","load","extents","values","items","length","i","l","remove","uid","update","bbox","getAll","all","map","getInExtent","search","forEach","callback","forEach_","forEachInExtent","result","isEmpty","clear","getExtent","opt_extent","data","toJSON","concat","rbush","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","expireCache","keep","pop","containsKey","key","f","entry","value_","key_","newer","get","older","getKeys","keys","getValues","peekLast","peekLastKey","peekFirstKey","replace","set","setSize","size","VectorSourceEvent","type","opt_feature","opt_features","_this","feature","features","VectorSource","state","READY","on","once","un","loader_","format_","format","overlaps_","overlaps","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","isArray","getArray","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","changed","featureKey","addToIndex_","setupChangeEvents_","geometry","getGeometry","dispatchEvent","ADDFEATURE","CHANGE","handleFeatureChange_","PROPERTYCHANGE","valid","id","getId","toString","addFeatures","newFeatures","geometryFeatures","length_1","push","length_2","hasListener","length_3","modifyingCollection","addEventListener","evt","REMOVEFEATURE","ADD","bind","REMOVE","removeFeature","opt_fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","CLEAR","forEachFeature","forEachFeatureAtCoordinateDirect","coordinate","forEachFeatureInExtent","intersectsCoordinate","forEachFeatureIntersectingExtent","intersectsExtent","getFeaturesCollection","getFeatures","slice","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","x","y","closestFeature","closestPoint","NaN","minSquaredDistance","Infinity","filter","previousMinSquaredDistance","closestPointXY","minDistance","Math","sqrt","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","event","sid","removeFromIdIndex_","CHANGEFEATURE","hasFeature","getLength","loadFeatures","resolution","loadedExtentsRtree","extentsToLoad","_loop_1","ii","extentToLoad","alreadyLoaded","object","this_1","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","loading","refresh","removeLoadedExtent","obj","featureChangeKeys","removed","setLoader","setUrl","UNDEFINED","LOADING","ERROR","UrlTile","generateTileUrlFunction_","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","handleTileChange","tile","tileState","getState","TileState","TileEventType","TILELOADSTART","TILELOADERROR","LOADED","TILELOADEND","setTileLoadFunction","tileCache","setTileUrlFunction","pruneExceptNewestZ","setKey","join","tileCoord","pixelRatio","useTile","z","tileCoordKey","TileImage","defaultTileLoadFunction","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","usedTiles","usedTileCache","getTileCacheForProjection","getGutterForProjection","getProjection","getGutter","getKey","getInterpolate","getOpaque","getTileGridForProjection","thisProj","projKey","TileCache","createTile_","urlTileCoord","getTileCoordForTileUrlFunction","tileUrl","IDLE","EMPTY","tileOptions","EventType","getTile","sourceProjection","cache","sourceTileGrid","targetTileGrid","wrappedTileCoord","newTile","getTilePixelRatio","getTileInternal","interimTile","refreshInterimChain","setRenderReprojectionEdges","render","setTileGridForProjection","tilegrid","proj","imageTile","src","getImage","TileSource","opaque_","tilePixelRatio_","getTileSize","getMinZoom","tmpSize","forEachLoadedTile","tileRange","loaded","covered","getResolutions","getTileGrid","getTilePixelSize","opt_projection","getWrapX","isGlobal","updateCacheSize","tileCount","TileSourceEvent","KVP","REST","WMTS","requestEncoding","WMTSRequestEncoding","version_","version","dimensions_","dimensions","layer_","layer","matrixSet_","matrixSet","style_","style","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getLayer","getMatrixSet","getRequestEncoding","getStyle","getVersion","res","updateDimensions","template","context","m","toLowerCase","localContext_1","getMatrixId","optionsFromCapabilities","wmtsCap","config","layers","elt","index","array","idx","tileMatrixSets","tileMatrixSet","el","supportedCRS","proj1","proj2","matrixLimits","matrixSets","matrixSetObj","code","projConfig","switchOriginXY","getAxisOrientation","substr","matrix","TileMatrix","selectedMatrixLimit","MinTileCol","MinTileRow","MaxTileCol","MatrixWidth","MaxTileRow","MatrixHeight","tileMatrixValue","Identifier","ScaleDenominator","getMetersPerUnit","origin","TopLeftCorner","tileSpanX","TileWidth","tileSpanY","TileHeight","matrixSetExtent","wgs84BoundingBox","wgs84ProjectionExtent","wgs84MatrixSetExtent","gets","constraint","element","encodings","workerPool","DataTileSource","handleTileChange_","bandCount","sourceLoader","DataTile","Tile","STATISTICS_MAXIMUM","STATISTICS_MINIMUM","getWorkerPool","getBoundingBox","image","_","fileDirectory","ImageWidth","ImageLength","getOrigin","getResolution","referenceImage","geoKeys","ProjectedCSTypeGeoKey","units","ProjLinearUnitsGeoKey","GeographicTypeGeoKey","GeogAngularUnitsGeoKey","getImagesForTIFF","tiff","getImageCount","then","count","requests","Promise","getImagesForSource","source","request","overviews","assertEqual","expected","got","tolerance","message","rejector","error","Error","abs","getMinForDataType","Int8Array","Int16Array","Int32Array","Float32Array","getMaxForDataType","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","GeoTIFFSource","State","sourceInfo_","sources","numSources","sourceOptions_","sourceOptions","sourceImagery_","resolutionFactors_","samplesPerPixel_","nodataValues_","metadata_","normalize_","normalize","addAlpha_","error_","readMethod_","convertToRGB","self","configure_","catch","console","setState","getError","tileSizes","resolutions","samplesPerPixel","nodataValues","metadata","sourceCount","sourceIndex","images","imageCount","sourceExtent","sourceOrigin","sourceTileSizes","sourceResolutions","imageIndex","nodataValue","getGDALNoData","getGDALMetadata","wantedSamples","bands","getSamplesPerPixel","level","getTileWidth","getTileHeight","viewRejector","resolutionFactor_1","scaledSourceResolutions","reverse","sourceImagery","unshift","firstSource","outer","nodata","isNaN","additionalBands","reduce","accumulator","TileGrid","loadTile_","viewResolver","center","zoom","addAlpha","sourceInfo","_loop_2","resolutionFactor","this_2","pixelBounds","round","samples","bandNumber","fillValue","sampleIndex","window","width","height","pool","interleave","pixelCount","dataLength","sourceSamples","dataIndex","pixelIndex","transparent","min","max","gain","bias","stats","parseFloat","sourceValue","bandIndex","getView","DROP","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","n","Source","attributions_","adaptAttributions","attributionsCollapsible_","state_","wrapX_","interpolate_","viewPromise_","resolve","reject","getAttributions","getAttributionsCollapsible","setAttributions","attributionLike","frameState"],"mappings":"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","file":"js/chunk-30f176f2.5968cddd.js","sourcesContent":["/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options} [opt_options] XYZ options.\n     */\n    function XYZ(opt_options) {\n        var options = opt_options || {};\n        var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n        if (options.interpolate !== undefined) {\n            interpolate = options.interpolate;\n        }\n        var projection = options.projection !== undefined ? options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined\n            ? options.tileGrid\n            : createXYZ({\n                extent: extentFromProjection(projection),\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize,\n            });\n        return _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            interpolate: interpolate,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number} [opt_maxEntries] Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = new RBush_(opt_maxEntries);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value,\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value,\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/structs/LRUCache\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nvar LRUCache = /** @class */ (function () {\n    /**\n     * @param {number} [opt_highWaterMark] High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        /**\n         * Desired max cache size after expireCache(). If set to 0, no cache entries\n         * will be pruned at all.\n         * @type {number}\n         */\n        this.highWaterMark =\n            opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.newest_ = null;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n    };\n    /**\n     * Expire the cache.\n     * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n     */\n    LRUCache.prototype.expireCache = function (keep) {\n        while (this.canExpireCache()) {\n            this.pop();\n        }\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache<T>): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*} [opt_options] Options (reserved for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value,\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}());\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { assert } from '../asserts.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { extend } from '../array.js';\nimport { getUid } from '../util.js';\nimport { getValues, isEmpty } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { xhr } from '../featureloader.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n     */\n    function VectorSourceEvent(type, opt_feature, opt_features) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n         * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        /**\n         * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n         * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n         * @api\n         */\n        _this.features = opt_features;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options} [opt_options] Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            interpolate: true,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n        }) || this;\n        /***\n         * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {VectorSourceOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, \n            /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ =\n            options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.loadingExtentsCount_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features by uid (using getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.uidIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features =\n                /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (options.features);\n        }\n        else if (options.features) {\n            collection =\n                /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */ (options.features);\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n     * meaning that if a feature with a duplicate id is added in the collection, it will\n     * be removed from it right away.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            if (this.featuresCollection_) {\n                this.featuresCollection_.remove(feature);\n            }\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this),\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        if (valid) {\n            assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n            this.uidIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        if (this.hasListener(VectorEventType.ADDFEATURE)) {\n            for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n                this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n            }\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        this.addEventListener(VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        this.addEventListener(VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        collection.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        collection.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.uidIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                var removeAndIgnoreReturn = function (feature) {\n                    this.removeFeatureInternal(feature);\n                }.bind(this);\n                this.featuresRtree_.forEach(removeAndIgnoreReturn);\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection~Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get a snapshot of the features currently on the source in random order. The returned array\n     * is a copy, the features are references to the features in the source.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray().slice(0);\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * When `useSpatialIndex` is set to false, this method will return all\n     * features.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.getInExtent(extent);\n        }\n        else if (this.featuresCollection_) {\n            return this.featuresCollection_.getArray().slice(0);\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get a feature by its internal unique identifier (using `getUid`).\n     *\n     * @param {string} uid Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n     */\n    VectorSource.prototype.getFeatureByUid = function (uid) {\n        var feature = this.uidIndex_[uid];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (this.idIndex_[sid] !== feature) {\n                this.removeFromIdIndex_(feature);\n                this.idIndex_[sid] = feature;\n            }\n        }\n        else {\n            this.removeFromIdIndex_(feature);\n            this.uidIndex_[featureKey] = feature;\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.uidIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        if (this.featuresRtree_) {\n            return (this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_));\n        }\n        if (this.featuresCollection_) {\n            return this.featuresCollection_.getLength() === 0;\n        }\n        return true;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution, projection);\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                ++this_1.loadingExtentsCount_;\n                this_1.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADSTART));\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection, function (features) {\n                    --this.loadingExtentsCount_;\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADEND, undefined, features));\n                }.bind(this_1), function () {\n                    --this.loadingExtentsCount_;\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADERROR));\n                }.bind(this_1));\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n        this.loading =\n            this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n    };\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        if (!feature) {\n            return;\n        }\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        var result = this.removeFeatureInternal(feature);\n        if (result) {\n            this.changed();\n        }\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n     *     (or undefined if the feature was not found).\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        var featureChangeKeys = this.featureChangeKeys_[featureKey];\n        if (!featureChangeKeys) {\n            return;\n        }\n        featureChangeKeys.forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        delete this.uidIndex_[featureKey];\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n        return feature;\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.url_ = url;\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error',\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileState from '../TileState.js';\nimport { createFromTemplates, expandUrl } from '../tileurlfunction.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            interpolate: options.interpolate,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ =\n            _this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        if (options.tileUrlFunction) {\n            _this.tileUrlFunction = options.tileUrlFunction;\n        }\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n            ? this.tileUrlFunction.bind(this)\n            : this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type =\n                tileState == TileState.ERROR\n                    ? TileEventType.TILELOADERROR\n                    : tileState == TileState.LOADED\n                        ? TileEventType.TILELOADEND\n                        : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string} [key] Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = expandUrl(url);\n        this.urls = urls;\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    UrlTile.prototype.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n        return undefined;\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = this;\n        var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n        if (options.interpolate !== undefined) {\n            interpolate = options.interpolate;\n        }\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction\n                ? options.tileLoadFunction\n                : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            interpolate: interpolate,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass =\n            options.tileClass !== undefined ? options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     */\n    TileImage.prototype.getKey = function () {\n        var key = _super.prototype.getKey.call(this);\n        if (!this.getInterpolate()) {\n            key += ':disable-interpolation';\n        }\n        return key;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] =\n                    getTileGridForProjection(projection);\n            }\n            return this.tileGridForProjection[projKey];\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!ImageTile} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord\n            ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n            : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n        return tile;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!(ImageTile|ReprojTile)} Tile.\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = cache.get(tileCoordKey);\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_, this.getInterpolate());\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!(ImageTile|ReprojTile)} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n        src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature',\n    /**\n     * Triggered when features starts loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n     * @api\n     */\n    FEATURESLOADSTART: 'featuresloadstart',\n    /**\n     * Triggered when features finishes loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n     * @api\n     */\n    FEATURESLOADEND: 'featuresloadend',\n    /**\n     * Triggered if feature loading results in an error.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n     * @api\n     */\n    FEATURESLOADERROR: 'featuresloaderror',\n};\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n//# sourceMappingURL=VectorEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { equivalent } from '../proj.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection, wrapX, } from '../tilegrid.js';\nimport { scale as scaleSize, toSize } from '../size.js';\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX,\n            interpolate: options.interpolate,\n        }) || this;\n        /***\n         * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {TileSourceOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ =\n            options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n        /**\n         * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var tileSize = [256, 256];\n        if (_this.tileGrid) {\n            toSize(_this.tileGrid.getTileSize(_this.tileGrid.getMinZoom()), tileSize);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(options.cacheSize || 0);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = {\n            transition: options.transition,\n            interpolate: options.interpolate,\n        };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number|import(\"../array.js\").NearestDirectionFunction}\n         */\n        _this.zDirection = options.zDirection ? options.zDirection : 0;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = callback(tile) !== false;\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @return {Array<number>|null} Resolutions.\n     */\n    TileSource.prototype.getResolutions = function () {\n        if (!this.tileGrid) {\n            return null;\n        }\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        assert(equivalent(this.getProjection(), projection), 68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n        );\n        return this.tileCache;\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ? opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Increases the cache size if needed\n     * @param {number} tileCount Minimum number of tiles needed.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.updateCacheSize = function (tileCount, projection) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCount > tileCache.highWaterMark) {\n            tileCache.highWaterMark = tileCount;\n        }\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/WMTSRequestEncoding\n */\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n    KVP: 'KVP',\n    REST: 'REST', // see spec §10\n};\n//# sourceMappingURL=WMTSRequestEncoding.js.map","/**\n * @module ol/source/WMTS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport { appendParams } from '../uri.js';\nimport { assign } from '../obj.js';\nimport { containsExtent } from '../extent.js';\nimport { createFromCapabilitiesMatrixSet } from '../tilegrid/WMTS.js';\nimport { createFromTileUrlFunctions, expandUrl } from '../tileurlfunction.js';\nimport { equivalent, get as getProjection, transformExtent } from '../proj.js';\nimport { find, findIndex, includes } from '../array.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nvar WMTS = /** @class */ (function (_super) {\n    __extends(WMTS, _super);\n    /**\n     * @param {Options} options WMTS options.\n     */\n    function WMTS(options) {\n        var _this = this;\n        var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n        if (options.interpolate !== undefined) {\n            interpolate = options.interpolate;\n        }\n        // TODO: add support for TileMatrixLimits\n        var requestEncoding = options.requestEncoding !== undefined\n            ? /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding)\n            : WMTSRequestEncoding.KVP;\n        // FIXME: should we create a default tileGrid?\n        // we could issue a getCapabilities xhr to retrieve missing configuration\n        var tileGrid = options.tileGrid;\n        var urls = options.urls;\n        if (urls === undefined && options.url !== undefined) {\n            urls = expandUrl(options.url);\n        }\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            interpolate: interpolate,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileClass: options.tileClass,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            urls: urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : false,\n            transition: options.transition,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.version_ = options.version !== undefined ? options.version : '1.0.0';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.dimensions_ =\n            options.dimensions !== undefined ? options.dimensions : {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.layer_ = options.layer;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.matrixSet_ = options.matrixSet;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.style_ = options.style;\n        // FIXME: should we guess this requestEncoding from options.url(s)\n        //        structure? that would mean KVP only if a template is not provided.\n        /**\n         * @private\n         * @type {import(\"./WMTSRequestEncoding.js\").default}\n         */\n        _this.requestEncoding_ = requestEncoding;\n        _this.setKey(_this.getKeyForDimensions_());\n        if (urls && urls.length > 0) {\n            _this.tileUrlFunction = createFromTileUrlFunctions(urls.map(_this.createFromWMTSTemplate.bind(_this)));\n        }\n        return _this;\n    }\n    /**\n     * Set the URLs to use for requests.\n     * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n     * @param {Array<string>} urls URLs.\n     */\n    WMTS.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        this.setTileUrlFunction(createFromTileUrlFunctions(urls.map(this.createFromWMTSTemplate.bind(this))), key);\n    };\n    /**\n     * Get the dimensions, i.e. those passed to the constructor through the\n     * \"dimensions\" option, and possibly updated using the updateDimensions\n     * method.\n     * @return {!Object} Dimensions.\n     * @api\n     */\n    WMTS.prototype.getDimensions = function () {\n        return this.dimensions_;\n    };\n    /**\n     * Return the image format of the WMTS source.\n     * @return {string} Format.\n     * @api\n     */\n    WMTS.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * Return the layer of the WMTS source.\n     * @return {string} Layer.\n     * @api\n     */\n    WMTS.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Return the matrix set of the WMTS source.\n     * @return {string} MatrixSet.\n     * @api\n     */\n    WMTS.prototype.getMatrixSet = function () {\n        return this.matrixSet_;\n    };\n    /**\n     * Return the request encoding, either \"KVP\" or \"REST\".\n     * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n     * @api\n     */\n    WMTS.prototype.getRequestEncoding = function () {\n        return this.requestEncoding_;\n    };\n    /**\n     * Return the style of the WMTS source.\n     * @return {string} Style.\n     * @api\n     */\n    WMTS.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Return the version of the WMTS source.\n     * @return {string} Version.\n     * @api\n     */\n    WMTS.prototype.getVersion = function () {\n        return this.version_;\n    };\n    /**\n     * @private\n     * @return {string} The key for the current dimensions.\n     */\n    WMTS.prototype.getKeyForDimensions_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.dimensions_) {\n            res[i++] = key + '-' + this.dimensions_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Update the dimensions.\n     * @param {Object} dimensions Dimensions.\n     * @api\n     */\n    WMTS.prototype.updateDimensions = function (dimensions) {\n        assign(this.dimensions_, dimensions);\n        this.setKey(this.getKeyForDimensions_());\n    };\n    /**\n     * @param {string} template Template.\n     * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n     */\n    WMTS.prototype.createFromWMTSTemplate = function (template) {\n        var requestEncoding = this.requestEncoding_;\n        // context property names are lower case to allow for a case insensitive\n        // replacement as some services use different naming conventions\n        var context = {\n            'layer': this.layer_,\n            'style': this.style_,\n            'tilematrixset': this.matrixSet_,\n        };\n        if (requestEncoding == WMTSRequestEncoding.KVP) {\n            assign(context, {\n                'Service': 'WMTS',\n                'Request': 'GetTile',\n                'Version': this.version_,\n                'Format': this.format_,\n            });\n        }\n        // TODO: we may want to create our own appendParams function so that params\n        // order conforms to wmts spec guidance, and so that we can avoid to escape\n        // special template params\n        template =\n            requestEncoding == WMTSRequestEncoding.KVP\n                ? appendParams(template, context)\n                : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n                    return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n                });\n        var tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (this.tileGrid);\n        var dimensions = this.dimensions_;\n        return (\n        /**\n         * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {import(\"../proj/Projection.js\").default} projection Projection.\n         * @return {string|undefined} Tile URL.\n         */\n        function (tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n                return undefined;\n            }\n            else {\n                var localContext_1 = {\n                    'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n                    'TileCol': tileCoord[1],\n                    'TileRow': tileCoord[2],\n                };\n                assign(localContext_1, dimensions);\n                var url = template;\n                if (requestEncoding == WMTSRequestEncoding.KVP) {\n                    url = appendParams(url, localContext_1);\n                }\n                else {\n                    url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n                        return localContext_1[p];\n                    });\n                }\n                return url;\n            }\n        });\n    };\n    return WMTS;\n}(TileImage));\nexport default WMTS;\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n    var layers = wmtsCap['Contents']['Layer'];\n    var l = find(layers, function (elt, index, array) {\n        return elt['Identifier'] == config['layer'];\n    });\n    if (l === null) {\n        return null;\n    }\n    var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n    var idx;\n    if (l['TileMatrixSetLink'].length > 1) {\n        if ('projection' in config) {\n            idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n                var tileMatrixSet = find(tileMatrixSets, function (el) {\n                    return el['Identifier'] == elt['TileMatrixSet'];\n                });\n                var supportedCRS = tileMatrixSet['SupportedCRS'];\n                var proj1 = getProjection(supportedCRS);\n                var proj2 = getProjection(config['projection']);\n                if (proj1 && proj2) {\n                    return equivalent(proj1, proj2);\n                }\n                else {\n                    return supportedCRS == config['projection'];\n                }\n            });\n        }\n        else {\n            idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n                return elt['TileMatrixSet'] == config['matrixSet'];\n            });\n        }\n    }\n    else {\n        idx = 0;\n    }\n    if (idx < 0) {\n        idx = 0;\n    }\n    var matrixSet = \n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n    var matrixLimits = \n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n    var format = /** @type {string} */ (l['Format'][0]);\n    if ('format' in config) {\n        format = config['format'];\n    }\n    idx = findIndex(l['Style'], function (elt, index, array) {\n        if ('style' in config) {\n            return elt['Title'] == config['style'];\n        }\n        else {\n            return elt['isDefault'];\n        }\n    });\n    if (idx < 0) {\n        idx = 0;\n    }\n    var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n    var dimensions = {};\n    if ('Dimension' in l) {\n        l['Dimension'].forEach(function (elt, index, array) {\n            var key = elt['Identifier'];\n            var value = elt['Default'];\n            if (value === undefined) {\n                value = elt['Value'][0];\n            }\n            dimensions[key] = value;\n        });\n    }\n    var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n    var matrixSetObj = find(matrixSets, function (elt, index, array) {\n        return elt['Identifier'] == matrixSet;\n    });\n    var projection;\n    var code = matrixSetObj['SupportedCRS'];\n    if (code) {\n        projection = getProjection(code);\n    }\n    if ('projection' in config) {\n        var projConfig = getProjection(config['projection']);\n        if (projConfig) {\n            if (!projection || equivalent(projConfig, projection)) {\n                projection = projConfig;\n            }\n        }\n    }\n    var wrapX = false;\n    var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n    var matrix = matrixSetObj.TileMatrix[0];\n    // create default matrixLimit\n    var selectedMatrixLimit = {\n        MinTileCol: 0,\n        MinTileRow: 0,\n        // subtract one to end up at tile top left\n        MaxTileCol: matrix.MatrixWidth - 1,\n        MaxTileRow: matrix.MatrixHeight - 1,\n    };\n    //in case of matrix limits, use matrix limits to calculate extent\n    if (matrixLimits) {\n        selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n        var m = find(matrixSetObj.TileMatrix, function (tileMatrixValue) {\n            return tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n                matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n                    selectedMatrixLimit.TileMatrix;\n        });\n        if (m) {\n            matrix = m;\n        }\n    }\n    var resolution = (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n    var origin = switchOriginXY\n        ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n        : matrix.TopLeftCorner;\n    var tileSpanX = matrix.TileWidth * resolution;\n    var tileSpanY = matrix.TileHeight * resolution;\n    var matrixSetExtent = matrixSetObj['BoundingBox'];\n    var extent = [\n        origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n        // add one to get proper bottom/right coordinate\n        origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n        origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n        origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n    ];\n    if (matrixSetExtent !== undefined &&\n        !containsExtent(matrixSetExtent, extent)) {\n        var wgs84BoundingBox = l['WGS84BoundingBox'];\n        var wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n        extent = matrixSetExtent;\n        if (wgs84BoundingBox) {\n            wrapX =\n                wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n                    wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n        }\n        else {\n            var wgs84MatrixSetExtent = transformExtent(matrixSetExtent, matrixSetObj['SupportedCRS'], 'EPSG:4326');\n            // Ignore slight deviation from the correct x limits\n            wrapX =\n                wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n                    wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n        }\n    }\n    var tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n    /** @type {!Array<string>} */\n    var urls = [];\n    var requestEncoding = config['requestEncoding'];\n    requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n    if ('OperationsMetadata' in wmtsCap &&\n        'GetTile' in wmtsCap['OperationsMetadata']) {\n        var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n        for (var i = 0, ii = gets.length; i < ii; ++i) {\n            if (gets[i]['Constraint']) {\n                var constraint = find(gets[i]['Constraint'], function (element) {\n                    return element['name'] == 'GetEncoding';\n                });\n                var encodings = constraint['AllowedValues']['Value'];\n                if (requestEncoding === '') {\n                    // requestEncoding not provided, use the first encoding from the list\n                    requestEncoding = encodings[0];\n                }\n                if (requestEncoding === WMTSRequestEncoding.KVP) {\n                    if (includes(encodings, WMTSRequestEncoding.KVP)) {\n                        urls.push(/** @type {string} */ (gets[i]['href']));\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n            else if (gets[i]['href']) {\n                requestEncoding = WMTSRequestEncoding.KVP;\n                urls.push(/** @type {string} */ (gets[i]['href']));\n            }\n        }\n    }\n    if (urls.length === 0) {\n        requestEncoding = WMTSRequestEncoding.REST;\n        l['ResourceURL'].forEach(function (element) {\n            if (element['resourceType'] === 'tile') {\n                format = element['format'];\n                urls.push(/** @type {string} */ (element['template']));\n            }\n        });\n    }\n    return {\n        urls: urls,\n        layer: config['layer'],\n        matrixSet: matrixSet,\n        format: format,\n        projection: projection,\n        requestEncoding: requestEncoding,\n        tileGrid: tileGrid,\n        style: style,\n        dimensions: dimensions,\n        wrapX: wrapX,\n        crossOrigin: config['crossOrigin'],\n    };\n}\n//# sourceMappingURL=WMTS.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/GeoTIFF\n */\nimport DataTile from './DataTile.js';\nimport State from './State.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport { Pool, fromUrl as tiffFromUrl, fromUrls as tiffFromUrls } from 'geotiff';\nimport { Projection, get as getCachedProjection, toUserCoordinate, toUserExtent, } from '../proj.js';\nimport { clamp } from '../math.js';\nimport { getCenter, getIntersection } from '../extent.js';\nimport { toSize } from '../size.js';\nimport { fromCode as unitsFromCode } from '../proj/Units.js';\n/**\n * @typedef {Object} SourceInfo\n * @property {string} url URL for the source GeoTIFF.\n * @property {Array<string>} [overviews] List of any overview URLs.\n * @property {number} [min=0] The minimum source data value.  Rendered values are scaled from 0 to 1 based on\n * the configured min and max.  If not provided and raster statistics are available, those will be used instead.\n * If neither are available, the minimum for the data type will be used.  To disable this behavior, set\n * the `normalize` option to `false` in the constructor.\n * @property {number} [max] The maximum source data value.  Rendered values are scaled from 0 to 1 based on\n * the configured min and max.  If not provided and raster statistics are available, those will be used instead.\n * If neither are available, the maximum for the data type will be used.  To disable this behavior, set\n * the `normalize` option to `false` in the constructor.\n * @property {number} [nodata] Values to discard (overriding any nodata values in the metadata).\n * When provided, an additional alpha band will be added to the data.  Often the GeoTIFF metadata\n * will include information about nodata values, so you should only need to set this property if\n * you find that it is not already extracted from the metadata.\n * @property {Array<number>} [bands] Band numbers to be read from (where the first band is `1`). If not provided, all bands will\n * be read. For example, if a GeoTIFF has blue (1), green (2), red (3), and near-infrared (4) bands, and you only need the\n * near-infrared band, configure `bands: [4]`.\n */\n/**\n * @typedef {Object} GeoKeys\n * @property {number} GTModelTypeGeoKey Model type.\n * @property {number} GTRasterTypeGeoKey Raster type.\n * @property {number} GeogAngularUnitsGeoKey Angular units.\n * @property {number} GeogInvFlatteningGeoKey Inverse flattening.\n * @property {number} GeogSemiMajorAxisGeoKey Semi-major axis.\n * @property {number} GeographicTypeGeoKey Geographic coordinate system code.\n * @property {number} ProjLinearUnitsGeoKey Projected linear unit code.\n * @property {number} ProjectedCSTypeGeoKey Projected coordinate system code.\n */\n/**\n * @typedef {import(\"geotiff\").GeoTIFF} GeoTIFF\n */\n/**\n * @typedef {import(\"geotiff\").MultiGeoTIFF} MultiGeoTIFF\n */\n/**\n * @typedef {Object} GDALMetadata\n * @property {string} STATISTICS_MINIMUM The minimum value (as a string).\n * @property {string} STATISTICS_MAXIMUM The maximum value (as a string).\n */\nvar STATISTICS_MAXIMUM = 'STATISTICS_MAXIMUM';\nvar STATISTICS_MINIMUM = 'STATISTICS_MINIMUM';\n/**\n * @typedef {import(\"geotiff\").GeoTIFFImage} GeoTIFFImage\n */\nvar workerPool;\nfunction getWorkerPool() {\n    if (!workerPool) {\n        workerPool = new Pool();\n    }\n    return workerPool;\n}\n/**\n * Get the bounding box of an image.  If the image does not have an affine transform,\n * the pixel bounds are returned.\n * @param {GeoTIFFImage} image The image.\n * @return {Array<number>} The image bounding box.\n */\nfunction getBoundingBox(image) {\n    try {\n        return image.getBoundingBox();\n    }\n    catch (_) {\n        var fileDirectory = image.fileDirectory;\n        return [0, 0, fileDirectory.ImageWidth, fileDirectory.ImageLength];\n    }\n}\n/**\n * Get the origin of an image.  If the image does not have an affine transform,\n * the top-left corner of the pixel bounds is returned.\n * @param {GeoTIFFImage} image The image.\n * @return {Array<number>} The image origin.\n */\nfunction getOrigin(image) {\n    try {\n        return image.getOrigin().slice(0, 2);\n    }\n    catch (_) {\n        return [0, image.fileDirectory.ImageLength];\n    }\n}\n/**\n * Get the resolution of an image.  If the image does not have an affine transform,\n * the width of the image is compared with the reference image.\n * @param {GeoTIFFImage} image The image.\n * @param {GeoTIFFImage} referenceImage The reference image.\n * @return {number} The image resolution.\n */\nfunction getResolution(image, referenceImage) {\n    try {\n        return image.getResolution(referenceImage)[0];\n    }\n    catch (_) {\n        return (referenceImage.fileDirectory.ImageWidth / image.fileDirectory.ImageWidth);\n    }\n}\n/**\n * @param {GeoTIFFImage} image A GeoTIFF.\n * @return {import(\"../proj/Projection.js\").default} The image projection.\n */\nfunction getProjection(image) {\n    var geoKeys = image.geoKeys;\n    if (!geoKeys) {\n        return null;\n    }\n    if (geoKeys.ProjectedCSTypeGeoKey) {\n        var code = 'EPSG:' + geoKeys.ProjectedCSTypeGeoKey;\n        var projection = getCachedProjection(code);\n        if (!projection) {\n            var units = unitsFromCode(geoKeys.ProjLinearUnitsGeoKey);\n            if (units) {\n                projection = new Projection({\n                    code: code,\n                    units: units,\n                });\n            }\n        }\n        return projection;\n    }\n    if (geoKeys.GeographicTypeGeoKey) {\n        var code = 'EPSG:' + geoKeys.GeographicTypeGeoKey;\n        var projection = getCachedProjection(code);\n        if (!projection) {\n            var units = unitsFromCode(geoKeys.GeogAngularUnitsGeoKey);\n            if (units) {\n                projection = new Projection({\n                    code: code,\n                    units: units,\n                });\n            }\n        }\n        return projection;\n    }\n    return null;\n}\n/**\n * @param {GeoTIFF|MultiGeoTIFF} tiff A GeoTIFF.\n * @return {Promise<Array<GeoTIFFImage>>} Resolves to a list of images.\n */\nfunction getImagesForTIFF(tiff) {\n    return tiff.getImageCount().then(function (count) {\n        var requests = new Array(count);\n        for (var i = 0; i < count; ++i) {\n            requests[i] = tiff.getImage(i);\n        }\n        return Promise.all(requests);\n    });\n}\n/**\n * @param {SourceInfo} source The GeoTIFF source.\n * @param {object} options Options for the GeoTIFF source.\n * @return {Promise<Array<GeoTIFFImage>>} Resolves to a list of images.\n */\nfunction getImagesForSource(source, options) {\n    var request;\n    if (source.overviews) {\n        request = tiffFromUrls(source.url, source.overviews, options);\n    }\n    else {\n        request = tiffFromUrl(source.url, options);\n    }\n    return request.then(getImagesForTIFF);\n}\n/**\n * @param {number|Array<number>|Array<Array<number>>} expected Expected value.\n * @param {number|Array<number>|Array<Array<number>>} got Actual value.\n * @param {number} tolerance Accepted tolerance in fraction of expected between expected and got.\n * @param {string} message The error message.\n * @param {function(Error):void} rejector A function to be called with any error.\n */\nfunction assertEqual(expected, got, tolerance, message, rejector) {\n    if (Array.isArray(expected)) {\n        var length_1 = expected.length;\n        if (!Array.isArray(got) || length_1 != got.length) {\n            var error = new Error(message);\n            rejector(error);\n            throw error;\n        }\n        for (var i = 0; i < length_1; ++i) {\n            assertEqual(expected[i], got[i], tolerance, message, rejector);\n        }\n        return;\n    }\n    got = /** @type {number} */ (got);\n    if (Math.abs(expected - got) > tolerance * expected) {\n        throw new Error(message);\n    }\n}\n/**\n * @param {Array} array The data array.\n * @return {number} The minimum value.\n */\nfunction getMinForDataType(array) {\n    if (array instanceof Int8Array) {\n        return -128;\n    }\n    if (array instanceof Int16Array) {\n        return -32768;\n    }\n    if (array instanceof Int32Array) {\n        return -2147483648;\n    }\n    if (array instanceof Float32Array) {\n        return 1.2e-38;\n    }\n    return 0;\n}\n/**\n * @param {Array} array The data array.\n * @return {number} The maximum value.\n */\nfunction getMaxForDataType(array) {\n    if (array instanceof Int8Array) {\n        return 127;\n    }\n    if (array instanceof Uint8Array) {\n        return 255;\n    }\n    if (array instanceof Uint8ClampedArray) {\n        return 255;\n    }\n    if (array instanceof Int16Array) {\n        return 32767;\n    }\n    if (array instanceof Uint16Array) {\n        return 65535;\n    }\n    if (array instanceof Int32Array) {\n        return 2147483647;\n    }\n    if (array instanceof Uint32Array) {\n        return 4294967295;\n    }\n    if (array instanceof Float32Array) {\n        return 3.4e38;\n    }\n    return 255;\n}\n/**\n * @typedef {Object} GeoTIFFSourceOptions\n * @property {boolean} [forceXHR=false] Whether to force the usage of the browsers XMLHttpRequest API.\n * @property {Object<string, string>} [headers] additional key-value pairs of headers to be passed with each request. Key is the header name, value the header value.\n * @property {string} [credentials] How credentials shall be handled. See\n * https://developer.mozilla.org/en-US/docs/Web/API/fetch for reference and possible values\n * @property {number} [maxRanges] The maximum amount of ranges to request in a single multi-range request.\n * By default only a single range is used.\n * @property {boolean} [allowFullFile=false] Whether or not a full file is accepted when only a portion is\n * requested. Only use this when you know the source image to be small enough to fit in memory.\n * @property {number} [blockSize=65536] The block size to use.\n * @property {number} [cacheSize=100] The number of blocks that shall be held in a LRU cache.\n */\n/**\n * @typedef {Object} Options\n * @property {Array<SourceInfo>} sources List of information about GeoTIFF sources.\n * Multiple sources can be combined when their resolution sets are equal after applying a scale.\n * The list of sources defines a mapping between input bands as they are read from each GeoTIFF and\n * the output bands that are provided by data tiles. To control which bands to read from each GeoTIFF,\n * use the {@link import(\"./GeoTIFF.js\").SourceInfo bands} property. If, for example, you specify two\n * sources, one with 3 bands and {@link import(\"./GeoTIFF.js\").SourceInfo nodata} configured, and\n * another with 1 band, the resulting data tiles will have 5 bands: 3 from the first source, 1 alpha\n * band from the first source, and 1 band from the second source.\n * @property {GeoTIFFSourceOptions} [sourceOptions] Additional options to be passed to [geotiff.js](https://geotiffjs.github.io/geotiff.js/module-geotiff.html)'s `fromUrl` or `fromUrls` methods.\n * @property {boolean} [convertToRGB = false] By default, bands from the sources are read as-is. When\n * reading GeoTIFFs with the purpose of displaying them as RGB images, setting this to `true` will\n * convert other color spaces (YCbCr, CMYK) to RGB.\n * @property {boolean} [normalize=true] By default, the source data is normalized to values between\n * 0 and 1 with scaling factors based on the raster statistics or `min` and `max` properties of each source.\n * If instead you want to work with the raw values in a style expression, set this to `false`.  Setting this option\n * to `false` will make it so any `min` and `max` properties on sources are ignored.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {boolean} [wrapX=false] Render tiles beyond the tile grid extent.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * the linear interpolation is used to resample the data.  If false, nearest neighbor is used.\n */\n/**\n * @classdesc\n * A source for working with GeoTIFF data.\n * @api\n */\nvar GeoTIFFSource = /** @class */ (function (_super) {\n    __extends(GeoTIFFSource, _super);\n    /**\n     * @param {Options} options Data tile options.\n     */\n    function GeoTIFFSource(options) {\n        var _this = _super.call(this, {\n            state: State.LOADING,\n            tileGrid: null,\n            projection: null,\n            opaque: options.opaque,\n            transition: options.transition,\n            interpolate: options.interpolate !== false,\n            wrapX: options.wrapX,\n        }) || this;\n        /**\n         * @type {Array<SourceInfo>}\n         * @private\n         */\n        _this.sourceInfo_ = options.sources;\n        var numSources = _this.sourceInfo_.length;\n        /**\n         * @type {object}\n         * @private\n         */\n        _this.sourceOptions_ = options.sourceOptions;\n        /**\n         * @type {Array<Array<GeoTIFFImage>>}\n         * @private\n         */\n        _this.sourceImagery_ = new Array(numSources);\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.resolutionFactors_ = new Array(numSources);\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.samplesPerPixel_;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.nodataValues_;\n        /**\n         * @type {Array<Array<GDALMetadata>>}\n         * @private\n         */\n        _this.metadata_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.normalize_ = options.normalize !== false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.addAlpha_ = false;\n        /**\n         * @type {Error}\n         * @private\n         */\n        _this.error_ = null;\n        /**\n         * @type {'readRasters' | 'readRGB'}\n         */\n        _this.readMethod_ = options.convertToRGB ? 'readRGB' : 'readRasters';\n        _this.setKey(_this.sourceInfo_.map(function (source) { return source.url; }).join(','));\n        var self = _this;\n        var requests = new Array(numSources);\n        for (var i = 0; i < numSources; ++i) {\n            requests[i] = getImagesForSource(_this.sourceInfo_[i], _this.sourceOptions_);\n        }\n        Promise.all(requests)\n            .then(function (sources) {\n            self.configure_(sources);\n        })\n            .catch(function (error) {\n            console.error(error); // eslint-disable-line no-console\n            self.error_ = error;\n            self.setState(State.ERROR);\n        });\n        return _this;\n    }\n    /**\n     * @return {Error} A source loading error. When the source state is `error`, use this function\n     * to get more information about the error. To debug a faulty configuration, you may want to use\n     * a listener like\n     * ```js\n     * geotiffSource.on('change', () => {\n     *   if (geotiffSource.getState() === 'error') {\n     *     console.error(geotiffSource.getError());\n     *   }\n     * });\n     * ```\n     */\n    GeoTIFFSource.prototype.getError = function () {\n        return this.error_;\n    };\n    /**\n     * Configure the tile grid based on images within the source GeoTIFFs.  Each GeoTIFF\n     * must have the same internal tiled structure.\n     * @param {Array<Array<GeoTIFFImage>>} sources Each source is a list of images\n     * from a single GeoTIFF.\n     * @private\n     */\n    GeoTIFFSource.prototype.configure_ = function (sources) {\n        var extent;\n        var origin;\n        var tileSizes;\n        var resolutions;\n        var samplesPerPixel = new Array(sources.length);\n        var nodataValues = new Array(sources.length);\n        var metadata = new Array(sources.length);\n        var minZoom = 0;\n        var sourceCount = sources.length;\n        var _loop_1 = function (sourceIndex) {\n            var images = sources[sourceIndex];\n            var imageCount = images.length;\n            var sourceExtent = void 0;\n            var sourceOrigin = void 0;\n            var sourceTileSizes = new Array(imageCount);\n            var sourceResolutions = new Array(imageCount);\n            nodataValues[sourceIndex] = new Array(imageCount);\n            metadata[sourceIndex] = new Array(imageCount);\n            for (var imageIndex = 0; imageIndex < imageCount; ++imageIndex) {\n                var image = images[imageIndex];\n                var nodataValue = image.getGDALNoData();\n                metadata[sourceIndex][imageIndex] = image.getGDALMetadata(0);\n                nodataValues[sourceIndex][imageIndex] =\n                    nodataValue === null ? NaN : nodataValue;\n                var wantedSamples = this_1.sourceInfo_[sourceIndex].bands;\n                samplesPerPixel[sourceIndex] = wantedSamples\n                    ? wantedSamples.length\n                    : image.getSamplesPerPixel();\n                var level = imageCount - (imageIndex + 1);\n                if (!sourceExtent) {\n                    sourceExtent = getBoundingBox(image);\n                }\n                if (!sourceOrigin) {\n                    sourceOrigin = getOrigin(image);\n                }\n                sourceResolutions[level] = getResolution(image, images[0]);\n                sourceTileSizes[level] = [image.getTileWidth(), image.getTileHeight()];\n            }\n            if (!extent) {\n                extent = sourceExtent;\n            }\n            else {\n                getIntersection(extent, sourceExtent, extent);\n            }\n            if (!origin) {\n                origin = sourceOrigin;\n            }\n            else {\n                var message = \"Origin mismatch for source \".concat(sourceIndex, \", got [\").concat(sourceOrigin, \"] but expected [\").concat(origin, \"]\");\n                assertEqual(origin, sourceOrigin, 0, message, this_1.viewRejector);\n            }\n            if (!resolutions) {\n                resolutions = sourceResolutions;\n                this_1.resolutionFactors_[sourceIndex] = 1;\n            }\n            else {\n                if (resolutions.length - minZoom > sourceResolutions.length) {\n                    minZoom = resolutions.length - sourceResolutions.length;\n                }\n                var resolutionFactor_1 = resolutions[resolutions.length - 1] /\n                    sourceResolutions[sourceResolutions.length - 1];\n                this_1.resolutionFactors_[sourceIndex] = resolutionFactor_1;\n                var scaledSourceResolutions = sourceResolutions.map(function (resolution) { return (resolution *= resolutionFactor_1); });\n                var message = \"Resolution mismatch for source \".concat(sourceIndex, \", got [\").concat(scaledSourceResolutions, \"] but expected [\").concat(resolutions, \"]\");\n                assertEqual(resolutions.slice(minZoom, resolutions.length), scaledSourceResolutions, 0.02, message, this_1.viewRejector);\n            }\n            if (!tileSizes) {\n                tileSizes = sourceTileSizes;\n            }\n            else {\n                assertEqual(tileSizes.slice(minZoom, tileSizes.length), sourceTileSizes, 0, \"Tile size mismatch for source \".concat(sourceIndex), this_1.viewRejector);\n            }\n            this_1.sourceImagery_[sourceIndex] = images.reverse();\n        };\n        var this_1 = this;\n        for (var sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n            _loop_1(sourceIndex);\n        }\n        for (var i = 0, ii = this.sourceImagery_.length; i < ii; ++i) {\n            var sourceImagery = this.sourceImagery_[i];\n            while (sourceImagery.length < resolutions.length) {\n                sourceImagery.unshift(undefined);\n            }\n        }\n        if (!this.getProjection()) {\n            var firstSource = sources[0];\n            for (var i = firstSource.length - 1; i >= 0; --i) {\n                var image = firstSource[i];\n                var projection = getProjection(image);\n                if (projection) {\n                    this.projection = projection;\n                    break;\n                }\n            }\n        }\n        this.samplesPerPixel_ = samplesPerPixel;\n        this.nodataValues_ = nodataValues;\n        this.metadata_ = metadata;\n        // decide if we need to add an alpha band to handle nodata\n        outer: for (var sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n            // option 1: source is configured with a nodata value\n            if (this.sourceInfo_[sourceIndex].nodata !== undefined) {\n                this.addAlpha_ = true;\n                break;\n            }\n            var values = nodataValues[sourceIndex];\n            // option 2: check image metadata for limited bands\n            var bands = this.sourceInfo_[sourceIndex].bands;\n            if (bands) {\n                for (var i = 0; i < bands.length; ++i) {\n                    if (!isNaN(values[bands[i] - 1])) {\n                        this.addAlpha_ = true;\n                        break outer;\n                    }\n                }\n                continue;\n            }\n            // option 3: check image metadata for all bands\n            for (var imageIndex = 0; imageIndex < values.length; ++imageIndex) {\n                if (!isNaN(values[imageIndex])) {\n                    this.addAlpha_ = true;\n                    break outer;\n                }\n            }\n        }\n        var additionalBands = this.addAlpha_ ? 1 : 0;\n        this.bandCount =\n            samplesPerPixel.reduce(function (accumulator, value) {\n                accumulator += value;\n                return accumulator;\n            }, 0) + additionalBands;\n        var tileGrid = new TileGrid({\n            extent: extent,\n            minZoom: minZoom,\n            origin: origin,\n            resolutions: resolutions,\n            tileSizes: tileSizes,\n        });\n        this.tileGrid = tileGrid;\n        this.setLoader(this.loadTile_.bind(this));\n        this.setState(State.READY);\n        this.viewResolver({\n            projection: this.projection,\n            resolutions: resolutions,\n            center: toUserCoordinate(getCenter(extent), this.projection),\n            extent: toUserExtent(extent, this.projection),\n            zoom: 0,\n        });\n    };\n    GeoTIFFSource.prototype.loadTile_ = function (z, x, y) {\n        var size = toSize(this.tileGrid.getTileSize(z));\n        var sourceCount = this.sourceImagery_.length;\n        var requests = new Array(sourceCount);\n        var addAlpha = this.addAlpha_;\n        var bandCount = this.bandCount;\n        var samplesPerPixel = this.samplesPerPixel_;\n        var nodataValues = this.nodataValues_;\n        var sourceInfo = this.sourceInfo_;\n        var _loop_2 = function (sourceIndex) {\n            var source = sourceInfo[sourceIndex];\n            var resolutionFactor = this_2.resolutionFactors_[sourceIndex];\n            var pixelBounds = [\n                Math.round(x * (size[0] * resolutionFactor)),\n                Math.round(y * (size[1] * resolutionFactor)),\n                Math.round((x + 1) * (size[0] * resolutionFactor)),\n                Math.round((y + 1) * (size[1] * resolutionFactor)),\n            ];\n            var image = this_2.sourceImagery_[sourceIndex][z];\n            var samples = void 0;\n            if (source.bands) {\n                samples = source.bands.map(function (bandNumber) {\n                    return bandNumber - 1;\n                });\n            }\n            /** @type {number|Array<number>} */\n            var fillValue = void 0;\n            if (!isNaN(source.nodata)) {\n                fillValue = source.nodata;\n            }\n            else {\n                if (!samples) {\n                    fillValue = nodataValues[sourceIndex];\n                }\n                else {\n                    fillValue = samples.map(function (sampleIndex) {\n                        return nodataValues[sourceIndex][sampleIndex];\n                    });\n                }\n            }\n            requests[sourceIndex] = image[this_2.readMethod_]({\n                window: pixelBounds,\n                width: size[0],\n                height: size[1],\n                samples: samples,\n                fillValue: fillValue,\n                pool: getWorkerPool(),\n                interleave: false,\n            });\n        };\n        var this_2 = this;\n        for (var sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n            _loop_2(sourceIndex);\n        }\n        var pixelCount = size[0] * size[1];\n        var dataLength = pixelCount * bandCount;\n        var normalize = this.normalize_;\n        var metadata = this.metadata_;\n        return Promise.all(requests).then(function (sourceSamples) {\n            /** @type {Uint8Array|Float32Array} */\n            var data;\n            if (normalize) {\n                data = new Uint8Array(dataLength);\n            }\n            else {\n                data = new Float32Array(dataLength);\n            }\n            var dataIndex = 0;\n            for (var pixelIndex = 0; pixelIndex < pixelCount; ++pixelIndex) {\n                var transparent = addAlpha;\n                for (var sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n                    var source = sourceInfo[sourceIndex];\n                    var min = source.min;\n                    var max = source.max;\n                    var gain = void 0, bias = void 0;\n                    if (normalize) {\n                        var stats = metadata[sourceIndex][0];\n                        if (min === undefined) {\n                            if (stats && STATISTICS_MINIMUM in stats) {\n                                min = parseFloat(stats[STATISTICS_MINIMUM]);\n                            }\n                            else {\n                                min = getMinForDataType(sourceSamples[sourceIndex][0]);\n                            }\n                        }\n                        if (max === undefined) {\n                            if (stats && STATISTICS_MAXIMUM in stats) {\n                                max = parseFloat(stats[STATISTICS_MAXIMUM]);\n                            }\n                            else {\n                                max = getMaxForDataType(sourceSamples[sourceIndex][0]);\n                            }\n                        }\n                        gain = 255 / (max - min);\n                        bias = -min * gain;\n                    }\n                    for (var sampleIndex = 0; sampleIndex < samplesPerPixel[sourceIndex]; ++sampleIndex) {\n                        var sourceValue = sourceSamples[sourceIndex][sampleIndex][pixelIndex];\n                        var value = void 0;\n                        if (normalize) {\n                            value = clamp(gain * sourceValue + bias, 0, 255);\n                        }\n                        else {\n                            value = sourceValue;\n                        }\n                        if (!addAlpha) {\n                            data[dataIndex] = value;\n                        }\n                        else {\n                            var nodata = source.nodata;\n                            if (nodata === undefined) {\n                                var bandIndex = void 0;\n                                if (source.bands) {\n                                    bandIndex = source.bands[sampleIndex] - 1;\n                                }\n                                else {\n                                    bandIndex = sampleIndex;\n                                }\n                                nodata = nodataValues[sourceIndex][bandIndex];\n                            }\n                            if (sourceValue !== nodata) {\n                                transparent = false;\n                                data[dataIndex] = value;\n                            }\n                        }\n                        dataIndex++;\n                    }\n                }\n                if (addAlpha) {\n                    if (!transparent) {\n                        data[dataIndex] = 255;\n                    }\n                    dataIndex++;\n                }\n            }\n            return data;\n        });\n    };\n    return GeoTIFFSource;\n}(DataTile));\n/**\n * Get a promise for view properties based on the source.  Use the result of this function\n * as the `view` option in a map constructor.\n *\n *     const source = new GeoTIFF(options);\n *\n *     const map = new Map({\n *       target: 'map',\n *       layers: [\n *         new TileLayer({\n *           source: source,\n *         }),\n *       ],\n *       view: source.getView(),\n *     });\n *\n * @function\n * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n * @api\n *\n */\nGeoTIFFSource.prototype.getView;\nexport default GeoTIFFSource;\n//# sourceMappingURL=GeoTIFF.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/DataTile\n */\nimport DataTile from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport TileEventType from './TileEventType.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileState from '../TileState.js';\nimport { assign } from '../obj.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { getUid } from '../util.js';\nimport { toPromise } from '../functions.js';\n/**\n * Data tile loading function.  The function is called with z, x, and y tile coordinates and\n * returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * @typedef {function(number, number, number) : (import(\"../DataTile.js\").Data|Promise<import(\"../DataTile.js\").Data>)} Loader\n */\n/**\n * @typedef {Object} Options\n * @property {Loader} [loader] Data loader.  Called with z, x, and y tile coordinates.\n * Returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The pixel width and height of the tiles.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Tile projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"./State.js\").default} [state] The source state.\n * @property {number} [tilePixelRatio] Tile pixel ratio.\n * @property {boolean} [wrapX=false] Render tiles beyond the antimeridian.\n * @property {number} [transition] Transition time when fading in new tiles (in miliseconds).\n * @property {number} [bandCount=4] Number of bands represented in the data.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n/**\n * @classdesc\n * A source for typed array data tiles.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar DataTileSource = /** @class */ (function (_super) {\n    __extends(DataTileSource, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function DataTileSource(options) {\n        var _this = this;\n        var projection = options.projection === undefined ? 'EPSG:3857' : options.projection;\n        var tileGrid = options.tileGrid;\n        if (tileGrid === undefined && projection) {\n            tileGrid = createXYZ({\n                extent: extentFromProjection(projection),\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize,\n            });\n        }\n        _this = _super.call(this, {\n            cacheSize: 0.1,\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: projection,\n            tileGrid: tileGrid,\n            opaque: options.opaque,\n            state: options.state,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            interpolate: options.interpolate,\n        }) || this;\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        /**\n         * @private\n         */\n        _this.loader_ = options.loader;\n        _this.handleTileChange_ = _this.handleTileChange_.bind(_this);\n        /**\n         * @type {number}\n         */\n        _this.bandCount = options.bandCount === undefined ? 4 : options.bandCount; // assume RGBA if undefined\n        return _this;\n    }\n    /**\n     * @param {Loader} loader The data loader.\n     * @protected\n     */\n    DataTileSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!DataTile} Tile.\n     */\n    DataTileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            return this.tileCache.get(tileCoordKey);\n        }\n        var sourceLoader = this.loader_;\n        function loader() {\n            return toPromise(function () {\n                return sourceLoader(z, x, y);\n            });\n        }\n        var tile = new DataTile(assign({ tileCoord: [z, x, y], loader: loader }, this.tileOptions));\n        tile.key = this.getKey();\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n        this.tileCache.set(tileCoordKey, tile);\n        return tile;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     */\n    DataTileSource.prototype.handleTileChange_ = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type =\n                tileState == TileState.ERROR\n                    ? TileEventType.TILELOADERROR\n                    : tileState == TileState.LOADED\n                        ? TileEventType.TILELOADEND\n                        : undefined;\n        }\n        if (type) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    return DataTileSource;\n}(TileSource));\nexport default DataTileSource;\n//# sourceMappingURL=DataTile.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < count >> 1) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count && priorities[rIndex] < priorities[lIndex]\n                ? rIndex\n                : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror',\n};\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ =\n            options.attributionsCollapsible !== undefined\n                ? options.attributionsCollapsible\n                : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {import(\"./State.js\").default}\n         */\n        _this.state_ =\n            options.state !== undefined ? options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.interpolate_ = !!options.interpolate;\n        /**\n         * @protected\n         * @type {function(import(\"../View.js\").ViewOptions):void}\n         */\n        _this.viewResolver = null;\n        /**\n         * @protected\n         * @type {function(Error):void}\n         */\n        _this.viewRejector = null;\n        var self = _this;\n        /**\n         * @private\n         * @type {Promise<import(\"../View.js\").ViewOptions>}\n         */\n        _this.viewPromise_ = new Promise(function (resolve, reject) {\n            self.viewResolver = resolve;\n            self.viewRejector = reject;\n        });\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     * @api\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     * @api\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|null} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n     */\n    Source.prototype.getView = function () {\n        return this.viewPromise_;\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {import(\"./State.js\").default} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * @return {boolean} Use linear interpolation when resampling.\n     */\n    Source.prototype.getInterpolate = function () {\n        return this.interpolate_;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {import(\"./State.js\").default} state State.\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map"],"sourceRoot":""}